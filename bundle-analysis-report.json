{
  "unusedImports": [
    {
      "file": "src\\App.tsx",
      "unused": [
        {
          "name": "BrowserRouter",
          "type": "named",
          "from": "react-router-dom"
        }
      ]
    },
    {
      "file": "src\\core\\api-helpers.ts",
      "unused": [
        {
          "name": "PostgrestError",
          "type": "named",
          "from": "@supabase/supabase-js"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\button.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\buttons\\button.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\composed\\command.tsx",
      "unused": [
        {
          "name": "type DialogProps",
          "type": "named",
          "from": "@radix-ui/react-dialog"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\composed\\date-range-picker.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        },
        {
          "name": "addDays",
          "type": "named",
          "from": "date-fns"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
      "unused": [
        {
          "name": "Calendar",
          "type": "named",
          "from": "@/core/components/ui/primitives/calendar"
        },
        {
          "name": "format",
          "type": "named",
          "from": "date-fns"
        },
        {
          "name": "useForm",
          "type": "named",
          "from": "react-hook-form"
        },
        {
          "name": "Label",
          "type": "named",
          "from": "@/core/components/ui/primitives/label"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\composed\\form.tsx",
      "unused": [
        {
          "name": "Input",
          "type": "named",
          "from": "@/core/components/ui/primitives/input"
        },
        {
          "name": "Checkbox",
          "type": "named",
          "from": "@/core/components/ui/checkbox"
        },
        {
          "name": "RadioGroup",
          "type": "named",
          "from": "@/core/components/ui/radiogroup"
        },
        {
          "name": "Select",
          "type": "named",
          "from": "@/core/components/ui/primitives/select"
        },
        {
          "name": "Textarea",
          "type": "named",
          "from": "@/core/components/ui/textarea"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\composed\\header.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\drawer.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
      "unused": [
        {
          "name": "MetricCard",
          "type": "named",
          "from": "./metric-card"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
      "unused": [
        {
          "name": "UseFormProps",
          "type": "named",
          "from": "react-hook-form"
        },
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/primitives/badge"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\enhanced\\loading-overlay.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\enhanced\\loading-states.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\enhanced\\metric-card.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/button"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\FeatureCard.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "Card",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardContent",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardHeader",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardTitle",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/button"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\index.ts",
      "unused": [
        {
          "name": "TextField",
          "type": "named",
          "from": "@/core/components/ui"
        },
        {
          "name": "StandardForm",
          "type": "named",
          "from": "@/core/components/ui"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\action-button.tsx",
      "unused": [
        {
          "name": "cn",
          "type": "named",
          "from": "@/shared/utils"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\alert.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\badge.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\button-group.tsx",
      "unused": [
        {
          "name": "buttonVariants",
          "type": "named",
          "from": "@/core/components/ui/button"
        },
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\button.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\data-table.tsx",
      "unused": [
        {
          "name": "Input",
          "type": "named",
          "from": "@/core/components/ui/primitives/input"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
      "unused": [
        {
          "name": "DateRange",
          "type": "named",
          "from": "react-day-picker"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\dev-menu.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
      "unused": [
        {
          "name": "type InputProps",
          "type": "named",
          "from": "@/core/components/ui/primitives/input"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\header-breadcrumb.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\icon-button.tsx",
      "unused": [
        {
          "name": "cn",
          "type": "named",
          "from": "@/shared/utils"
        },
        {
          "name": "VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\StandardizedForm.tsx",
      "unused": [
        {
          "name": "z",
          "type": "named",
          "from": "zod"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\table.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\toast-container.tsx",
      "unused": [
        {
          "name": "Toast",
          "type": "named",
          "from": "@/types/toast"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\toast.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\toggle-group.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\primitives\\toggle.tsx",
      "unused": [
        {
          "name": "type VariantProps",
          "type": "named",
          "from": "class-variance-authority"
        }
      ]
    },
    {
      "file": "src\\core\\components\\ui\\progress.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\core\\config\\feature-flags.ts",
      "unused": [
        {
          "name": "getEnvironment",
          "type": "named",
          "from": "./environment"
        }
      ]
    },
    {
      "file": "src\\core\\config\\features.ts",
      "unused": [
        {
          "name": "NavigationFeature",
          "type": "named",
          "from": "@/core/types/navigation"
        },
        {
          "name": "FeatureCategory",
          "type": "named",
          "from": "@/core/types/navigation"
        }
      ]
    },
    {
      "file": "src\\core\\config\\navigation.ts",
      "unused": [
        {
          "name": "LucideIcon",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Settings",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Bug",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Grid3X3",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\core\\errorHandling.ts",
      "unused": [
        {
          "name": "v4",
          "type": "named",
          "from": "uuid"
        }
      ]
    },
    {
      "file": "src\\core\\types\\navigation.ts",
      "unused": [
        {
          "name": "type Icon",
          "type": "named",
          "from": "@/core/components/ui/icons"
        }
      ]
    },
    {
      "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
      "unused": [
        {
          "name": "toast",
          "type": "named",
          "from": "sonner"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\ColorShowcase.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/primitives/badge"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
      "unused": [
        {
          "name": "Skeleton",
          "type": "named",
          "from": "@/core/components/ui/skeleton"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
      "unused": [
        {
          "name": "CardContent",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardDescription",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardHeader",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardTitle",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "PieChart",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Target",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\FuelLevelVisualizationStandardized.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
      "unused": [
        {
          "name": "CardContent",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardDescription",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardHeader",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardTitle",
          "type": "named",
          "from": "@/core/components/ui/card"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\ProfitLossChart.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\RevenueExpensesChart.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
      "unused": [
        {
          "name": "CardContent",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardDescription",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardHeader",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardTitle",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/primitives/badge"
        },
        {
          "name": "CreditCard",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\components\\SalesSummaryWidgetStandardized.tsx",
      "unused": [
        {
          "name": "subDays",
          "type": "named",
          "from": "date-fns"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        },
        {
          "name": "act",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\dashboard\\pages\\DashboardPage.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "toast",
          "type": "named",
          "from": "sonner"
        }
      ]
    },
    {
      "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
      "unused": [
        {
          "name": "type Employee",
          "type": "named",
          "from": "@/features/employees/types/employees.types"
        },
        {
          "name": "type EmployeeFormValues",
          "type": "named",
          "from": "@/features/employees/components/EmployeeDialogStandardized"
        }
      ]
    },
    {
      "file": "src\\features\\filling-systems\\components\\FillingSystemCard.tsx",
      "unused": [
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/badge"
        },
        {
          "name": "Separator",
          "type": "named",
          "from": "@/core/components/ui/separator"
        },
        {
          "name": "Fuel",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "AlertTriangle",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "CheckCircle",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "FillingSystemFormDialog",
          "type": "named",
          "from": "./FillingSystemFormDialog"
        },
        {
          "name": "ConfirmDialog",
          "type": "named",
          "from": "@/shared/components/common/dialog/ConfirmDialog"
        }
      ]
    },
    {
      "file": "src\\features\\filling-systems\\hooks\\useFillingSystemsHooks.ts",
      "unused": [
        {
          "name": "useQuery",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useQueryClient",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "fillingsApi",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FillingSystem",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FillingSystemCreate",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FillingSystemUpdate",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
      "unused": [
        {
          "name": "toast",
          "type": "named",
          "from": "sonner"
        },
        {
          "name": "useFinance",
          "type": "named",
          "from": "../hooks/useFinance"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
      "unused": [
        {
          "name": "format",
          "type": "named",
          "from": "date-fns"
        },
        {
          "name": "CalendarIcon",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "DollarSign",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
      "unused": [
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/button"
        },
        {
          "name": "Plus",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesFilters.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
      "unused": [
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/primitives/button"
        },
        {
          "name": "useToast",
          "type": "named",
          "from": "@/hooks"
        },
        {
          "name": "toast",
          "type": "named",
          "from": "sonner"
        },
        {
          "name": "FieldValues",
          "type": "named",
          "from": "react-hook-form"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesHeader.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesManager.tsx",
      "unused": [
        {
          "name": "Trash",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
      "unused": [
        {
          "name": "format",
          "type": "named",
          "from": "date-fns"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
      "unused": [
        {
          "name": "useForm",
          "type": "named",
          "from": "react-hook-form"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
      "unused": [
        {
          "name": "format",
          "type": "named",
          "from": "date-fns"
        },
        {
          "name": "Calendar",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "BadgeCheck",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/primitives/badge"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\hooks\\useSales.ts",
      "unused": [
        {
          "name": "useQuery",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useQueryClient",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "salesApi",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "Sale",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "SaleCreate",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "SaleUpdate",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\hooks\\useTransactionCreation.ts",
      "unused": [
        {
          "name": "useState",
          "type": "named",
          "from": "react"
        },
        {
          "name": "useCallback",
          "type": "named",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "Skeleton",
          "type": "named",
          "from": "@/core/components/ui/skeleton"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\pages\\PaymentMethodsPage.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "IconSend",
          "type": "named",
          "from": "@tabler/icons-react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\pages\\SalesNew.tsx",
      "unused": [
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "createSale",
          "type": "named",
          "from": "@/features/sales/services"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\pages\\TransactionsPage.tsx",
      "unused": [
        {
          "name": "useState",
          "type": "named",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\services\\index.ts",
      "unused": [
        {
          "name": "financialsApi",
          "type": "named",
          "from": "@/core/api/endpoints/financials"
        }
      ]
    },
    {
      "file": "src\\features\\finance\\services\\transactions.ts",
      "unused": [
        {
          "name": "PaymentMethod",
          "type": "named",
          "from": "@/types"
        },
        {
          "name": "PaymentStatus",
          "type": "named",
          "from": "@/types"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\components\\data-table\\FuelSuppliesDataTable.tsx",
      "unused": [
        {
          "name": "Card",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardContent",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/button"
        },
        {
          "name": "ColumnDef",
          "type": "named",
          "from": "@tanstack/react-table"
        },
        {
          "name": "cn",
          "type": "named",
          "from": "@/shared/utils"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\components\\FillingSystemCard.tsx",
      "unused": [
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/badge"
        },
        {
          "name": "Separator",
          "type": "named",
          "from": "@/core/components/ui/separator"
        },
        {
          "name": "Fuel",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "AlertTriangle",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "CheckCircle",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "FillingSystemFormDialog",
          "type": "named",
          "from": "./FillingSystemFormDialog"
        },
        {
          "name": "ConfirmDialog",
          "type": "named",
          "from": "@/shared/components/common/dialog/ConfirmDialog"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\components\\form\\QuantityAndPrice.tsx",
      "unused": [
        {
          "name": "FormCurrencyInput",
          "type": "named",
          "from": "@/core/components/ui/composed/form-fields"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
      "unused": [
        {
          "name": "useForm",
          "type": "named",
          "from": "react-hook-form"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
      "unused": [
        {
          "name": "FuelType",
          "type": "named",
          "from": "@/types"
        },
        {
          "name": "Tabs",
          "type": "named",
          "from": "@/core/components/ui/tabs"
        },
        {
          "name": "TabsList",
          "type": "named",
          "from": "@/core/components/ui/tabs"
        },
        {
          "name": "TabsTrigger",
          "type": "named",
          "from": "@/core/components/ui/tabs"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\components\\SuppliesDashboard.tsx",
      "unused": [
        {
          "name": "Card",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardHeader",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardTitle",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardContent",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "Loader2",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "fuelSuppliesApi",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "useQuery",
          "type": "named",
          "from": "@tanstack/react-query"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\components\\SuppliesTableStandardized.tsx",
      "unused": [
        {
          "name": "exportToCsv",
          "type": "named",
          "from": "../utils/export"
        },
        {
          "name": "exportToPdf",
          "type": "named",
          "from": "../utils/export"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\hooks\\useFillingSystemsHooks.ts",
      "unused": [
        {
          "name": "useQuery",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useQueryClient",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "fillingsApi",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FillingSystem",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FillingSystemCreate",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FillingSystemUpdate",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
      "unused": [
        {
          "name": "FuelPrice",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FuelPriceCreate",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "FuelPriceUpdate",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\hooks\\usePetrolProviders.ts",
      "unused": [
        {
          "name": "PetrolProvider",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
      "unused": [
        {
          "name": "Link",
          "type": "named",
          "from": "react-router-dom"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
      "unused": [
        {
          "name": "Breadcrumb",
          "type": "named",
          "from": "@/shared/components/layout/Breadcrumb"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
      "unused": [
        {
          "name": "PageHeader",
          "type": "named",
          "from": "@/core/components/ui/page-header"
        },
        {
          "name": "TrendingUp",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
      "unused": [
        {
          "name": "Link",
          "type": "named",
          "from": "react-router-dom"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
      "unused": [
        {
          "name": "Link",
          "type": "named",
          "from": "react-router-dom"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\PetrolProviders.tsx",
      "unused": [
        {
          "name": "PlusIcon",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/button"
        },
        {
          "name": "type PetrolProvider",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
      "unused": [
        {
          "name": "Link",
          "type": "named",
          "from": "react-router-dom"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
      "unused": [
        {
          "name": "Link",
          "type": "named",
          "from": "react-router-dom"
        },
        {
          "name": "useQuery",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useQueryClient",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/button"
        },
        {
          "name": "Card",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardContent",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardDescription",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardHeader",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardTitle",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "Input",
          "type": "named",
          "from": "@/core/components/ui/input"
        },
        {
          "name": "Dialog",
          "type": "named",
          "from": "@/core/components/ui/dialog"
        },
        {
          "name": "DialogContent",
          "type": "named",
          "from": "@/core/components/ui/dialog"
        },
        {
          "name": "DialogDescription",
          "type": "named",
          "from": "@/core/components/ui/dialog"
        },
        {
          "name": "DialogHeader",
          "type": "named",
          "from": "@/core/components/ui/dialog"
        },
        {
          "name": "DialogTitle",
          "type": "named",
          "from": "@/core/components/ui/dialog"
        },
        {
          "name": "useToast",
          "type": "named",
          "from": "@/hooks/useToast"
        }
      ]
    },
    {
      "file": "src\\features\\fuel-management\\services\\index.ts",
      "unused": [
        {
          "name": "FuelSale",
          "type": "named",
          "from": "../types"
        }
      ]
    },
    {
      "file": "src\\features\\layout\\pages\\Index.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "toast",
          "type": "named",
          "from": "sonner"
        }
      ]
    },
    {
      "file": "src\\features\\management\\FuelSystemsPage.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\management\\ManagementPage.tsx",
      "unused": [
        {
          "name": "Link",
          "type": "named",
          "from": "react-router-dom"
        },
        {
          "name": "Breadcrumb",
          "type": "named",
          "from": "@/shared/components/layout/Breadcrumb"
        },
        {
          "name": "cn",
          "type": "named",
          "from": "@/shared/utils"
        }
      ]
    },
    {
      "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
      "unused": [
        {
          "name": "motion",
          "type": "named",
          "from": "framer-motion"
        },
        {
          "name": "AnimatePresence",
          "type": "named",
          "from": "framer-motion"
        },
        {
          "name": "Badge",
          "type": "named",
          "from": "../../../core/components/ui/primitives/badge"
        },
        {
          "name": "Input",
          "type": "named",
          "from": "../../../core/components/ui/input"
        }
      ]
    },
    {
      "file": "src\\features\\management\\TanksPage.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
      "unused": [
        {
          "name": "motion",
          "type": "named",
          "from": "framer-motion"
        },
        {
          "name": "ColorAndShimmerDemo",
          "type": "named",
          "from": "@/components/demo/ColorAndShimmerDemo"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\form\\PriceAndEmployeeInputs.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
      "unused": [
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/button"
        },
        {
          "name": "Plus",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesController.tsx",
      "unused": [
        {
          "name": "tanksApi",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesFilters.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
      "unused": [
        {
          "name": "Button",
          "type": "named",
          "from": "@/core/components/ui/primitives/button"
        },
        {
          "name": "useToast",
          "type": "named",
          "from": "@/hooks"
        },
        {
          "name": "PriceAndEmployeeInputs",
          "type": "named",
          "from": "@/shared/components/form/PriceAndEmployeeInputs"
        },
        {
          "name": "toast",
          "type": "named",
          "from": "sonner"
        },
        {
          "name": "FieldValues",
          "type": "named",
          "from": "react-hook-form"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesHeader.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesManager.tsx",
      "unused": [
        {
          "name": "Trash",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
      "unused": [
        {
          "name": "format",
          "type": "named",
          "from": "date-fns"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
      "unused": [
        {
          "name": "useForm",
          "type": "named",
          "from": "react-hook-form"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\hooks\\useSales.ts",
      "unused": [
        {
          "name": "useQuery",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useQueryClient",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "salesApi",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "Sale",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "SaleCreate",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "SaleUpdate",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
      "unused": [
        {
          "name": "renderHook",
          "type": "named",
          "from": "@testing-library/react"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        },
        {
          "name": "IconSend",
          "type": "named",
          "from": "@tabler/icons-react"
        },
        {
          "name": "CreateSaleRequest",
          "type": "named",
          "from": "@/features/sales/types"
        }
      ]
    },
    {
      "file": "src\\features\\sales\\pages\\SalesNew.tsx",
      "unused": [
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "createSale",
          "type": "named",
          "from": "@/features/sales/services"
        }
      ]
    },
    {
      "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
      "unused": [
        {
          "name": "useForm",
          "type": "named",
          "from": "react-hook-form"
        },
        {
          "name": "zodResolver",
          "type": "named",
          "from": "@hookform/resolvers/zod"
        },
        {
          "name": "z",
          "type": "named",
          "from": "zod"
        },
        {
          "name": "CardDescription",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "Form",
          "type": "named",
          "from": "@/core/components/ui/form"
        },
        {
          "name": "FormControl",
          "type": "named",
          "from": "@/core/components/ui/form"
        },
        {
          "name": "FormDescription",
          "type": "named",
          "from": "@/core/components/ui/form"
        },
        {
          "name": "FormField",
          "type": "named",
          "from": "@/core/components/ui/form"
        },
        {
          "name": "FormItem",
          "type": "named",
          "from": "@/core/components/ui/form"
        },
        {
          "name": "FormLabel",
          "type": "named",
          "from": "@/core/components/ui/form"
        },
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/primitives/badge"
        },
        {
          "name": "AlertDescription",
          "type": "named",
          "from": "@/core/components/ui/alert"
        },
        {
          "name": "Info",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
      "unused": [
        {
          "name": "Separator",
          "type": "named",
          "from": "@/core/components/ui/separator"
        }
      ]
    },
    {
      "file": "src\\features\\shifts\\hooks\\useShift.ts",
      "unused": [
        {
          "name": "ShiftPaymentMethod",
          "type": "named",
          "from": "@/types"
        },
        {
          "name": "PaymentMethod",
          "type": "named",
          "from": "@/types"
        },
        {
          "name": "useMutation",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useQuery",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "useQueryClient",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "supabase",
          "type": "named",
          "from": "@/lib/supabase"
        }
      ]
    },
    {
      "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
      "unused": [
        {
          "name": "User",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Calendar",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "CheckCircle",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "XCircle",
          "type": "named",
          "from": "lucide-react"
        },
        {
          "name": "Badge",
          "type": "named",
          "from": "@/core/components/ui/primitives/badge"
        }
      ]
    },
    {
      "file": "src\\features\\shifts\\pages\\Shifts.tsx",
      "unused": [
        {
          "name": "ShiftControl",
          "type": "named",
          "from": "@/features/sales"
        },
        {
          "name": "ArrowRight",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
      "unused": [
        {
          "name": "motion",
          "type": "named",
          "from": "framer-motion"
        },
        {
          "name": "AnimatePresence",
          "type": "named",
          "from": "framer-motion"
        }
      ]
    },
    {
      "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
      "unused": [
        {
          "name": "type Row",
          "type": "named",
          "from": "@tanstack/react-table"
        },
        {
          "name": "Input",
          "type": "named",
          "from": "@/core/components/ui/input"
        },
        {
          "name": "Label",
          "type": "named",
          "from": "@/core/components/ui/label"
        },
        {
          "name": "useShifts",
          "type": "named",
          "from": "../services/shifts"
        }
      ]
    },
    {
      "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
      "unused": [
        {
          "name": "PaymentMethod",
          "type": "named",
          "from": "@/types"
        }
      ]
    },
    {
      "file": "src\\services\\api.ts",
      "unused": [
        {
          "name": "employeesApi",
          "type": "named",
          "from": "@/services/api"
        },
        {
          "name": "employeesApi",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "expensesApi",
          "type": "named",
          "from": "@/core/api"
        },
        {
          "name": "transactionsApi",
          "type": "named",
          "from": "@/core/api"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\common\\datepicker\\FormStandardDatePicker.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\common\\dialog\\DeleteConfirmDialog.tsx",
      "unused": [
        {
          "name": "React",
          "type": "namespace",
          "from": "react"
        },
        {
          "name": "ButtonProps",
          "type": "named",
          "from": "@/core/components/ui/button"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\common\\index.ts",
      "unused": [
        {
          "name": "StandardDialog",
          "type": "named",
          "from": "@/shared/components/common"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\navigation\\NavigationCard.tsx",
      "unused": [
        {
          "name": "type Icon",
          "type": "named",
          "from": "@/core/components/ui/icons"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\sidebar\\SidebarLogo.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\sidebar\\SidebarNavSection.tsx",
      "unused": [
        {
          "name": "LucideIcon",
          "type": "named",
          "from": "lucide-react"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\ui\\theme-toggle.tsx",
      "unused": [
        {
          "name": "React",
          "type": "default",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\shared\\components\\unified\\MetricCard.tsx",
      "unused": [
        {
          "name": "CardHeader",
          "type": "named",
          "from": "@/core/components/ui/card"
        },
        {
          "name": "CardTitle",
          "type": "named",
          "from": "@/core/components/ui/card"
        }
      ]
    },
    {
      "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
      "unused": [
        {
          "name": "QueryClient",
          "type": "named",
          "from": "@tanstack/react-query"
        },
        {
          "name": "createInvalidations",
          "type": "named",
          "from": "./cache-utils"
        }
      ]
    },
    {
      "file": "src\\shared\\hooks\\api\\useApiQuery.ts",
      "unused": [
        {
          "name": "UseQueryResult",
          "type": "named",
          "from": "@tanstack/react-query"
        }
      ]
    },
    {
      "file": "src\\shared\\hooks\\useFormSubmitHandler.ts",
      "unused": [
        {
          "name": "SubmitHandler",
          "type": "named",
          "from": "react-hook-form"
        }
      ]
    },
    {
      "file": "src\\shared\\hooks\\useRoutePrefetch.ts",
      "unused": [
        {
          "name": "useCallback",
          "type": "named",
          "from": "react"
        }
      ]
    },
    {
      "file": "src\\shared\\utils\\cn.ts",
      "unused": [
        {
          "name": "type ClassValue",
          "type": "named",
          "from": "clsx"
        }
      ]
    },
    {
      "file": "src\\shared\\utils\\dom.ts",
      "unused": [
        {
          "name": "type ClassValue",
          "type": "named",
          "from": "clsx"
        }
      ]
    },
    {
      "file": "src\\utils\\cn.ts",
      "unused": [
        {
          "name": "type ClassValue",
          "type": "named",
          "from": "clsx"
        }
      ]
    }
  ],
  "duplicateCode": [
    {
      "locations": [
        {
          "file": "src\\App.tsx",
          "startLine": 14,
          "block": "// Lazy load components for better performance\nconst NavigationPage = lazy(() => import('@/features/..."
        },
        {
          "file": "src\\App.tsx",
          "startLine": 15,
          "block": "// Lazy load components for better performance\nconst NavigationPage = lazy(() => import('@/features/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\App.tsx",
          "startLine": 173,
          "block": "// Loading Fallback Component\nfunction LoadingFallback() {\n  return <Loading variant=\"page\" text=\"Lo..."
        },
        {
          "file": "src\\App.tsx",
          "startLine": 174,
          "block": "// Loading Fallback Component\nfunction LoadingFallback() {\n  return <Loading variant=\"page\" text=\"Lo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\config\\lazy-routes.tsx",
          "startLine": 28,
          "block": "// Lazy-loaded page components\r\nexport const LazyPages = {\r\n  // Dashboard\r\n  Dashboard: createFeatu..."
        },
        {
          "file": "src\\config\\lazy-routes.tsx",
          "startLine": 29,
          "block": "// Lazy-loaded page components\r\nexport const LazyPages = {\r\n  // Dashboard\r\n  Dashboard: createFeatu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\config\\lazy-routes.tsx",
          "startLine": 54,
          "block": "// Settings\r\n  Settings: createFeatureLazyPage('settings', 'SettingsPage'),\r\n  AppearanceSettings: c..."
        },
        {
          "file": "src\\config\\lazy-routes.tsx",
          "startLine": 55,
          "block": "// Settings\r\n  Settings: createFeatureLazyPage('settings', 'SettingsPage'),\r\n  AppearanceSettings: c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 133,
          "block": "if (sessionError) {\n      console.warn('Session retrieval error:', sessionError);\n      // Try to re..."
        },
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 134,
          "block": "if (sessionError) {\n      console.warn('Session retrieval error:', sessionError);\n      // Try to re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 160,
          "block": "};\n\n    // Add auth token if available\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${t..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 56,
          "block": "};\n\n    // Add auth token if available\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 161,
          "block": "// Add auth token if available\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n..."
        },
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 162,
          "block": "// Add auth token if available\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 57,
          "block": "// Add auth token if available\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 58,
          "block": "// Add auth token if available\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 163,
          "block": "if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    // Add query parameters ..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 59,
          "block": "if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    // Add query parameters ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 169,
          "block": "if (options.queryParams) {\n      const queryString = Object.entries(options.queryParams)\n        .fi..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 65,
          "block": "if (options.queryParams) {\n      const queryString = Object.entries(options.queryParams)\n        .fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 170,
          "block": "const queryString = Object.entries(options.queryParams)\n        .filter(([_, value]) => value !== un..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 66,
          "block": "const queryString = Object.entries(options.queryParams)\n        .filter(([_, value]) => value !== un..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 171,
          "block": ".filter(([_, value]) => value !== undefined && value !== null)\n        .map(\n          ([key, value]..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 67,
          "block": ".filter(([_, value]) => value !== undefined && value !== null)\n        .map(\n          ([key, value]..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 172,
          "block": ".map(\n          ([key, value]) =>\n            `${encodeURIComponent(key)}=${encodeURIComponent(Strin..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 68,
          "block": ".map(\n          ([key, value]) =>\n            `${encodeURIComponent(key)}=${encodeURIComponent(Strin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 173,
          "block": "([key, value]) =>\n            `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`\n    ..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 69,
          "block": "([key, value]) =>\n            `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 174,
          "block": "`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`\n        )\n        .join(\"&\");\n\n   ..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 70,
          "block": "`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`\n        )\n        .join(\"&\");\n\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 181,
          "block": "}\n\n    // Prepare request options\n    const requestOptions: RequestInit = {\n      method: options.me..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 77,
          "block": "}\n\n    // Prepare request options\n    const requestOptions: RequestInit = {\n      method: options.me..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 182,
          "block": "// Prepare request options\n    const requestOptions: RequestInit = {\n      method: options.method ||..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 78,
          "block": "// Prepare request options\n    const requestOptions: RequestInit = {\n      method: options.method ||..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 192,
          "block": "// Add body for non-GET requests if provided\n      ...(options.method !== \"GET\" && options.body\n    ..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 83,
          "block": "// Add body for non-GET requests if provided\n      ...(options.method !== \"GET\" && options.body\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 193,
          "block": "...(options.method !== \"GET\" && options.body\n        ? { body: JSON.stringify(options.body) }\n      ..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 84,
          "block": "...(options.method !== \"GET\" && options.body\n        ? { body: JSON.stringify(options.body) }\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 197,
          "block": "console.log(`Making ${requestOptions.method} request to ${url}`);\n    \n    // Make the fetch request..."
        },
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 198,
          "block": "console.log(`Making ${requestOptions.method} request to ${url}`);\n    \n    // Make the fetch request..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 298,
          "block": "// Already formatted API errors\n    if (error && typeof error === 'object' && \"type\" in error && \"me..."
        },
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 299,
          "block": "// Already formatted API errors\n    if (error && typeof error === 'object' && \"type\" in error && \"me..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 303,
          "block": "// Other errors\n    const errorMessage = error && typeof error === 'object' && 'message' in error \n ..."
        },
        {
          "file": "src\\core\\api\\client.ts",
          "startLine": 304,
          "block": "// Other errors\n    const errorMessage = error && typeof error === 'object' && 'message' in error \n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\expenses.ts",
          "startLine": 72,
          "block": "id: string\n): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boo..."
        },
        {
          "file": "src\\core\\api\\endpoints\\filling-systems.ts",
          "startLine": 64,
          "block": "id: string\n): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boo..."
        },
        {
          "file": "src\\core\\api\\endpoints\\fuel-supplies.ts",
          "startLine": 58,
          "block": "id: string\n): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boo..."
        },
        {
          "file": "src\\core\\api\\endpoints\\fuel-types.ts",
          "startLine": 65,
          "block": "id: string\n): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boo..."
        },
        {
          "file": "src\\core\\api\\endpoints\\petrol-providers.ts",
          "startLine": 64,
          "block": "id: string\n): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boo..."
        },
        {
          "file": "src\\core\\api\\endpoints\\transactions.ts",
          "startLine": 65,
          "block": "id: string\n): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\expenses.ts",
          "startLine": 73,
          "block": "): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boolean }>(`${..."
        },
        {
          "file": "src\\core\\api\\endpoints\\filling-systems.ts",
          "startLine": 65,
          "block": "): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boolean }>(`${..."
        },
        {
          "file": "src\\core\\api\\endpoints\\fuel-supplies.ts",
          "startLine": 59,
          "block": "): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boolean }>(`${..."
        },
        {
          "file": "src\\core\\api\\endpoints\\fuel-types.ts",
          "startLine": 66,
          "block": "): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boolean }>(`${..."
        },
        {
          "file": "src\\core\\api\\endpoints\\petrol-providers.ts",
          "startLine": 65,
          "block": "): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boolean }>(`${..."
        },
        {
          "file": "src\\core\\api\\endpoints\\transactions.ts",
          "startLine": 66,
          "block": "): Promise<ApiResponse<{ success: boolean }>> {\n  return fetchFromFunction<{ success: boolean }>(`${..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\expenses.ts",
          "startLine": 83,
          "block": "ApiResponse<{ count: number }>\n> {\n  return fetchFromFunction<{ count: number }>(`${ENDPOINT}/count`..."
        },
        {
          "file": "src\\core\\api\\endpoints\\shifts.ts",
          "startLine": 131,
          "block": "ApiResponse<{ count: number }>\n> {\n  return fetchFromFunction<{ count: number }>(`${ENDPOINT}/count`..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\filling-systems.ts",
          "startLine": 5,
          "block": "*/\n\nimport { fetchFromFunction, ApiResponse } from \"../client\";\nimport { API_ENDPOINTS } from \"@/cor..."
        },
        {
          "file": "src\\core\\api\\endpoints\\petrol-providers.ts",
          "startLine": 5,
          "block": "*/\n\nimport { fetchFromFunction, ApiResponse } from \"../client\";\nimport { API_ENDPOINTS } from \"@/cor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 25,
          "block": "return fetchFromFunction<ProfitLoss>(`${ENDPOINT}/profit-loss`, {\n    queryParams: Object.keys(query..."
        },
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 26,
          "block": "return fetchFromFunction<ProfitLoss>(`${ENDPOINT}/profit-loss`, {\n    queryParams: Object.keys(query..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 44,
          "block": "return fetchFromFunction<RevenueData>(`${ENDPOINT}/revenue`, {\n    queryParams: Object.keys(queryPar..."
        },
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 45,
          "block": "return fetchFromFunction<RevenueData>(`${ENDPOINT}/revenue`, {\n    queryParams: Object.keys(queryPar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 63,
          "block": "return fetchFromFunction<ExpensesData>(`${ENDPOINT}/expenses`, {\n    queryParams: Object.keys(queryP..."
        },
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 64,
          "block": "return fetchFromFunction<ExpensesData>(`${ENDPOINT}/expenses`, {\n    queryParams: Object.keys(queryP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 82,
          "block": "return fetchFromFunction<FinancialDashboard>(`${ENDPOINT}/getDashboard`, {\n    queryParams: Object.k..."
        },
        {
          "file": "src\\core\\api\\endpoints\\financials.ts",
          "startLine": 83,
          "block": "return fetchFromFunction<FinancialDashboard>(`${ENDPOINT}/getDashboard`, {\n    queryParams: Object.k..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\tanks.ts",
          "startLine": 6,
          "block": "import { fetchFromFunction, ApiResponse } from \"../client\";\nimport { API_ENDPOINTS } from \"@/core/co..."
        },
        {
          "file": "src\\core\\api\\endpoints\\tanks.ts",
          "startLine": 7,
          "block": "import { fetchFromFunction, ApiResponse } from \"../client\";\nimport { API_ENDPOINTS } from \"@/core/co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\tanks.ts",
          "startLine": 113,
          "block": "totalTanks: number;\n  activeTanks: number;\n  totalCapacity: number;\n  totalCurrentLevel: number;\n  l..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\tanks.types.ts",
          "startLine": 52,
          "block": "totalTanks: number;\n  activeTanks: number;\n  totalCapacity: number;\n  totalCurrentLevel: number;\n  l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\endpoints\\tanks.ts",
          "startLine": 114,
          "block": "activeTanks: number;\n  totalCapacity: number;\n  totalCurrentLevel: number;\n  lowLevelTanks: number;\n..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\tanks.types.ts",
          "startLine": 53,
          "block": "activeTanks: number;\n  totalCapacity: number;\n  totalCurrentLevel: number;\n  lowLevelTanks: number;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\index.ts",
          "startLine": 43,
          "block": "export const initSentry = () => {\n  // Placeholder for Sentry initialization\n  logger.info('Sentry i..."
        },
        {
          "file": "src\\core\\api\\index.ts",
          "startLine": 44,
          "block": "export const initSentry = () => {\n  // Placeholder for Sentry initialization\n  logger.info('Sentry i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\supabase.ts",
          "startLine": 7,
          "block": "import { createClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"@/integrations/..."
        },
        {
          "file": "src\\core\\api\\supabase.ts",
          "startLine": 8,
          "block": "import { createClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"@/integrations/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\supabase.ts",
          "startLine": 12,
          "block": "// Validate environment configuration\nif (!API_CONFIG.SUPABASE_URL || !API_CONFIG.SUPABASE_ANON_KEY)..."
        },
        {
          "file": "src\\core\\api\\supabase.ts",
          "startLine": 13,
          "block": "// Validate environment configuration\nif (!API_CONFIG.SUPABASE_URL || !API_CONFIG.SUPABASE_ANON_KEY)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\api-types.ts",
          "startLine": 96,
          "block": "/**\n * Create entity request\n */\nexport type CreateRequest<T> = Omit<T, \"id\" | \"created_at\" | \"updat..."
        },
        {
          "file": "src\\core\\api\\types\\api-types.ts",
          "startLine": 97,
          "block": "/**\n * Create entity request\n */\nexport type CreateRequest<T> = Omit<T, \"id\" | \"created_at\" | \"updat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\api-types.ts",
          "startLine": 108,
          "block": "/**\n * Utility type for API functions returning a single entity\n */\nexport type ApiSingleResponse<T>..."
        },
        {
          "file": "src\\core\\api\\types\\api-types.ts",
          "startLine": 109,
          "block": "/**\n * Utility type for API functions returning a single entity\n */\nexport type ApiSingleResponse<T>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\api-types.ts",
          "startLine": 113,
          "block": "/**\n * Utility type for API functions returning a collection of entities\n */\nexport type ApiCollecti..."
        },
        {
          "file": "src\\core\\api\\types\\api-types.ts",
          "startLine": 114,
          "block": "/**\n * Utility type for API functions returning a collection of entities\n */\nexport type ApiCollecti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 160,
          "block": "period: string;\r\n          profit: number;\r\n          total_expenses: number;\r\n          total_sales..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 168,
          "block": "period: string;\r\n          profit: number;\r\n          total_expenses: number;\r\n          total_sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 276,
          "block": "end_time?: string | null;\r\n          id?: string;\r\n          opening_cash?: number;\r\n          sales..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 288,
          "block": "end_time?: string | null;\r\n          id?: string;\r\n          opening_cash?: number;\r\n          sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 277,
          "block": "id?: string;\r\n          opening_cash?: number;\r\n          sales_total?: number;\r\n          start_tim..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 289,
          "block": "id?: string;\r\n          opening_cash?: number;\r\n          sales_total?: number;\r\n          start_tim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 278,
          "block": "opening_cash?: number;\r\n          sales_total?: number;\r\n          start_time?: string;\r\n          s..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 290,
          "block": "opening_cash?: number;\r\n          sales_total?: number;\r\n          start_time?: string;\r\n          s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 279,
          "block": "sales_total?: number;\r\n          start_time?: string;\r\n          status?: string;\r\n          updated..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 291,
          "block": "sales_total?: number;\r\n          start_time?: string;\r\n          status?: string;\r\n          updated..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 352,
          "block": "DefaultSchemaTableNameOrOptions extends\r\n    | keyof DefaultSchema[\"Tables\"]\r\n    | { schema: keyof ..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 375,
          "block": "DefaultSchemaTableNameOrOptions extends\r\n    | keyof DefaultSchema[\"Tables\"]\r\n    | { schema: keyof ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 353,
          "block": "| keyof DefaultSchema[\"Tables\"]\r\n    | { schema: keyof Database },\r\n  TableName extends DefaultSchem..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 376,
          "block": "| keyof DefaultSchema[\"Tables\"]\r\n    | { schema: keyof Database },\r\n  TableName extends DefaultSchem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 354,
          "block": "| { schema: keyof Database },\r\n  TableName extends DefaultSchemaTableNameOrOptions extends {\r\n    sc..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 377,
          "block": "| { schema: keyof Database },\r\n  TableName extends DefaultSchemaTableNameOrOptions extends {\r\n    sc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 355,
          "block": "TableName extends DefaultSchemaTableNameOrOptions extends {\r\n    schema: keyof Database;\r\n  }\r\n    ?..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 378,
          "block": "TableName extends DefaultSchemaTableNameOrOptions extends {\r\n    schema: keyof Database;\r\n  }\r\n    ?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 356,
          "block": "schema: keyof Database;\r\n  }\r\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Table..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 379,
          "block": "schema: keyof Database;\r\n  }\r\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Table..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 357,
          "block": "}\r\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\r\n    : never = never,\r\n..."
        },
        {
          "file": "src\\core\\api\\types\\supabase-database.ts",
          "startLine": 380,
          "block": "}\r\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\r\n    : never = never,\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 6,
          "block": "import type { Tank, TankCreate, TankUpdate, TankLevelChange, FuelType } from \"@/shared/types/tank.ty..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 7,
          "block": "import type { Tank, TankCreate, TankUpdate, TankLevelChange, FuelType } from \"@/shared/types/tank.ty..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 18,
          "block": "supplier_id: string;\n  fuel_type_id: string;\n  quantity: number;\n  unit_price: number;\n  total_price..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 31,
          "block": "supplier_id: string;\n  fuel_type_id: string;\n  quantity: number;\n  unit_price: number;\n  total_price..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\index.ts",
          "startLine": 7,
          "block": "supplier_id: string;\n  fuel_type_id: string;\n  quantity: number;\n  unit_price: number;\n  total_price..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 19,
          "block": "fuel_type_id: string;\n  quantity: number;\n  unit_price: number;\n  total_price: number;\n  delivery_da..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 32,
          "block": "fuel_type_id: string;\n  quantity: number;\n  unit_price: number;\n  total_price: number;\n  delivery_da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 20,
          "block": "quantity: number;\n  unit_price: number;\n  total_price: number;\n  delivery_date: string;\n  invoice_nu..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 33,
          "block": "quantity: number;\n  unit_price: number;\n  total_price: number;\n  delivery_date: string;\n  invoice_nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 21,
          "block": "unit_price: number;\n  total_price: number;\n  delivery_date: string;\n  invoice_number?: string;\n  not..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 34,
          "block": "unit_price: number;\n  total_price: number;\n  delivery_date: string;\n  invoice_number?: string;\n  not..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 53,
          "block": "export interface Shift {\n  id: string;\n  start_time: string;\n  end_time?: string;\n  is_active: boole..."
        },
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 213,
          "block": "export interface Shift {\n  id: string;\n  start_time: string;\n  end_time?: string;\n  is_active: boole..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 55,
          "block": "start_time: string;\n  end_time?: string;\n  is_active: boolean;\n  opening_cash: number;\n  closing_cas..."
        },
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 215,
          "block": "start_time: string;\n  end_time?: string;\n  is_active: boolean;\n  opening_cash: number;\n  closing_cas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 66,
          "block": "export interface ShiftEmployee {\n  id: string;\n  employee_id: string;\n  employee_name: string;\n  emp..."
        },
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 229,
          "block": "export interface ShiftEmployee {\n  id: string;\n  employee_id: string;\n  employee_name: string;\n  emp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 67,
          "block": "id: string;\n  employee_id: string;\n  employee_name: string;\n  employee_position: string;\n  employee_..."
        },
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 230,
          "block": "id: string;\n  employee_id: string;\n  employee_name: string;\n  employee_position: string;\n  employee_..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 68,
          "block": "employee_id: string;\n  employee_name: string;\n  employee_position: string;\n  employee_status: string..."
        },
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 231,
          "block": "employee_id: string;\n  employee_name: string;\n  employee_position: string;\n  employee_status: string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 69,
          "block": "employee_name: string;\n  employee_position: string;\n  employee_status: string;\n  created_at: string;..."
        },
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 232,
          "block": "employee_name: string;\n  employee_position: string;\n  employee_status: string;\n  created_at: string;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 90,
          "block": "export interface ShiftCloseRequest {\n  closing_cash: number;\n  payment_methods?: ShiftPaymentMethod[..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 91,
          "block": "export interface ShiftCloseRequest {\n  closing_cash: number;\n  payment_methods?: ShiftPaymentMethod[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 166,
          "block": "filling_system_id: string;\n  fuel_type: string;\n  liters: number;\n  price_per_unit: number;\n  total_..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 177,
          "block": "filling_system_id: string;\n  fuel_type: string;\n  liters: number;\n  price_per_unit: number;\n  total_..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 167,
          "block": "fuel_type: string;\n  liters: number;\n  price_per_unit: number;\n  total_sales?: number;\n  date: strin..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 178,
          "block": "fuel_type: string;\n  liters: number;\n  price_per_unit: number;\n  total_sales?: number;\n  date: strin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 225,
          "block": "export interface FuelPrice {\n  id: string;\n  fuel_type: string;\n  fuel_type_id?: string;\n  price_per..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel-prices.types.ts",
          "startLine": 10,
          "block": "export interface FuelPrice {\n  id: string;\n  fuel_type: string;\n  fuel_type_id?: string;\n  price_per..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 226,
          "block": "id: string;\n  fuel_type: string;\n  fuel_type_id?: string;\n  price_per_liter: number;\n  effective_dat..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel-prices.types.ts",
          "startLine": 11,
          "block": "id: string;\n  fuel_type: string;\n  fuel_type_id?: string;\n  price_per_liter: number;\n  effective_dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 249,
          "block": "total: number;\n  breakdown: Record<string, number>;\n  trend?: Array<{\n    date: string;\n    value: n..."
        },
        {
          "file": "src\\core\\api\\types.ts",
          "startLine": 258,
          "block": "total: number;\n  breakdown: Record<string, number>;\n  trend?: Array<{\n    date: string;\n    value: n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\api-helpers.ts",
          "startLine": 78,
          "block": "if (anyShiftError) {\n      console.error(\"Error checking for any active shifts:\", anyShiftError);\n  ..."
        },
        {
          "file": "src\\core\\api-helpers.ts",
          "startLine": 79,
          "block": "if (anyShiftError) {\n      console.error(\"Error checking for any active shifts:\", anyShiftError);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\accessibility\\visually-hidden.tsx",
          "startLine": 11,
          "block": "const VisuallyHidden = React.forwardRef<HTMLSpanElement, React.HTMLAttributes<HTMLSpanElement>>(\n  (..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\visually-hidden.tsx",
          "startLine": 5,
          "block": "const VisuallyHidden = React.forwardRef<HTMLSpanElement, React.HTMLAttributes<HTMLSpanElement>>(\n  (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\alert-dialog.tsx",
          "startLine": 8,
          "block": "AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHe..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 129,
          "block": "AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\alert-dialog.tsx",
          "startLine": 9,
          "block": "AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 130,
          "block": "AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\alert-dialog.tsx",
          "startLine": 10,
          "block": "AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTit..."
        },
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 17,
          "block": "AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTit..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 131,
          "block": "AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTit..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 16,
          "block": "AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTit..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 249,
          "block": "AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\alert-dialog.tsx",
          "startLine": 11,
          "block": "AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescr..."
        },
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 18,
          "block": "AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 132,
          "block": "AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 17,
          "block": "AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescr..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 250,
          "block": "AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\alert-dialog.tsx",
          "startLine": 12,
          "block": "AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogA..."
        },
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 19,
          "block": "AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogA..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 133,
          "block": "AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogA..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 18,
          "block": "AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogA..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 251,
          "block": "AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogA..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\alert-dialog.tsx",
          "startLine": 13,
          "block": "AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogC..."
        },
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 20,
          "block": "AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogC..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 134,
          "block": "AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogC..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 19,
          "block": "AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogC..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 252,
          "block": "AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 5,
          "block": "import { forwardRef, ButtonHTMLAttributes } from \"react\";\nimport { Slot } from \"@radix-ui/react-slot..."
        },
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 6,
          "block": "import { forwardRef, ButtonHTMLAttributes } from \"react\";\nimport { Slot } from \"@radix-ui/react-slot..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 13,
          "block": "{\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-pri..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 90,
          "block": "{\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-pri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 14,
          "block": "variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/9..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 91,
          "block": "variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/9..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 15,
          "block": "variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destru..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 92,
          "block": "variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destru..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 21,
          "block": "secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 98,
          "block": "secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 22,
          "block": "\"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hove..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 99,
          "block": "\"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hove..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 23,
          "block": "ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 100,
          "block": "ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 24,
          "block": "link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 101,
          "block": "link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 25,
          "block": "},\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 102,
          "block": "},\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 26,
          "block": "size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 roun..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 103,
          "block": "size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 roun..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 27,
          "block": "default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 104,
          "block": "default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 28,
          "block": "sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 105,
          "block": "sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 47,
          "block": "({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 127,
          "block": "({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 48,
          "block": "const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariant..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 128,
          "block": "const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariant..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 49,
          "block": "return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        re..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 129,
          "block": "return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 50,
          "block": "<Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n       ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 130,
          "block": "<Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 51,
          "block": "className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\button.tsx",
          "startLine": 131,
          "block": "className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 59,
          "block": "// Import and re-export ButtonLink from primitives\nexport { ButtonLink, type ButtonLinkProps } from ..."
        },
        {
          "file": "src\\core\\components\\ui\\button.tsx",
          "startLine": 60,
          "block": "// Import and re-export ButtonLink from primitives\nexport { ButtonLink, type ButtonLinkProps } from ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\button.tsx",
          "startLine": 7,
          "block": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type Vari..."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\button.tsx",
          "startLine": 8,
          "block": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type Vari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\icon-button.tsx",
          "startLine": 6,
          "block": "*/\n\nimport * as React from \"react\";\nimport { cn } from \"@/utils\";\nimport { Button, ButtonProps } fro..."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\loading-button.tsx",
          "startLine": 6,
          "block": "*/\n\nimport * as React from \"react\";\nimport { cn } from \"@/utils\";\nimport { Button, ButtonProps } fro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\icon-button.tsx",
          "startLine": 7,
          "block": "import * as React from \"react\";\nimport { cn } from \"@/utils\";\nimport { Button, ButtonProps } from \"...."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\icon-button.tsx",
          "startLine": 8,
          "block": "import * as React from \"react\";\nimport { cn } from \"@/utils\";\nimport { Button, ButtonProps } from \"...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\index.ts",
          "startLine": 7,
          "block": "// Export all button components\nexport * from \"./button\";\nexport * from \"./icon-button\";\nexport * fr..."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\index.ts",
          "startLine": 8,
          "block": "// Export all button components\nexport * from \"./button\";\nexport * from \"./icon-button\";\nexport * fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\index.ts",
          "startLine": 18,
          "block": "// Note: As additional button components are created, add their exports here\n// Example: export * fr..."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\index.ts",
          "startLine": 19,
          "block": "// Note: As additional button components are created, add their exports here\n// Example: export * fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\loading-button.tsx",
          "startLine": 7,
          "block": "import * as React from \"react\";\nimport { cn } from \"@/utils\";\nimport { Button, ButtonProps } from \"...."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\loading-button.tsx",
          "startLine": 8,
          "block": "import * as React from \"react\";\nimport { cn } from \"@/utils\";\nimport { Button, ButtonProps } from \"...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\loading-button.tsx",
          "startLine": 16,
          "block": "/**\n * Loading Button Props Interface\n */\nexport interface LoadingButtonProps extends ButtonProps, L..."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\loading-button.tsx",
          "startLine": 17,
          "block": "/**\n * Loading Button Props Interface\n */\nexport interface LoadingButtonProps extends ButtonProps, L..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\types.ts",
          "startLine": 27,
          "block": "/**\n * Icon position options for buttons that contain both text and icons\n */\nexport type ButtonIcon..."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\types.ts",
          "startLine": 28,
          "block": "/**\n * Icon position options for buttons that contain both text and icons\n */\nexport type ButtonIcon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\buttons\\types.ts",
          "startLine": 61,
          "block": "/**\n   * Accessible label for icon-only buttons (required when children not provided)\n   */\n  label?..."
        },
        {
          "file": "src\\core\\components\\ui\\buttons\\types.ts",
          "startLine": 62,
          "block": "/**\n   * Accessible label for icon-only buttons (required when children not provided)\n   */\n  label?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\action-card.tsx",
          "startLine": 53,
          "block": "return (\n      <Card\n        ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\stats-card.tsx",
          "startLine": 38,
          "block": "return (\n      <Card\n        ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\summary-card.tsx",
          "startLine": 51,
          "block": "return (\n      <Card\n        ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\action-card.tsx",
          "startLine": 54,
          "block": "<Card\n        ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        isLoading={isLo..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\stats-card.tsx",
          "startLine": 39,
          "block": "<Card\n        ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        isLoading={isLo..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\summary-card.tsx",
          "startLine": 52,
          "block": "<Card\n        ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        isLoading={isLo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\action-card.tsx",
          "startLine": 55,
          "block": "ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        isLoading={isLoading}\n       ..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\stats-card.tsx",
          "startLine": 40,
          "block": "ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        isLoading={isLoading}\n       ..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\summary-card.tsx",
          "startLine": 53,
          "block": "ref={ref}\n        className={cn(\"overflow-hidden\", className)}\n        isLoading={isLoading}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\action-card.tsx",
          "startLine": 56,
          "block": "className={cn(\"overflow-hidden\", className)}\n        isLoading={isLoading}\n        {...props}\n      ..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\stats-card.tsx",
          "startLine": 41,
          "block": "className={cn(\"overflow-hidden\", className)}\n        isLoading={isLoading}\n        {...props}\n      ..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\summary-card.tsx",
          "startLine": 54,
          "block": "className={cn(\"overflow-hidden\", className)}\n        isLoading={isLoading}\n        {...props}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\card-grid.tsx",
          "startLine": 25,
          "block": "/**\n   * Auto-fit cards to available space instead of using fixed column count\n   */\n  autoFit?: boo..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\card-grid.tsx",
          "startLine": 26,
          "block": "/**\n   * Auto-fit cards to available space instead of using fixed column count\n   */\n  autoFit?: boo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 62,
          "block": "// Disabled state classes\n    const disabledClasses = disabled\n      ? \"opacity-60 cursor-not-allowe..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 63,
          "block": "// Disabled state classes\n    const disabledClasses = disabled\n      ? \"opacity-60 cursor-not-allowe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 139,
          "block": ");\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphEl..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 198,
          "block": ");\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphEl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 191,
          "block": "const alignClasses = {\n      left: \"justify-start\",\n      center: \"justify-center\",\n      right: \"ju..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 255,
          "block": "const alignClasses = {\n      left: \"justify-start\",\n      center: \"justify-center\",\n      right: \"ju..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 192,
          "block": "left: \"justify-start\",\n      center: \"justify-center\",\n      right: \"justify-end\",\n      between: \"j..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 256,
          "block": "left: \"justify-start\",\n      center: \"justify-center\",\n      right: \"justify-end\",\n      between: \"j..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 229,
          "block": "const positionClasses = {\n      top: \"-mx-6 -mt-6 mb-4 rounded-t-md overflow-hidden\",\n      bottom: ..."
        },
        {
          "file": "src\\core\\components\\ui\\cards\\card.tsx",
          "startLine": 230,
          "block": "const positionClasses = {\n      top: \"-mx-6 -mt-6 mb-4 rounded-t-md overflow-hidden\",\n      bottom: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\types.ts",
          "startLine": 97,
          "block": "/**\n   * HTML heading level (h1-h6)\n   * @default 'h3'\n   */\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\"..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 68,
          "block": "/**\n   * HTML heading level (h1-h6)\n   * @default 'h3'\n   */\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\cards\\types.ts",
          "startLine": 98,
          "block": "* HTML heading level (h1-h6)\n   * @default 'h3'\n   */\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 69,
          "block": "* HTML heading level (h1-h6)\n   * @default 'h3'\n   */\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\base-dialog.tsx",
          "startLine": 21,
          "block": "/** Whether the dialog is open */\n  isOpen: boolean;\n  /** Handler for when the dialog should close ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\base-dialog.tsx",
          "startLine": 109,
          "block": "/** Whether the dialog is open */\n  isOpen: boolean;\n  /** Handler for when the dialog should close ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\base-dialog.tsx",
          "startLine": 32,
          "block": "footer?: React.ReactNode;\n  /** Submit button text */\n  submitText?: string;\n  /** Cancel button tex..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\base-form.tsx",
          "startLine": 35,
          "block": "footer?: React.ReactNode;\n  /** Submit button text */\n  submitText?: string;\n  /** Cancel button tex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\base-dialog.tsx",
          "startLine": 69,
          "block": "<DialogHeader>\n            <DialogTitle>{title}</DialogTitle>\n            {description && (\n        ..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\StandardDialog.tsx",
          "startLine": 169,
          "block": "<DialogHeader>\n            <DialogTitle>{title}</DialogTitle>\n            {description && (\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\base-dialog.tsx",
          "startLine": 70,
          "block": "<DialogTitle>{title}</DialogTitle>\n            {description && (\n              <DialogDescription>{d..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\StandardDialog.tsx",
          "startLine": 170,
          "block": "<DialogTitle>{title}</DialogTitle>\n            {description && (\n              <DialogDescription>{d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\base-dialog.tsx",
          "startLine": 81,
          "block": "<Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onO..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\FormDialog.tsx",
          "startLine": 162,
          "block": "<Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\base-dialog.tsx",
          "startLine": 82,
          "block": "type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n    ..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\FormDialog.tsx",
          "startLine": 163,
          "block": "type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\base-form.tsx",
          "startLine": 139,
          "block": ")}\n      {description && (\n        <p className=\"text-xs text-muted-foreground\">{description}</p>\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 54,
          "block": ")}\n      {description && (\n        <p className=\"text-xs text-muted-foreground\">{description}</p>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\calendar.tsx",
          "startLine": 4,
          "block": "import { cn } from \"@/shared/utils\";\nimport { buttonVariants } from \"@/core/components/ui/button\";\n\n..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\calendar.tsx",
          "startLine": 5,
          "block": "import { cn } from \"@/shared/utils\";\nimport { buttonVariants } from \"@/core/components/ui/button\";\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\carousel.tsx",
          "startLine": 9,
          "block": "type CarouselApi = UseEmblaCarouselType[1];\ntype UseCarouselParameters = Parameters<typeof useEmblaC..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\carousel.tsx",
          "startLine": 10,
          "block": "type CarouselApi = UseEmblaCarouselType[1];\ntype UseCarouselParameters = Parameters<typeof useEmblaC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\carousel.tsx",
          "startLine": 30,
          "block": "const CarouselContext = React.createContext<CarouselContextProps | null>(null);\n\nfunction useCarouse..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\carousel.tsx",
          "startLine": 31,
          "block": "const CarouselContext = React.createContext<CarouselContextProps | null>(null);\n\nfunction useCarouse..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 3,
          "block": "import { cn } from \"@/shared/utils\";\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 4,
          "block": "import { cn } from \"@/shared/utils\";\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 22,
          "block": "const ChartContext = React.createContext<ChartContextProps | null>(null);\n\nfunction useChart() {\n  c..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 23,
          "block": "const ChartContext = React.createContext<ChartContextProps | null>(null);\n\nfunction useChart() {\n  c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 67,
          "block": "const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 68,
          "block": "const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 133,
          "block": "const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 134,
          "block": "const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 350,
          "block": "return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\chart.tsx",
          "startLine": 351,
          "block": "return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\command.tsx",
          "startLine": 107,
          "block": "HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n..."
        },
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 171,
          "block": "HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n..."
        },
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 183,
          "block": "HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\command.tsx",
          "startLine": 108,
          "block": "React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 184,
          "block": "React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\command.tsx",
          "startLine": 162,
          "block": "}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 33,
          "block": "}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 169,
          "block": "}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 204,
          "block": "}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\command.tsx",
          "startLine": 163,
          "block": "return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foregrou..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 34,
          "block": "return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foregrou..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 170,
          "block": "return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foregrou..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 205,
          "block": "return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foregrou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\command.tsx",
          "startLine": 164,
          "block": "<span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 35,
          "block": "<span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 171,
          "block": "<span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 206,
          "block": "<span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\command.tsx",
          "startLine": 165,
          "block": "className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 36,
          "block": "className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 172,
          "block": "className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 207,
          "block": "className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\command.tsx",
          "startLine": 166,
          "block": "\"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 37,
          "block": "\"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 173,
          "block": "\"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 208,
          "block": "\"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 6,
          "block": "CardTitle,\n  CardDescription,\n  CardFooter,\n} from \"@/core/components/ui/card\";\nimport { Button } fr..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 17,
          "block": "CardTitle,\n  CardDescription,\n  CardFooter,\n} from \"@/core/components/ui/card\";\nimport { Button } fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 57,
          "block": "// Add other safe environment variables\n      if (import.meta.env.NODE_ENV) {\n        env[\"NODE_ENV\"..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 58,
          "block": "// Add other safe environment variables\n      if (import.meta.env.NODE_ENV) {\n        env[\"NODE_ENV\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 199,
          "block": "disabled={isLoading}\n                className=\"w-full\"\n              >\n                {isLoading ?..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 244,
          "block": "disabled={isLoading}\n                className=\"w-full\"\n              >\n                {isLoading ?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 200,
          "block": "className=\"w-full\"\n              >\n                {isLoading ? (\n                  <>\n             ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 245,
          "block": "className=\"w-full\"\n              >\n                {isLoading ? (\n                  <>\n             ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 201,
          "block": ">\n                {isLoading ? (\n                  <>\n                    <RefreshCw className=\"mr-2..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 246,
          "block": ">\n                {isLoading ? (\n                  <>\n                    <RefreshCw className=\"mr-2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 202,
          "block": "{isLoading ? (\n                  <>\n                    <RefreshCw className=\"mr-2 h-4 w-4 animate-s..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 247,
          "block": "{isLoading ? (\n                  <>\n                    <RefreshCw className=\"mr-2 h-4 w-4 animate-s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 203,
          "block": "<>\n                    <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Testi..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 248,
          "block": "<>\n                    <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Testi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 204,
          "block": "<RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Testing...\n                 ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\connectivity-debugger.tsx",
          "startLine": 249,
          "block": "<RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Testing...\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\date-range-picker.tsx",
          "startLine": 7,
          "block": "import { Calendar } from \"@/core/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  Po..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 26,
          "block": "import { Calendar } from \"@/core/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  Po..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangePicker.tsx",
          "startLine": 4,
          "block": "import { Calendar } from \"@/core/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  Po..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\DeliveryDateProvider.tsx",
          "startLine": 11,
          "block": "import { Calendar } from \"@/core/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  Po..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\date-range-picker.tsx",
          "startLine": 25,
          "block": "return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger a..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
          "startLine": 57,
          "block": "return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\date-range-picker.tsx",
          "startLine": 26,
          "block": "<div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
          "startLine": 58,
          "block": "<div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\date-range-picker.tsx",
          "startLine": 47,
          "block": ") : (\n              <span>Pick a date range</span>\n            )}\n          </Button>\n        </Popo..."
        },
        {
          "file": "src\\core\\components\\ui\\date-range-picker.tsx",
          "startLine": 70,
          "block": ") : (\n              <span>Pick a date range</span>\n            )}\n          </Button>\n        </Popo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\date-range-picker.tsx",
          "startLine": 48,
          "block": "<span>Pick a date range</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\date-range-picker.tsx",
          "startLine": 71,
          "block": "<span>Pick a date range</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\drawer.tsx",
          "startLine": 83,
          "block": "ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      classN..."
        },
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 202,
          "block": "ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      classN..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 76,
          "block": "ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\drawer.tsx",
          "startLine": 84,
          "block": "className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 203,
          "block": "className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 77,
          "block": "className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 132,
          "block": "label: string;\n  placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassNam..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 165,
          "block": "label: string;\n  placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassNam..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 199,
          "block": "label: string;\n  placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassNam..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 234,
          "block": "label: string;\n  placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 133,
          "block": "placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassName?: string;\n  lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 166,
          "block": "placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassName?: string;\n  lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 200,
          "block": "placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassName?: string;\n  lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 235,
          "block": "placeholder?: string;\n  description?: string;\n  className?: string;\n  fieldClassName?: string;\n  lab..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 134,
          "block": "description?: string;\n  className?: string;\n  fieldClassName?: string;\n  labelClassName?: string;\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 167,
          "block": "description?: string;\n  className?: string;\n  fieldClassName?: string;\n  labelClassName?: string;\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 201,
          "block": "description?: string;\n  className?: string;\n  fieldClassName?: string;\n  labelClassName?: string;\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 236,
          "block": "description?: string;\n  className?: string;\n  fieldClassName?: string;\n  labelClassName?: string;\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 141,
          "block": "<BaseFormField\n      name={name}\n      label={label}\n      placeholder={placeholder}\n      descripti..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 174,
          "block": "<BaseFormField\n      name={name}\n      label={label}\n      placeholder={placeholder}\n      descripti..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 208,
          "block": "<BaseFormField\n      name={name}\n      label={label}\n      placeholder={placeholder}\n      descripti..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 243,
          "block": "<BaseFormField\n      name={name}\n      label={label}\n      placeholder={placeholder}\n      descripti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 146,
          "block": "className={className}\n      fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 180,
          "block": "className={className}\n      fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 214,
          "block": "className={className}\n      fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 249,
          "block": "className={className}\n      fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 147,
          "block": "fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n      required={required}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 181,
          "block": "fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n      required={required}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 215,
          "block": "fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n      required={required}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 250,
          "block": "fieldClassName={fieldClassName}\n      labelClassName={labelClassName}\n      required={required}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 259,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 308,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 366,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 420,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 469,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 537,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 603,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 269,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 318,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 374,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 430,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 479,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 547,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 612,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form.tsx",
          "startLine": 72,
          "block": "TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 281,
          "block": "const {\n    register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message a..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 330,
          "block": "const {\n    register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message a..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 384,
          "block": "const {\n    register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message a..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 442,
          "block": "const {\n    register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message a..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 559,
          "block": "const {\n    register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message a..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 755,
          "block": "const {\n    register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 282,
          "block": "register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | u..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 331,
          "block": "register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | u..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 385,
          "block": "register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | u..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 443,
          "block": "register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | u..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 560,
          "block": "register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | u..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 756,
          "block": "register,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 283,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 332,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 386,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 444,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 493,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 561,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 624,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 696,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 757,
          "block": "formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | undefined;\n\n  r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 284,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 333,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 387,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 445,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 494,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 562,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 625,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 697,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 758,
          "block": "} = form;\n  const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormIt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 285,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 334,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 446,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 495,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 563,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 626,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 698,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 759,
          "block": "const error = errors[name]?.message as string | undefined;\n\n  return (\n    <LegacyFormItem\n      lab..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 288,
          "block": "<LegacyFormItem\n      label={label}\n      description={description}\n      error={error}\n      requir..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 337,
          "block": "<LegacyFormItem\n      label={label}\n      description={description}\n      error={error}\n      requir..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 449,
          "block": "<LegacyFormItem\n      label={label}\n      description={description}\n      error={error}\n      requir..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 498,
          "block": "<LegacyFormItem\n      label={label}\n      description={description}\n      error={error}\n      requir..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 566,
          "block": "<LegacyFormItem\n      label={label}\n      description={description}\n      error={error}\n      requir..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 701,
          "block": "<LegacyFormItem\n      label={label}\n      description={description}\n      error={error}\n      requir..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 762,
          "block": "<LegacyFormItem\n      label={label}\n      description={description}\n      error={error}\n      requir..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 289,
          "block": "label={label}\n      description={description}\n      error={error}\n      required={required}\n      cl..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 338,
          "block": "label={label}\n      description={description}\n      error={error}\n      required={required}\n      cl..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 450,
          "block": "label={label}\n      description={description}\n      error={error}\n      required={required}\n      cl..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 499,
          "block": "label={label}\n      description={description}\n      error={error}\n      required={required}\n      cl..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 567,
          "block": "label={label}\n      description={description}\n      error={error}\n      required={required}\n      cl..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 702,
          "block": "label={label}\n      description={description}\n      error={error}\n      required={required}\n      cl..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 763,
          "block": "label={label}\n      description={description}\n      error={error}\n      required={required}\n      cl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 290,
          "block": "description={description}\n      error={error}\n      required={required}\n      className={className}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 339,
          "block": "description={description}\n      error={error}\n      required={required}\n      className={className}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 451,
          "block": "description={description}\n      error={error}\n      required={required}\n      className={className}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 500,
          "block": "description={description}\n      error={error}\n      required={required}\n      className={className}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 568,
          "block": "description={description}\n      error={error}\n      required={required}\n      className={className}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 703,
          "block": "description={description}\n      error={error}\n      required={required}\n      className={className}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 764,
          "block": "description={description}\n      error={error}\n      required={required}\n      className={className}\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 309,
          "block": "TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> extends FormItemProps {\n  name: T..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 538,
          "block": "TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> extends FormItemProps {\n  name: T..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 342,
          "block": "className={className}\n    >\n      <select\n        id={name}\n        className=\"w-full px-3 py-2 bord..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 767,
          "block": "className={className}\n    >\n      <select\n        id={name}\n        className=\"w-full px-3 py-2 bord..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 343,
          "block": ">\n      <select\n        id={name}\n        className=\"w-full px-3 py-2 border rounded-md\"\n        {....."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 768,
          "block": ">\n      <select\n        id={name}\n        className=\"w-full px-3 py-2 border rounded-md\"\n        {....."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 344,
          "block": "<select\n        id={name}\n        className=\"w-full px-3 py-2 border rounded-md\"\n        {...registe..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 769,
          "block": "<select\n        id={name}\n        className=\"w-full px-3 py-2 border rounded-md\"\n        {...registe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 345,
          "block": "id={name}\n        className=\"w-full px-3 py-2 border rounded-md\"\n        {...register(name)}\n      >..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 770,
          "block": "id={name}\n        className=\"w-full px-3 py-2 border rounded-md\"\n        {...register(name)}\n      >..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 346,
          "block": "className=\"w-full px-3 py-2 border rounded-md\"\n        {...register(name)}\n      >\n        {placehol..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 771,
          "block": "className=\"w-full px-3 py-2 border rounded-md\"\n        {...register(name)}\n      >\n        {placehol..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 347,
          "block": "{...register(name)}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n         ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 772,
          "block": "{...register(name)}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 348,
          "block": ">\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n         ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 773,
          "block": ">\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 349,
          "block": "{placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 774,
          "block": "{placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 350,
          "block": "<option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 775,
          "block": "<option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 351,
          "block": "{placeholder}\n          </option>\n        )}\n        {options.map((option) => (\n          <option ke..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 776,
          "block": "{placeholder}\n          </option>\n        )}\n        {options.map((option) => (\n          <option ke..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 352,
          "block": "</option>\n        )}\n        {options.map((option) => (\n          <option key={option.value} value={..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 777,
          "block": "</option>\n        )}\n        {options.map((option) => (\n          <option key={option.value} value={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 353,
          "block": ")}\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 778,
          "block": ")}\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 354,
          "block": "{options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {o..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 779,
          "block": "{options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 355,
          "block": "<option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 780,
          "block": "<option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 421,
          "block": "TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> extends FormItemProps {\n  name: T..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 470,
          "block": "TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> extends FormItemProps {\n  name: T..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 491,
          "block": "const {\n    control,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 622,
          "block": "const {\n    control,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 694,
          "block": "const {\n    control,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 492,
          "block": "control,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | un..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 623,
          "block": "control,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | un..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 695,
          "block": "control,\n    formState: { errors },\n  } = form;\n  const error = errors[name]?.message as string | un..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 505,
          "block": "<Controller\n        name={name}\n        control={control}\n        render={({ field }) => (\n         ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 708,
          "block": "<Controller\n        name={name}\n        control={control}\n        render={({ field }) => (\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 506,
          "block": "name={name}\n        control={control}\n        render={({ field }) => (\n          <div className=\"rel..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 709,
          "block": "name={name}\n        control={control}\n        render={({ field }) => (\n          <div className=\"rel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 507,
          "block": "control={control}\n        render={({ field }) => (\n          <div className=\"relative\">\n            ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 710,
          "block": "control={control}\n        render={({ field }) => (\n          <div className=\"relative\">\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 508,
          "block": "render={({ field }) => (\n          <div className=\"relative\">\n            <div className=\"absolute i..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 711,
          "block": "render={({ field }) => (\n          <div className=\"relative\">\n            <div className=\"absolute i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 509,
          "block": "<div className=\"relative\">\n            <div className=\"absolute inset-y-0 left-0 flex items-center p..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 712,
          "block": "<div className=\"relative\">\n            <div className=\"absolute inset-y-0 left-0 flex items-center p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 510,
          "block": "<div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n             ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 713,
          "block": "<div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n             ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 511,
          "block": "<span className=\"text-gray-500\">{symbol}</span>\n            </div>\n            <input\n              ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 714,
          "block": "<span className=\"text-gray-500\">{symbol}</span>\n            </div>\n            <input\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 512,
          "block": "</div>\n            <input\n              id={name}\n              type=\"number\"\n              placehol..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 715,
          "block": "</div>\n            <input\n              id={name}\n              type=\"number\"\n              placehol..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 513,
          "block": "<input\n              id={name}\n              type=\"number\"\n              placeholder={placeholder}\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 716,
          "block": "<input\n              id={name}\n              type=\"number\"\n              placeholder={placeholder}\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 514,
          "block": "id={name}\n              type=\"number\"\n              placeholder={placeholder}\n              classNam..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 717,
          "block": "id={name}\n              type=\"number\"\n              placeholder={placeholder}\n              classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 515,
          "block": "type=\"number\"\n              placeholder={placeholder}\n              className=\"w-full pl-7 pr-3 py-2..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 718,
          "block": "type=\"number\"\n              placeholder={placeholder}\n              className=\"w-full pl-7 pr-3 py-2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 516,
          "block": "placeholder={placeholder}\n              className=\"w-full pl-7 pr-3 py-2 border rounded-md\"\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 719,
          "block": "placeholder={placeholder}\n              className=\"w-full pl-7 pr-3 py-2 border rounded-md\"\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 517,
          "block": "className=\"w-full pl-7 pr-3 py-2 border rounded-md\"\n              value={field.value ?? \"\"}\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 720,
          "block": "className=\"w-full pl-7 pr-3 py-2 border rounded-md\"\n              value={field.value ?? \"\"}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 518,
          "block": "value={field.value ?? \"\"}\n              onChange={(e) => {\n                const value =\n           ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 721,
          "block": "value={field.value ?? \"\"}\n              onChange={(e) => {\n                const value =\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 519,
          "block": "onChange={(e) => {\n                const value =\n                  e.target.value === \"\"\n           ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 722,
          "block": "onChange={(e) => {\n                const value =\n                  e.target.value === \"\"\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 520,
          "block": "const value =\n                  e.target.value === \"\"\n                    ? undefined\n              ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 723,
          "block": "const value =\n                  e.target.value === \"\"\n                    ? undefined\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 521,
          "block": "e.target.value === \"\"\n                    ? undefined\n                    : parseFloat(e.target.valu..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 724,
          "block": "e.target.value === \"\"\n                    ? undefined\n                    : parseFloat(e.target.valu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 522,
          "block": "? undefined\n                    : parseFloat(e.target.value);\n                field.onChange(value);..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 725,
          "block": "? undefined\n                    : parseFloat(e.target.value);\n                field.onChange(value);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 523,
          "block": ": parseFloat(e.target.value);\n                field.onChange(value);\n              }}\n              ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 726,
          "block": ": parseFloat(e.target.value);\n                field.onChange(value);\n              }}\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 524,
          "block": "field.onChange(value);\n              }}\n              onBlur={field.onBlur}\n            />\n         ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\form-fields.tsx",
          "startLine": 727,
          "block": "field.onChange(value);\n              }}\n              onBlur={field.onBlur}\n            />\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\keyboard-shortcut.tsx",
          "startLine": 47,
          "block": "<span className=\"text-muted-foreground\">+</span>\n          )}\n        </React.Fragment>\n      ))}\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\sidebar-shortcuts.tsx",
          "startLine": 27,
          "block": "<span className=\"text-muted-foreground\">+</span>\n          )}\n        </React.Fragment>\n      ))}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\page-header.tsx",
          "startLine": 8,
          "block": "extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Forward ref to the root div element\n   */\n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 5,
          "block": "extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Forward ref to the root div element\n   */\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\page-header.tsx",
          "startLine": 80,
          "block": "extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Forward ref to the actions div element\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 144,
          "block": "extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Forward ref to the actions div element\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\pagination.tsx",
          "startLine": 36,
          "block": "type PaginationLinkProps = {\n  isActive?: boolean;\n} & Pick<ButtonProps, \"size\"> &\n  React.Component..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\pagination.tsx",
          "startLine": 37,
          "block": "type PaginationLinkProps = {\n  isActive?: boolean;\n} & Pick<ButtonProps, \"size\"> &\n  React.Component..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 6,
          "block": "import { cn } from \"@/shared/utils\";\n\nconst Sheet = SheetPrimitive.Root;\n\nconst SheetTrigger = Sheet..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 6,
          "block": "import { cn } from \"@/shared/utils\";\n\nconst Sheet = SheetPrimitive.Root;\n\nconst SheetTrigger = Sheet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 8,
          "block": "const Sheet = SheetPrimitive.Root;\n\nconst SheetTrigger = SheetPrimitive.Trigger;\n\nconst SheetClose =..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 8,
          "block": "const Sheet = SheetPrimitive.Root;\n\nconst SheetTrigger = SheetPrimitive.Trigger;\n\nconst SheetClose =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 10,
          "block": "const SheetTrigger = SheetPrimitive.Trigger;\n\nconst SheetClose = SheetPrimitive.Close;\n\nconst SheetP..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 10,
          "block": "const SheetTrigger = SheetPrimitive.Trigger;\n\nconst SheetClose = SheetPrimitive.Close;\n\nconst SheetP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 15,
          "block": "const SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.Co..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 16,
          "block": "const SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.Co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 16,
          "block": "const SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.Co..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 17,
          "block": "const SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.Co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 17,
          "block": "React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimit..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 18,
          "block": "React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 21,
          "block": "className={cn(\n      \"fixed inset-0 z-50 bg-black/60  data-[state=open]:animate-in data-[state=close..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 18,
          "block": "className={cn(\n      \"fixed inset-0 z-50 bg-black/60  data-[state=open]:animate-in data-[state=close..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 24,
          "block": "className={cn(\n      \"fixed inset-0 z-50 bg-black/60  data-[state=open]:animate-in data-[state=close..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 128,
          "block": "className={cn(\n      \"fixed inset-0 z-50 bg-black/60  data-[state=open]:animate-in data-[state=close..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 22,
          "block": "\"fixed inset-0 z-50 bg-black/60  data-[state=open]:animate-in data-[state=closed]:animate-out data-[..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 19,
          "block": "\"fixed inset-0 z-50 bg-black/60  data-[state=open]:animate-in data-[state=closed]:animate-out data-[..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 129,
          "block": "\"fixed inset-0 z-50 bg-black/60  data-[state=open]:animate-in data-[state=closed]:animate-out data-[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 28,
          "block": "));\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\n\nconst sheetVariants = cva(\n  \"fi..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 29,
          "block": "));\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\n\nconst sheetVariants = cva(\n  \"fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 29,
          "block": "SheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\n\nconst sheetVariants = cva(\n  \"fixed ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 30,
          "block": "SheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\n\nconst sheetVariants = cva(\n  \"fixed ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 30,
          "block": "const sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-gray-50 p-6 shadow-lg transition ease-in-out data-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 31,
          "block": "const sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-gray-50 p-6 shadow-lg transition ease-in-out data-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 31,
          "block": "const sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-gray-50 p-6 shadow-lg transition ease-in-out data-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 32,
          "block": "const sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-gray-50 p-6 shadow-lg transition ease-in-out data-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 32,
          "block": "\"fixed z-50 gap-4 bg-gray-50 p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 33,
          "block": "\"fixed z-50 gap-4 bg-gray-50 p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 33,
          "block": "{\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 34,
          "block": "{\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 34,
          "block": "variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-to..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 35,
          "block": "variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 35,
          "block": "side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 36,
          "block": "side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 36,
          "block": "top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 37,
          "block": "top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 47,
          "block": "}\n);\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Con..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 48,
          "block": "}\n);\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 73,
          "block": "SheetContent.displayName = SheetPrimitive.Content.displayName;\n\nconst SheetHeader = ({\n  className,\n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 83,
          "block": "SheetContent.displayName = SheetPrimitive.Content.displayName;\n\nconst SheetHeader = ({\n  className,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 77,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 48,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 87,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 158,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 78,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 49,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 88,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 159,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 79,
          "block": "<div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 50,
          "block": "<div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 89,
          "block": "<div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 160,
          "block": "<div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 80,
          "block": "className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 51,
          "block": "className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 90,
          "block": "className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 161,
          "block": "className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 91,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 62,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 101,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 100,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 197,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 92,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 63,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 102,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 101,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 198,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 93,
          "block": "<div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 64,
          "block": "<div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 103,
          "block": "<div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 102,
          "block": "<div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 199,
          "block": "<div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 94,
          "block": "className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      classNam..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 65,
          "block": "className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      classNam..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 104,
          "block": "className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      classNam..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 103,
          "block": "className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      classNam..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 200,
          "block": "className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 95,
          "block": "\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...prop..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 66,
          "block": "\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...prop..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 105,
          "block": "\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...prop..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 104,
          "block": "\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...prop..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 201,
          "block": "\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...prop..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 100,
          "block": ");\nSheetFooter.displayName = \"SheetFooter\";\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 110,
          "block": ");\nSheetFooter.displayName = \"SheetFooter\";\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 101,
          "block": "SheetFooter.displayName = \"SheetFooter\";\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<ty..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 111,
          "block": "SheetFooter.displayName = \"SheetFooter\";\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<ty..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 102,
          "block": "const SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.Compon..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 112,
          "block": "const SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.Compon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 103,
          "block": "const SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.Compon..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 113,
          "block": "const SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.Compon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 104,
          "block": "React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitiv..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 114,
          "block": "React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitiv..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 105,
          "block": "React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 115,
          "block": "React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 106,
          "block": ">(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 116,
          "block": ">(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 107,
          "block": "<SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", class..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 117,
          "block": "<SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 108,
          "block": "ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 118,
          "block": "ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 109,
          "block": "className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n));\nSheetTitl..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 119,
          "block": "className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n));\nSheetTitl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 111,
          "block": "/>\n));\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 121,
          "block": "/>\n));\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 112,
          "block": "));\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.forwa..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 122,
          "block": "));\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.forwa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 113,
          "block": "SheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.forwardRe..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 123,
          "block": "SheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.forwardRe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 114,
          "block": "const SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 124,
          "block": "const SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 115,
          "block": "const SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 125,
          "block": "const SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 116,
          "block": "React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 126,
          "block": "React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 117,
          "block": "React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) =..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 127,
          "block": "React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 118,
          "block": ">(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 128,
          "block": ">(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 119,
          "block": "<SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", classNa..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 129,
          "block": "<SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", classNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sheet.tsx",
          "startLine": 121,
          "block": "className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nSheetDescription...."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 131,
          "block": "className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nSheetDescription...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sidebar-shortcuts.tsx",
          "startLine": 3,
          "block": "import {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/core/components/ui/primitives/popo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\datepicker.tsx",
          "startLine": 7,
          "block": "import {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/core/components/ui/primitives/popo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
          "startLine": 8,
          "block": "import {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/core/components/ui/primitives/popo..."
        },
        {
          "file": "src\\features\\finance\\components\\FinanceFiltersStandardized.tsx",
          "startLine": 7,
          "block": "import {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/core/components/ui/primitives/popo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\sonner.tsx",
          "startLine": 3,
          "block": "type ToasterProps = React.ComponentProps<typeof Sonner>;\n\nconst Toaster = ({ ...props }: ToasterProp..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\sonner.tsx",
          "startLine": 4,
          "block": "type ToasterProps = React.ComponentProps<typeof Sonner>;\n\nconst Toaster = ({ ...props }: ToasterProp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\supabase-connection-status.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescript..."
        },
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescript..."
        },
        {
          "file": "src\\shared\\components\\shared\\PaymentMethodFormStandardized.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescript..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\supabase-connection-status.tsx",
          "startLine": 17,
          "block": "import {\n  checkSupabaseConnection,\n  syncWithSupabase,\n  QUERY_KEYS,\n} from \"@/utils/supabase-helpe..."
        },
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 23,
          "block": "import {\n  checkSupabaseConnection,\n  syncWithSupabase,\n  QUERY_KEYS,\n} from \"@/utils/supabase-helpe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\supabase-connection-status.tsx",
          "startLine": 18,
          "block": "checkSupabaseConnection,\n  syncWithSupabase,\n  QUERY_KEYS,\n} from \"@/utils/supabase-helpers\";\nimport..."
        },
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 24,
          "block": "checkSupabaseConnection,\n  syncWithSupabase,\n  QUERY_KEYS,\n} from \"@/utils/supabase-helpers\";\nimport..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\supabase-connection-status.tsx",
          "startLine": 19,
          "block": "syncWithSupabase,\n  QUERY_KEYS,\n} from \"@/utils/supabase-helpers\";\nimport { useToast } from \"@/hooks..."
        },
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 25,
          "block": "syncWithSupabase,\n  QUERY_KEYS,\n} from \"@/utils/supabase-helpers\";\nimport { useToast } from \"@/hooks..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\composed\\supabase-connection-status.tsx",
          "startLine": 111,
          "block": "Last checked: {lastChecked.toLocaleTimeString()}\n                </div>\n              )}\n           ..."
        },
        {
          "file": "src\\core\\components\\ui\\composed\\supabase-connection-status.tsx",
          "startLine": 125,
          "block": "Last checked: {lastChecked.toLocaleTimeString()}\n                </div>\n              )}\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 7,
          "block": "ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxIte..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 183,
          "block": "ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxIte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 8,
          "block": "ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMen..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 184,
          "block": "ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 9,
          "block": "ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextM..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 185,
          "block": "ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 10,
          "block": "ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMen..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 186,
          "block": "ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 11,
          "block": "ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  Conte..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 187,
          "block": "ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  Conte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 12,
          "block": "ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMe..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 188,
          "block": "ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 13,
          "block": "ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 189,
          "block": "ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 14,
          "block": "ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuS..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 190,
          "block": "ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 15,
          "block": "ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubCont..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 191,
          "block": "ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubCont..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 16,
          "block": "ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 192,
          "block": "ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\context-menu.tsx",
          "startLine": 17,
          "block": "ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenu..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 193,
          "block": "ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\create-button.tsx",
          "startLine": 5,
          "block": "export {\n  type CreateButtonProps,\n  CreateButton,\n} from \"@/core/components/ui/primitives/create-bu..."
        },
        {
          "file": "src\\core\\components\\ui\\create-button.tsx",
          "startLine": 6,
          "block": "export {\n  type CreateButtonProps,\n  CreateButton,\n} from \"@/core/components/ui/primitives/create-bu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\data-table.tsx",
          "startLine": 9,
          "block": "type SortDirection,\n  type ServerSideOptions,\n  type ExportOptions,\n  type SelectionOptions,\n} from ..."
        },
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 17,
          "block": "type SortDirection,\n  type ServerSideOptions,\n  type ExportOptions,\n  type SelectionOptions,\n} from ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\date-range-picker.tsx",
          "startLine": 38,
          "block": "const setQuickRange = (days: number) => {\n    const to = new Date();\n    const from = new Date();\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\date-range-picker.tsx",
          "startLine": 39,
          "block": "const setQuickRange = (days: number) => {\n    const to = new Date();\n    const from = new Date();\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\date-range-picker.tsx",
          "startLine": 52,
          "block": "<PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant=\"outline\"\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
          "startLine": 60,
          "block": "<PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant=\"outline\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\daterangepicker.tsx",
          "startLine": 5,
          "block": "export {\n  DateRangePicker,\n  type DateRangePickerProps,\n} from \"@/core/components/ui/primitives/dat..."
        },
        {
          "file": "src\\core\\components\\ui\\daterangepicker.tsx",
          "startLine": 6,
          "block": "export {\n  DateRangePicker,\n  type DateRangePickerProps,\n} from \"@/core/components/ui/primitives/dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 21,
          "block": "AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n} from \"@/core..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 20,
          "block": "AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n} from \"@/core..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 22,
          "block": "AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n} from \"@/core/components/ui/style..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 21,
          "block": "AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n} from \"@/core/components/ui/style..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 30,
          "block": "ConfirmDialog,\n  AlertMessageDialog,\n  DeleteConfirmDialog,\n} from \"@/core/components/ui/composed/di..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 28,
          "block": "ConfirmDialog,\n  AlertMessageDialog,\n  DeleteConfirmDialog,\n} from \"@/core/components/ui/composed/di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 36,
          "block": "export type {\n  StandardDialogProps,\n  ConfirmDialogProps,\n  AlertMessageDialogProps,\n  DeleteConfir..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 34,
          "block": "export type {\n  StandardDialogProps,\n  ConfirmDialogProps,\n  AlertMessageDialogProps,\n  DeleteConfir..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 37,
          "block": "StandardDialogProps,\n  ConfirmDialogProps,\n  AlertMessageDialogProps,\n  DeleteConfirmDialogProps,\n} ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 35,
          "block": "StandardDialogProps,\n  ConfirmDialogProps,\n  AlertMessageDialogProps,\n  DeleteConfirmDialogProps,\n} ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dialog.tsx",
          "startLine": 38,
          "block": "ConfirmDialogProps,\n  AlertMessageDialogProps,\n  DeleteConfirmDialogProps,\n} from \"@/core/components..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dialog.tsx",
          "startLine": 36,
          "block": "ConfirmDialogProps,\n  AlertMessageDialogProps,\n  DeleteConfirmDialogProps,\n} from \"@/core/components..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 70,
          "block": "document.addEventListener(\"keydown\", handleEsc);\n      if (closeOnClickOutside) {\n        document.a..."
        },
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 71,
          "block": "document.addEventListener(\"keydown\", handleEsc);\n      if (closeOnClickOutside) {\n        document.a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 213,
          "block": "HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 202,
          "block": "HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 214,
          "block": "React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 203,
          "block": "React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\drawer.tsx",
          "startLine": 215,
          "block": ">(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreg..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\card.tsx",
          "startLine": 204,
          "block": ">(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 7,
          "block": "DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckb..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 250,
          "block": "DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckb..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 183,
          "block": "DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 8,
          "block": "DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  Dropdo..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 251,
          "block": "DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  Dropdo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 184,
          "block": "DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  Dropdo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 9,
          "block": "DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  Drop..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 185,
          "block": "DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  Drop..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 10,
          "block": "DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  Dropdo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 186,
          "block": "DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  Dropdo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 11,
          "block": "DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  D..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 187,
          "block": "DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  D..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 12,
          "block": "DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  Dropd..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 188,
          "block": "DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  Dropd..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 13,
          "block": "DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownM..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 189,
          "block": "DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 14,
          "block": "DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  Dropdown..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 190,
          "block": "DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  Dropdown..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 15,
          "block": "DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSu..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 191,
          "block": "DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 16,
          "block": "DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenu..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 192,
          "block": "DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdown-menu.tsx",
          "startLine": 17,
          "block": "DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  Dropdow..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 193,
          "block": "DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  Dropdow..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 11,
          "block": "/**\n * Element that triggers the dropdown menu\n */\nconst DropdownMenuTrigger = DropdownMenuPrimitive..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 12,
          "block": "/**\n * Element that triggers the dropdown menu\n */\nconst DropdownMenuTrigger = DropdownMenuPrimitive..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 16,
          "block": "/**\n * Group multiple items into a section\n */\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 17,
          "block": "/**\n * Group multiple items into a section\n */\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 30,
          "block": "const DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) =>..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 169,
          "block": "const DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 56,
          "block": "<DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 25,
          "block": "<DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 57,
          "block": "ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 26,
          "block": "ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 58,
          "block": "className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm ou..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 27,
          "block": "className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm ou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 59,
          "block": "\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-a..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 28,
          "block": "\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 66,
          "block": "{children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 34,
          "block": "{children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 67,
          "block": "<ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuS..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 35,
          "block": "<ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 68,
          "block": "</DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 36,
          "block": "</DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 76,
          "block": "const DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Sub..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 41,
          "block": "const DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Sub..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 77,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof D..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 42,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof D..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 78,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 43,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 79,
          "block": ">(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    classNam..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 44,
          "block": ">(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 80,
          "block": "<DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-32 overflow-hid..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 45,
          "block": "<DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-32 overflow-hid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 81,
          "block": "ref={ref}\n    className={cn(\n      \"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 t..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 46,
          "block": "ref={ref}\n    className={cn(\n      \"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 82,
          "block": "className={cn(\n      \"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 47,
          "block": "className={cn(\n      \"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 83,
          "block": "\"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg da..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 48,
          "block": "\"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 86,
          "block": "{...props}\n  />\n));\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayN..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 51,
          "block": "{...props}\n  />\n));\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 95,
          "block": "const DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Conten..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 57,
          "block": "const DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Conten..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 96,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof Drop..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 58,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof Drop..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 97,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4,..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 59,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 98,
          "block": ">(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <Dropdown..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 60,
          "block": ">(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <Dropdown..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 99,
          "block": "<DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 61,
          "block": "<DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 100,
          "block": "<DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 62,
          "block": "<DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 101,
          "block": "ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-32 overflow-hidden ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 63,
          "block": "ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-32 overflow-hidden ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 102,
          "block": "sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-32 overflow-hidden rounded-md borde..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 64,
          "block": "sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-32 overflow-hidden rounded-md borde..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 103,
          "block": "className={cn(\n        \"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 65,
          "block": "className={cn(\n        \"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 104,
          "block": "\"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md da..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 66,
          "block": "\"z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 107,
          "block": "{...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMe..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 69,
          "block": "{...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 108,
          "block": "/>\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Con..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 70,
          "block": "/>\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 124,
          "block": "<DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default sel..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 81,
          "block": "<DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default sel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 143,
          "block": "const DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.C..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 93,
          "block": "const DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.C..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 144,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 94,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 145,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 95,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 146,
          "block": ">(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    r..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 96,
          "block": ">(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 147,
          "block": "<DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-def..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 97,
          "block": "<DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-def..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 148,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 175,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 98,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 122,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 149,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 99,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 150,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 100,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 152,
          "block": ")}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 it..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 99,
          "block": ")}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 it..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 102,
          "block": ")}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 it..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 135,
          "block": ")}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 it..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 153,
          "block": "checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-cen..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 103,
          "block": "checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-cen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 154,
          "block": "{...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 104,
          "block": "{...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 155,
          "block": ">\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <Dropdow..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 105,
          "block": ">\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <Dropdow..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 156,
          "block": "<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuP..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 106,
          "block": "<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 157,
          "block": "<DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrim..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 107,
          "block": "<DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 158,
          "block": "<Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 108,
          "block": "<Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 159,
          "block": "</DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.Checkbox..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 109,
          "block": "</DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.Checkbox..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 160,
          "block": "</span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayN..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 110,
          "block": "</span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 161,
          "block": "{children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  Drop..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 111,
          "block": "{children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  Drop..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 162,
          "block": "</DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimi..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 112,
          "block": "</DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 170,
          "block": "const DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Radi..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 117,
          "block": "const DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Radi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 171,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof Dr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 118,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof Dr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 172,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ......"
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 119,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ......"
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 173,
          "block": ">(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 120,
          "block": ">(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 174,
          "block": "<DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-defaul..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 121,
          "block": "<DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-defaul..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 176,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 123,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 177,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 124,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 178,
          "block": "className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-cent..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 122,
          "block": "className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-cent..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 125,
          "block": "className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-cent..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 157,
          "block": "className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-cent..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\select.tsx",
          "startLine": 120,
          "block": "className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-cent..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 179,
          "block": ")}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-cen..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 126,
          "block": ")}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-cen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 180,
          "block": "{...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 127,
          "block": "{...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 181,
          "block": ">\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <Dropdow..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 128,
          "block": ">\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <Dropdow..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 182,
          "block": "<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuP..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 129,
          "block": "<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 183,
          "block": "<DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </Dr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 130,
          "block": "<DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </Dr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 184,
          "block": "<Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 131,
          "block": "<Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 185,
          "block": "</DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioIte..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 132,
          "block": "</DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioIte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 186,
          "block": "</span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 133,
          "block": "</span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 187,
          "block": "{children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenu..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 134,
          "block": "{children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 191,
          "block": "/**\n * Group of radio items in the dropdown menu\n */\nconst DropdownMenuRadioGroup = DropdownMenuPrim..."
        },
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 192,
          "block": "/**\n * Group of radio items in the dropdown menu\n */\nconst DropdownMenuRadioGroup = DropdownMenuPrim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 200,
          "block": "const DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 139,
          "block": "const DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 201,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof Dropdo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 140,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof Dropdo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 202,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 141,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 203,
          "block": "inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 142,
          "block": "inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 204,
          "block": "}\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    clas..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 143,
          "block": "}\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    clas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 205,
          "block": ">(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    classN..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 144,
          "block": ">(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 206,
          "block": "<DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 145,
          "block": "<DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 207,
          "block": "ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 146,
          "block": "ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n     ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 178,
          "block": "ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 208,
          "block": "className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 147,
          "block": "className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 179,
          "block": "className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 221,
          "block": "const DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Sepa..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 157,
          "block": "const DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Sepa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 222,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof Dr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 158,
          "block": "React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof Dr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 223,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, r..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 159,
          "block": "React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 224,
          "block": ">(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 160,
          "block": ">(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 225,
          "block": "<DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", classNa..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 161,
          "block": "<DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", classNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\dropdownmenu.tsx",
          "startLine": 227,
          "block": "className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator...."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\dropdown-menu.tsx",
          "startLine": 163,
          "block": "className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 280,
          "block": "function MetricWidget({ widget }: { widget: WidgetConfig }) {\r\n  const { data } = widget;\r\n  \r\n  if ..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 281,
          "block": "function MetricWidget({ widget }: { widget: WidgetConfig }) {\r\n  const { data } = widget;\r\n  \r\n  if ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 346,
          "block": "function ProgressWidget({ widget }: { widget: WidgetConfig }) {\r\n  const { data } = widget;\r\n\r\n  if ..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 347,
          "block": "function ProgressWidget({ widget }: { widget: WidgetConfig }) {\r\n  const { data } = widget;\r\n\r\n  if ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 368,
          "block": "function ActivityWidget({ widget }: { widget: WidgetConfig }) {\r\n  const { data } = widget;\r\n\r\n  if ..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 369,
          "block": "function ActivityWidget({ widget }: { widget: WidgetConfig }) {\r\n  const { data } = widget;\r\n\r\n  if ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 500,
          "block": "const visibleWidgets = useMemo(\r\n    () => widgets.filter(widget => widget.visible),\r\n    [widgets]\r..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
          "startLine": 501,
          "block": "const visibleWidgets = useMemo(\r\n    () => widgets.filter(widget => widget.visible),\r\n    [widgets]\r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\data-table.tsx",
          "startLine": 29,
          "block": "} from 'lucide-react';\r\n\r\nimport { cn } from '@/shared/utils';\r\nimport { Button } from '@/core/compo..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 19,
          "block": "} from 'lucide-react';\r\n\r\nimport { cn } from '@/shared/utils';\r\nimport { Button } from '@/core/compo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\data-table.tsx",
          "startLine": 35,
          "block": "DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSepa..."
        },
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 4,
          "block": "DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSepa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\data-table.tsx",
          "startLine": 36,
          "block": "DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  Dropdow..."
        },
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 5,
          "block": "DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  Dropdow..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 207,
          "block": ">\r\n                <div className=\"flex flex-col\">\r\n                  <span>{option.label}</span>\r\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 241,
          "block": ">\r\n                <div className=\"flex flex-col\">\r\n                  <span>{option.label}</span>\r\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 278,
          "block": ">\r\n                <div className=\"flex flex-col\">\r\n                  <span>{option.label}</span>\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 208,
          "block": "<div className=\"flex flex-col\">\r\n                  <span>{option.label}</span>\r\n                  {o..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 242,
          "block": "<div className=\"flex flex-col\">\r\n                  <span>{option.label}</span>\r\n                  {o..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 279,
          "block": "<div className=\"flex flex-col\">\r\n                  <span>{option.label}</span>\r\n                  {o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 209,
          "block": "<span>{option.label}</span>\r\n                  {option.description && (\r\n                    <span c..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 243,
          "block": "<span>{option.label}</span>\r\n                  {option.description && (\r\n                    <span c..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 280,
          "block": "<span>{option.label}</span>\r\n                  {option.description && (\r\n                    <span c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 234,
          "block": "/>\r\n              <Label\r\n                htmlFor={`${field.id}-${option.value}`}\r\n                c..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 271,
          "block": "/>\r\n              <Label\r\n                htmlFor={`${field.id}-${option.value}`}\r\n                c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 240,
          "block": ")}\r\n              >\r\n                <div className=\"flex flex-col\">\r\n                  <span>{optio..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 277,
          "block": ")}\r\n              >\r\n                <div className=\"flex flex-col\">\r\n                  <span>{optio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 244,
          "block": "{option.description && (\r\n                    <span className=\"text-sm text-gray-500\">{option.descri..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 281,
          "block": "{option.description && (\r\n                    <span className=\"text-sm text-gray-500\">{option.descri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 245,
          "block": "<span className=\"text-sm text-gray-500\">{option.description}</span>\r\n                  )}\r\n         ..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 282,
          "block": "<span className=\"text-sm text-gray-500\">{option.description}</span>\r\n                  )}\r\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 466,
          "block": "const allFields = useMemo(() => \r\n    sections.flatMap(section => section.fields),\r\n    [sections]\r\n..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 467,
          "block": "const allFields = useMemo(() => \r\n    sections.flatMap(section => section.fields),\r\n    [sections]\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 491,
          "block": "return requiredFields.length > 0 \r\n      ? Math.round((completedFields.length / requiredFields.lengt..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\form-builder.tsx",
          "startLine": 492,
          "block": "return requiredFields.length > 0 \r\n      ? Math.round((completedFields.length / requiredFields.lengt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\metric-card.tsx",
          "startLine": 246,
          "block": "return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 ..."
        },
        {
          "file": "src\\shared\\components\\unified\\MetricCard.tsx",
          "startLine": 112,
          "block": "return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\toast-system.tsx",
          "startLine": 220,
          "block": "setToasts(prev => {\r\n      const updated = [newToast, ...prev];\r\n      return updated.slice(0, maxTo..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\toast-system.tsx",
          "startLine": 221,
          "block": "setToasts(prev => {\r\n      const updated = [newToast, ...prev];\r\n      return updated.slice(0, maxTo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\enhanced\\toast-system.tsx",
          "startLine": 271,
          "block": "// Convenience methods\r\n  const toast = {\r\n    success: (title: string, message?: string, options?: ..."
        },
        {
          "file": "src\\core\\components\\ui\\enhanced\\toast-system.tsx",
          "startLine": 272,
          "block": "// Convenience methods\r\n  const toast = {\r\n    success: (title: string, message?: string, options?: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\FeatureCard.tsx",
          "startLine": 109,
          "block": "{/* Status badge */}\n        <div className=\"absolute top-3 right-3\">\n          {getStatusBadge(feat..."
        },
        {
          "file": "src\\core\\components\\ui\\FeatureCard.tsx",
          "startLine": 110,
          "block": "{/* Status badge */}\n        <div className=\"absolute top-3 right-3\">\n          {getStatusBadge(feat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\index.ts",
          "startLine": 6,
          "block": "/**\n * Optimized UI components index for better tree-shaking and bundle size\n * Using selective impo..."
        },
        {
          "file": "src\\core\\components\\ui\\index.ts",
          "startLine": 7,
          "block": "/**\n * Optimized UI components index for better tree-shaking and bundle size\n * Using selective impo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\loading-button.tsx",
          "startLine": 5,
          "block": "export {\n  LoadingButtonProps,\n  LoadingButton,\n} from \"@/core/components/ui/primitives/loading-butt..."
        },
        {
          "file": "src\\core\\components\\ui\\loading-button.tsx",
          "startLine": 6,
          "block": "export {\n  LoadingButtonProps,\n  LoadingButton,\n} from \"@/core/components/ui/primitives/loading-butt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\navigation-menu.tsx",
          "startLine": 7,
          "block": "navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  Navigati..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\navigation-menu.tsx",
          "startLine": 119,
          "block": "navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  Navigati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\navigation-menu.tsx",
          "startLine": 8,
          "block": "NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMen..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\navigation-menu.tsx",
          "startLine": 120,
          "block": "NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\navigation-menu.tsx",
          "startLine": 9,
          "block": "NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  Naviga..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\navigation-menu.tsx",
          "startLine": 121,
          "block": "NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  Naviga..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\navigation-menu.tsx",
          "startLine": 10,
          "block": "NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  Naviga..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\navigation-menu.tsx",
          "startLine": 122,
          "block": "NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  Naviga..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\navigation-menu.tsx",
          "startLine": 11,
          "block": "NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  N..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\navigation-menu.tsx",
          "startLine": 123,
          "block": "NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  N..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 3,
          "block": "import { cn } from \"@/shared/utils\";\nimport { buttonVariants } from \"@/core/components/ui/button\";\n\n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 4,
          "block": "import { cn } from \"@/shared/utils\";\nimport { buttonVariants } from \"@/core/components/ui/button\";\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 12,
          "block": "const AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 122,
          "block": "const AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 13,
          "block": "const AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 123,
          "block": "const AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 14,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof Alert..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 124,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof Alert..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 15,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref)..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 125,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 16,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixe..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 126,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 17,
          "block": "<AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/60  data-[state=..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 127,
          "block": "<AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/60  data-[state=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 22,
          "block": "{...props}\n    ref={ref}\n  />\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.disp..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 132,
          "block": "{...props}\n    ref={ref}\n  />\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.disp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 24,
          "block": "/>\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialog..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 134,
          "block": "/>\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 25,
          "block": "));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogCon..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 135,
          "block": "));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogCon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 26,
          "block": "AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogContent..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 136,
          "block": "AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogContent..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 27,
          "block": "const AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 137,
          "block": "const AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 28,
          "block": "const AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 138,
          "block": "const AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 29,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof Alert..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 139,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof Alert..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 30,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref)..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 140,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 31,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDia..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 141,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 32,
          "block": "<AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 142,
          "block": "<AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 40,
          "block": "{...props}\n    />\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.C..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 150,
          "block": "{...props}\n    />\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.C..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 41,
          "block": "/>\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayN..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 151,
          "block": "/>\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 42,
          "block": "</AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 152,
          "block": "</AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 43,
          "block": "));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHea..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 153,
          "block": "));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 44,
          "block": "AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHeader ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 154,
          "block": "AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHeader ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 46,
          "block": "const AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 156,
          "block": "const AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 60,
          "block": "const AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 195,
          "block": "const AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 73,
          "block": "const AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 169,
          "block": "const AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 74,
          "block": "const AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 170,
          "block": "const AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 75,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDi..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 171,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 76,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) =..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 172,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 77,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 173,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 78,
          "block": "<AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 174,
          "block": "<AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 80,
          "block": "className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n));\nAlertDialogTitle.displayN..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 176,
          "block": "className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n));\nAlertDialogTitle.displayN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 82,
          "block": "/>\n));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDesc..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 178,
          "block": "/>\n));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDesc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 83,
          "block": "));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescrip..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 179,
          "block": "));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescrip..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 84,
          "block": "AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescription..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 180,
          "block": "AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescription..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 85,
          "block": "const AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Desc..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 181,
          "block": "const AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Desc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 86,
          "block": "const AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Desc..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 182,
          "block": "const AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Desc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 87,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof A..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 183,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof A..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 88,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 184,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 89,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    classNam..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 185,
          "block": ">(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 90,
          "block": "<AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", c..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 186,
          "block": "<AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 92,
          "block": "className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nAlertDialogDescri..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 188,
          "block": "className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nAlertDialogDescri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 93,
          "block": "{...props}\n  />\n));\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayN..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 189,
          "block": "{...props}\n  />\n));\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 98,
          "block": "const AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 208,
          "block": "const AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 99,
          "block": "const AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 209,
          "block": "const AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 100,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertD..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 210,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 107,
          "block": "/>\n));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCa..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 220,
          "block": "/>\n));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 108,
          "block": "));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCance..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 221,
          "block": "));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCance..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 109,
          "block": "AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCancel = ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 222,
          "block": "AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCancel = ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 110,
          "block": "const AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 223,
          "block": "const AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 111,
          "block": "const AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 224,
          "block": "const AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 112,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertD..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 225,
          "block": "React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert-dialog.tsx",
          "startLine": 113,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) ..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 226,
          "block": "React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\alert.tsx",
          "startLine": 1,
          "block": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\badge.tsx",
          "startLine": 1,
          "block": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\breadcrumb.tsx",
          "startLine": 6,
          "block": "Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/core/components/ui/tooltip..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 46,
          "block": "Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/core/components/ui/tooltip..."
        },
        {
          "file": "src\\shared\\components\\sidebar\\SidebarFooter.tsx",
          "startLine": 8,
          "block": "Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/core/components/ui/tooltip..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\breadcrumb.tsx",
          "startLine": 36,
          "block": "const hasHiddenSegments = segments.length > maxItems;\n  const hiddenSegments = hasHiddenSegments\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\breadcrumb.tsx",
          "startLine": 37,
          "block": "const hasHiddenSegments = segments.length > maxItems;\n  const hiddenSegments = hasHiddenSegments\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 69,
          "block": "const goToPreviousMonth = () => setCurrentMonth(subMonths(currentMonth, 1));\n  const goToNextMonth =..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 70,
          "block": "const goToPreviousMonth = () => setCurrentMonth(subMonths(currentMonth, 1));\n  const goToNextMonth =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 145,
          "block": "const isAfterFrom = date >= from;\n    const isBeforeTo = date <= to;\n    return isAfterFrom && isBef..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 146,
          "block": "const isAfterFrom = date >= from;\n    const isBeforeTo = date <= to;\n    return isAfterFrom && isBef..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 152,
          "block": "if (\n      mode !== \"range\" ||\n      !selected ||\n      selected instanceof Date ||\n      Array.isAr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 166,
          "block": "if (\n      mode !== \"range\" ||\n      !selected ||\n      selected instanceof Date ||\n      Array.isAr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 153,
          "block": "mode !== \"range\" ||\n      !selected ||\n      selected instanceof Date ||\n      Array.isArray(selecte..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 167,
          "block": "mode !== \"range\" ||\n      !selected ||\n      selected instanceof Date ||\n      Array.isArray(selecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 154,
          "block": "!selected ||\n      selected instanceof Date ||\n      Array.isArray(selected)\n    ) {\n      return fa..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\calendar.tsx",
          "startLine": 168,
          "block": "!selected ||\n      selected instanceof Date ||\n      Array.isArray(selected)\n    ) {\n      return fa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\checkbox.tsx",
          "startLine": 10,
          "block": "const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ className, indeterminate, o..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\checkbox.tsx",
          "startLine": 11,
          "block": "const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ className, indeterminate, o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 26,
          "block": "ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 54,
          "block": "ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 27,
          "block": "className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm ou..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 55,
          "block": "className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm ou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 28,
          "block": "\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-a..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 56,
          "block": "\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 79,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 115,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 80,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 t..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 116,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 81,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none f..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 117,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 95,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 119,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 131,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 154,
          "block": "ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 96,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 132,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 97,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 133,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 120,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 155,
          "block": "className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\context-menu.tsx",
          "startLine": 121,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\menubar.tsx",
          "startLine": 156,
          "block": "\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\currency-input.tsx",
          "startLine": 16,
          "block": "// Update the display value when the numeric value changes\n    React.useEffect(() => {\n      setDisp..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\currency-input.tsx",
          "startLine": 17,
          "block": "// Update the display value when the numeric value changes\n    React.useEffect(() => {\n      setDisp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\currency-input.tsx",
          "startLine": 36,
          "block": "// When input loses focus, format the value properly\n    const handleBlur = () => {\n      setDisplay..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\currency-input.tsx",
          "startLine": 37,
          "block": "// When input loses focus, format the value properly\n    const handleBlur = () => {\n      setDisplay..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\data-table.tsx",
          "startLine": 41,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 13,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 20,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesSummaryWidgetStandardized.tsx",
          "startLine": 12,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 15,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 4,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\finance\\components\\FinanceFiltersStandardized.tsx",
          "startLine": 14,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\finance\\components\\FinancialDashboardStandardized.tsx",
          "startLine": 18,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 27,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 23,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\DeliveryDateProvider.tsx",
          "startLine": 19,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\TankEmployee.tsx",
          "startLine": 10,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFilter.tsx",
          "startLine": 8,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 50,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 4,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 24,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 21,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 31,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 37,
          "block": "SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\data-table.tsx",
          "startLine": 42,
          "block": "SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives/select\";\nimport ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 24,
          "block": "SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives/select\";\nimport ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 51,
          "block": "SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives/select\";\nimport ..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 22,
          "block": "SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives/select\";\nimport ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 32,
          "block": "SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives/select\";\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\data-table.tsx",
          "startLine": 47,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/core/compo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 6,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/core/compo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 5,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/core/compo..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangeFilter.tsx",
          "startLine": 5,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/core/compo..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesStatusUpdate.tsx",
          "startLine": 4,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/core/compo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\datepicker.tsx",
          "startLine": 4,
          "block": "import { cn } from \"@/shared/utils\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
          "startLine": 5,
          "block": "import { cn } from \"@/shared/utils\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\datepicker.tsx",
          "startLine": 5,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Calendar } from \"@/core/components/ui..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
          "startLine": 6,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Calendar } from \"@/core/components/ui..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\datepicker.tsx",
          "startLine": 6,
          "block": "import { Calendar } from \"@/core/components/ui/primitives/calendar\";\nimport {\n  Popover,\n  PopoverCo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\daterangepicker.tsx",
          "startLine": 7,
          "block": "import { Calendar } from \"@/core/components/ui/primitives/calendar\";\nimport {\n  Popover,\n  PopoverCo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\datepicker.tsx",
          "startLine": 35,
          "block": "const handleSelect = (date: Date | undefined) => {\n    setSelectedDate(date);\n    onDateChange?.(dat..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\datepicker.tsx",
          "startLine": 36,
          "block": "const handleSelect = (date: Date | undefined) => {\n    setSelectedDate(date);\n    onDateChange?.(dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 28,
          "block": "Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/core/components/ui/popover\";\nimport { Button ..."
        },
        {
          "file": "src\\shared\\components\\common\\datepicker\\StandardDatePicker.tsx",
          "startLine": 8,
          "block": "Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/core/components/ui/popover\";\nimport { Button ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 76,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 132,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 186,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 233,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 271,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 317,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 368,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 415,
          "block": "return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 77,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 133,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 234,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 318,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 369,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 416,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 78,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 134,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 235,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 319,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 370,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 417,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 79,
          "block": "name={name}\n      render={({ field }) => (\n        <FormItem className={className}>\n          {label..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 236,
          "block": "name={name}\n      render={({ field }) => (\n        <FormItem className={className}>\n          {label..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 371,
          "block": "name={name}\n      render={({ field }) => (\n        <FormItem className={className}>\n          {label..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 91,
          "block": "disabled={disabled}\n            />\n          </FormControl>\n          {description && <FormDescripti..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 384,
          "block": "disabled={disabled}\n            />\n          </FormControl>\n          {description && <FormDescripti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 92,
          "block": "/>\n          </FormControl>\n          {description && <FormDescription>{description}</FormDescriptio..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 247,
          "block": "/>\n          </FormControl>\n          {description && <FormDescription>{description}</FormDescriptio..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 385,
          "block": "/>\n          </FormControl>\n          {description && <FormDescription>{description}</FormDescriptio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 93,
          "block": "</FormControl>\n          {description && <FormDescription>{description}</FormDescription>}\n         ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 248,
          "block": "</FormControl>\n          {description && <FormDescription>{description}</FormDescription>}\n         ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 386,
          "block": "</FormControl>\n          {description && <FormDescription>{description}</FormDescription>}\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 94,
          "block": "{description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 164,
          "block": "{description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 249,
          "block": "{description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 387,
          "block": "{description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 455,
          "block": "{description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 187,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 272,
          "block": "<FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 188,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem\n          ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form-fields.tsx",
          "startLine": 273,
          "block": "control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form.tsx",
          "startLine": 12,
          "block": "import { cn } from \"@/shared/utils\";\nimport { Label } from \"@/core/components/ui/label\";\n\nconst Form..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form.tsx",
          "startLine": 13,
          "block": "import { cn } from \"@/shared/utils\";\nimport { Label } from \"@/core/components/ui/label\";\n\nconst Form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\form.tsx",
          "startLine": 41,
          "block": "const useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const item..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\form.tsx",
          "startLine": 42,
          "block": "const useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const item..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\icon-button.tsx",
          "startLine": 4,
          "block": "Button,\n  ButtonProps,\n  buttonVariants,\n} from \"@/core/components/ui/button\";\nimport { VariantProps..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\toggle-button.tsx",
          "startLine": 5,
          "block": "Button,\n  ButtonProps,\n  buttonVariants,\n} from \"@/core/components/ui/button\";\nimport { VariantProps..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\icon-button.tsx",
          "startLine": 5,
          "block": "ButtonProps,\n  buttonVariants,\n} from \"@/core/components/ui/button\";\nimport { VariantProps } from \"c..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\toggle-button.tsx",
          "startLine": 6,
          "block": "ButtonProps,\n  buttonVariants,\n} from \"@/core/components/ui/button\";\nimport { VariantProps } from \"c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\icon-button.tsx",
          "startLine": 6,
          "block": "buttonVariants,\n} from \"@/core/components/ui/button\";\nimport { VariantProps } from \"class-variance-a..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\toggle-button.tsx",
          "startLine": 7,
          "block": "buttonVariants,\n} from \"@/core/components/ui/button\";\nimport { VariantProps } from \"class-variance-a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 53,
          "block": "</Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\">\n          {langua..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 101,
          "block": "</Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\">\n          {langua..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 54,
          "block": "</DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\">\n          {languages.map((lang) => ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 102,
          "block": "</DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\">\n          {languages.map((lang) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 55,
          "block": "<DropdownMenuContent align=\"end\">\n          {languages.map((lang) => (\n            <DropdownMenuItem..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 103,
          "block": "<DropdownMenuContent align=\"end\">\n          {languages.map((lang) => (\n            <DropdownMenuItem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 56,
          "block": "{languages.map((lang) => (\n            <DropdownMenuItem\n              key={lang.code}\n             ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 104,
          "block": "{languages.map((lang) => (\n            <DropdownMenuItem\n              key={lang.code}\n             ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 57,
          "block": "<DropdownMenuItem\n              key={lang.code}\n              onClick={() => changeLanguage(lang.cod..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 105,
          "block": "<DropdownMenuItem\n              key={lang.code}\n              onClick={() => changeLanguage(lang.cod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 58,
          "block": "key={lang.code}\n              onClick={() => changeLanguage(lang.code)}\n              className={cn(..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 106,
          "block": "key={lang.code}\n              onClick={() => changeLanguage(lang.code)}\n              className={cn(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 59,
          "block": "onClick={() => changeLanguage(lang.code)}\n              className={cn(\n                \"flex items-c..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 107,
          "block": "onClick={() => changeLanguage(lang.code)}\n              className={cn(\n                \"flex items-c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 60,
          "block": "className={cn(\n                \"flex items-center gap-2 cursor-pointer\",\n                currentLang..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 108,
          "block": "className={cn(\n                \"flex items-center gap-2 cursor-pointer\",\n                currentLang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 61,
          "block": "\"flex items-center gap-2 cursor-pointer\",\n                currentLanguage === lang.code && \"font-med..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 109,
          "block": "\"flex items-center gap-2 cursor-pointer\",\n                currentLanguage === lang.code && \"font-med..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 62,
          "block": "currentLanguage === lang.code && \"font-medium\"\n              )}\n            >\n              {current..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 110,
          "block": "currentLanguage === lang.code && \"font-medium\"\n              )}\n            >\n              {current..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 63,
          "block": ")}\n            >\n              {currentLanguage === lang.code && <Check className=\"h-4 w-4\" />}\n    ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 111,
          "block": ")}\n            >\n              {currentLanguage === lang.code && <Check className=\"h-4 w-4\" />}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 64,
          "block": ">\n              {currentLanguage === lang.code && <Check className=\"h-4 w-4\" />}\n              <span..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 112,
          "block": ">\n              {currentLanguage === lang.code && <Check className=\"h-4 w-4\" />}\n              <span..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 65,
          "block": "{currentLanguage === lang.code && <Check className=\"h-4 w-4\" />}\n              <span className={curr..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 113,
          "block": "{currentLanguage === lang.code && <Check className=\"h-4 w-4\" />}\n              <span className={curr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 66,
          "block": "<span className={currentLanguage === lang.code ? \"ml-0\" : \"ml-6\"}>\n                {lang.nativeLabel..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 114,
          "block": "<span className={currentLanguage === lang.code ? \"ml-0\" : \"ml-6\"}>\n                {lang.nativeLabel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 67,
          "block": "{lang.nativeLabel}\n              </span>\n            </DropdownMenuItem>\n          ))}\n        </Dro..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 115,
          "block": "{lang.nativeLabel}\n              </span>\n            </DropdownMenuItem>\n          ))}\n        </Dro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 68,
          "block": "</span>\n            </DropdownMenuItem>\n          ))}\n        </DropdownMenuContent>\n      </Dropdow..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\language-switcher.tsx",
          "startLine": 116,
          "block": "</span>\n            </DropdownMenuItem>\n          ))}\n        </DropdownMenuContent>\n      </Dropdow..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\searchbar.tsx",
          "startLine": 43,
          "block": "const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSearch?.(currentValue);..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\searchbar.tsx",
          "startLine": 44,
          "block": "const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSearch?.(currentValue);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\select.tsx",
          "startLine": 38,
          "block": "ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      cla..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\select.tsx",
          "startLine": 55,
          "block": "ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\select.tsx",
          "startLine": 39,
          "block": "className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\select.tsx",
          "startLine": 56,
          "block": "className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\select.tsx",
          "startLine": 129,
          "block": "<SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelect..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\select.tsx",
          "startLine": 130,
          "block": "<SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelect..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 11,
          "block": "const SheetClose = SheetPrimitive.Close;\n\nconst SheetPortal = SheetPrimitive.Portal;\nSheetPortal.dis..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\sheet.tsx",
          "startLine": 12,
          "block": "const SheetClose = SheetPrimitive.Close;\n\nconst SheetPortal = SheetPrimitive.Portal;\nSheetPortal.dis..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 39,
          "block": "return (\n          <motion.div\n            variants={iconVariants}\n            initial=\"initial\"\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 52,
          "block": "return (\n          <motion.div\n            variants={iconVariants}\n            initial=\"initial\"\n   ..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 65,
          "block": "return (\n          <motion.div\n            variants={iconVariants}\n            initial=\"initial\"\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 40,
          "block": "<motion.div\n            variants={iconVariants}\n            initial=\"initial\"\n            animate=\"a..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 53,
          "block": "<motion.div\n            variants={iconVariants}\n            initial=\"initial\"\n            animate=\"a..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 66,
          "block": "<motion.div\n            variants={iconVariants}\n            initial=\"initial\"\n            animate=\"a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 41,
          "block": "variants={iconVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 54,
          "block": "variants={iconVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 67,
          "block": "variants={iconVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 42,
          "block": "initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            whileHover=\"hove..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 55,
          "block": "initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            whileHover=\"hove..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 68,
          "block": "initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            whileHover=\"hove..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 43,
          "block": "animate=\"animate\"\n            exit=\"exit\"\n            whileHover=\"hover\"\n            className=\"h-[1..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 56,
          "block": "animate=\"animate\"\n            exit=\"exit\"\n            whileHover=\"hover\"\n            className=\"h-[1..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\ThemeSwitcher.tsx",
          "startLine": 69,
          "block": "animate=\"animate\"\n            exit=\"exit\"\n            whileHover=\"hover\"\n            className=\"h-[1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\toast-container.tsx",
          "startLine": 8,
          "block": "interface ToastContainerProps {\n  className?: string;\n  position?: \"top-right\" | \"top-left\" | \"botto..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\toast-container.tsx",
          "startLine": 9,
          "block": "interface ToastContainerProps {\n  className?: string;\n  position?: \"top-right\" | \"top-left\" | \"botto..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\primitives\\tooltip.tsx",
          "startLine": 2,
          "block": "import * as React from \"react\";\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\n\nimport..."
        },
        {
          "file": "src\\core\\components\\ui\\primitives\\tooltip.tsx",
          "startLine": 3,
          "block": "import * as React from \"react\";\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\n\nimport..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\progress.tsx",
          "startLine": 3,
          "block": "* This helps maintain backward compatibility with existing imports.\n */\n\nimport React from 'react';\n..."
        },
        {
          "file": "src\\core\\components\\ui\\switch.tsx",
          "startLine": 3,
          "block": "* This helps maintain backward compatibility with existing imports.\n */\n\nimport React from 'react';\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\radiogroup.tsx",
          "startLine": 152,
          "block": "// Cast RadioGroup to the compound component type\n(RadioGroup as RadioGroupCompound).Item = RadioGro..."
        },
        {
          "file": "src\\core\\components\\ui\\radiogroup.tsx",
          "startLine": 153,
          "block": "// Cast RadioGroup to the compound component type\n(RadioGroup as RadioGroupCompound).Item = RadioGro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\sidebar-section.tsx",
          "startLine": 4,
          "block": "interface SidebarSectionProps extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string;\n  col..."
        },
        {
          "file": "src\\core\\components\\ui\\sidebar-section.tsx",
          "startLine": 5,
          "block": "interface SidebarSectionProps extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string;\n  col..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\skip-to-content.tsx",
          "startLine": 3,
          "block": "interface SkipToContentProps extends React.HTMLAttributes<HTMLAnchorElement> {\n  contentId?: string;..."
        },
        {
          "file": "src\\core\\components\\ui\\skip-to-content.tsx",
          "startLine": 4,
          "block": "interface SkipToContentProps extends React.HTMLAttributes<HTMLAnchorElement> {\n  contentId?: string;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\slider.tsx",
          "startLine": 141,
          "block": "{/* Description */}\n        {description && (\n          <p className=\"text-xs text-muted-foreground\"..."
        },
        {
          "file": "src\\core\\components\\ui\\slider.tsx",
          "startLine": 142,
          "block": "{/* Description */}\n        {description && (\n          <p className=\"text-xs text-muted-foreground\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 7,
          "block": "// Dialog Components\nconst Dialog = DialogPrimitive.Root;\nconst DialogTrigger = DialogPrimitive.Trig..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 8,
          "block": "// Dialog Components\nconst Dialog = DialogPrimitive.Root;\nconst DialogTrigger = DialogPrimitive.Trig..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 12,
          "block": "const DialogPortal = ({ ...props }: DialogPrimitive.DialogPortalProps) => (\n  <DialogPrimitive.Porta..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 13,
          "block": "const DialogPortal = ({ ...props }: DialogPrimitive.DialogPortalProps) => (\n  <DialogPrimitive.Porta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 40,
          "block": "ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg transla..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 145,
          "block": "ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg transla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 41,
          "block": "className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] tran..."
        },
        {
          "file": "src\\core\\components\\ui\\styled\\dialog.tsx",
          "startLine": 146,
          "block": "className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] tran..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\textarea.tsx",
          "startLine": 59,
          "block": "// Auto resize textarea based on content height\n    const adjustHeight = React.useCallback(() => {\n ..."
        },
        {
          "file": "src\\core\\components\\ui\\textarea.tsx",
          "startLine": 60,
          "block": "// Auto resize textarea based on content height\n    const adjustHeight = React.useCallback(() => {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\textarea.tsx",
          "startLine": 67,
          "block": "// Calculate new height (capped at maxHeight)\n      const newHeight = Math.min(textarea.scrollHeight..."
        },
        {
          "file": "src\\core\\components\\ui\\textarea.tsx",
          "startLine": 68,
          "block": "// Calculate new height (capped at maxHeight)\n      const newHeight = Math.min(textarea.scrollHeight..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\textarea.tsx",
          "startLine": 78,
          "block": "// Adjust height on initial render and when props change\n    React.useEffect(() => {\n      if (autoG..."
        },
        {
          "file": "src\\core\\components\\ui\\textarea.tsx",
          "startLine": 79,
          "block": "// Adjust height on initial render and when props change\n    React.useEffect(() => {\n      if (autoG..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\toggle-button-group.tsx",
          "startLine": 5,
          "block": "export {\n  ToggleButtonGroupProps,\n  ToggleButtonGroup,\n} from \"@/core/components/ui/primitives/togg..."
        },
        {
          "file": "src\\core\\components\\ui\\toggle-button-group.tsx",
          "startLine": 6,
          "block": "export {\n  ToggleButtonGroupProps,\n  ToggleButtonGroup,\n} from \"@/core/components/ui/primitives/togg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\components\\ui\\toggle-button.tsx",
          "startLine": 5,
          "block": "export {\n  ToggleButtonProps,\n  ToggleButton,\n} from \"@/core/components/ui/primitives/toggle-button\"..."
        },
        {
          "file": "src\\core\\components\\ui\\toggle-button.tsx",
          "startLine": 6,
          "block": "export {\n  ToggleButtonProps,\n  ToggleButton,\n} from \"@/core/components/ui/primitives/toggle-button\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\constants.ts",
          "startLine": 62,
          "block": "EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Min 8 ..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 7,
          "block": "EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Min 8 ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 7,
          "block": "EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Min 8 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\constants.ts",
          "startLine": 63,
          "block": "PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Min 8 chars, at least 1 letter and 1 number\n ..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 8,
          "block": "PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Min 8 chars, at least 1 letter and 1 number\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 8,
          "block": "PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, // Min 8 chars, at least 1 letter and 1 number\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\enhanced-navigation.ts",
          "startLine": 377,
          "block": "const searchInItems = (items: NavigationItem[]) => {\r\n    for (const item of items) {\r\n      const n..."
        },
        {
          "file": "src\\core\\config\\enhanced-navigation.ts",
          "startLine": 378,
          "block": "const searchInItems = (items: NavigationItem[]) => {\r\n    for (const item of items) {\r\n      const n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 6,
          "block": "/**\n * Environment types supported by the application\n */\nexport type Environment = \"development\" | ..."
        },
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 7,
          "block": "/**\n * Environment types supported by the application\n */\nexport type Environment = \"development\" | ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 31,
          "block": "/**\n * Check if the application is running in development mode\n */\nexport const isDevelopment = (): ..."
        },
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 32,
          "block": "/**\n * Check if the application is running in development mode\n */\nexport const isDevelopment = (): ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 36,
          "block": "/**\n * Check if the application is running in test mode\n */\nexport const isTest = (): boolean => get..."
        },
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 37,
          "block": "/**\n * Check if the application is running in test mode\n */\nexport const isTest = (): boolean => get..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 41,
          "block": "/**\n * Check if the application is running in production mode\n */\nexport const isProduction = (): bo..."
        },
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 42,
          "block": "/**\n * Check if the application is running in production mode\n */\nexport const isProduction = (): bo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 46,
          "block": "/**\n * Application base URL from environment variables\n */\nexport const APP_BASE_URL = import.meta.e..."
        },
        {
          "file": "src\\core\\config\\environment.ts",
          "startLine": 47,
          "block": "/**\n * Application base URL from environment variables\n */\nexport const APP_BASE_URL = import.meta.e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\feature-flags.ts",
          "startLine": 31,
          "block": "// Preview features (generally disabled in production)\n  NEW_DASHBOARD: !isProduction(), // New dash..."
        },
        {
          "file": "src\\core\\config\\feature-flags.ts",
          "startLine": 32,
          "block": "// Preview features (generally disabled in production)\n  NEW_DASHBOARD: !isProduction(), // New dash..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\feature-flags.ts",
          "startLine": 36,
          "block": "// Experimental features (always disabled in production)\n  EXPERIMENTAL_UI: false, // Experimental U..."
        },
        {
          "file": "src\\core\\config\\feature-flags.ts",
          "startLine": 37,
          "block": "// Experimental features (always disabled in production)\n  EXPERIMENTAL_UI: false, // Experimental U..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 59,
          "block": "{\n      id: 'finance',\n      title: 'Finance',\n      titleAm: 'Ֆինանսներ',\n      description: 'Finan..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 152,
          "block": "{\n      id: 'finance',\n      title: 'Finance',\n      titleAm: 'Ֆինանսներ',\n      description: 'Finan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 60,
          "block": "id: 'finance',\n      title: 'Finance',\n      titleAm: 'Ֆինանսներ',\n      description: 'Financial man..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 153,
          "block": "id: 'finance',\n      title: 'Finance',\n      titleAm: 'Ֆինանսներ',\n      description: 'Financial man..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 61,
          "block": "title: 'Finance',\n      titleAm: 'Ֆինանսներ',\n      description: 'Financial management and analytics..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 154,
          "block": "title: 'Finance',\n      titleAm: 'Ֆինանսներ',\n      description: 'Financial management and analytics..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 71,
          "block": "title: 'Fuel Management',\n      titleAm: 'Վառելիքի կառավարում',\n      description: 'Fuel inventory a..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 238,
          "block": "title: 'Fuel Management',\n      titleAm: 'Վառելիքի կառավարում',\n      description: 'Fuel inventory a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 172,
          "block": "color: 'from-green-500 to-green-600',\n          category: 'finance',\n          status: 'active'\n    ..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 184,
          "block": "color: 'from-green-500 to-green-600',\n          category: 'finance',\n          status: 'active'\n    ..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 196,
          "block": "color: 'from-green-500 to-green-600',\n          category: 'finance',\n          status: 'active'\n    ..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 208,
          "block": "color: 'from-green-500 to-green-600',\n          category: 'finance',\n          status: 'active'\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 256,
          "block": "color: 'from-blue-500 to-blue-600',\n          category: 'fuel',\n          status: 'active'\n        }..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 268,
          "block": "color: 'from-blue-500 to-blue-600',\n          category: 'fuel',\n          status: 'active'\n        }..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 280,
          "block": "color: 'from-blue-500 to-blue-600',\n          category: 'fuel',\n          status: 'active'\n        }..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 292,
          "block": "color: 'from-blue-500 to-blue-600',\n          category: 'fuel',\n          status: 'active'\n        }..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 304,
          "block": "color: 'from-blue-500 to-blue-600',\n          category: 'fuel',\n          status: 'active'\n        }..."
        },
        {
          "file": "src\\core\\config\\features.ts",
          "startLine": 316,
          "block": "color: 'from-blue-500 to-blue-600',\n          category: 'fuel',\n          status: 'active'\n        }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\navigation.ts",
          "startLine": 540,
          "block": "const searchInItems = (items: NavigationItem[]) => {\n    items.forEach(item => {\n      const name = ..."
        },
        {
          "file": "src\\core\\config\\navigation.ts",
          "startLine": 541,
          "block": "const searchInItems = (items: NavigationItem[]) => {\n    items.forEach(item => {\n      const name = ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\navigation.ts",
          "startLine": 545,
          "block": "if (name?.toLowerCase().includes(searchQuery) || \n          (description && description.toLowerCase(..."
        },
        {
          "file": "src\\core\\config\\navigation.ts",
          "startLine": 546,
          "block": "if (name?.toLowerCase().includes(searchQuery) || \n          (description && description.toLowerCase(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\config\\routes.ts",
          "startLine": 286,
          "block": "// Check if the current route matches\n      if (route.path === normalizedPath) {\n        return rout..."
        },
        {
          "file": "src\\core\\config\\routes.ts",
          "startLine": 287,
          "block": "// Check if the current route matches\n      if (route.path === normalizedPath) {\n        return rout..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\db-migration.ts",
          "startLine": 21,
          "block": "// Execute the script with Supabase\n    const { error } = await supabase.rpc(\"run_sql_migration\", {\n..."
        },
        {
          "file": "src\\core\\db-migration.ts",
          "startLine": 22,
          "block": "// Execute the script with Supabase\n    const { error } = await supabase.rpc(\"run_sql_migration\", {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\db-migration.ts",
          "startLine": 26,
          "block": "if (error) {\n      console.error(`Error running migration ${scriptName}:`, error);\n      return fals..."
        },
        {
          "file": "src\\core\\db-migration.ts",
          "startLine": 27,
          "block": "if (error) {\n      console.error(`Error running migration ${scriptName}:`, error);\n      return fals..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 1,
          "block": "/**\n * AraraTOil Design System\n *\n * A comprehensive design system for the Fuel Station Management a..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 1,
          "block": "/**\n * AraraTOil Design System\n *\n * A comprehensive design system for the Fuel Station Management a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 2,
          "block": "* AraraTOil Design System\n *\n * A comprehensive design system for the Fuel Station Management applic..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 2,
          "block": "* AraraTOil Design System\n *\n * A comprehensive design system for the Fuel Station Management applic..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 3,
          "block": "*\n * A comprehensive design system for the Fuel Station Management application\n * with support for b..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 3,
          "block": "*\n * A comprehensive design system for the Fuel Station Management application\n * with support for b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 4,
          "block": "* A comprehensive design system for the Fuel Station Management application\n * with support for both..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 4,
          "block": "* A comprehensive design system for the Fuel Station Management application\n * with support for both..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 5,
          "block": "* with support for both light and dark modes, consistent spacing, and\n * typography guidelines.\n */\n..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 5,
          "block": "* with support for both light and dark modes, consistent spacing, and\n * typography guidelines.\n */\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 6,
          "block": "* typography guidelines.\n */\n\n// ===================================================================..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 6,
          "block": "* typography guidelines.\n */\n\n// ===================================================================..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 7,
          "block": "*/\n\n// =============================================================================\n// COLOR SYSTEM..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 7,
          "block": "*/\n\n// =============================================================================\n// COLOR SYSTEM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 8,
          "block": "// =============================================================================\n// COLOR SYSTEM\n// ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 8,
          "block": "// =============================================================================\n// COLOR SYSTEM\n// ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 9,
          "block": "// =============================================================================\n// COLOR SYSTEM\n// ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 9,
          "block": "// =============================================================================\n// COLOR SYSTEM\n// ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 10,
          "block": "// COLOR SYSTEM\n// =============================================================================\n\nex..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 10,
          "block": "// COLOR SYSTEM\n// =============================================================================\n\nex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 11,
          "block": "// =============================================================================\n\nexport const color..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 11,
          "block": "// =============================================================================\n\nexport const color..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 13,
          "block": "export const colors = {\n  // Primary brand colors\n  primary: {\n    50: \"hsl(215, 100%, 97%)\",\n    10..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 13,
          "block": "export const colors = {\n  // Primary brand colors\n  primary: {\n    50: \"hsl(215, 100%, 97%)\",\n    10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 14,
          "block": "// Primary brand colors\n  primary: {\n    50: \"hsl(215, 100%, 97%)\",\n    100: \"hsl(215, 100%, 92%)\",\n..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 14,
          "block": "// Primary brand colors\n  primary: {\n    50: \"hsl(215, 100%, 97%)\",\n    100: \"hsl(215, 100%, 92%)\",\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 15,
          "block": "primary: {\n    50: \"hsl(215, 100%, 97%)\",\n    100: \"hsl(215, 100%, 92%)\",\n    200: \"hsl(215, 95%, 84..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 15,
          "block": "primary: {\n    50: \"hsl(215, 100%, 97%)\",\n    100: \"hsl(215, 100%, 92%)\",\n    200: \"hsl(215, 95%, 84..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 16,
          "block": "50: \"hsl(215, 100%, 97%)\",\n    100: \"hsl(215, 100%, 92%)\",\n    200: \"hsl(215, 95%, 84%)\",\n    300: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 16,
          "block": "50: \"hsl(215, 100%, 97%)\",\n    100: \"hsl(215, 100%, 92%)\",\n    200: \"hsl(215, 95%, 84%)\",\n    300: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 17,
          "block": "100: \"hsl(215, 100%, 92%)\",\n    200: \"hsl(215, 95%, 84%)\",\n    300: \"hsl(215, 90%, 76%)\",\n    400: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 17,
          "block": "100: \"hsl(215, 100%, 92%)\",\n    200: \"hsl(215, 95%, 84%)\",\n    300: \"hsl(215, 90%, 76%)\",\n    400: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 18,
          "block": "200: \"hsl(215, 95%, 84%)\",\n    300: \"hsl(215, 90%, 76%)\",\n    400: \"hsl(215, 90%, 67%)\",\n    500: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 18,
          "block": "200: \"hsl(215, 95%, 84%)\",\n    300: \"hsl(215, 90%, 76%)\",\n    400: \"hsl(215, 90%, 67%)\",\n    500: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 19,
          "block": "300: \"hsl(215, 90%, 76%)\",\n    400: \"hsl(215, 90%, 67%)\",\n    500: \"hsl(215, 90%, 57%)\", // Main pri..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 19,
          "block": "300: \"hsl(215, 90%, 76%)\",\n    400: \"hsl(215, 90%, 67%)\",\n    500: \"hsl(215, 90%, 57%)\", // Main pri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 20,
          "block": "400: \"hsl(215, 90%, 67%)\",\n    500: \"hsl(215, 90%, 57%)\", // Main primary\n    600: \"hsl(215, 80%, 50..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 20,
          "block": "400: \"hsl(215, 90%, 67%)\",\n    500: \"hsl(215, 90%, 57%)\", // Main primary\n    600: \"hsl(215, 80%, 50..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 21,
          "block": "500: \"hsl(215, 90%, 57%)\", // Main primary\n    600: \"hsl(215, 80%, 50%)\",\n    700: \"hsl(215, 80%, 40..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 21,
          "block": "500: \"hsl(215, 90%, 57%)\", // Main primary\n    600: \"hsl(215, 80%, 50%)\",\n    700: \"hsl(215, 80%, 40..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 22,
          "block": "600: \"hsl(215, 80%, 50%)\",\n    700: \"hsl(215, 80%, 40%)\",\n    800: \"hsl(215, 80%, 30%)\",\n    900: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 22,
          "block": "600: \"hsl(215, 80%, 50%)\",\n    700: \"hsl(215, 80%, 40%)\",\n    800: \"hsl(215, 80%, 30%)\",\n    900: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 23,
          "block": "700: \"hsl(215, 80%, 40%)\",\n    800: \"hsl(215, 80%, 30%)\",\n    900: \"hsl(215, 80%, 20%)\",\n    950: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 23,
          "block": "700: \"hsl(215, 80%, 40%)\",\n    800: \"hsl(215, 80%, 30%)\",\n    900: \"hsl(215, 80%, 20%)\",\n    950: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 25,
          "block": "900: \"hsl(215, 80%, 20%)\",\n    950: \"hsl(215, 90%, 10%)\",\n  },\n\n  // Gray scale for text, background..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 25,
          "block": "900: \"hsl(215, 80%, 20%)\",\n    950: \"hsl(215, 90%, 10%)\",\n  },\n\n  // Gray scale for text, background..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 28,
          "block": "// Gray scale for text, backgrounds, borders\n  gray: {\n    50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(2..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 28,
          "block": "// Gray scale for text, backgrounds, borders\n  gray: {\n    50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 29,
          "block": "// Gray scale for text, backgrounds, borders\n  gray: {\n    50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(2..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 29,
          "block": "// Gray scale for text, backgrounds, borders\n  gray: {\n    50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 30,
          "block": "gray: {\n    50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(220, 15%, 95%)\",\n    200: \"hsl(220, 15%, 91%)\",\n..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 30,
          "block": "gray: {\n    50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(220, 15%, 95%)\",\n    200: \"hsl(220, 15%, 91%)\",\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 31,
          "block": "50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(220, 15%, 95%)\",\n    200: \"hsl(220, 15%, 91%)\",\n    300: \"hs..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 31,
          "block": "50: \"hsl(220, 20%, 98%)\",\n    100: \"hsl(220, 15%, 95%)\",\n    200: \"hsl(220, 15%, 91%)\",\n    300: \"hs..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 32,
          "block": "100: \"hsl(220, 15%, 95%)\",\n    200: \"hsl(220, 15%, 91%)\",\n    300: \"hsl(220, 10%, 85%)\",\n    400: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 32,
          "block": "100: \"hsl(220, 15%, 95%)\",\n    200: \"hsl(220, 15%, 91%)\",\n    300: \"hsl(220, 10%, 85%)\",\n    400: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 33,
          "block": "200: \"hsl(220, 15%, 91%)\",\n    300: \"hsl(220, 10%, 85%)\",\n    400: \"hsl(220, 10%, 70%)\",\n    500: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 33,
          "block": "200: \"hsl(220, 15%, 91%)\",\n    300: \"hsl(220, 10%, 85%)\",\n    400: \"hsl(220, 10%, 70%)\",\n    500: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 34,
          "block": "300: \"hsl(220, 10%, 85%)\",\n    400: \"hsl(220, 10%, 70%)\",\n    500: \"hsl(220, 10%, 50%)\",\n    600: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 34,
          "block": "300: \"hsl(220, 10%, 85%)\",\n    400: \"hsl(220, 10%, 70%)\",\n    500: \"hsl(220, 10%, 50%)\",\n    600: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 35,
          "block": "400: \"hsl(220, 10%, 70%)\",\n    500: \"hsl(220, 10%, 50%)\",\n    600: \"hsl(220, 10%, 40%)\",\n    700: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 35,
          "block": "400: \"hsl(220, 10%, 70%)\",\n    500: \"hsl(220, 10%, 50%)\",\n    600: \"hsl(220, 10%, 40%)\",\n    700: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 36,
          "block": "500: \"hsl(220, 10%, 50%)\",\n    600: \"hsl(220, 10%, 40%)\",\n    700: \"hsl(220, 10%, 30%)\",\n    800: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 36,
          "block": "500: \"hsl(220, 10%, 50%)\",\n    600: \"hsl(220, 10%, 40%)\",\n    700: \"hsl(220, 10%, 30%)\",\n    800: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 37,
          "block": "600: \"hsl(220, 10%, 40%)\",\n    700: \"hsl(220, 10%, 30%)\",\n    800: \"hsl(220, 10%, 20%)\",\n    900: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 37,
          "block": "600: \"hsl(220, 10%, 40%)\",\n    700: \"hsl(220, 10%, 30%)\",\n    800: \"hsl(220, 10%, 20%)\",\n    900: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 38,
          "block": "700: \"hsl(220, 10%, 30%)\",\n    800: \"hsl(220, 10%, 20%)\",\n    900: \"hsl(220, 15%, 15%)\",\n    950: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 38,
          "block": "700: \"hsl(220, 10%, 30%)\",\n    800: \"hsl(220, 10%, 20%)\",\n    900: \"hsl(220, 15%, 15%)\",\n    950: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 40,
          "block": "900: \"hsl(220, 15%, 15%)\",\n    950: \"hsl(220, 20%, 10%)\",\n  },\n\n  // Semantic colors for success, er..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 40,
          "block": "900: \"hsl(220, 15%, 15%)\",\n    950: \"hsl(220, 20%, 10%)\",\n  },\n\n  // Semantic colors for success, er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 43,
          "block": "// Semantic colors for success, error, warning\n  success: {\n    50: \"hsl(145, 80%, 96%)\",\n    100: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 43,
          "block": "// Semantic colors for success, error, warning\n  success: {\n    50: \"hsl(145, 80%, 96%)\",\n    100: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 44,
          "block": "// Semantic colors for success, error, warning\n  success: {\n    50: \"hsl(145, 80%, 96%)\",\n    100: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 44,
          "block": "// Semantic colors for success, error, warning\n  success: {\n    50: \"hsl(145, 80%, 96%)\",\n    100: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 45,
          "block": "success: {\n    50: \"hsl(145, 80%, 96%)\",\n    100: \"hsl(145, 80%, 92%)\",\n    200: \"hsl(145, 75%, 84%)..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 45,
          "block": "success: {\n    50: \"hsl(145, 80%, 96%)\",\n    100: \"hsl(145, 80%, 92%)\",\n    200: \"hsl(145, 75%, 84%)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 46,
          "block": "50: \"hsl(145, 80%, 96%)\",\n    100: \"hsl(145, 80%, 92%)\",\n    200: \"hsl(145, 75%, 84%)\",\n    300: \"hs..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 46,
          "block": "50: \"hsl(145, 80%, 96%)\",\n    100: \"hsl(145, 80%, 92%)\",\n    200: \"hsl(145, 75%, 84%)\",\n    300: \"hs..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 47,
          "block": "100: \"hsl(145, 80%, 92%)\",\n    200: \"hsl(145, 75%, 84%)\",\n    300: \"hsl(145, 70%, 70%)\",\n    400: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 47,
          "block": "100: \"hsl(145, 80%, 92%)\",\n    200: \"hsl(145, 75%, 84%)\",\n    300: \"hsl(145, 70%, 70%)\",\n    400: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 48,
          "block": "200: \"hsl(145, 75%, 84%)\",\n    300: \"hsl(145, 70%, 70%)\",\n    400: \"hsl(145, 65%, 55%)\",\n    500: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 48,
          "block": "200: \"hsl(145, 75%, 84%)\",\n    300: \"hsl(145, 70%, 70%)\",\n    400: \"hsl(145, 65%, 55%)\",\n    500: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 49,
          "block": "300: \"hsl(145, 70%, 70%)\",\n    400: \"hsl(145, 65%, 55%)\",\n    500: \"hsl(145, 65%, 42%)\", // Main suc..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 49,
          "block": "300: \"hsl(145, 70%, 70%)\",\n    400: \"hsl(145, 65%, 55%)\",\n    500: \"hsl(145, 65%, 42%)\", // Main suc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 50,
          "block": "400: \"hsl(145, 65%, 55%)\",\n    500: \"hsl(145, 65%, 42%)\", // Main success\n    600: \"hsl(145, 65%, 36..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 50,
          "block": "400: \"hsl(145, 65%, 55%)\",\n    500: \"hsl(145, 65%, 42%)\", // Main success\n    600: \"hsl(145, 65%, 36..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 51,
          "block": "500: \"hsl(145, 65%, 42%)\", // Main success\n    600: \"hsl(145, 65%, 36%)\",\n    700: \"hsl(145, 65%, 30..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 51,
          "block": "500: \"hsl(145, 65%, 42%)\", // Main success\n    600: \"hsl(145, 65%, 36%)\",\n    700: \"hsl(145, 65%, 30..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 52,
          "block": "600: \"hsl(145, 65%, 36%)\",\n    700: \"hsl(145, 65%, 30%)\",\n    800: \"hsl(145, 70%, 24%)\",\n    900: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 52,
          "block": "600: \"hsl(145, 65%, 36%)\",\n    700: \"hsl(145, 65%, 30%)\",\n    800: \"hsl(145, 70%, 24%)\",\n    900: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 53,
          "block": "700: \"hsl(145, 65%, 30%)\",\n    800: \"hsl(145, 70%, 24%)\",\n    900: \"hsl(145, 70%, 18%)\",\n    950: \"h..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 53,
          "block": "700: \"hsl(145, 65%, 30%)\",\n    800: \"hsl(145, 70%, 24%)\",\n    900: \"hsl(145, 70%, 18%)\",\n    950: \"h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 59,
          "block": "error: {\n    50: \"hsl(0, 100%, 97%)\",\n    100: \"hsl(0, 100%, 95%)\",\n    200: \"hsl(0, 100%, 90%)\",\n  ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 59,
          "block": "error: {\n    50: \"hsl(0, 100%, 97%)\",\n    100: \"hsl(0, 100%, 95%)\",\n    200: \"hsl(0, 100%, 90%)\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 60,
          "block": "50: \"hsl(0, 100%, 97%)\",\n    100: \"hsl(0, 100%, 95%)\",\n    200: \"hsl(0, 100%, 90%)\",\n    300: \"hsl(0..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 60,
          "block": "50: \"hsl(0, 100%, 97%)\",\n    100: \"hsl(0, 100%, 95%)\",\n    200: \"hsl(0, 100%, 90%)\",\n    300: \"hsl(0..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 61,
          "block": "100: \"hsl(0, 100%, 95%)\",\n    200: \"hsl(0, 100%, 90%)\",\n    300: \"hsl(0, 95%, 82%)\",\n    400: \"hsl(0..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 61,
          "block": "100: \"hsl(0, 100%, 95%)\",\n    200: \"hsl(0, 100%, 90%)\",\n    300: \"hsl(0, 95%, 82%)\",\n    400: \"hsl(0..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 62,
          "block": "200: \"hsl(0, 100%, 90%)\",\n    300: \"hsl(0, 95%, 82%)\",\n    400: \"hsl(0, 90%, 70%)\",\n    500: \"hsl(0,..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 62,
          "block": "200: \"hsl(0, 100%, 90%)\",\n    300: \"hsl(0, 95%, 82%)\",\n    400: \"hsl(0, 90%, 70%)\",\n    500: \"hsl(0,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 63,
          "block": "300: \"hsl(0, 95%, 82%)\",\n    400: \"hsl(0, 90%, 70%)\",\n    500: \"hsl(0, 85%, 60%)\", // Main error\n   ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 63,
          "block": "300: \"hsl(0, 95%, 82%)\",\n    400: \"hsl(0, 90%, 70%)\",\n    500: \"hsl(0, 85%, 60%)\", // Main error\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 64,
          "block": "400: \"hsl(0, 90%, 70%)\",\n    500: \"hsl(0, 85%, 60%)\", // Main error\n    600: \"hsl(0, 80%, 50%)\",\n   ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 64,
          "block": "400: \"hsl(0, 90%, 70%)\",\n    500: \"hsl(0, 85%, 60%)\", // Main error\n    600: \"hsl(0, 80%, 50%)\",\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 65,
          "block": "500: \"hsl(0, 85%, 60%)\", // Main error\n    600: \"hsl(0, 80%, 50%)\",\n    700: \"hsl(0, 80%, 40%)\",\n   ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 65,
          "block": "500: \"hsl(0, 85%, 60%)\", // Main error\n    600: \"hsl(0, 80%, 50%)\",\n    700: \"hsl(0, 80%, 40%)\",\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 66,
          "block": "600: \"hsl(0, 80%, 50%)\",\n    700: \"hsl(0, 80%, 40%)\",\n    800: \"hsl(0, 80%, 30%)\",\n    900: \"hsl(0, ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 66,
          "block": "600: \"hsl(0, 80%, 50%)\",\n    700: \"hsl(0, 80%, 40%)\",\n    800: \"hsl(0, 80%, 30%)\",\n    900: \"hsl(0, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 67,
          "block": "700: \"hsl(0, 80%, 40%)\",\n    800: \"hsl(0, 80%, 30%)\",\n    900: \"hsl(0, 80%, 25%)\",\n    950: \"hsl(0, ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 67,
          "block": "700: \"hsl(0, 80%, 40%)\",\n    800: \"hsl(0, 80%, 30%)\",\n    900: \"hsl(0, 80%, 25%)\",\n    950: \"hsl(0, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 72,
          "block": "warning: {\n    50: \"hsl(40, 100%, 97%)\",\n    100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 72,
          "block": "warning: {\n    50: \"hsl(40, 100%, 97%)\",\n    100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 73,
          "block": "warning: {\n    50: \"hsl(40, 100%, 97%)\",\n    100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 73,
          "block": "warning: {\n    50: \"hsl(40, 100%, 97%)\",\n    100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 74,
          "block": "50: \"hsl(40, 100%, 97%)\",\n    100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\",\n    300: \"hsl..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 74,
          "block": "50: \"hsl(40, 100%, 97%)\",\n    100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\",\n    300: \"hsl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 75,
          "block": "100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\",\n    300: \"hsl(40, 90%, 75%)\",\n    400: \"hsl..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 75,
          "block": "100: \"hsl(40, 100%, 92%)\",\n    200: \"hsl(40, 95%, 85%)\",\n    300: \"hsl(40, 90%, 75%)\",\n    400: \"hsl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 76,
          "block": "200: \"hsl(40, 95%, 85%)\",\n    300: \"hsl(40, 90%, 75%)\",\n    400: \"hsl(40, 90%, 65%)\",\n    500: \"hsl(..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 76,
          "block": "200: \"hsl(40, 95%, 85%)\",\n    300: \"hsl(40, 90%, 75%)\",\n    400: \"hsl(40, 90%, 65%)\",\n    500: \"hsl(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 77,
          "block": "300: \"hsl(40, 90%, 75%)\",\n    400: \"hsl(40, 90%, 65%)\",\n    500: \"hsl(40, 90%, 55%)\", // Main warnin..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 77,
          "block": "300: \"hsl(40, 90%, 75%)\",\n    400: \"hsl(40, 90%, 65%)\",\n    500: \"hsl(40, 90%, 55%)\", // Main warnin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 78,
          "block": "400: \"hsl(40, 90%, 65%)\",\n    500: \"hsl(40, 90%, 55%)\", // Main warning\n    600: \"hsl(40, 80%, 48%)\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 78,
          "block": "400: \"hsl(40, 90%, 65%)\",\n    500: \"hsl(40, 90%, 55%)\", // Main warning\n    600: \"hsl(40, 80%, 48%)\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 79,
          "block": "500: \"hsl(40, 90%, 55%)\", // Main warning\n    600: \"hsl(40, 80%, 48%)\",\n    700: \"hsl(40, 80%, 40%)\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 79,
          "block": "500: \"hsl(40, 90%, 55%)\", // Main warning\n    600: \"hsl(40, 80%, 48%)\",\n    700: \"hsl(40, 80%, 40%)\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 80,
          "block": "600: \"hsl(40, 80%, 48%)\",\n    700: \"hsl(40, 80%, 40%)\",\n    800: \"hsl(40, 80%, 30%)\",\n    900: \"hsl(..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 80,
          "block": "600: \"hsl(40, 80%, 48%)\",\n    700: \"hsl(40, 80%, 40%)\",\n    800: \"hsl(40, 80%, 30%)\",\n    900: \"hsl(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 81,
          "block": "700: \"hsl(40, 80%, 40%)\",\n    800: \"hsl(40, 80%, 30%)\",\n    900: \"hsl(40, 80%, 22%)\",\n    950: \"hsl(..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 81,
          "block": "700: \"hsl(40, 80%, 40%)\",\n    800: \"hsl(40, 80%, 30%)\",\n    900: \"hsl(40, 80%, 22%)\",\n    950: \"hsl(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 83,
          "block": "900: \"hsl(40, 80%, 22%)\",\n    950: \"hsl(40, 90%, 12%)\",\n  },\n\n  // Theme semantic colors (calculated..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 83,
          "block": "900: \"hsl(40, 80%, 22%)\",\n    950: \"hsl(40, 90%, 12%)\",\n  },\n\n  // Theme semantic colors (calculated..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 85,
          "block": "},\n\n  // Theme semantic colors (calculated based on mode)\n  theme: {\n    // Surface and background c..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 85,
          "block": "},\n\n  // Theme semantic colors (calculated based on mode)\n  theme: {\n    // Surface and background c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 86,
          "block": "// Theme semantic colors (calculated based on mode)\n  theme: {\n    // Surface and background colors\n..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 86,
          "block": "// Theme semantic colors (calculated based on mode)\n  theme: {\n    // Surface and background colors\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 87,
          "block": "// Theme semantic colors (calculated based on mode)\n  theme: {\n    // Surface and background colors\n..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 87,
          "block": "// Theme semantic colors (calculated based on mode)\n  theme: {\n    // Surface and background colors\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 88,
          "block": "theme: {\n    // Surface and background colors\n    background: \"var(--background)\", // Main app backg..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 88,
          "block": "theme: {\n    // Surface and background colors\n    background: \"var(--background)\", // Main app backg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 89,
          "block": "// Surface and background colors\n    background: \"var(--background)\", // Main app background\n    for..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 89,
          "block": "// Surface and background colors\n    background: \"var(--background)\", // Main app background\n    for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 90,
          "block": "background: \"var(--background)\", // Main app background\n    foreground: \"var(--foreground)\", // Main..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 90,
          "block": "background: \"var(--background)\", // Main app background\n    foreground: \"var(--foreground)\", // Main..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 91,
          "block": "foreground: \"var(--foreground)\", // Main text color\n    card: \"var(--card)\", // Card background\n    ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 91,
          "block": "foreground: \"var(--foreground)\", // Main text color\n    card: \"var(--card)\", // Card background\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 92,
          "block": "card: \"var(--card)\", // Card background\n    cardForeground: \"var(--card-foreground)\", // Card text c..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 92,
          "block": "card: \"var(--card)\", // Card background\n    cardForeground: \"var(--card-foreground)\", // Card text c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 93,
          "block": "cardForeground: \"var(--card-foreground)\", // Card text color\n    popover: \"var(--popover)\", // Popov..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 93,
          "block": "cardForeground: \"var(--card-foreground)\", // Card text color\n    popover: \"var(--popover)\", // Popov..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 94,
          "block": "popover: \"var(--popover)\", // Popover background\n    popoverForeground: \"var(--popover-foreground)\",..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 94,
          "block": "popover: \"var(--popover)\", // Popover background\n    popoverForeground: \"var(--popover-foreground)\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 95,
          "block": "popoverForeground: \"var(--popover-foreground)\", // Popover text color\n\n    // UI element colors\n    ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 95,
          "block": "popoverForeground: \"var(--popover-foreground)\", // Popover text color\n\n    // UI element colors\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 96,
          "block": "// UI element colors\n    primary: \"var(--primary)\", // Primary actions\n    primaryForeground: \"var(-..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 96,
          "block": "// UI element colors\n    primary: \"var(--primary)\", // Primary actions\n    primaryForeground: \"var(-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 97,
          "block": "// UI element colors\n    primary: \"var(--primary)\", // Primary actions\n    primaryForeground: \"var(-..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 97,
          "block": "// UI element colors\n    primary: \"var(--primary)\", // Primary actions\n    primaryForeground: \"var(-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 98,
          "block": "primary: \"var(--primary)\", // Primary actions\n    primaryForeground: \"var(--primary-foreground)\", //..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 98,
          "block": "primary: \"var(--primary)\", // Primary actions\n    primaryForeground: \"var(--primary-foreground)\", //..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 99,
          "block": "primaryForeground: \"var(--primary-foreground)\", // Text on primary bg\n    secondary: \"var(--secondar..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 99,
          "block": "primaryForeground: \"var(--primary-foreground)\", // Text on primary bg\n    secondary: \"var(--secondar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 100,
          "block": "secondary: \"var(--secondary)\", // Secondary actions\n    secondaryForeground: \"var(--secondary-foregr..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 100,
          "block": "secondary: \"var(--secondary)\", // Secondary actions\n    secondaryForeground: \"var(--secondary-foregr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 101,
          "block": "secondaryForeground: \"var(--secondary-foreground)\", // Text on secondary bg\n    muted: \"var(--muted)..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 101,
          "block": "secondaryForeground: \"var(--secondary-foreground)\", // Text on secondary bg\n    muted: \"var(--muted)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 102,
          "block": "muted: \"var(--muted)\", // Muted elements\n    mutedForeground: \"var(--muted-foreground)\", // Text on ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 102,
          "block": "muted: \"var(--muted)\", // Muted elements\n    mutedForeground: \"var(--muted-foreground)\", // Text on ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 103,
          "block": "mutedForeground: \"var(--muted-foreground)\", // Text on muted bg\n    accent: \"var(--accent)\", // Acce..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 103,
          "block": "mutedForeground: \"var(--muted-foreground)\", // Text on muted bg\n    accent: \"var(--accent)\", // Acce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 104,
          "block": "accent: \"var(--accent)\", // Accent elements\n    accentForeground: \"var(--accent-foreground)\", // Tex..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 104,
          "block": "accent: \"var(--accent)\", // Accent elements\n    accentForeground: \"var(--accent-foreground)\", // Tex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 105,
          "block": "accentForeground: \"var(--accent-foreground)\", // Text on accent bg\n\n    // Border colors\n    border:..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 105,
          "block": "accentForeground: \"var(--accent-foreground)\", // Text on accent bg\n\n    // Border colors\n    border:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 106,
          "block": "// Border colors\n    border: \"var(--border)\", // Default border\n    input: \"var(--input)\", // Input ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 106,
          "block": "// Border colors\n    border: \"var(--border)\", // Default border\n    input: \"var(--input)\", // Input ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 107,
          "block": "// Border colors\n    border: \"var(--border)\", // Default border\n    input: \"var(--input)\", // Input ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 107,
          "block": "// Border colors\n    border: \"var(--border)\", // Default border\n    input: \"var(--input)\", // Input ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 108,
          "block": "border: \"var(--border)\", // Default border\n    input: \"var(--input)\", // Input border\n\n    // State ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 108,
          "block": "border: \"var(--border)\", // Default border\n    input: \"var(--input)\", // Input border\n\n    // State ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 109,
          "block": "input: \"var(--input)\", // Input border\n\n    // State colors\n    destructive: \"var(--destructive)\", /..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 109,
          "block": "input: \"var(--input)\", // Input border\n\n    // State colors\n    destructive: \"var(--destructive)\", /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 110,
          "block": "// State colors\n    destructive: \"var(--destructive)\", // Destructive actions\n    destructiveForegro..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 110,
          "block": "// State colors\n    destructive: \"var(--destructive)\", // Destructive actions\n    destructiveForegro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 111,
          "block": "// State colors\n    destructive: \"var(--destructive)\", // Destructive actions\n    destructiveForegro..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 111,
          "block": "// State colors\n    destructive: \"var(--destructive)\", // Destructive actions\n    destructiveForegro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 112,
          "block": "destructive: \"var(--destructive)\", // Destructive actions\n    destructiveForeground: \"var(--destruct..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 112,
          "block": "destructive: \"var(--destructive)\", // Destructive actions\n    destructiveForeground: \"var(--destruct..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 113,
          "block": "destructiveForeground: \"var(--destructive-foreground)\", // Text on destructive bg\n    success: \"var(..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 113,
          "block": "destructiveForeground: \"var(--destructive-foreground)\", // Text on destructive bg\n    success: \"var(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 114,
          "block": "success: \"var(--success)\", // Success state\n    successForeground: \"var(--success-foreground)\", // T..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 114,
          "block": "success: \"var(--success)\", // Success state\n    successForeground: \"var(--success-foreground)\", // T..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 115,
          "block": "successForeground: \"var(--success-foreground)\", // Text on success bg\n    warning: \"var(--warning)\",..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 115,
          "block": "successForeground: \"var(--success-foreground)\", // Text on success bg\n    warning: \"var(--warning)\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 116,
          "block": "warning: \"var(--warning)\", // Warning state\n    warningForeground: \"var(--warning-foreground)\", // T..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 116,
          "block": "warning: \"var(--warning)\", // Warning state\n    warningForeground: \"var(--warning-foreground)\", // T..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 117,
          "block": "warningForeground: \"var(--warning-foreground)\", // Text on warning bg\n\n    // UI feedback\n    ring: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 117,
          "block": "warningForeground: \"var(--warning-foreground)\", // Text on warning bg\n\n    // UI feedback\n    ring: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 120,
          "block": "ring: \"var(--ring)\", // Focus rings\n  },\n};\n\n// ====================================================..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 120,
          "block": "ring: \"var(--ring)\", // Focus rings\n  },\n};\n\n// ====================================================..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 121,
          "block": "},\n};\n\n// =============================================================================\n// TYPOGRAPH..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 121,
          "block": "},\n};\n\n// =============================================================================\n// TYPOGRAPH..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 122,
          "block": "};\n\n// =============================================================================\n// TYPOGRAPHY S..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 122,
          "block": "};\n\n// =============================================================================\n// TYPOGRAPHY S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 123,
          "block": "// =============================================================================\n// TYPOGRAPHY SYSTE..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 123,
          "block": "// =============================================================================\n// TYPOGRAPHY SYSTE..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 124,
          "block": "// =============================================================================\n// TYPOGRAPHY SYSTE..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 124,
          "block": "// =============================================================================\n// TYPOGRAPHY SYSTE..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 125,
          "block": "// TYPOGRAPHY SYSTEM\n// ============================================================================..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 125,
          "block": "// TYPOGRAPHY SYSTEM\n// ============================================================================..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 126,
          "block": "// =============================================================================\n\nexport const typog..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 126,
          "block": "// =============================================================================\n\nexport const typog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 128,
          "block": "export const typography = {\n  // Font families\n  fontFamily: {\n    sans: \"var(--font-sans)\",\n    mon..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 128,
          "block": "export const typography = {\n  // Font families\n  fontFamily: {\n    sans: \"var(--font-sans)\",\n    mon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 143,
          "block": "// Font sizes with matching line heights\n  fontSize: {\n    xs: {\n      size: \"0.75rem\", // 12px\n    ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 143,
          "block": "// Font sizes with matching line heights\n  fontSize: {\n    xs: {\n      size: \"0.75rem\", // 12px\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 146,
          "block": "size: \"0.75rem\", // 12px\n      lineHeight: \"1rem\", // 16px\n    },\n    sm: {\n      size: \"0.875rem\", ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 146,
          "block": "size: \"0.75rem\", // 12px\n      lineHeight: \"1rem\", // 16px\n    },\n    sm: {\n      size: \"0.875rem\", ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 147,
          "block": "lineHeight: \"1rem\", // 16px\n    },\n    sm: {\n      size: \"0.875rem\", // 14px\n      lineHeight: \"1.25..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 147,
          "block": "lineHeight: \"1rem\", // 16px\n    },\n    sm: {\n      size: \"0.875rem\", // 14px\n      lineHeight: \"1.25..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 150,
          "block": "size: \"0.875rem\", // 14px\n      lineHeight: \"1.25rem\", // 20px\n    },\n    base: {\n      size: \"1rem\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 150,
          "block": "size: \"0.875rem\", // 14px\n      lineHeight: \"1.25rem\", // 20px\n    },\n    base: {\n      size: \"1rem\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 151,
          "block": "lineHeight: \"1.25rem\", // 20px\n    },\n    base: {\n      size: \"1rem\", // 16px\n      lineHeight: \"1.5..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 151,
          "block": "lineHeight: \"1.25rem\", // 20px\n    },\n    base: {\n      size: \"1rem\", // 16px\n      lineHeight: \"1.5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 154,
          "block": "size: \"1rem\", // 16px\n      lineHeight: \"1.5rem\", // 24px\n    },\n    lg: {\n      size: \"1.125rem\", /..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 154,
          "block": "size: \"1rem\", // 16px\n      lineHeight: \"1.5rem\", // 24px\n    },\n    lg: {\n      size: \"1.125rem\", /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 155,
          "block": "lineHeight: \"1.5rem\", // 24px\n    },\n    lg: {\n      size: \"1.125rem\", // 18px\n      lineHeight: \"1...."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 155,
          "block": "lineHeight: \"1.5rem\", // 24px\n    },\n    lg: {\n      size: \"1.125rem\", // 18px\n      lineHeight: \"1...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 158,
          "block": "size: \"1.125rem\", // 18px\n      lineHeight: \"1.75rem\", // 28px\n    },\n    xl: {\n      size: \"1.25rem..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 158,
          "block": "size: \"1.125rem\", // 18px\n      lineHeight: \"1.75rem\", // 28px\n    },\n    xl: {\n      size: \"1.25rem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 159,
          "block": "lineHeight: \"1.75rem\", // 28px\n    },\n    xl: {\n      size: \"1.25rem\", // 20px\n      lineHeight: \"1...."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 159,
          "block": "lineHeight: \"1.75rem\", // 28px\n    },\n    xl: {\n      size: \"1.25rem\", // 20px\n      lineHeight: \"1...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 162,
          "block": "size: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n    },\n    \"2xl\": {\n      size: \"1.5r..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 162,
          "block": "size: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n    },\n    \"2xl\": {\n      size: \"1.5r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 163,
          "block": "lineHeight: \"1.875rem\", // 30px\n    },\n    \"2xl\": {\n      size: \"1.5rem\", // 24px\n      lineHeight: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 163,
          "block": "lineHeight: \"1.875rem\", // 30px\n    },\n    \"2xl\": {\n      size: \"1.5rem\", // 24px\n      lineHeight: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 166,
          "block": "size: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n    },\n    \"3xl\": {\n      size: \"1.875rem\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 166,
          "block": "size: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n    },\n    \"3xl\": {\n      size: \"1.875rem\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 167,
          "block": "lineHeight: \"2rem\", // 32px\n    },\n    \"3xl\": {\n      size: \"1.875rem\", // 30px\n      lineHeight: \"2..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 167,
          "block": "lineHeight: \"2rem\", // 32px\n    },\n    \"3xl\": {\n      size: \"1.875rem\", // 30px\n      lineHeight: \"2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 170,
          "block": "size: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n    },\n    \"4xl\": {\n      size: \"2.2..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 170,
          "block": "size: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n    },\n    \"4xl\": {\n      size: \"2.2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 171,
          "block": "lineHeight: \"2.375rem\", // 38px\n    },\n    \"4xl\": {\n      size: \"2.25rem\", // 36px\n      lineHeight:..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 171,
          "block": "lineHeight: \"2.375rem\", // 38px\n    },\n    \"4xl\": {\n      size: \"2.25rem\", // 36px\n      lineHeight:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 174,
          "block": "size: \"2.25rem\", // 36px\n      lineHeight: \"2.75rem\", // 44px\n    },\n    \"5xl\": {\n      size: \"3rem\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 174,
          "block": "size: \"2.25rem\", // 36px\n      lineHeight: \"2.75rem\", // 44px\n    },\n    \"5xl\": {\n      size: \"3rem\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 175,
          "block": "lineHeight: \"2.75rem\", // 44px\n    },\n    \"5xl\": {\n      size: \"3rem\", // 48px\n      lineHeight: \"3...."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 175,
          "block": "lineHeight: \"2.75rem\", // 44px\n    },\n    \"5xl\": {\n      size: \"3rem\", // 48px\n      lineHeight: \"3...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 179,
          "block": "lineHeight: \"3.5rem\", // 56px\n    },\n  },\n\n  // Heading styles (combines size, weight, and line heig..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 179,
          "block": "lineHeight: \"3.5rem\", // 56px\n    },\n  },\n\n  // Heading styles (combines size, weight, and line heig..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 182,
          "block": "// Heading styles (combines size, weight, and line height)\n  headings: {\n    h1: {\n      fontSize: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 182,
          "block": "// Heading styles (combines size, weight, and line height)\n  headings: {\n    h1: {\n      fontSize: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 183,
          "block": "// Heading styles (combines size, weight, and line height)\n  headings: {\n    h1: {\n      fontSize: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 183,
          "block": "// Heading styles (combines size, weight, and line height)\n  headings: {\n    h1: {\n      fontSize: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 184,
          "block": "headings: {\n    h1: {\n      fontSize: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n    ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 184,
          "block": "headings: {\n    h1: {\n      fontSize: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 185,
          "block": "h1: {\n      fontSize: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n      fontWeight: \"7..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 185,
          "block": "h1: {\n      fontSize: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n      fontWeight: \"7..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 186,
          "block": "fontSize: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n      fontWeight: \"700\",\n      l..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 186,
          "block": "fontSize: \"1.875rem\", // 30px\n      lineHeight: \"2.375rem\", // 38px\n      fontWeight: \"700\",\n      l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 187,
          "block": "lineHeight: \"2.375rem\", // 38px\n      fontWeight: \"700\",\n      letterSpacing: \"-0.02em\",\n    },\n    ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 187,
          "block": "lineHeight: \"2.375rem\", // 38px\n      fontWeight: \"700\",\n      letterSpacing: \"-0.02em\",\n    },\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 188,
          "block": "fontWeight: \"700\",\n      letterSpacing: \"-0.02em\",\n    },\n    h2: {\n      fontSize: \"1.5rem\", // 24p..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 188,
          "block": "fontWeight: \"700\",\n      letterSpacing: \"-0.02em\",\n    },\n    h2: {\n      fontSize: \"1.5rem\", // 24p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 189,
          "block": "letterSpacing: \"-0.02em\",\n    },\n    h2: {\n      fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 189,
          "block": "letterSpacing: \"-0.02em\",\n    },\n    h2: {\n      fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 190,
          "block": "},\n    h2: {\n      fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n      fontWeight: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 190,
          "block": "},\n    h2: {\n      fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n      fontWeight: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 191,
          "block": "h2: {\n      fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n      fontWeight: \"600\",\n ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 191,
          "block": "h2: {\n      fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n      fontWeight: \"600\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 192,
          "block": "fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n      fontWeight: \"600\",\n      letterS..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 192,
          "block": "fontSize: \"1.5rem\", // 24px\n      lineHeight: \"2rem\", // 32px\n      fontWeight: \"600\",\n      letterS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 193,
          "block": "lineHeight: \"2rem\", // 32px\n      fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    h3: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 193,
          "block": "lineHeight: \"2rem\", // 32px\n      fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    h3: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 194,
          "block": "fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    h3: {\n      fontSize: \"1.25rem\", // 20..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 194,
          "block": "fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    h3: {\n      fontSize: \"1.25rem\", // 20..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 195,
          "block": "letterSpacing: \"-0.01em\",\n    },\n    h3: {\n      fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.8..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 195,
          "block": "letterSpacing: \"-0.01em\",\n    },\n    h3: {\n      fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.8..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 196,
          "block": "},\n    h3: {\n      fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n      fontWeig..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 196,
          "block": "},\n    h3: {\n      fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n      fontWeig..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 197,
          "block": "h3: {\n      fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n      fontWeight: \"60..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 197,
          "block": "h3: {\n      fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n      fontWeight: \"60..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 198,
          "block": "fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n      fontWeight: \"600\",\n      le..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 198,
          "block": "fontSize: \"1.25rem\", // 20px\n      lineHeight: \"1.875rem\", // 30px\n      fontWeight: \"600\",\n      le..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 199,
          "block": "lineHeight: \"1.875rem\", // 30px\n      fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 199,
          "block": "lineHeight: \"1.875rem\", // 30px\n      fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 200,
          "block": "fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    h4: {\n      fontSize: \"1.125rem\", // 1..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 200,
          "block": "fontWeight: \"600\",\n      letterSpacing: \"-0.01em\",\n    },\n    h4: {\n      fontSize: \"1.125rem\", // 1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 201,
          "block": "letterSpacing: \"-0.01em\",\n    },\n    h4: {\n      fontSize: \"1.125rem\", // 18px\n      lineHeight: \"1...."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 201,
          "block": "letterSpacing: \"-0.01em\",\n    },\n    h4: {\n      fontSize: \"1.125rem\", // 18px\n      lineHeight: \"1...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 202,
          "block": "},\n    h4: {\n      fontSize: \"1.125rem\", // 18px\n      lineHeight: \"1.75rem\", // 28px\n      fontWeig..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 202,
          "block": "},\n    h4: {\n      fontSize: \"1.125rem\", // 18px\n      lineHeight: \"1.75rem\", // 28px\n      fontWeig..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 208,
          "block": "},\n    h5: {\n      fontSize: \"1rem\", // 16px\n      lineHeight: \"1.5rem\", // 24px\n      fontWeight: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 207,
          "block": "},\n    h5: {\n      fontSize: \"1rem\", // 16px\n      lineHeight: \"1.5rem\", // 24px\n      fontWeight: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 214,
          "block": "},\n    h6: {\n      fontSize: \"0.875rem\", // 14px\n      lineHeight: \"1.25rem\", // 20px\n      fontWeig..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 212,
          "block": "},\n    h6: {\n      fontSize: \"0.875rem\", // 14px\n      lineHeight: \"1.25rem\", // 20px\n      fontWeig..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 221,
          "block": "},\n};\n\n// =============================================================================\n// SPACING S..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 218,
          "block": "},\n};\n\n// =============================================================================\n// SPACING S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 222,
          "block": "};\n\n// =============================================================================\n// SPACING SYST..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 219,
          "block": "};\n\n// =============================================================================\n// SPACING SYST..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 223,
          "block": "// =============================================================================\n// SPACING SYSTEM\n/..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 220,
          "block": "// =============================================================================\n// SPACING SYSTEM\n/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 224,
          "block": "// =============================================================================\n// SPACING SYSTEM\n/..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 221,
          "block": "// =============================================================================\n// SPACING SYSTEM\n/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 233,
          "block": "0: \"0\",\n  0.5: \"0.125rem\", // 2px\n  1: \"0.25rem\", // 4px\n  1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", //..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 228,
          "block": "0: \"0\",\n  0.5: \"0.125rem\", // 2px\n  1: \"0.25rem\", // 4px\n  1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", //..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 234,
          "block": "0.5: \"0.125rem\", // 2px\n  1: \"0.25rem\", // 4px\n  1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", // 8px\n  2.5..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 229,
          "block": "0.5: \"0.125rem\", // 2px\n  1: \"0.25rem\", // 4px\n  1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", // 8px\n  2.5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 235,
          "block": "1: \"0.25rem\", // 4px\n  1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", // 8px\n  2.5: \"0.625rem\", // 10px\n  3:..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 230,
          "block": "1: \"0.25rem\", // 4px\n  1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", // 8px\n  2.5: \"0.625rem\", // 10px\n  3:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 236,
          "block": "1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", // 8px\n  2.5: \"0.625rem\", // 10px\n  3: \"0.75rem\", // 12px\n  3..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 231,
          "block": "1.5: \"0.375rem\", // 6px\n  2: \"0.5rem\", // 8px\n  2.5: \"0.625rem\", // 10px\n  3: \"0.75rem\", // 12px\n  3..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 237,
          "block": "2: \"0.5rem\", // 8px\n  2.5: \"0.625rem\", // 10px\n  3: \"0.75rem\", // 12px\n  3.5: \"0.875rem\", // 14px\n  ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 232,
          "block": "2: \"0.5rem\", // 8px\n  2.5: \"0.625rem\", // 10px\n  3: \"0.75rem\", // 12px\n  3.5: \"0.875rem\", // 14px\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 238,
          "block": "2.5: \"0.625rem\", // 10px\n  3: \"0.75rem\", // 12px\n  3.5: \"0.875rem\", // 14px\n  4: \"1rem\", // 16px\n  5..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 233,
          "block": "2.5: \"0.625rem\", // 10px\n  3: \"0.75rem\", // 12px\n  3.5: \"0.875rem\", // 14px\n  4: \"1rem\", // 16px\n  5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 239,
          "block": "3: \"0.75rem\", // 12px\n  3.5: \"0.875rem\", // 14px\n  4: \"1rem\", // 16px\n  5: \"1.25rem\", // 20px\n  6: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 234,
          "block": "3: \"0.75rem\", // 12px\n  3.5: \"0.875rem\", // 14px\n  4: \"1rem\", // 16px\n  5: \"1.25rem\", // 20px\n  6: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 240,
          "block": "3.5: \"0.875rem\", // 14px\n  4: \"1rem\", // 16px\n  5: \"1.25rem\", // 20px\n  6: \"1.5rem\", // 24px\n  7: \"1..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 235,
          "block": "3.5: \"0.875rem\", // 14px\n  4: \"1rem\", // 16px\n  5: \"1.25rem\", // 20px\n  6: \"1.5rem\", // 24px\n  7: \"1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 241,
          "block": "4: \"1rem\", // 16px\n  5: \"1.25rem\", // 20px\n  6: \"1.5rem\", // 24px\n  7: \"1.75rem\", // 28px\n  8: \"2rem..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 236,
          "block": "4: \"1rem\", // 16px\n  5: \"1.25rem\", // 20px\n  6: \"1.5rem\", // 24px\n  7: \"1.75rem\", // 28px\n  8: \"2rem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 242,
          "block": "5: \"1.25rem\", // 20px\n  6: \"1.5rem\", // 24px\n  7: \"1.75rem\", // 28px\n  8: \"2rem\", // 32px\n  9: \"2.25..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 237,
          "block": "5: \"1.25rem\", // 20px\n  6: \"1.5rem\", // 24px\n  7: \"1.75rem\", // 28px\n  8: \"2rem\", // 32px\n  9: \"2.25..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 243,
          "block": "6: \"1.5rem\", // 24px\n  7: \"1.75rem\", // 28px\n  8: \"2rem\", // 32px\n  9: \"2.25rem\", // 36px\n  10: \"2.5..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 238,
          "block": "6: \"1.5rem\", // 24px\n  7: \"1.75rem\", // 28px\n  8: \"2rem\", // 32px\n  9: \"2.25rem\", // 36px\n  10: \"2.5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 244,
          "block": "7: \"1.75rem\", // 28px\n  8: \"2rem\", // 32px\n  9: \"2.25rem\", // 36px\n  10: \"2.5rem\", // 40px\n  11: \"2...."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 239,
          "block": "7: \"1.75rem\", // 28px\n  8: \"2rem\", // 32px\n  9: \"2.25rem\", // 36px\n  10: \"2.5rem\", // 40px\n  11: \"2...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 245,
          "block": "8: \"2rem\", // 32px\n  9: \"2.25rem\", // 36px\n  10: \"2.5rem\", // 40px\n  11: \"2.75rem\", // 44px\n  12: \"3..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 240,
          "block": "8: \"2rem\", // 32px\n  9: \"2.25rem\", // 36px\n  10: \"2.5rem\", // 40px\n  11: \"2.75rem\", // 44px\n  12: \"3..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 246,
          "block": "9: \"2.25rem\", // 36px\n  10: \"2.5rem\", // 40px\n  11: \"2.75rem\", // 44px\n  12: \"3rem\", // 48px\n  14: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 241,
          "block": "9: \"2.25rem\", // 36px\n  10: \"2.5rem\", // 40px\n  11: \"2.75rem\", // 44px\n  12: \"3rem\", // 48px\n  14: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 247,
          "block": "10: \"2.5rem\", // 40px\n  11: \"2.75rem\", // 44px\n  12: \"3rem\", // 48px\n  14: \"3.5rem\", // 56px\n  16: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 242,
          "block": "10: \"2.5rem\", // 40px\n  11: \"2.75rem\", // 44px\n  12: \"3rem\", // 48px\n  14: \"3.5rem\", // 56px\n  16: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 248,
          "block": "11: \"2.75rem\", // 44px\n  12: \"3rem\", // 48px\n  14: \"3.5rem\", // 56px\n  16: \"4rem\", // 64px\n  20: \"5r..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 243,
          "block": "11: \"2.75rem\", // 44px\n  12: \"3rem\", // 48px\n  14: \"3.5rem\", // 56px\n  16: \"4rem\", // 64px\n  20: \"5r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 249,
          "block": "12: \"3rem\", // 48px\n  14: \"3.5rem\", // 56px\n  16: \"4rem\", // 64px\n  20: \"5rem\", // 80px\n  24: \"6rem\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 244,
          "block": "12: \"3rem\", // 48px\n  14: \"3.5rem\", // 56px\n  16: \"4rem\", // 64px\n  20: \"5rem\", // 80px\n  24: \"6rem\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 250,
          "block": "14: \"3.5rem\", // 56px\n  16: \"4rem\", // 64px\n  20: \"5rem\", // 80px\n  24: \"6rem\", // 96px\n  28: \"7rem\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 245,
          "block": "14: \"3.5rem\", // 56px\n  16: \"4rem\", // 64px\n  20: \"5rem\", // 80px\n  24: \"6rem\", // 96px\n  28: \"7rem\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 251,
          "block": "16: \"4rem\", // 64px\n  20: \"5rem\", // 80px\n  24: \"6rem\", // 96px\n  28: \"7rem\", // 112px\n  32: \"8rem\",..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 246,
          "block": "16: \"4rem\", // 64px\n  20: \"5rem\", // 80px\n  24: \"6rem\", // 96px\n  28: \"7rem\", // 112px\n  32: \"8rem\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 252,
          "block": "20: \"5rem\", // 80px\n  24: \"6rem\", // 96px\n  28: \"7rem\", // 112px\n  32: \"8rem\", // 128px\n  36: \"9rem\"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 247,
          "block": "20: \"5rem\", // 80px\n  24: \"6rem\", // 96px\n  28: \"7rem\", // 112px\n  32: \"8rem\", // 128px\n  36: \"9rem\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 253,
          "block": "24: \"6rem\", // 96px\n  28: \"7rem\", // 112px\n  32: \"8rem\", // 128px\n  36: \"9rem\", // 144px\n  40: \"10re..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 248,
          "block": "24: \"6rem\", // 96px\n  28: \"7rem\", // 112px\n  32: \"8rem\", // 128px\n  36: \"9rem\", // 144px\n  40: \"10re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 254,
          "block": "28: \"7rem\", // 112px\n  32: \"8rem\", // 128px\n  36: \"9rem\", // 144px\n  40: \"10rem\", // 160px\n  44: \"11..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 249,
          "block": "28: \"7rem\", // 112px\n  32: \"8rem\", // 128px\n  36: \"9rem\", // 144px\n  40: \"10rem\", // 160px\n  44: \"11..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 255,
          "block": "32: \"8rem\", // 128px\n  36: \"9rem\", // 144px\n  40: \"10rem\", // 160px\n  44: \"11rem\", // 176px\n  48: \"1..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 250,
          "block": "32: \"8rem\", // 128px\n  36: \"9rem\", // 144px\n  40: \"10rem\", // 160px\n  44: \"11rem\", // 176px\n  48: \"1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 256,
          "block": "36: \"9rem\", // 144px\n  40: \"10rem\", // 160px\n  44: \"11rem\", // 176px\n  48: \"12rem\", // 192px\n  52: \"..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 251,
          "block": "36: \"9rem\", // 144px\n  40: \"10rem\", // 160px\n  44: \"11rem\", // 176px\n  48: \"12rem\", // 192px\n  52: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 257,
          "block": "40: \"10rem\", // 160px\n  44: \"11rem\", // 176px\n  48: \"12rem\", // 192px\n  52: \"13rem\", // 208px\n  56: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 252,
          "block": "40: \"10rem\", // 160px\n  44: \"11rem\", // 176px\n  48: \"12rem\", // 192px\n  52: \"13rem\", // 208px\n  56: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 258,
          "block": "44: \"11rem\", // 176px\n  48: \"12rem\", // 192px\n  52: \"13rem\", // 208px\n  56: \"14rem\", // 224px\n  60: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 253,
          "block": "44: \"11rem\", // 176px\n  48: \"12rem\", // 192px\n  52: \"13rem\", // 208px\n  56: \"14rem\", // 224px\n  60: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 259,
          "block": "48: \"12rem\", // 192px\n  52: \"13rem\", // 208px\n  56: \"14rem\", // 224px\n  60: \"15rem\", // 240px\n  64: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 254,
          "block": "48: \"12rem\", // 192px\n  52: \"13rem\", // 208px\n  56: \"14rem\", // 224px\n  60: \"15rem\", // 240px\n  64: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 260,
          "block": "52: \"13rem\", // 208px\n  56: \"14rem\", // 224px\n  60: \"15rem\", // 240px\n  64: \"16rem\", // 256px\n  72: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 255,
          "block": "52: \"13rem\", // 208px\n  56: \"14rem\", // 224px\n  60: \"15rem\", // 240px\n  64: \"16rem\", // 256px\n  72: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 261,
          "block": "56: \"14rem\", // 224px\n  60: \"15rem\", // 240px\n  64: \"16rem\", // 256px\n  72: \"18rem\", // 288px\n  80: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 256,
          "block": "56: \"14rem\", // 224px\n  60: \"15rem\", // 240px\n  64: \"16rem\", // 256px\n  72: \"18rem\", // 288px\n  80: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 262,
          "block": "60: \"15rem\", // 240px\n  64: \"16rem\", // 256px\n  72: \"18rem\", // 288px\n  80: \"20rem\", // 320px\n  96: ..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 257,
          "block": "60: \"15rem\", // 240px\n  64: \"16rem\", // 256px\n  72: \"18rem\", // 288px\n  80: \"20rem\", // 320px\n  96: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\design\\theme.ts",
          "startLine": 265,
          "block": "80: \"20rem\", // 320px\n  96: \"24rem\", // 384px\n};\n\n// ===============================================..."
        },
        {
          "file": "src\\lib\\design-system.ts",
          "startLine": 260,
          "block": "80: \"20rem\", // 320px\n  96: \"24rem\", // 384px\n};\n\n// ===============================================..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 185,
          "block": "// Override console.error\n    console.error = (...args: unknown[]) => {\n      const message = args[0..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 186,
          "block": "// Override console.error\n    console.error = (...args: unknown[]) => {\n      const message = args[0..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 192,
          "block": "if (this.shouldFilterError(message)) {\n        // Still track internally but don't console log\n     ..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 231,
          "block": "if (this.shouldFilterError(message)) {\n        // Still track internally but don't console log\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 193,
          "block": "// Still track internally but don't console log\n        const id = uuidv4();\n        const timestamp..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 232,
          "block": "// Still track internally but don't console log\n        const id = uuidv4();\n        const timestamp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 194,
          "block": "const id = uuidv4();\n        const timestamp = new Date().toISOString();\n        const logEntry: Log..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 233,
          "block": "const id = uuidv4();\n        const timestamp = new Date().toISOString();\n        const logEntry: Log..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 206,
          "block": "// Call original console.error\n      if (this.consoleEnabled) {\n        originalConsoleError.apply(c..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 207,
          "block": "// Call original console.error\n      if (this.consoleEnabled) {\n        originalConsoleError.apply(c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 213,
          "block": "const id = uuidv4();\n      const timestamp = new Date().toISOString();\n      const logEntry: LogMess..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 252,
          "block": "const id = uuidv4();\n      const timestamp = new Date().toISOString();\n      const logEntry: LogMess..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 224,
          "block": "// Override console.warn\n    console.warn = (...args: unknown[]) => {\n      const message = args[0]?..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 225,
          "block": "// Override console.warn\n    console.warn = (...args: unknown[]) => {\n      const message = args[0]?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 245,
          "block": "// Call original console.warn\n      if (this.consoleEnabled) {\n        originalConsoleWarn.apply(con..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 246,
          "block": "// Call original console.warn\n      if (this.consoleEnabled) {\n        originalConsoleWarn.apply(con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 268,
          "block": "// By default, filter common React warnings in production\nif (process.env.NODE_ENV === \"production\")..."
        },
        {
          "file": "src\\core\\errorHandling.ts",
          "startLine": 269,
          "block": "// By default, filter common React warnings in production\nif (process.env.NODE_ENV === \"production\")..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 45,
          "block": "// Check if we're online\n  const checkOnlineStatus = () => {\n    return window.navigator.onLine;\n  }..."
        },
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 46,
          "block": "// Check if we're online\n  const checkOnlineStatus = () => {\n    return window.navigator.onLine;\n  }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 58,
          "block": "setUser(null);\n          setProfile(null);\n          setIsLoading(false);\n          return;\n        ..."
        },
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 70,
          "block": "setUser(null);\n          setProfile(null);\n          setIsLoading(false);\n          return;\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 144,
          "block": "const handleOffline = () => {\n      console.log(\"Network is offline\");\n      setIsOffline(true);\n   ..."
        },
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 145,
          "block": "const handleOffline = () => {\n      console.log(\"Network is offline\");\n      setIsOffline(true);\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 158,
          "block": "const signIn = async (email: string, password: string) => {\n    if (isOffline) {\n      return { erro..."
        },
        {
          "file": "src\\core\\hooks\\useAuth.tsx",
          "startLine": 159,
          "block": "const signIn = async (email: string, password: string) => {\n    if (isOffline) {\n      return { erro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 115,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        },
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 233,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        },
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 48,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 48,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 116,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        },
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 234,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        },
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 49,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 49,
          "block": "/**\n   * Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 117,
          "block": "* Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) => {\n    ..."
        },
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 235,
          "block": "* Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) => {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 257,
          "block": "// Export hooks from their individual files\nexport { useMultiStepDialog } from \"@/shared/hooks/useMu..."
        },
        {
          "file": "src\\core\\hooks\\useDialog.ts",
          "startLine": 258,
          "block": "// Export hooks from their individual files\nexport { useMultiStepDialog } from \"@/shared/hooks/useMu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useTheme.ts",
          "startLine": 68,
          "block": "root.classList.remove(\"light\", \"dark\");\n      root.classList.add(systemTheme);\n      setResolvedThem..."
        },
        {
          "file": "src\\core\\hooks\\useTheme.ts",
          "startLine": 69,
          "block": "root.classList.remove(\"light\", \"dark\");\n      root.classList.add(systemTheme);\n      setResolvedThem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\hooks\\useToast.ts",
          "startLine": 46,
          "block": "/**\n   * Optional action component or configuration\n   */\n  action?: React.ReactNode | { label: stri..."
        },
        {
          "file": "src\\core\\hooks\\useToast.ts",
          "startLine": 47,
          "block": "/**\n   * Optional action component or configuration\n   */\n  action?: React.ReactNode | { label: stri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\providers\\BreadcrumbProvider.tsx",
          "startLine": 10,
          "block": "interface BreadcrumbContextType {\n  breadcrumbs: BreadcrumbSegment[];\n  setBreadcrumbs: (breadcrumbs..."
        },
        {
          "file": "src\\core\\providers\\BreadcrumbProvider.tsx",
          "startLine": 11,
          "block": "interface BreadcrumbContextType {\n  breadcrumbs: BreadcrumbSegment[];\n  setBreadcrumbs: (breadcrumbs..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\providers\\BreadcrumbProvider.tsx",
          "startLine": 31,
          "block": "export const BreadcrumbProvider: React.FC<BreadcrumbProviderProps> = ({\n  children,\n}) => {\n  const ..."
        },
        {
          "file": "src\\core\\providers\\BreadcrumbProvider.tsx",
          "startLine": 32,
          "block": "export const BreadcrumbProvider: React.FC<BreadcrumbProviderProps> = ({\n  children,\n}) => {\n  const ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\providers\\ErrorBoundary.tsx",
          "startLine": 25,
          "block": "static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will s..."
        },
        {
          "file": "src\\core\\providers\\ErrorBoundary.tsx",
          "startLine": 26,
          "block": "static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\providers\\theme-provider.tsx",
          "startLine": 73,
          "block": "const toggleTheme = useCallback(() => {\n    const currentTheme = theme === \"system\" ? getSystemTheme..."
        },
        {
          "file": "src\\core\\providers\\theme-provider.tsx",
          "startLine": 74,
          "block": "const toggleTheme = useCallback(() => {\n    const currentTheme = theme === \"system\" ? getSystemTheme..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\providers\\theme-provider.tsx",
          "startLine": 107,
          "block": "mediaQuery.addEventListener(\"change\", handleChange);\n      return () => mediaQuery.removeEventListen..."
        },
        {
          "file": "src\\core\\providers\\theme-provider.tsx",
          "startLine": 108,
          "block": "mediaQuery.addEventListener(\"change\", handleChange);\n      return () => mediaQuery.removeEventListen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\store\\appStore.ts",
          "startLine": 127,
          "block": "/**\n * Select current toasts\n */\nexport const selectToasts = (state: AppState): Toast[] => state.toa..."
        },
        {
          "file": "src\\core\\store\\appStore.ts",
          "startLine": 128,
          "block": "/**\n * Select current toasts\n */\nexport const selectToasts = (state: AppState): Toast[] => state.toa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\store\\appStore.ts",
          "startLine": 144,
          "block": "/**\n * Select loading state\n */\nexport const selectIsLoading = (state: AppState): boolean => state.i..."
        },
        {
          "file": "src\\core\\store\\appStore.ts",
          "startLine": 145,
          "block": "/**\n * Select loading state\n */\nexport const selectIsLoading = (state: AppState): boolean => state.i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\store\\index.ts",
          "startLine": 7,
          "block": "export * from \"./appStore\";\nexport * from \"./authStore\";\nexport * from \"./storeTypes\";\nexport * from..."
        },
        {
          "file": "src\\core\\store\\index.ts",
          "startLine": 8,
          "block": "export * from \"./appStore\";\nexport * from \"./authStore\";\nexport * from \"./storeTypes\";\nexport * from..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\store\\todoStore.ts",
          "startLine": 78,
          "block": "deleteTodo: (id) =>\r\n        set((state) => ({\r\n          todos: state.todos.filter((todo) => todo.i..."
        },
        {
          "file": "src\\core\\store\\todoStore.ts",
          "startLine": 79,
          "block": "deleteTodo: (id) =>\r\n        set((state) => ({\r\n          todos: state.todos.filter((todo) => todo.i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\store\\todoStore.ts",
          "startLine": 94,
          "block": "clearCompleted: () =>\r\n        set((state) => ({\r\n          todos: state.todos.filter((todo) => !tod..."
        },
        {
          "file": "src\\core\\store\\todoStore.ts",
          "startLine": 95,
          "block": "clearCompleted: () =>\r\n        set((state) => ({\r\n          todos: state.todos.filter((todo) => !tod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 66,
          "block": "id: string;\n  delivery_date: string;\n  provider_id: string;\n  tank_id: string;\n  quantity_liters: nu..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\index.ts",
          "startLine": 14,
          "block": "id: string;\n  delivery_date: string;\n  provider_id: string;\n  tank_id: string;\n  quantity_liters: nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 67,
          "block": "delivery_date: string;\n  provider_id: string;\n  tank_id: string;\n  quantity_liters: number;\n  price_..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\index.ts",
          "startLine": 15,
          "block": "delivery_date: string;\n  provider_id: string;\n  tank_id: string;\n  quantity_liters: number;\n  price_..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 68,
          "block": "provider_id: string;\n  tank_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  tota..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\index.ts",
          "startLine": 16,
          "block": "provider_id: string;\n  tank_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  tota..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 69,
          "block": "tank_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  shift..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\index.ts",
          "startLine": 17,
          "block": "tank_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  shift..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 70,
          "block": "quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  shift_id: string;\n  comm..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\index.ts",
          "startLine": 18,
          "block": "quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  shift_id: string;\n  comm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 109,
          "block": "export interface Sale {\n  id: string;\n  amount: number;\n  quantityLiters: number;\n  unitPrice: numbe..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 4,
          "block": "export interface Sale {\n  id: string;\n  amount: number;\n  quantityLiters: number;\n  unitPrice: numbe..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 26,
          "block": "export interface Sale {\n  id: string;\n  amount: number;\n  quantityLiters: number;\n  unitPrice: numbe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 111,
          "block": "amount: number;\n  quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTyp..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 6,
          "block": "amount: number;\n  quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTyp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 26,
          "block": "amount: number;\n  quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTyp..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 28,
          "block": "amount: number;\n  quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTyp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 112,
          "block": "quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePl..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 7,
          "block": "quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePl..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 29,
          "block": "quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 113,
          "block": "unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerNa..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 8,
          "block": "unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerNa..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 30,
          "block": "unitPrice: number;\n  saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 114,
          "block": "saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymen..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 9,
          "block": "saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymen..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 31,
          "block": "saleDate: Date;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 115,
          "block": "fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMe..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 10,
          "block": "fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMe..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 31,
          "block": "fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMe..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 32,
          "block": "fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMe..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 53,
          "block": "fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 116,
          "block": "vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: Pay..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 11,
          "block": "vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: Pay..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 32,
          "block": "vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: Pay..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 33,
          "block": "vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: Pay..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 54,
          "block": "vehiclePlate?: string;\n  customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: Pay..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 117,
          "block": "customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: str..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 12,
          "block": "customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: str..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 34,
          "block": "customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: str..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 118,
          "block": "paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: string;\n  createdAt: Date;\n ..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 13,
          "block": "paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: string;\n  createdAt: Date;\n ..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 35,
          "block": "paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: string;\n  createdAt: Date;\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 158,
          "block": "period: string;\n  total_sales: number;\n  total_expenses: number;\n  profit: number;\n  created_at: str..."
        },
        {
          "file": "src\\features\\finance\\types\\finance.types.ts",
          "startLine": 33,
          "block": "period: string;\n  total_sales: number;\n  total_expenses: number;\n  profit: number;\n  created_at: str..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 159,
          "block": "total_sales: number;\n  total_expenses: number;\n  profit: number;\n  created_at: string;\n  updated_at:..."
        },
        {
          "file": "src\\features\\finance\\types\\finance.types.ts",
          "startLine": 34,
          "block": "total_sales: number;\n  total_expenses: number;\n  profit: number;\n  created_at: string;\n  updated_at:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 175,
          "block": "export interface FuelTank {\n  id: string;\n  name: string;\n  capacity: number;\n  current_level: numbe..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 3,
          "block": "export interface FuelTank {\n  id: string;\n  name: string;\n  capacity: number;\n  current_level: numbe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\index.ts",
          "startLine": 203,
          "block": "export interface ProfitLoss {\n  id: string;\n  period: string;\n  total_sales: number;\n  total_expense..."
        },
        {
          "file": "src\\features\\finance\\types\\finance.types.ts",
          "startLine": 31,
          "block": "export interface ProfitLoss {\n  id: string;\n  period: string;\n  total_sales: number;\n  total_expense..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\navigation.ts",
          "startLine": 83,
          "block": "export interface NavigationConfig {\n  categories: FeatureCategory[];\n  features: NavigationFeature[]..."
        },
        {
          "file": "src\\core\\types\\navigation.ts",
          "startLine": 84,
          "block": "export interface NavigationConfig {\n  categories: FeatureCategory[];\n  features: NavigationFeature[]..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\core\\types\\navigation.ts",
          "startLine": 232,
          "block": "// Utility Types\nexport type FeatureMap = Record<string, NavigationFeature>;\nexport type CategoryMap..."
        },
        {
          "file": "src\\core\\types\\navigation.ts",
          "startLine": 233,
          "block": "// Utility Types\nexport type FeatureMap = Record<string, NavigationFeature>;\nexport type CategoryMap..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\AuthGuard.tsx",
          "startLine": 19,
          "block": "// If offline, let the user continue to see cached content\n  if (isOffline && !user) {\n    return <N..."
        },
        {
          "file": "src\\features\\auth\\components\\AuthGuard.tsx",
          "startLine": 20,
          "block": "// If offline, let the user continue to see cached content\n  if (isOffline && !user) {\n    return <N..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 6,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { StandardForm } from \"@/core/components/ui/c..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 6,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { StandardForm } from \"@/core/components/ui/c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 7,
          "block": "import { StandardForm } from \"@/core/components/ui/composed/base-form\";\nimport {\n  FormControl,\n  Fo..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 7,
          "block": "import { StandardForm } from \"@/core/components/ui/composed/base-form\";\nimport {\n  FormControl,\n  Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 11,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input ..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 12,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 11,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 5,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 5,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 5,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 6,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 19,
          "block": "export function LoginForm() {\n  const { t } = useTranslation();\n  const { login, isLoading } = useAu..."
        },
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 20,
          "block": "export function LoginForm() {\n  const { t } = useTranslation();\n  const { login, isLoading } = useAu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 59,
          "block": "return true;\n    } catch (error) {\n      setAuthError(formatAuthError(error));\n      return false;\n ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 98,
          "block": "return true;\n    } catch (error) {\n      setAuthError(formatAuthError(error));\n      return false;\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 77,
          "block": ">\n      {({ control }) => (\n        <>\n          {authError && (\n            <Alert variant=\"destruc..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 116,
          "block": ">\n      {({ control }) => (\n        <>\n          {authError && (\n            <Alert variant=\"destruc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 78,
          "block": "{({ control }) => (\n        <>\n          {authError && (\n            <Alert variant=\"destructive\">\n ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 117,
          "block": "{({ control }) => (\n        <>\n          {authError && (\n            <Alert variant=\"destructive\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 79,
          "block": "<>\n          {authError && (\n            <Alert variant=\"destructive\">\n              <ExclamationTri..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 118,
          "block": "<>\n          {authError && (\n            <Alert variant=\"destructive\">\n              <ExclamationTri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 80,
          "block": "{authError && (\n            <Alert variant=\"destructive\">\n              <ExclamationTriangleIcon cla..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 119,
          "block": "{authError && (\n            <Alert variant=\"destructive\">\n              <ExclamationTriangleIcon cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 81,
          "block": "<Alert variant=\"destructive\">\n              <ExclamationTriangleIcon className=\"h-4 w-4\" />\n        ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 120,
          "block": "<Alert variant=\"destructive\">\n              <ExclamationTriangleIcon className=\"h-4 w-4\" />\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 82,
          "block": "<ExclamationTriangleIcon className=\"h-4 w-4\" />\n              <AlertDescription>{authError}</AlertDe..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 121,
          "block": "<ExclamationTriangleIcon className=\"h-4 w-4\" />\n              <AlertDescription>{authError}</AlertDe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 83,
          "block": "<AlertDescription>{authError}</AlertDescription>\n            </Alert>\n          )}\n\n          <FormF..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 122,
          "block": "<AlertDescription>{authError}</AlertDescription>\n            </Alert>\n          )}\n\n          <FormF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 85,
          "block": ")}\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=\"ema..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 124,
          "block": ")}\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=\"ema..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 86,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"email\"\n          ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 125,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"email\"\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 87,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"email\"\n          ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 126,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"email\"\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 93,
          "block": "<FormControl>\n                  <Input type=\"email\" {...field} />\n                </FormControl>\n   ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 132,
          "block": "<FormControl>\n                  <Input type=\"email\" {...field} />\n                </FormControl>\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 94,
          "block": "<Input type=\"email\" {...field} />\n                </FormControl>\n                <FormMessage />\n   ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 133,
          "block": "<Input type=\"email\" {...field} />\n                </FormControl>\n                <FormMessage />\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 100,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"password\"\n       ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 169,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"password\"\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 101,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"password\"\n       ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 170,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"password\"\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 107,
          "block": "<FormControl>\n                  <Input type=\"password\" {...field} />\n                </FormControl>\n..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 176,
          "block": "<FormControl>\n                  <Input type=\"password\" {...field} />\n                </FormControl>\n..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 192,
          "block": "<FormControl>\n                  <Input type=\"password\" {...field} />\n                </FormControl>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\LoginForm.tsx",
          "startLine": 108,
          "block": "<Input type=\"password\" {...field} />\n                </FormControl>\n                <FormMessage />\n..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 177,
          "block": "<Input type=\"password\" {...field} />\n                </FormControl>\n                <FormMessage />\n..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 193,
          "block": "<Input type=\"password\" {...field} />\n                </FormControl>\n                <FormMessage />\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileController.tsx",
          "startLine": 32,
          "block": "| \"secondary\"\n    | \"ghost\"\n    | \"link\"\n    | \"destructive\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"ic..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 15,
          "block": "| \"secondary\"\n    | \"ghost\"\n    | \"link\"\n    | \"destructive\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"ic..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 15,
          "block": "| \"secondary\"\n    | \"ghost\"\n    | \"link\"\n    | \"destructive\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"ic..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileController.tsx",
          "startLine": 33,
          "block": "| \"ghost\"\n    | \"link\"\n    | \"destructive\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  showIcon?: ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 16,
          "block": "| \"ghost\"\n    | \"link\"\n    | \"destructive\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  showIcon?: ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 16,
          "block": "| \"ghost\"\n    | \"link\"\n    | \"destructive\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  showIcon?: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 13,
          "block": "FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/co..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 6,
          "block": "FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/co..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 6,
          "block": "FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/co..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 6,
          "block": "FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 92,
          "block": "// Submit handler\n  const handleSubmit = async (data: ProfileFormValues) => {\n    try {\n      const ..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 93,
          "block": "// Submit handler\n  const handleSubmit = async (data: ProfileFormValues) => {\n    try {\n      const ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 187,
          "block": "/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormIt..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 208,
          "block": "/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormIt..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 243,
          "block": "/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormIt..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 333,
          "block": "/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormIt..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 374,
          "block": "/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormIt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 188,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 209,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 225,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\auth\\components\\ProfileDialogStandardized.tsx",
          "startLine": 244,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 254,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 270,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 286,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 334,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 375,
          "block": "</FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 33,
          "block": "fullName: z\n    .string({ required_error: \"Full name is required\" })\n    .min(2, \"Full name must be ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 7,
          "block": "fullName: z\n    .string({ required_error: \"Full name is required\" })\n    .min(2, \"Full name must be ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 34,
          "block": ".string({ required_error: \"Full name is required\" })\n    .min(2, \"Full name must be at least 2 chara..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 8,
          "block": ".string({ required_error: \"Full name is required\" })\n    .min(2, \"Full name must be at least 2 chara..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 35,
          "block": ".min(2, \"Full name must be at least 2 characters\"),\n  email: z\n    .string({ required_error: \"Email ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 9,
          "block": ".min(2, \"Full name must be at least 2 characters\"),\n  email: z\n    .string({ required_error: \"Email ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 36,
          "block": "email: z\n    .string({ required_error: \"Email is required\" })\n    .email(\"Please enter a valid email..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 10,
          "block": "email: z\n    .string({ required_error: \"Email is required\" })\n    .email(\"Please enter a valid email..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 37,
          "block": ".string({ required_error: \"Email is required\" })\n    .email(\"Please enter a valid email address\"),\n ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 11,
          "block": ".string({ required_error: \"Email is required\" })\n    .email(\"Please enter a valid email address\"),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 38,
          "block": ".email(\"Please enter a valid email address\"),\n  phone: z.string().optional(),\n  position: z.string()..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 12,
          "block": ".email(\"Please enter a valid email address\"),\n  phone: z.string().optional(),\n  position: z.string()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 115,
          "block": ".split(\" \")\n      .map((part) => part[0])\n      .join(\"\")\n      .toUpperCase()\n      .substring(0, 2..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 130,
          "block": ".split(\" \")\n      .map((part) => part[0])\n      .join(\"\")\n      .toUpperCase()\n      .substring(0, 2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 144,
          "block": "</h3>\n              <div className=\"flex gap-2\">\n                <Button\n                  type=\"but..."
        },
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 84,
          "block": "</h3>\n              <div className=\"flex gap-2\">\n                <Button\n                  type=\"but..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\ProfileFormStandardized.tsx",
          "startLine": 145,
          "block": "<div className=\"flex gap-2\">\n                <Button\n                  type=\"button\"\n               ..."
        },
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 85,
          "block": "<div className=\"flex gap-2\">\n                <Button\n                  type=\"button\"\n               ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 19,
          "block": "export function RegisterForm() {\n  const { t } = useTranslation();\n  const { register: registerUser,..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 20,
          "block": "export function RegisterForm() {\n  const { t } = useTranslation();\n  const { register: registerUser,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 136,
          "block": "</FormItem>\n            )}\n          />\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 g..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 189,
          "block": "</FormItem>\n            )}\n          />\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 g..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 189,
          "block": "</FormItem>\n            )}\n          />\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 g..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 137,
          "block": ")}\n          />\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Form..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 190,
          "block": ")}\n          />\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Form..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 190,
          "block": ")}\n          />\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 138,
          "block": "/>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n       ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 191,
          "block": "/>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 191,
          "block": "/>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 147,
          "block": "<FormControl>\n                    <Input {...field} />\n                  </FormControl>\n            ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 161,
          "block": "<FormControl>\n                    <Input {...field} />\n                  </FormControl>\n            ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 142,
          "block": "<FormControl>\n                    <Input {...field} />\n                  </FormControl>\n            ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 156,
          "block": "<FormControl>\n                    <Input {...field} />\n                  </FormControl>\n            ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 150,
          "block": "<FormControl>\n                    <Input {...field} />\n                  </FormControl>\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 142,
          "block": "<FormControl>\n                    <Input {...field} />\n                  </FormControl>\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 156,
          "block": "<FormControl>\n                    <Input {...field} />\n                  </FormControl>\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 148,
          "block": "<Input {...field} />\n                  </FormControl>\n                  <FormMessage />\n            ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 162,
          "block": "<Input {...field} />\n                  </FormControl>\n                  <FormMessage />\n            ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 143,
          "block": "<Input {...field} />\n                  </FormControl>\n                  <FormMessage />\n            ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 157,
          "block": "<Input {...field} />\n                  </FormControl>\n                  <FormMessage />\n            ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 151,
          "block": "<Input {...field} />\n                  </FormControl>\n                  <FormMessage />\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 143,
          "block": "<Input {...field} />\n                  </FormControl>\n                  <FormMessage />\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 157,
          "block": "<Input {...field} />\n                  </FormControl>\n                  <FormMessage />\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 149,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\auth\\components\\RegisterForm.tsx",
          "startLine": 163,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 144,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 158,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 202,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 229,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 245,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 259,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 134,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 152,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 214,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 175,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 222,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 245,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 127,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 286,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 307,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 144,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 158,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 202,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 229,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 245,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 259,
          "block": "</FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 36,
          "block": "isLoading: false,\n        }));\n      } catch (error) {\n        setState((prev) => ({\n          ...pr..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 154,
          "block": "isLoading: false,\n        }));\n      } catch (error) {\n        setState((prev) => ({\n          ...pr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 37,
          "block": "}));\n      } catch (error) {\n        setState((prev) => ({\n          ...prev,\n          error: error..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 155,
          "block": "}));\n      } catch (error) {\n        setState((prev) => ({\n          ...prev,\n          error: error..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 38,
          "block": "} catch (error) {\n        setState((prev) => ({\n          ...prev,\n          error: error as Error,\n..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 81,
          "block": "} catch (error) {\n        setState((prev) => ({\n          ...prev,\n          error: error as Error,\n..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 109,
          "block": "} catch (error) {\n        setState((prev) => ({\n          ...prev,\n          error: error as Error,\n..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 156,
          "block": "} catch (error) {\n        setState((prev) => ({\n          ...prev,\n          error: error as Error,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 39,
          "block": "setState((prev) => ({\n          ...prev,\n          error: error as Error,\n          isLoading: false..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 82,
          "block": "setState((prev) => ({\n          ...prev,\n          error: error as Error,\n          isLoading: false..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 110,
          "block": "setState((prev) => ({\n          ...prev,\n          error: error as Error,\n          isLoading: false..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 157,
          "block": "setState((prev) => ({\n          ...prev,\n          error: error as Error,\n          isLoading: false..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 73,
          "block": "setState((prev) => ({\n          ...prev,\n          user,\n          session,\n          isLoading: fal..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 101,
          "block": "setState((prev) => ({\n          ...prev,\n          user,\n          session,\n          isLoading: fal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 95,
          "block": "try {\n        const { user, session, error } =\n          await authService.register(credentials);\n  ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 96,
          "block": "try {\n        const { user, session, error } =\n          await authService.register(credentials);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 135,
          "block": "} catch (error) {\n      setState((prev) => ({\n        ...prev,\n        error: error as Error,\n      ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 178,
          "block": "} catch (error) {\n      setState((prev) => ({\n        ...prev,\n        error: error as Error,\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 136,
          "block": "setState((prev) => ({\n        ...prev,\n        error: error as Error,\n        isLoading: false,\n    ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useAuth.ts",
          "startLine": 179,
          "block": "setState((prev) => ({\n        ...prev,\n        error: error as Error,\n        isLoading: false,\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 52,
          "block": "const { toast } = useToast();\n\n  // Open/close handlers\n  const openDialog = useCallback(() => {\n   ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 52,
          "block": "const { toast } = useToast();\n\n  // Open/close handlers\n  const openDialog = useCallback(() => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 77,
          "block": "// If login failed for some reason:\n        if (data.email === \"fail@example.com\") {\n          throw..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 78,
          "block": "// If login failed for some reason:\n        if (data.email === \"fail@example.com\") {\n          throw..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 88,
          "block": "toast({\n          title: \"Login successful\",\n          description: \"You have been logged in success..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 89,
          "block": "toast({\n          title: \"Login successful\",\n          description: \"You have been logged in success..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 96,
          "block": "// Redirect if URL is provided\n        if (redirectUrl) {\n          window.location.href = redirectU..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 97,
          "block": "// Redirect if URL is provided\n        if (redirectUrl) {\n          window.location.href = redirectU..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 101,
          "block": "return true;\n      } catch (error: unknown) {\n        const errorMessage = error instanceof Error ? ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 102,
          "block": "return true;\n      } catch (error: unknown) {\n        const errorMessage = error instanceof Error ? ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 120,
          "block": "// Social login handler\n  const handleSocialLogin = useCallback(\n    async (provider: AuthProvider) ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 121,
          "block": "// Social login handler\n  const handleSocialLogin = useCallback(\n    async (provider: AuthProvider) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 154,
          "block": "// Forgot password handler\n  const handleForgotPasswordClick = useCallback(() => {\n    onForgotPassw..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useLoginDialog.ts",
          "startLine": 155,
          "block": "// Forgot password handler\n  const handleForgotPasswordClick = useCallback(() => {\n    onForgotPassw..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 62,
          "block": "// Form submission handler\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 63,
          "block": "// Form submission handler\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 74,
          "block": "toast({\n          title: \"Profile updated\",\n          description: \"Your profile has been updated su..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 75,
          "block": "toast({\n          title: \"Profile updated\",\n          description: \"Your profile has been updated su..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 106,
          "block": "const handleRemoveAvatar = useCallback(() => {\n    setAvatarUrl(\"\");\n    onAvatarChange?.(\"\");\n  }, ..."
        },
        {
          "file": "src\\features\\auth\\hooks\\useProfileDialog.ts",
          "startLine": 107,
          "block": "const handleRemoveAvatar = useCallback(() => {\n    setAvatarUrl(\"\");\n    onAvatarChange?.(\"\");\n  }, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\pages\\AuthPage.tsx",
          "startLine": 15,
          "block": "export const AuthPage: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = use..."
        },
        {
          "file": "src\\features\\auth\\pages\\AuthPage.tsx",
          "startLine": 16,
          "block": "export const AuthPage: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\pages\\AuthPage.tsx",
          "startLine": 20,
          "block": "const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useSta..."
        },
        {
          "file": "src\\features\\auth\\pages\\AuthPage.tsx",
          "startLine": 21,
          "block": "const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useSta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\schemas.ts",
          "startLine": 7,
          "block": "export const loginSchema = z.object({\n  email: emailSchema,\n  password: passwordSchema,\n  rememberMe..."
        },
        {
          "file": "src\\shared\\schemas\\common.ts",
          "startLine": 125,
          "block": "export const loginSchema = z.object({\n  email: emailSchema,\n  password: passwordSchema,\n  rememberMe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\schemas.ts",
          "startLine": 8,
          "block": "export const loginSchema = z.object({\n  email: emailSchema,\n  password: passwordSchema,\n  rememberMe..."
        },
        {
          "file": "src\\shared\\schemas\\common.ts",
          "startLine": 126,
          "block": "export const loginSchema = z.object({\n  email: emailSchema,\n  password: passwordSchema,\n  rememberMe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\schemas.ts",
          "startLine": 16,
          "block": "password: passwordSchema,\n  confirmPassword: matchField(\n    passwordSchema,\n    \"password\",\n    \"Pa..."
        },
        {
          "file": "src\\features\\auth\\schemas.ts",
          "startLine": 32,
          "block": "password: passwordSchema,\n  confirmPassword: matchField(\n    passwordSchema,\n    \"password\",\n    \"Pa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\schemas.ts",
          "startLine": 20,
          "block": "\"Passwords must match\"\n  ),\n  terms: z\n    .boolean()\n    .refine((val) => val, \"You must agree to t..."
        },
        {
          "file": "src\\shared\\schemas\\common.ts",
          "startLine": 136,
          "block": "\"Passwords must match\"\n  ),\n  terms: z\n    .boolean()\n    .refine((val) => val, \"You must agree to t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\schemas.ts",
          "startLine": 21,
          "block": "),\n  terms: z\n    .boolean()\n    .refine((val) => val, \"You must agree to the terms and conditions\")..."
        },
        {
          "file": "src\\shared\\schemas\\common.ts",
          "startLine": 137,
          "block": "),\n  terms: z\n    .boolean()\n    .refine((val) => val, \"You must agree to the terms and conditions\")..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 22,
          "block": "if (error) {\n        return {\n          user: null,\n          session: null,\n          error: new Er..."
        },
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 56,
          "block": "if (error) {\n        return {\n          user: null,\n          session: null,\n          error: new Er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 23,
          "block": "return {\n          user: null,\n          session: null,\n          error: new Error(error.message),\n ..."
        },
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 57,
          "block": "return {\n          user: null,\n          session: null,\n          error: new Error(error.message),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 35,
          "block": "} catch (error) {\n      return {\n        user: null,\n        session: null,\n        error: error as ..."
        },
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 69,
          "block": "} catch (error) {\n      return {\n        user: null,\n        session: null,\n        error: error as ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 79,
          "block": "try {\n      const { error } = await supabase.auth.signOut();\n\n      if (error) {\n        return { er..."
        },
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 107,
          "block": "try {\n      const { error } = await supabase.auth.signOut();\n\n      if (error) {\n        return { er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 80,
          "block": "const { error } = await supabase.auth.signOut();\n\n      if (error) {\n        return { error: new Err..."
        },
        {
          "file": "src\\features\\auth\\services\\authService.ts",
          "startLine": 108,
          "block": "const { error } = await supabase.auth.signOut();\n\n      if (error) {\n        return { error: new Err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\ColorShowcase.tsx",
          "startLine": 276,
          "block": "</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"group hover:scal..."
        },
        {
          "file": "src\\features\\dashboard\\components\\ColorShowcase.tsx",
          "startLine": 294,
          "block": "</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"group hover:scal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 20,
          "block": "export function DashboardMetrics() {\n  const { t } = useTranslation();\n  const { user } = useAuth();..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 21,
          "block": "export function DashboardMetrics() {\n  const { t } = useTranslation();\n  const { user } = useAuth();..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 27,
          "block": "data: dashboardData,\n    isLoading,\n    error,\n  } = useQuery<DashboardData>({\n    queryKey: [\"dashb..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 13,
          "block": "data: dashboardData,\n    isLoading,\n    error,\n  } = useQuery<DashboardData>({\n    queryKey: [\"dashb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 28,
          "block": "isLoading,\n    error,\n  } = useQuery<DashboardData>({\n    queryKey: [\"dashboard\", user?.id],\n    que..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 14,
          "block": "isLoading,\n    error,\n  } = useQuery<DashboardData>({\n    queryKey: [\"dashboard\", user?.id],\n    que..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 29,
          "block": "error,\n  } = useQuery<DashboardData>({\n    queryKey: [\"dashboard\", user?.id],\n    queryFn: fetchDash..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 15,
          "block": "error,\n  } = useQuery<DashboardData>({\n    queryKey: [\"dashboard\", user?.id],\n    queryFn: fetchDash..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 30,
          "block": "} = useQuery<DashboardData>({\n    queryKey: [\"dashboard\", user?.id],\n    queryFn: fetchDashboardData..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 16,
          "block": "} = useQuery<DashboardData>({\n    queryKey: [\"dashboard\", user?.id],\n    queryFn: fetchDashboardData..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 31,
          "block": "queryKey: [\"dashboard\", user?.id],\n    queryFn: fetchDashboardData,\n    enabled: !!user,\n    retry: ..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 17,
          "block": "queryKey: [\"dashboard\", user?.id],\n    queryFn: fetchDashboardData,\n    enabled: !!user,\n    retry: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 37,
          "block": "useEffect(() => {\n    if (error) {\n      toast({\n        title: \"Error loading dashboard data\",\n    ..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 23,
          "block": "useEffect(() => {\n    if (error) {\n      toast({\n        title: \"Error loading dashboard data\",\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 38,
          "block": "if (error) {\n      toast({\n        title: \"Error loading dashboard data\",\n        description: error..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 24,
          "block": "if (error) {\n      toast({\n        title: \"Error loading dashboard data\",\n        description: error..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 39,
          "block": "toast({\n        title: \"Error loading dashboard data\",\n        description: error.message,\n        v..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 25,
          "block": "toast({\n        title: \"Error loading dashboard data\",\n        description: error.message,\n        v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardMetrics.tsx",
          "startLine": 40,
          "block": "title: \"Error loading dashboard data\",\n        description: error.message,\n        variant: \"destruc..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardNew.tsx",
          "startLine": 26,
          "block": "title: \"Error loading dashboard data\",\n        description: error.message,\n        variant: \"destruc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 66,
          "block": "</CardTitle>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 96,
          "block": "</CardTitle>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 127,
          "block": "</CardTitle>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 158,
          "block": "</CardTitle>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 67,
          "block": "<svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 97,
          "block": "<svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 128,
          "block": "<svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 159,
          "block": "<svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 68,
          "block": "xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n     ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 98,
          "block": "xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n     ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 129,
          "block": "xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n     ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 160,
          "block": "xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 69,
          "block": "viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stro..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 99,
          "block": "viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stro..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 130,
          "block": "viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stro..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 161,
          "block": "viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 70,
          "block": "fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              st..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 100,
          "block": "fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              st..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 131,
          "block": "fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              st..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 162,
          "block": "fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 71,
          "block": "stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n     ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 101,
          "block": "stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n     ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 132,
          "block": "stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n     ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 163,
          "block": "stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 72,
          "block": "strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n           ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 102,
          "block": "strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n           ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 133,
          "block": "strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n           ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 164,
          "block": "strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 89,
          "block": "</CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 120,
          "block": "</CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 151,
          "block": "</CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-..."
        },
        {
          "file": "src\\features\\finance\\pages\\PaymentMethodsPage.tsx",
          "startLine": 37,
          "block": "</CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-..."
        },
        {
          "file": "src\\features\\finance\\pages\\PaymentMethodsPage.tsx",
          "startLine": 54,
          "block": "</CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 90,
          "block": "</Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 121,
          "block": "</Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\DashboardOverviewStandardized.tsx",
          "startLine": 152,
          "block": "</Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 32,
          "block": "endDate?: string;\n}\n\n// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", la..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 32,
          "block": "endDate?: string;\n}\n\n// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", la..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 33,
          "block": "}\n\n// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", label }: { value: nu..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 33,
          "block": "}\n\n// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", label }: { value: nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 34,
          "block": "// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", label }: { value: numbe..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 34,
          "block": "// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", label }: { value: numbe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 35,
          "block": "// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", label }: { value: numbe..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 35,
          "block": "// Progress Bar Component\nconst ProgressBar = ({ value, max, color = \"blue\", label }: { value: numbe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 36,
          "block": "const ProgressBar = ({ value, max, color = \"blue\", label }: { value: number; max: number; color?: \"b..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 36,
          "block": "const ProgressBar = ({ value, max, color = \"blue\", label }: { value: number; max: number; color?: \"b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 37,
          "block": "const percentage = Math.min((value / max) * 100, 100);\n  const colorClasses = {\n    blue: \"bg-blue-5..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 37,
          "block": "const percentage = Math.min((value / max) * 100, 100);\n  const colorClasses = {\n    blue: \"bg-blue-5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 38,
          "block": "const colorClasses = {\n    blue: \"bg-blue-500\",\n    orange: \"bg-orange-500\", \n    green: \"bg-emerald..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 38,
          "block": "const colorClasses = {\n    blue: \"bg-blue-500\",\n    orange: \"bg-orange-500\", \n    green: \"bg-emerald..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 39,
          "block": "blue: \"bg-blue-500\",\n    orange: \"bg-orange-500\", \n    green: \"bg-emerald-500\",\n    red: \"bg-red-500..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 39,
          "block": "blue: \"bg-blue-500\",\n    orange: \"bg-orange-500\", \n    green: \"bg-emerald-500\",\n    red: \"bg-red-500..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 44,
          "block": "return (\n    <div className=\"space-y-2\">\n      {label && (\n        <div className=\"flex justify-betw..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 44,
          "block": "return (\n    <div className=\"space-y-2\">\n      {label && (\n        <div className=\"flex justify-betw..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 44,
          "block": "return (\n    <div className=\"space-y-2\">\n      {label && (\n        <div className=\"flex justify-betw..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 45,
          "block": "return (\n    <div className=\"space-y-2\">\n      {label && (\n        <div className=\"flex justify-betw..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 45,
          "block": "return (\n    <div className=\"space-y-2\">\n      {label && (\n        <div className=\"flex justify-betw..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 46,
          "block": "<div className=\"space-y-2\">\n      {label && (\n        <div className=\"flex justify-between text-sm\">..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 46,
          "block": "<div className=\"space-y-2\">\n      {label && (\n        <div className=\"flex justify-between text-sm\">..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 47,
          "block": "{label && (\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-g..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 47,
          "block": "{label && (\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-g..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 48,
          "block": "<div className=\"flex justify-between text-sm\">\n          <span className=\"text-gray-300\">{label}</sp..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 48,
          "block": "<div className=\"flex justify-between text-sm\">\n          <span className=\"text-gray-300\">{label}</sp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 49,
          "block": "<span className=\"text-gray-300\">{label}</span>\n          <span className=\"text-gray-100 font-medium\"..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 49,
          "block": "<span className=\"text-gray-300\">{label}</span>\n          <span className=\"text-gray-100 font-medium\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 50,
          "block": "<span className=\"text-gray-100 font-medium\">{Math.round(percentage)}%</span>\n        </div>\n      )}..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 50,
          "block": "<span className=\"text-gray-100 font-medium\">{Math.round(percentage)}%</span>\n        </div>\n      )}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 51,
          "block": "</div>\n      )}\n      <div className=\"w-full bg-gray-700 rounded-full h-2\">\n        <div\n          c..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 51,
          "block": "</div>\n      )}\n      <div className=\"w-full bg-gray-700 rounded-full h-2\">\n        <div\n          c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 52,
          "block": ")}\n      <div className=\"w-full bg-gray-700 rounded-full h-2\">\n        <div\n          className={`h-..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 52,
          "block": ")}\n      <div className=\"w-full bg-gray-700 rounded-full h-2\">\n        <div\n          className={`h-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 53,
          "block": "<div className=\"w-full bg-gray-700 rounded-full h-2\">\n        <div\n          className={`h-2 rounded..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 53,
          "block": "<div className=\"w-full bg-gray-700 rounded-full h-2\">\n        <div\n          className={`h-2 rounded..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 54,
          "block": "<div\n          className={`h-2 rounded-full transition-all duration-300 ${colorClasses[color]}`}\n   ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 54,
          "block": "<div\n          className={`h-2 rounded-full transition-all duration-300 ${colorClasses[color]}`}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 55,
          "block": "className={`h-2 rounded-full transition-all duration-300 ${colorClasses[color]}`}\n          style={{..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 55,
          "block": "className={`h-2 rounded-full transition-all duration-300 ${colorClasses[color]}`}\n          style={{..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 72,
          "block": "}: {\n  title: string;\n  value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPosit..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 72,
          "block": "}: {\n  title: string;\n  value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPosit..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 72,
          "block": "}: {\n  title: string;\n  value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPosit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 73,
          "block": "title: string;\n  value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPositive: bo..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 73,
          "block": "title: string;\n  value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPositive: bo..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 73,
          "block": "title: string;\n  value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPositive: bo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 74,
          "block": "value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPositive: boolean };\n  icon?:..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 74,
          "block": "value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPositive: boolean };\n  icon?:..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 74,
          "block": "value?: string | number;\n  unit?: string;\n  trend?: { value: string; isPositive: boolean };\n  icon?:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 75,
          "block": "unit?: string;\n  trend?: { value: string; isPositive: boolean };\n  icon?: React.ReactNode;\n  childre..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 75,
          "block": "unit?: string;\n  trend?: { value: string; isPositive: boolean };\n  icon?: React.ReactNode;\n  childre..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 75,
          "block": "unit?: string;\n  trend?: { value: string; isPositive: boolean };\n  icon?: React.ReactNode;\n  childre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 76,
          "block": "trend?: { value: string; isPositive: boolean };\n  icon?: React.ReactNode;\n  children?: React.ReactNo..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 76,
          "block": "trend?: { value: string; isPositive: boolean };\n  icon?: React.ReactNode;\n  children?: React.ReactNo..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 76,
          "block": "trend?: { value: string; isPositive: boolean };\n  icon?: React.ReactNode;\n  children?: React.ReactNo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 77,
          "block": "icon?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n}) => (\n  <div className..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 77,
          "block": "icon?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n}) => (\n  <div className..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 78,
          "block": "children?: React.ReactNode;\n  className?: string;\n}) => (\n  <div className={`bg-gray-800/50 backdrop..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 78,
          "block": "children?: React.ReactNode;\n  className?: string;\n}) => (\n  <div className={`bg-gray-800/50 backdrop..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 79,
          "block": "className?: string;\n}) => (\n  <div className={`bg-gray-800/50 backdrop-blur border border-gray-700/5..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 79,
          "block": "className?: string;\n}) => (\n  <div className={`bg-gray-800/50 backdrop-blur border border-gray-700/5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 80,
          "block": "}) => (\n  <div className={`bg-gray-800/50 backdrop-blur border border-gray-700/50 rounded-xl p-6 hov..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 80,
          "block": "}) => (\n  <div className={`bg-gray-800/50 backdrop-blur border border-gray-700/50 rounded-xl p-6 hov..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 81,
          "block": "<div className={`bg-gray-800/50 backdrop-blur border border-gray-700/50 rounded-xl p-6 hover:bg-gray..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 81,
          "block": "<div className={`bg-gray-800/50 backdrop-blur border border-gray-700/50 rounded-xl p-6 hover:bg-gray..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 82,
          "block": "<div className=\"flex items-center justify-between mb-4\">\n      <h3 className=\"text-gray-400 text-sm ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 82,
          "block": "<div className=\"flex items-center justify-between mb-4\">\n      <h3 className=\"text-gray-400 text-sm ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 83,
          "block": "<h3 className=\"text-gray-400 text-sm font-medium uppercase tracking-wide\">{title}</h3>\n      {icon &..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 83,
          "block": "<h3 className=\"text-gray-400 text-sm font-medium uppercase tracking-wide\">{title}</h3>\n      {icon &..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 84,
          "block": "{icon && <div className=\"text-gray-400\">{icon}</div>}\n    </div>\n    \n    {value && (\n      <div cla..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 84,
          "block": "{icon && <div className=\"text-gray-400\">{icon}</div>}\n    </div>\n    \n    {value && (\n      <div cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 85,
          "block": "</div>\n    \n    {value && (\n      <div className=\"flex items-baseline gap-2 mb-3\">\n        <span cla..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 85,
          "block": "</div>\n    \n    {value && (\n      <div className=\"flex items-baseline gap-2 mb-3\">\n        <span cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 86,
          "block": "{value && (\n      <div className=\"flex items-baseline gap-2 mb-3\">\n        <span className=\"text-3xl..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 86,
          "block": "{value && (\n      <div className=\"flex items-baseline gap-2 mb-3\">\n        <span className=\"text-3xl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 87,
          "block": "{value && (\n      <div className=\"flex items-baseline gap-2 mb-3\">\n        <span className=\"text-3xl..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 87,
          "block": "{value && (\n      <div className=\"flex items-baseline gap-2 mb-3\">\n        <span className=\"text-3xl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 88,
          "block": "<div className=\"flex items-baseline gap-2 mb-3\">\n        <span className=\"text-3xl font-bold text-wh..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 88,
          "block": "<div className=\"flex items-baseline gap-2 mb-3\">\n        <span className=\"text-3xl font-bold text-wh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 89,
          "block": "<span className=\"text-3xl font-bold text-white\">{value}</span>\n        {unit && <span className=\"tex..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 89,
          "block": "<span className=\"text-3xl font-bold text-white\">{value}</span>\n        {unit && <span className=\"tex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 90,
          "block": "{unit && <span className=\"text-lg text-gray-400\">{unit}</span>}\n      </div>\n    )}\n    \n    {trend ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 90,
          "block": "{unit && <span className=\"text-lg text-gray-400\">{unit}</span>}\n      </div>\n    )}\n    \n    {trend ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 91,
          "block": "</div>\n    )}\n    \n    {trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.is..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 91,
          "block": "</div>\n    )}\n    \n    {trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 92,
          "block": ")}\n    \n    {trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.isPositive ? ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 92,
          "block": ")}\n    \n    {trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.isPositive ? ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 93,
          "block": "{trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.isPositive ? 'text-emeral..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 93,
          "block": "{trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.isPositive ? 'text-emeral..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 94,
          "block": "{trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.isPositive ? 'text-emeral..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 94,
          "block": "{trend && (\n      <div className={`flex items-center gap-2 text-sm ${trend.isPositive ? 'text-emeral..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 95,
          "block": "<div className={`flex items-center gap-2 text-sm ${trend.isPositive ? 'text-emerald-400' : 'text-red..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 95,
          "block": "<div className={`flex items-center gap-2 text-sm ${trend.isPositive ? 'text-emerald-400' : 'text-red..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 96,
          "block": "{trend.isPositive ? <TrendingUp className=\"h-4 w-4\" /> : <TrendingDown className=\"h-4 w-4\" />}\n     ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 96,
          "block": "{trend.isPositive ? <TrendingUp className=\"h-4 w-4\" /> : <TrendingDown className=\"h-4 w-4\" />}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 148,
          "block": "];\n\n  if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 148,
          "block": "];\n\n  if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 149,
          "block": "if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...pr..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 142,
          "block": "if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...pr..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 149,
          "block": "if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...pr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 150,
          "block": "if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...pr..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 143,
          "block": "if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...pr..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 150,
          "block": "if (isLoading) {\n    return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...pr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 151,
          "block": "return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...props}>\n        <div cl..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 151,
          "block": "return (\n      <div className={cn(\"animate-pulse space-y-4\", className)} {...props}>\n        <div cl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 152,
          "block": "<div className={cn(\"animate-pulse space-y-4\", className)} {...props}>\n        <div className=\"grid g..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 152,
          "block": "<div className={cn(\"animate-pulse space-y-4\", className)} {...props}>\n        <div className=\"grid g..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 153,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {[...Array(4)].map(..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 153,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {[...Array(4)].map(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 154,
          "block": "{[...Array(4)].map((_, i) => (\n            <div key={i} className=\"h-32 bg-gray-800/30 rounded-xl\"><..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 154,
          "block": "{[...Array(4)].map((_, i) => (\n            <div key={i} className=\"h-32 bg-gray-800/30 rounded-xl\"><..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FinanceDashboard.tsx",
          "startLine": 155,
          "block": "<div key={i} className=\"h-32 bg-gray-800/30 rounded-xl\"></div>\n          ))}\n        </div>\n      </..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesDashboard.tsx",
          "startLine": 155,
          "block": "<div key={i} className=\"h-32 bg-gray-800/30 rounded-xl\"></div>\n          ))}\n        </div>\n      </..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FuelLevelVisualizationStandardized.tsx",
          "startLine": 4,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 4,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesSummaryWidgetStandardized.tsx",
          "startLine": 4,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 4,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FuelLevelVisualizationStandardized.tsx",
          "startLine": 5,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation } from \"react-i..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 5,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation } from \"react-i..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesSummaryWidgetStandardized.tsx",
          "startLine": 5,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation } from \"react-i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 154,
          "block": "return (\n    <div className={cn(\"fuel-management-dashboard space-y-6 relative\", className)} {...prop..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 155,
          "block": "return (\n    <div className={cn(\"fuel-management-dashboard space-y-6 relative\", className)} {...prop..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 212,
          "block": "<div className=\"group relative bg-card border border-border rounded-xl p-6 \n            hover:bg-gra..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 270,
          "block": "<div className=\"group relative bg-card border border-border rounded-xl p-6 \n            hover:bg-gra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 213,
          "block": "hover:bg-gradient-natural-light hover:border-accent/20 \n            transition-all duration-300 back..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 271,
          "block": "hover:bg-gradient-natural-light hover:border-accent/20 \n            transition-all duration-300 back..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 214,
          "block": "transition-all duration-300 backdrop-blur-sm\">\n            {/* Gradient accent overlay */}\n         ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboard.tsx",
          "startLine": 272,
          "block": "transition-all duration-300 backdrop-blur-sm\">\n            {/* Gradient accent overlay */}\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboardPro.tsx",
          "startLine": 550,
          "block": "showPercentage={true}\n                    />\n                  </div>\n                ))}\n          ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\FuelManagementDashboardPro.tsx",
          "startLine": 581,
          "block": "showPercentage={true}\n                    />\n                  </div>\n                ))}\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 186,
          "block": "// Merge sales and expenses data\n    return months.map(({ month, monthLabel }, index) => {\n      con..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 187,
          "block": "// Merge sales and expenses data\n    return months.map(({ month, monthLabel }, index) => {\n      con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 248,
          "block": "// Handle mouse/touch interaction\n  const handleMouseEnter = (data: ChartEventData, index: number) =..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 249,
          "block": "// Handle mouse/touch interaction\n  const handleMouseEnter = (data: ChartEventData, index: number) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 441,
          "block": "x1=\"0\"\n                          y1=\"0\"\n                          x2=\"0\"\n                          y..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 459,
          "block": "x1=\"0\"\n                          y1=\"0\"\n                          x2=\"0\"\n                          y..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 477,
          "block": "x1=\"0\"\n                          y1=\"0\"\n                          x2=\"0\"\n                          y..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 495,
          "block": "x1=\"0\"\n                          y1=\"0\"\n                          x2=\"0\"\n                          y..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 442,
          "block": "y1=\"0\"\n                          x2=\"0\"\n                          y2=\"1\"\n                        >\n ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 460,
          "block": "y1=\"0\"\n                          x2=\"0\"\n                          y2=\"1\"\n                        >\n ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 478,
          "block": "y1=\"0\"\n                          x2=\"0\"\n                          y2=\"1\"\n                        >\n ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 496,
          "block": "y1=\"0\"\n                          x2=\"0\"\n                          y2=\"1\"\n                        >\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 443,
          "block": "x2=\"0\"\n                          y2=\"1\"\n                        >\n                          <stop\n  ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 461,
          "block": "x2=\"0\"\n                          y2=\"1\"\n                        >\n                          <stop\n  ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 479,
          "block": "x2=\"0\"\n                          y2=\"1\"\n                        >\n                          <stop\n  ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 497,
          "block": "x2=\"0\"\n                          y2=\"1\"\n                        >\n                          <stop\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 564,
          "block": "radius={[4, 4, 0, 0]}\n                        maxBarSize={60}\n                        isAnimationAct..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 585,
          "block": "radius={[4, 4, 0, 0]}\n                        maxBarSize={60}\n                        isAnimationAct..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 604,
          "block": "radius={[4, 4, 0, 0]}\n                        maxBarSize={60}\n                        isAnimationAct..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 565,
          "block": "maxBarSize={60}\n                        isAnimationActive={true}\n                      >\n           ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 586,
          "block": "maxBarSize={60}\n                        isAnimationActive={true}\n                      >\n           ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 605,
          "block": "maxBarSize={60}\n                        isAnimationActive={true}\n                      >\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 596,
          "block": "}\n                            strokeWidth={activeIndex === index ? 2 : 0}\n                          ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 619,
          "block": "}\n                            strokeWidth={activeIndex === index ? 2 : 0}\n                          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 685,
          "block": "</div>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p className=\"..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 704,
          "block": "</div>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p className=\"..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 723,
          "block": "</div>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 692,
          "block": ")}\n                </p>\n              </TooltipContent>\n            </TooltipUI>\n          </Tooltip..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 711,
          "block": ")}\n                </p>\n              </TooltipContent>\n            </TooltipUI>\n          </Tooltip..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 730,
          "block": ")}\n                </p>\n              </TooltipContent>\n            </TooltipUI>\n          </Tooltip..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 696,
          "block": "</TooltipProvider>\n\n          <TooltipProvider>\n            <TooltipUI>\n              <TooltipTrigge..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 715,
          "block": "</TooltipProvider>\n\n          <TooltipProvider>\n            <TooltipUI>\n              <TooltipTrigge..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 697,
          "block": "<TooltipProvider>\n            <TooltipUI>\n              <TooltipTrigger asChild>\n                <di..."
        },
        {
          "file": "src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
          "startLine": 716,
          "block": "<TooltipProvider>\n            <TooltipUI>\n              <TooltipTrigger asChild>\n                <di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 6,
          "block": "CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation } from \"react-i18next\";\nimpor..."
        },
        {
          "file": "src\\features\\dashboard\\components\\SalesSummaryWidgetStandardized.tsx",
          "startLine": 6,
          "block": "CardTitle,\n} from \"@/core/components/ui/card\";\nimport { useTranslation } from \"react-i18next\";\nimpor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 18,
          "block": "export function MetricsCardsStandardized() {\n  const { t } = useTranslation();\n  const { data: dashb..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 19,
          "block": "export function MetricsCardsStandardized() {\n  const { t } = useTranslation();\n  const { data: dashb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 27,
          "block": "// Helper function to render change value\n  const renderChangeValue = (value: number) => {\n    const..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 28,
          "block": "// Helper function to render change value\n  const renderChangeValue = (value: number) => {\n    const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 43,
          "block": "return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <Card>\n        <CardHe..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 30,
          "block": "return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <Card>\n        <CardHe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 44,
          "block": "return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <Card>\n        <CardHe..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 31,
          "block": "return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <Card>\n        <CardHe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 59,
          "block": "<span className=\"ml-1\">{t(\"dashboard.fromPreviousPeriod\")}</span>\n          </div>\n        </CardCon..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 77,
          "block": "<span className=\"ml-1\">{t(\"dashboard.fromPreviousPeriod\")}</span>\n          </div>\n        </CardCon..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 95,
          "block": "<span className=\"ml-1\">{t(\"dashboard.fromPreviousPeriod\")}</span>\n          </div>\n        </CardCon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 61,
          "block": "</CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 79,
          "block": "</CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 97,
          "block": "</CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 43,
          "block": "</CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 56,
          "block": "</CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 69,
          "block": "</CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 62,
          "block": "</Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between spac..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 80,
          "block": "</Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between spac..."
        },
        {
          "file": "src\\features\\dashboard\\components\\MetricsCardsStandardized.tsx",
          "startLine": 98,
          "block": "</Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between spac..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 44,
          "block": "</Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between spac..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 57,
          "block": "</Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between spac..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 70,
          "block": "</Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between spac..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\ProfitLossChart.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Card,\r\n  Ca..."
        },
        {
          "file": "src\\features\\dashboard\\components\\RevenueExpensesChart.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Card,\r\n  Ca..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\components\\ProfitLossChart.tsx",
          "startLine": 47,
          "block": "<CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"period\" />\r\n            <YAxis ..."
        },
        {
          "file": "src\\features\\dashboard\\components\\RevenueExpensesChart.tsx",
          "startLine": 47,
          "block": "<CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"period\" />\r\n            <YAxis ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\useDashboard.ts",
          "startLine": 78,
          "block": "// Fuel levels\n    fuelLevels: fuelLevels.data || {},\n    isLoadingFuelLevels: fuelLevels.isLoading,..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\useDashboard.ts",
          "startLine": 79,
          "block": "// Fuel levels\n    fuelLevels: fuelLevels.data || {},\n    isLoadingFuelLevels: fuelLevels.isLoading,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\useDashboard.ts",
          "startLine": 83,
          "block": "// Sales summary\n    salesSummary: dailySalesSummary.data,\n    isLoadingSalesSummary: dailySalesSumm..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\useDashboard.ts",
          "startLine": 84,
          "block": "// Sales summary\n    salesSummary: dailySalesSummary.data,\n    isLoadingSalesSummary: dailySalesSumm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 34,
          "block": "const mockDashboardData = {\n        summary: {\n          totalSales: 125000,\n          totalExpenses..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 226,
          "block": "const mockDashboardData = {\n        summary: {\n          totalSales: 125000,\n          totalExpenses..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 35,
          "block": "summary: {\n          totalSales: 125000,\n          totalExpenses: 75000,\n          profit: 50000,\n  ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 227,
          "block": "summary: {\n          totalSales: 125000,\n          totalExpenses: 75000,\n          profit: 50000,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 36,
          "block": "totalSales: 125000,\n          totalExpenses: 75000,\n          profit: 50000,\n          salesChange: ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 228,
          "block": "totalSales: 125000,\n          totalExpenses: 75000,\n          profit: 50000,\n          salesChange: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 37,
          "block": "totalExpenses: 75000,\n          profit: 50000,\n          salesChange: 15,\n        },\n        fuelLev..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 229,
          "block": "totalExpenses: 75000,\n          profit: 50000,\n          salesChange: 15,\n        },\n        fuelLev..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 41,
          "block": "fuelLevels: [\n          {\n            tankId: \"1\",\n            tankName: \"Tank 1\",\n            fuelT..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 233,
          "block": "fuelLevels: [\n          {\n            tankId: \"1\",\n            tankName: \"Tank 1\",\n            fuelT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 42,
          "block": "{\n            tankId: \"1\",\n            tankName: \"Tank 1\",\n            fuelType: \"Diesel\",\n         ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 234,
          "block": "{\n            tankId: \"1\",\n            tankName: \"Tank 1\",\n            fuelType: \"Diesel\",\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 43,
          "block": "tankId: \"1\",\n            tankName: \"Tank 1\",\n            fuelType: \"Diesel\",\n            currentLeve..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 235,
          "block": "tankId: \"1\",\n            tankName: \"Tank 1\",\n            fuelType: \"Diesel\",\n            currentLeve..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 44,
          "block": "tankName: \"Tank 1\",\n            fuelType: \"Diesel\",\n            currentLevel: 75,\n            capaci..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 236,
          "block": "tankName: \"Tank 1\",\n            fuelType: \"Diesel\",\n            currentLevel: 75,\n            capaci..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 45,
          "block": "fuelType: \"Diesel\",\n            currentLevel: 75,\n            capacity: 100,\n            percentFull..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 237,
          "block": "fuelType: \"Diesel\",\n            currentLevel: 75,\n            capacity: 100,\n            percentFull..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 49,
          "block": "},\n          {\n            tankId: \"2\",\n            tankName: \"Tank 2\",\n            fuelType: \"Petro..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 241,
          "block": "},\n          {\n            tankId: \"2\",\n            tankName: \"Tank 2\",\n            fuelType: \"Petro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 50,
          "block": "{\n            tankId: \"2\",\n            tankName: \"Tank 2\",\n            fuelType: \"Petrol\",\n         ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 242,
          "block": "{\n            tankId: \"2\",\n            tankName: \"Tank 2\",\n            fuelType: \"Petrol\",\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 51,
          "block": "tankId: \"2\",\n            tankName: \"Tank 2\",\n            fuelType: \"Petrol\",\n            currentLeve..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 243,
          "block": "tankId: \"2\",\n            tankName: \"Tank 2\",\n            fuelType: \"Petrol\",\n            currentLeve..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 52,
          "block": "tankName: \"Tank 2\",\n            fuelType: \"Petrol\",\n            currentLevel: 45,\n            capaci..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 244,
          "block": "tankName: \"Tank 2\",\n            fuelType: \"Petrol\",\n            currentLevel: 45,\n            capaci..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 53,
          "block": "fuelType: \"Petrol\",\n            currentLevel: 45,\n            capacity: 100,\n            percentFull..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 245,
          "block": "fuelType: \"Petrol\",\n            currentLevel: 45,\n            capacity: 100,\n            percentFull..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 56,
          "block": "percentFull: 45,\n          },\n        ],\n        recentTransactions: [\n          { id: \"1\", amount: ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 248,
          "block": "percentFull: 45,\n          },\n        ],\n        recentTransactions: [\n          { id: \"1\", amount: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 57,
          "block": "},\n        ],\n        recentTransactions: [\n          { id: \"1\", amount: 1200, date: \"2023-01-01\", t..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 249,
          "block": "},\n        ],\n        recentTransactions: [\n          { id: \"1\", amount: 1200, date: \"2023-01-01\", t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 58,
          "block": "],\n        recentTransactions: [\n          { id: \"1\", amount: 1200, date: \"2023-01-01\", type: \"sale\"..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 250,
          "block": "],\n        recentTransactions: [\n          { id: \"1\", amount: 1200, date: \"2023-01-01\", type: \"sale\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 59,
          "block": "recentTransactions: [\n          { id: \"1\", amount: 1200, date: \"2023-01-01\", type: \"sale\" },\n       ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 251,
          "block": "recentTransactions: [\n          { id: \"1\", amount: 1200, date: \"2023-01-01\", type: \"sale\" },\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 60,
          "block": "{ id: \"1\", amount: 1200, date: \"2023-01-01\", type: \"sale\" },\n          { id: \"2\", amount: 800, date:..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 252,
          "block": "{ id: \"1\", amount: 1200, date: \"2023-01-01\", type: \"sale\" },\n          { id: \"2\", amount: 800, date:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 62,
          "block": "],\n      };\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 145,
          "block": "],\n      };\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 173,
          "block": "],\n      };\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 206,
          "block": "],\n      };\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 141,
          "block": "],\n      };\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 70,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 121,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 322,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 75,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 77,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 120,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 174,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 198,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 383,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 71,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 122,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 323,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 76,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 78,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 121,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 175,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 199,
          "block": "expect(result.current.isLoading).toBe(true);\n\n      await waitFor(() => {\n        expect(result.curr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 80,
          "block": "it(\"should handle dashboard data fetch error\", async () => {\n      // Use shared error test utility\n..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 81,
          "block": "it(\"should handle dashboard data fetch error\", async () => {\n      // Use shared error test utility\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 87,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n        expect(result.cu..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 126,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n        expect(result.cu..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 94,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n        expect(result.cu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 88,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n        expect(result.cu..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 127,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n        expect(result.cu..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 95,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n        expect(result.cu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 89,
          "block": "expect(result.current.isLoading).toBe(false);\n        expect(result.current.error).toBeTruthy();\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 96,
          "block": "expect(result.current.isLoading).toBe(false);\n        expect(result.current.error).toBeTruthy();\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 97,
          "block": "const mockFuelLevels = [\n        {\n          tankId: \"1\",\n          tankName: \"Tank 1\",\n          fu..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 257,
          "block": "const mockFuelLevels = [\n        {\n          tankId: \"1\",\n          tankName: \"Tank 1\",\n          fu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 98,
          "block": "{\n          tankId: \"1\",\n          tankName: \"Tank 1\",\n          fuelType: \"Diesel\",\n          curre..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 258,
          "block": "{\n          tankId: \"1\",\n          tankName: \"Tank 1\",\n          fuelType: \"Diesel\",\n          curre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 99,
          "block": "tankId: \"1\",\n          tankName: \"Tank 1\",\n          fuelType: \"Diesel\",\n          currentLevel: 75,..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 259,
          "block": "tankId: \"1\",\n          tankName: \"Tank 1\",\n          fuelType: \"Diesel\",\n          currentLevel: 75,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 100,
          "block": "tankName: \"Tank 1\",\n          fuelType: \"Diesel\",\n          currentLevel: 75,\n          capacity: 10..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 260,
          "block": "tankName: \"Tank 1\",\n          fuelType: \"Diesel\",\n          currentLevel: 75,\n          capacity: 10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 101,
          "block": "fuelType: \"Diesel\",\n          currentLevel: 75,\n          capacity: 100,\n          percentFull: 75,\n..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 261,
          "block": "fuelType: \"Diesel\",\n          currentLevel: 75,\n          capacity: 100,\n          percentFull: 75,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 106,
          "block": "{\n          tankId: \"2\",\n          tankName: \"Tank 2\",\n          fuelType: \"Petrol\",\n          curre..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 266,
          "block": "{\n          tankId: \"2\",\n          tankName: \"Tank 2\",\n          fuelType: \"Petrol\",\n          curre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 107,
          "block": "tankId: \"2\",\n          tankName: \"Tank 2\",\n          fuelType: \"Petrol\",\n          currentLevel: 45,..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 267,
          "block": "tankId: \"2\",\n          tankName: \"Tank 2\",\n          fuelType: \"Petrol\",\n          currentLevel: 45,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 108,
          "block": "tankName: \"Tank 2\",\n          fuelType: \"Petrol\",\n          currentLevel: 45,\n          capacity: 10..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 268,
          "block": "tankName: \"Tank 2\",\n          fuelType: \"Petrol\",\n          currentLevel: 45,\n          capacity: 10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 109,
          "block": "fuelType: \"Petrol\",\n          currentLevel: 45,\n          capacity: 100,\n          percentFull: 45,\n..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 269,
          "block": "fuelType: \"Petrol\",\n          currentLevel: 45,\n          capacity: 100,\n          percentFull: 45,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 113,
          "block": "},\n      ];\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 67,
          "block": "},\n      ];\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 103,
          "block": "},\n      ];\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 68,
          "block": "},\n      ];\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 108,
          "block": "},\n      ];\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 127,
          "block": "expect(result.current.data).toEqual(mockFuelLevels);\n      expect(getFuelLevels).toHaveBeenCalledTim..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 128,
          "block": "expect(result.current.data).toEqual(mockFuelLevels);\n      expect(getFuelLevels).toHaveBeenCalledTim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 135,
          "block": "const mockSalesSummary = {\n        totalSales: 125000,\n        averagePerDay: 4166.67,\n        topSe..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 276,
          "block": "const mockSalesSummary = {\n        totalSales: 125000,\n        averagePerDay: 4166.67,\n        topSe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 136,
          "block": "totalSales: 125000,\n        averagePerDay: 4166.67,\n        topSellingProducts: [\n          { produc..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 277,
          "block": "totalSales: 125000,\n        averagePerDay: 4166.67,\n        topSellingProducts: [\n          { produc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 137,
          "block": "averagePerDay: 4166.67,\n        topSellingProducts: [\n          { productId: \"1\", name: \"Diesel\", qu..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 278,
          "block": "averagePerDay: 4166.67,\n        topSellingProducts: [\n          { productId: \"1\", name: \"Diesel\", qu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 138,
          "block": "topSellingProducts: [\n          { productId: \"1\", name: \"Diesel\", quantity: 5000, revenue: 75000 },\n..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 279,
          "block": "topSellingProducts: [\n          { productId: \"1\", name: \"Diesel\", quantity: 5000, revenue: 75000 },\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 139,
          "block": "{ productId: \"1\", name: \"Diesel\", quantity: 5000, revenue: 75000 },\n          { productId: \"2\", name..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 280,
          "block": "{ productId: \"1\", name: \"Diesel\", quantity: 5000, revenue: 75000 },\n          { productId: \"2\", name..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 140,
          "block": "{ productId: \"2\", name: \"Petrol\", quantity: 3500, revenue: 50000 },\n        ],\n        salesByDay: [..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 281,
          "block": "{ productId: \"2\", name: \"Petrol\", quantity: 3500, revenue: 50000 },\n        ],\n        salesByDay: [..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 141,
          "block": "],\n        salesByDay: [\n          { date: \"2023-01-01\", amount: 4200 },\n          { date: \"2023-01-..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 282,
          "block": "],\n        salesByDay: [\n          { date: \"2023-01-01\", amount: 4200 },\n          { date: \"2023-01-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 142,
          "block": "salesByDay: [\n          { date: \"2023-01-01\", amount: 4200 },\n          { date: \"2023-01-02\", amount..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 283,
          "block": "salesByDay: [\n          { date: \"2023-01-01\", amount: 4200 },\n          { date: \"2023-01-02\", amount..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 143,
          "block": "{ date: \"2023-01-01\", amount: 4200 },\n          { date: \"2023-01-02\", amount: 3800 },\n        ],\n   ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 284,
          "block": "{ date: \"2023-01-01\", amount: 4200 },\n          { date: \"2023-01-02\", amount: 3800 },\n        ],\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 146,
          "block": "};\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n  ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 174,
          "block": "};\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 147,
          "block": "// Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n      mockFe..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 175,
          "block": "// Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n      mockFe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 154,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 182,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 185,
          "block": "expect(result.current.data).toEqual(mockSalesSummary);\n      expect(getSalesSummary).toHaveBeenCalle..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 186,
          "block": "expect(result.current.data).toEqual(mockSalesSummary);\n      expect(getSalesSummary).toHaveBeenCalle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 193,
          "block": "const mockFinancialData = {\n        totalRevenue: 500000,\n        totalExpenses: 320000,\n        net..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 289,
          "block": "const mockFinancialData = {\n        totalRevenue: 500000,\n        totalExpenses: 320000,\n        net..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 194,
          "block": "totalRevenue: 500000,\n        totalExpenses: 320000,\n        netProfit: 180000,\n        profitMargin..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 290,
          "block": "totalRevenue: 500000,\n        totalExpenses: 320000,\n        netProfit: 180000,\n        profitMargin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 195,
          "block": "totalExpenses: 320000,\n        netProfit: 180000,\n        profitMargin: 36,\n        revenueByCategor..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 291,
          "block": "totalExpenses: 320000,\n        netProfit: 180000,\n        profitMargin: 36,\n        revenueByCategor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 196,
          "block": "netProfit: 180000,\n        profitMargin: 36,\n        revenueByCategory: [\n          { category: \"Die..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 292,
          "block": "netProfit: 180000,\n        profitMargin: 36,\n        revenueByCategory: [\n          { category: \"Die..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 197,
          "block": "profitMargin: 36,\n        revenueByCategory: [\n          { category: \"Diesel\", amount: 300000 },\n   ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 293,
          "block": "profitMargin: 36,\n        revenueByCategory: [\n          { category: \"Diesel\", amount: 300000 },\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 198,
          "block": "revenueByCategory: [\n          { category: \"Diesel\", amount: 300000 },\n          { category: \"Petrol..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 294,
          "block": "revenueByCategory: [\n          { category: \"Diesel\", amount: 300000 },\n          { category: \"Petrol..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 199,
          "block": "{ category: \"Diesel\", amount: 300000 },\n          { category: \"Petrol\", amount: 200000 },\n        ],..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 295,
          "block": "{ category: \"Diesel\", amount: 300000 },\n          { category: \"Petrol\", amount: 200000 },\n        ],..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 200,
          "block": "{ category: \"Petrol\", amount: 200000 },\n        ],\n        expensesByCategory: [\n          { categor..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 296,
          "block": "{ category: \"Petrol\", amount: 200000 },\n        ],\n        expensesByCategory: [\n          { categor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 201,
          "block": "],\n        expensesByCategory: [\n          { category: \"Supplies\", amount: 250000 },\n          { cat..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 297,
          "block": "],\n        expensesByCategory: [\n          { category: \"Supplies\", amount: 250000 },\n          { cat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 202,
          "block": "expensesByCategory: [\n          { category: \"Supplies\", amount: 250000 },\n          { category: \"Sal..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 298,
          "block": "expensesByCategory: [\n          { category: \"Supplies\", amount: 250000 },\n          { category: \"Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 203,
          "block": "{ category: \"Supplies\", amount: 250000 },\n          { category: \"Salaries\", amount: 50000 },\n       ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 299,
          "block": "{ category: \"Supplies\", amount: 250000 },\n          { category: \"Salaries\", amount: 50000 },\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 204,
          "block": "{ category: \"Salaries\", amount: 50000 },\n          { category: \"Operations\", amount: 20000 },\n      ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 300,
          "block": "{ category: \"Salaries\", amount: 50000 },\n          { category: \"Operations\", amount: 20000 },\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 218,
          "block": "expect(result.current.data).toEqual(mockFinancialData);\n      expect(getFinancialDashboard).toHaveBe..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 219,
          "block": "expect(result.current.data).toEqual(mockFinancialData);\n      expect(getFinancialDashboard).toHaveBe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 318,
          "block": "return Promise.reject(new Error(\"Unknown endpoint\"));\n      });\n\n      const { result } = renderTest..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 360,
          "block": "return Promise.reject(new Error(\"Unknown endpoint\"));\n      });\n\n      const { result } = renderTest..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 362,
          "block": "const { result } = renderTestHook(() => useDashboard());\n\n      // Initially all should be loading\n ..."
        },
        {
          "file": "src\\features\\dashboard\\hooks\\__tests__\\useDashboard.test.ts",
          "startLine": 363,
          "block": "const { result } = renderTestHook(() => useDashboard());\n\n      // Initially all should be loading\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\pages\\DashboardPage.tsx",
          "startLine": 34,
          "block": "import { PageLayout } from '@/layouts/PageLayout';\nimport { DashboardCard } from '@/shared/component..."
        },
        {
          "file": "src\\features\\dashboard\\pages\\DashboardPage.tsx",
          "startLine": 35,
          "block": "import { PageLayout } from '@/layouts/PageLayout';\nimport { DashboardCard } from '@/shared/component..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\dashboard.ts",
          "startLine": 23,
          "block": "// Extract data from responses, defaulting to empty arrays if not present\n    const sales: Sale[] = ..."
        },
        {
          "file": "src\\features\\dashboard\\services\\dashboard.ts",
          "startLine": 24,
          "block": "// Extract data from responses, defaulting to empty arrays if not present\n    const sales: Sale[] = ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\dashboard.ts",
          "startLine": 28,
          "block": "// Calculate totals\n    const totalSales = sales.reduce((sum, sale) => sum + (sale.total_price || 0)..."
        },
        {
          "file": "src\\features\\dashboard\\services\\dashboard.ts",
          "startLine": 29,
          "block": "// Calculate totals\n    const totalSales = sales.reduce((sum, sale) => sum + (sale.total_price || 0)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 44,
          "block": "// Handle errors\n    if (dashboardResponse.error) {\n      throw new Error(dashboardResponse.error.me..."
        },
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 45,
          "block": "// Handle errors\n    if (dashboardResponse.error) {\n      throw new Error(dashboardResponse.error.me..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 92,
          "block": "if (response.error) {\n    console.error(\"Error fetching fuel levels:\", response.error);\n    return {..."
        },
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 93,
          "block": "if (response.error) {\n    console.error(\"Error fetching fuel levels:\", response.error);\n    return {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 110,
          "block": "total_sales: 0,\n      total_revenue: 0,\n      sales_by_fuel_type: {},\n      sales_by_payment_method:..."
        },
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 122,
          "block": "total_sales: 0,\n      total_revenue: 0,\n      sales_by_fuel_type: {},\n      sales_by_payment_method:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 111,
          "block": "total_revenue: 0,\n      sales_by_fuel_type: {},\n      sales_by_payment_method: {},\n      timeframe,\n..."
        },
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 123,
          "block": "total_revenue: 0,\n      sales_by_fuel_type: {},\n      sales_by_payment_method: {},\n      timeframe,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 112,
          "block": "sales_by_fuel_type: {},\n      sales_by_payment_method: {},\n      timeframe,\n      period_start: new ..."
        },
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 124,
          "block": "sales_by_fuel_type: {},\n      sales_by_payment_method: {},\n      timeframe,\n      period_start: new ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 113,
          "block": "sales_by_payment_method: {},\n      timeframe,\n      period_start: new Date().toISOString(),\n      pe..."
        },
        {
          "file": "src\\features\\dashboard\\services\\index.ts",
          "startLine": 125,
          "block": "sales_by_payment_method: {},\n      timeframe,\n      period_start: new Date().toISOString(),\n      pe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 1,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { StandardDialog } from \"@/shared/components/..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 1,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { StandardDialog } from \"@/shared/components/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 2,
          "block": "import { StandardDialog } from \"@/shared/components/common/dialog/StandardDialog\";\nimport { Button }..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 2,
          "block": "import { StandardDialog } from \"@/shared/components/common/dialog/StandardDialog\";\nimport { Button }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 3,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport type { Employee } from \"../types/employ..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 3,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport type { Employee } from \"../types/employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 4,
          "block": "import type { Employee } from \"../types/employees.types\";\n\ninterface DeleteConfirmDialogStandardized..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 4,
          "block": "import type { Employee } from \"../types/employees.types\";\n\ninterface DeleteConfirmDialogStandardized..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 5,
          "block": "interface DeleteConfirmDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) =>..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 5,
          "block": "interface DeleteConfirmDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 6,
          "block": "interface DeleteConfirmDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) =>..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 6,
          "block": "interface DeleteConfirmDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 7,
          "block": "open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onConfirm: () => void;\n  employee: Employe..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 7,
          "block": "open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onConfirm: () => void;\n  employee: Employe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 8,
          "block": "onOpenChange: (open: boolean) => void;\n  onConfirm: () => void;\n  employee: Employee;\n  isLoading?: ..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 8,
          "block": "onOpenChange: (open: boolean) => void;\n  onConfirm: () => void;\n  employee: Employee;\n  isLoading?: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 17,
          "block": "onConfirm,\n  employee,\n  isLoading,\n}: DeleteConfirmDialogStandardizedProps) {\n  const { t } = useTr..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 17,
          "block": "onConfirm,\n  employee,\n  isLoading,\n}: DeleteConfirmDialogStandardizedProps) {\n  const { t } = useTr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 19,
          "block": "isLoading,\n}: DeleteConfirmDialogStandardizedProps) {\n  const { t } = useTranslation();\n\n  const dia..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 19,
          "block": "isLoading,\n}: DeleteConfirmDialogStandardizedProps) {\n  const { t } = useTranslation();\n\n  const dia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 20,
          "block": "}: DeleteConfirmDialogStandardizedProps) {\n  const { t } = useTranslation();\n\n  const dialogActions ..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 20,
          "block": "}: DeleteConfirmDialogStandardizedProps) {\n  const { t } = useTranslation();\n\n  const dialogActions ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 21,
          "block": "const { t } = useTranslation();\n\n  const dialogActions = (\n    <>\n      <Button variant=\"outline\" on..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 21,
          "block": "const { t } = useTranslation();\n\n  const dialogActions = (\n    <>\n      <Button variant=\"outline\" on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 22,
          "block": "const dialogActions = (\n    <>\n      <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 22,
          "block": "const dialogActions = (\n    <>\n      <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 23,
          "block": "const dialogActions = (\n    <>\n      <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 23,
          "block": "const dialogActions = (\n    <>\n      <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 24,
          "block": "<>\n      <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n        {t(\"common.cancel\")}..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 24,
          "block": "<>\n      <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n        {t(\"common.cancel\")}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 25,
          "block": "<Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n        {t(\"common.cancel\")}\n      </..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 25,
          "block": "<Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n        {t(\"common.cancel\")}\n      </..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 26,
          "block": "{t(\"common.cancel\")}\n      </Button>\n      <Button variant=\"destructive\" onClick={onConfirm} disable..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 26,
          "block": "{t(\"common.cancel\")}\n      </Button>\n      <Button variant=\"destructive\" onClick={onConfirm} disable..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 27,
          "block": "</Button>\n      <Button variant=\"destructive\" onClick={onConfirm} disabled={isLoading}>\n        {isL..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 27,
          "block": "</Button>\n      <Button variant=\"destructive\" onClick={onConfirm} disabled={isLoading}>\n        {isL..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 28,
          "block": "<Button variant=\"destructive\" onClick={onConfirm} disabled={isLoading}>\n        {isLoading ? t(\"comm..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 28,
          "block": "<Button variant=\"destructive\" onClick={onConfirm} disabled={isLoading}>\n        {isLoading ? t(\"comm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 34,
          "block": "return (\n    <StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={t(\"emp..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 34,
          "block": "return (\n    <StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={t(\"emp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 35,
          "block": "<StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={t(\"employees.delete..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 35,
          "block": "<StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={t(\"employees.delete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 36,
          "block": "open={open}\n      onOpenChange={onOpenChange}\n      title={t(\"employees.delete_employee\")}\n      des..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 36,
          "block": "open={open}\n      onOpenChange={onOpenChange}\n      title={t(\"employees.delete_employee\")}\n      des..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 37,
          "block": "onOpenChange={onOpenChange}\n      title={t(\"employees.delete_employee\")}\n      description={t(\"emplo..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 37,
          "block": "onOpenChange={onOpenChange}\n      title={t(\"employees.delete_employee\")}\n      description={t(\"emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 38,
          "block": "title={t(\"employees.delete_employee\")}\n      description={t(\"employees.delete_employee_confirmation\"..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 38,
          "block": "title={t(\"employees.delete_employee\")}\n      description={t(\"employees.delete_employee_confirmation\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 39,
          "block": "description={t(\"employees.delete_employee_confirmation\", {\n        name: `${employee.first_name} ${e..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 39,
          "block": "description={t(\"employees.delete_employee_confirmation\", {\n        name: `${employee.first_name} ${e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 40,
          "block": "name: `${employee.first_name} ${employee.last_name}`,\n      })}\n      actions={dialogActions}\n    >\n..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 40,
          "block": "name: `${employee.first_name} ${employee.last_name}`,\n      })}\n      actions={dialogActions}\n    >\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 41,
          "block": "})}\n      actions={dialogActions}\n    >\n      <p className=\"text-sm text-muted-foreground\">\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 41,
          "block": "})}\n      actions={dialogActions}\n    >\n      <p className=\"text-sm text-muted-foreground\">\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 42,
          "block": "actions={dialogActions}\n    >\n      <p className=\"text-sm text-muted-foreground\">\n        {t(\"employ..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 42,
          "block": "actions={dialogActions}\n    >\n      <p className=\"text-sm text-muted-foreground\">\n        {t(\"employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 43,
          "block": ">\n      <p className=\"text-sm text-muted-foreground\">\n        {t(\"employees.delete_employee_warning\"..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 43,
          "block": ">\n      <p className=\"text-sm text-muted-foreground\">\n        {t(\"employees.delete_employee_warning\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 44,
          "block": "<p className=\"text-sm text-muted-foreground\">\n        {t(\"employees.delete_employee_warning\")}\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\DeleteConfirmDialogStandardized.tsx",
          "startLine": 44,
          "block": "<p className=\"text-sm text-muted-foreground\">\n        {t(\"employees.delete_employee_warning\")}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 4,
          "block": "/**\n * EmployeeDialog component\n *\n * @placeholder This is a placeholder component that needs proper..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 4,
          "block": "/**\n * EmployeeDialog component\n *\n * @placeholder This is a placeholder component that needs proper..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 5,
          "block": "/**\n * EmployeeDialog component\n *\n * @placeholder This is a placeholder component that needs proper..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 5,
          "block": "/**\n * EmployeeDialog component\n *\n * @placeholder This is a placeholder component that needs proper..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 6,
          "block": "* EmployeeDialog component\n *\n * @placeholder This is a placeholder component that needs proper impl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 6,
          "block": "* EmployeeDialog component\n *\n * @placeholder This is a placeholder component that needs proper impl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 7,
          "block": "*\n * @placeholder This is a placeholder component that needs proper implementation\n */\nexport functi..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 7,
          "block": "*\n * @placeholder This is a placeholder component that needs proper implementation\n */\nexport functi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 8,
          "block": "* @placeholder This is a placeholder component that needs proper implementation\n */\nexport function ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 8,
          "block": "* @placeholder This is a placeholder component that needs proper implementation\n */\nexport function ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 9,
          "block": "*/\nexport function EmployeeDialog({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>)..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 9,
          "block": "*/\nexport function EmployeeDialog({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 10,
          "block": "export function EmployeeDialog({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 10,
          "block": "export function EmployeeDialog({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 11,
          "block": "className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 11,
          "block": "className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 12,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-employee-dia..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 12,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-employee-dia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 13,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-employee-dialog\", cla..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 13,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-employee-dialog\", cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 14,
          "block": "return (\n    <div className={cn(\"-employee-dialog\", className)} {...props}>\n      {/* Placeholder fo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 14,
          "block": "return (\n    <div className={cn(\"-employee-dialog\", className)} {...props}>\n      {/* Placeholder fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 15,
          "block": "<div className={cn(\"-employee-dialog\", className)} {...props}>\n      {/* Placeholder for EmployeeDia..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 15,
          "block": "<div className={cn(\"-employee-dialog\", className)} {...props}>\n      {/* Placeholder for EmployeeDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 16,
          "block": "{/* Placeholder for EmployeeDialog implementation */}\n      <div className=\"p-4 border border-dashed..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 16,
          "block": "{/* Placeholder for EmployeeDialog implementation */}\n      <div className=\"p-4 border border-dashed..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialog.tsx",
          "startLine": 17,
          "block": "<div className=\"p-4 border border-dashed border-gray-300 rounded-md text-center text-gray-500\">\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialog.tsx",
          "startLine": 17,
          "block": "<div className=\"p-4 border border-dashed border-gray-300 rounded-md text-center text-gray-500\">\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 7,
          "block": "FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 7,
          "block": "FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 8,
          "block": "} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components/ui/primitive..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 8,
          "block": "} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components/ui/primitive..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 9,
          "block": "import { Input } from \"@/core/components/ui/primitives/input\";\nimport { z } from \"zod\";\nimport { use..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 9,
          "block": "import { Input } from \"@/core/components/ui/primitives/input\";\nimport { z } from \"zod\";\nimport { use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 10,
          "block": "import { z } from \"zod\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast as sonnerToa..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 10,
          "block": "import { z } from \"zod\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast as sonnerToa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 11,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { toast as sonnerToast } from \"sonner\";\nimpor..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 11,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { toast as sonnerToast } from \"sonner\";\nimpor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 12,
          "block": "import { toast as sonnerToast } from \"sonner\";\nimport { Employee } from \"@/features/employees/types/..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 12,
          "block": "import { toast as sonnerToast } from \"sonner\";\nimport { Employee } from \"@/features/employees/types/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 13,
          "block": "import { Employee } from \"@/features/employees/types/employees.types\";\nimport { Control, FieldValues..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 13,
          "block": "import { Employee } from \"@/features/employees/types/employees.types\";\nimport { Control, FieldValues..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 14,
          "block": "import { Control, FieldValues } from \"react-hook-form\";\nimport { FormDialog } from \"@/shared/compone..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 14,
          "block": "import { Control, FieldValues } from \"react-hook-form\";\nimport { FormDialog } from \"@/shared/compone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 15,
          "block": "import { FormDialog } from \"@/shared/components/common/dialog/FormDialog\";\n\n// Create a base schema ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 15,
          "block": "import { FormDialog } from \"@/shared/components/common/dialog/FormDialog\";\n\n// Create a base schema ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 16,
          "block": "// Create a base schema type for export\nconst baseEmployeeSchema = z.object({\n  first_name: z.string..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 16,
          "block": "// Create a base schema type for export\nconst baseEmployeeSchema = z.object({\n  first_name: z.string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 17,
          "block": "// Create a base schema type for export\nconst baseEmployeeSchema = z.object({\n  first_name: z.string..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 17,
          "block": "// Create a base schema type for export\nconst baseEmployeeSchema = z.object({\n  first_name: z.string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 18,
          "block": "const baseEmployeeSchema = z.object({\n  first_name: z.string().min(1),\n  last_name: z.string().min(1..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 18,
          "block": "const baseEmployeeSchema = z.object({\n  first_name: z.string().min(1),\n  last_name: z.string().min(1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 19,
          "block": "first_name: z.string().min(1),\n  last_name: z.string().min(1),\n  position: z.string().min(1),\n  depa..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 19,
          "block": "first_name: z.string().min(1),\n  last_name: z.string().min(1),\n  position: z.string().min(1),\n  depa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 20,
          "block": "last_name: z.string().min(1),\n  position: z.string().min(1),\n  department: z.string().optional(),\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 20,
          "block": "last_name: z.string().min(1),\n  position: z.string().min(1),\n  department: z.string().optional(),\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 21,
          "block": "position: z.string().min(1),\n  department: z.string().optional(),\n  hire_date: z.string().optional()..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 21,
          "block": "position: z.string().min(1),\n  department: z.string().optional(),\n  hire_date: z.string().optional()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 22,
          "block": "department: z.string().optional(),\n  hire_date: z.string().optional(),\n  email: z.string().email().o..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 22,
          "block": "department: z.string().optional(),\n  hire_date: z.string().optional(),\n  email: z.string().email().o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 23,
          "block": "hire_date: z.string().optional(),\n  email: z.string().email().optional(),\n  phone: z.string().option..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 23,
          "block": "hire_date: z.string().optional(),\n  email: z.string().email().optional(),\n  phone: z.string().option..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 24,
          "block": "email: z.string().email().optional(),\n  phone: z.string().optional(),\n  status: z.enum([\"active\", \"i..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 24,
          "block": "email: z.string().email().optional(),\n  phone: z.string().optional(),\n  status: z.enum([\"active\", \"i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 25,
          "block": "phone: z.string().optional(),\n  status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active\")..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 25,
          "block": "phone: z.string().optional(),\n  status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active\")..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 26,
          "block": "status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active\"),\n  salary: z.number().optional(..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 26,
          "block": "status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active\"),\n  salary: z.number().optional(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 27,
          "block": "salary: z.number().optional(),\n  notes: z.string().optional(),\n});\n\n// Export the type for reuse in ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 27,
          "block": "salary: z.number().optional(),\n  notes: z.string().optional(),\n});\n\n// Export the type for reuse in ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 28,
          "block": "notes: z.string().optional(),\n});\n\n// Export the type for reuse in other components\nexport type Empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 28,
          "block": "notes: z.string().optional(),\n});\n\n// Export the type for reuse in other components\nexport type Empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 29,
          "block": "});\n\n// Export the type for reuse in other components\nexport type EmployeeFormValues = z.infer<typeo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 29,
          "block": "});\n\n// Export the type for reuse in other components\nexport type EmployeeFormValues = z.infer<typeo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 30,
          "block": "// Export the type for reuse in other components\nexport type EmployeeFormValues = z.infer<typeof bas..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 30,
          "block": "// Export the type for reuse in other components\nexport type EmployeeFormValues = z.infer<typeof bas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 31,
          "block": "// Export the type for reuse in other components\nexport type EmployeeFormValues = z.infer<typeof bas..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 31,
          "block": "// Export the type for reuse in other components\nexport type EmployeeFormValues = z.infer<typeof bas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 32,
          "block": "export type EmployeeFormValues = z.infer<typeof baseEmployeeSchema>;\n\ninterface EmployeeDialogStanda..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 32,
          "block": "export type EmployeeFormValues = z.infer<typeof baseEmployeeSchema>;\n\ninterface EmployeeDialogStanda..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 33,
          "block": "interface EmployeeDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 33,
          "block": "interface EmployeeDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 34,
          "block": "interface EmployeeDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 34,
          "block": "interface EmployeeDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 35,
          "block": "open: boolean;\n  onOpenChange: (open: boolean) => void;\n  employee?: Employee;\n  onSubmit: (data: Em..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 35,
          "block": "open: boolean;\n  onOpenChange: (open: boolean) => void;\n  employee?: Employee;\n  onSubmit: (data: Em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 36,
          "block": "onOpenChange: (open: boolean) => void;\n  employee?: Employee;\n  onSubmit: (data: EmployeeFormValues)..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 36,
          "block": "onOpenChange: (open: boolean) => void;\n  employee?: Employee;\n  onSubmit: (data: EmployeeFormValues)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 37,
          "block": "employee?: Employee;\n  onSubmit: (data: EmployeeFormValues) => Promise<boolean>;\n  isLoading?: boole..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 37,
          "block": "employee?: Employee;\n  onSubmit: (data: EmployeeFormValues) => Promise<boolean>;\n  isLoading?: boole..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 38,
          "block": "onSubmit: (data: EmployeeFormValues) => Promise<boolean>;\n  isLoading?: boolean;\n}\n\nfunction Employe..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 38,
          "block": "onSubmit: (data: EmployeeFormValues) => Promise<boolean>;\n  isLoading?: boolean;\n}\n\nfunction Employe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 45,
          "block": "employee,\n  onSubmit,\n  isLoading = false,\n}: EmployeeDialogStandardizedProps) {\n  const { t } = use..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 45,
          "block": "employee,\n  onSubmit,\n  isLoading = false,\n}: EmployeeDialogStandardizedProps) {\n  const { t } = use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 46,
          "block": "onSubmit,\n  isLoading = false,\n}: EmployeeDialogStandardizedProps) {\n  const { t } = useTranslation(..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 46,
          "block": "onSubmit,\n  isLoading = false,\n}: EmployeeDialogStandardizedProps) {\n  const { t } = useTranslation(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 47,
          "block": "isLoading = false,\n}: EmployeeDialogStandardizedProps) {\n  const { t } = useTranslation();\n  const i..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 47,
          "block": "isLoading = false,\n}: EmployeeDialogStandardizedProps) {\n  const { t } = useTranslation();\n  const i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 48,
          "block": "}: EmployeeDialogStandardizedProps) {\n  const { t } = useTranslation();\n  const isEditing = Boolean(..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 48,
          "block": "}: EmployeeDialogStandardizedProps) {\n  const { t } = useTranslation();\n  const isEditing = Boolean(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 49,
          "block": "const { t } = useTranslation();\n  const isEditing = Boolean(employee);\n\n  // Create schema inside th..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 49,
          "block": "const { t } = useTranslation();\n  const isEditing = Boolean(employee);\n\n  // Create schema inside th..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 50,
          "block": "const isEditing = Boolean(employee);\n\n  // Create schema inside the component where hooks can be cal..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 50,
          "block": "const isEditing = Boolean(employee);\n\n  // Create schema inside the component where hooks can be cal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 51,
          "block": "// Create schema inside the component where hooks can be called\n  const employeeSchema = z.object({\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 51,
          "block": "// Create schema inside the component where hooks can be called\n  const employeeSchema = z.object({\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 52,
          "block": "// Create schema inside the component where hooks can be called\n  const employeeSchema = z.object({\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 52,
          "block": "// Create schema inside the component where hooks can be called\n  const employeeSchema = z.object({\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 53,
          "block": "const employeeSchema = z.object({\n    first_name: z\n      .string()\n      .min(1, t(\"employees.first..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 53,
          "block": "const employeeSchema = z.object({\n    first_name: z\n      .string()\n      .min(1, t(\"employees.first..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 54,
          "block": "first_name: z\n      .string()\n      .min(1, t(\"employees.firstNameRequired\", \"First name is required..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 54,
          "block": "first_name: z\n      .string()\n      .min(1, t(\"employees.firstNameRequired\", \"First name is required..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 55,
          "block": ".string()\n      .min(1, t(\"employees.firstNameRequired\", \"First name is required\")),\n    last_name: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 55,
          "block": ".string()\n      .min(1, t(\"employees.firstNameRequired\", \"First name is required\")),\n    last_name: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 56,
          "block": ".min(1, t(\"employees.firstNameRequired\", \"First name is required\")),\n    last_name: z\n      .string(..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 56,
          "block": ".min(1, t(\"employees.firstNameRequired\", \"First name is required\")),\n    last_name: z\n      .string(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 57,
          "block": "last_name: z\n      .string()\n      .min(1, t(\"employees.lastNameRequired\", \"Last name is required\"))..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 57,
          "block": "last_name: z\n      .string()\n      .min(1, t(\"employees.lastNameRequired\", \"Last name is required\"))..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 58,
          "block": ".string()\n      .min(1, t(\"employees.lastNameRequired\", \"Last name is required\")),\n    position: z\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 58,
          "block": ".string()\n      .min(1, t(\"employees.lastNameRequired\", \"Last name is required\")),\n    position: z\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 59,
          "block": ".min(1, t(\"employees.lastNameRequired\", \"Last name is required\")),\n    position: z\n      .string()\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 59,
          "block": ".min(1, t(\"employees.lastNameRequired\", \"Last name is required\")),\n    position: z\n      .string()\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 60,
          "block": "position: z\n      .string()\n      .min(1, t(\"employees.positionRequired\", \"Position is required\")),\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 60,
          "block": "position: z\n      .string()\n      .min(1, t(\"employees.positionRequired\", \"Position is required\")),\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 61,
          "block": ".string()\n      .min(1, t(\"employees.positionRequired\", \"Position is required\")),\n    department: z...."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 61,
          "block": ".string()\n      .min(1, t(\"employees.positionRequired\", \"Position is required\")),\n    department: z...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 62,
          "block": ".min(1, t(\"employees.positionRequired\", \"Position is required\")),\n    department: z.string().optiona..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 62,
          "block": ".min(1, t(\"employees.positionRequired\", \"Position is required\")),\n    department: z.string().optiona..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 63,
          "block": "department: z.string().optional(),\n    hire_date: z.string().optional(),\n    email: z\n      .string(..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 63,
          "block": "department: z.string().optional(),\n    hire_date: z.string().optional(),\n    email: z\n      .string(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 64,
          "block": "hire_date: z.string().optional(),\n    email: z\n      .string()\n      .email(t(\"employees.invalidEmai..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 64,
          "block": "hire_date: z.string().optional(),\n    email: z\n      .string()\n      .email(t(\"employees.invalidEmai..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 65,
          "block": "email: z\n      .string()\n      .email(t(\"employees.invalidEmail\", \"Invalid email address\"))\n      .o..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 65,
          "block": "email: z\n      .string()\n      .email(t(\"employees.invalidEmail\", \"Invalid email address\"))\n      .o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 66,
          "block": ".string()\n      .email(t(\"employees.invalidEmail\", \"Invalid email address\"))\n      .optional(),\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 66,
          "block": ".string()\n      .email(t(\"employees.invalidEmail\", \"Invalid email address\"))\n      .optional(),\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 67,
          "block": ".email(t(\"employees.invalidEmail\", \"Invalid email address\"))\n      .optional(),\n    phone: z.string(..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 67,
          "block": ".email(t(\"employees.invalidEmail\", \"Invalid email address\"))\n      .optional(),\n    phone: z.string(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 68,
          "block": ".optional(),\n    phone: z.string().optional(),\n    status: z.enum([\"active\", \"inactive\", \"on_leave\"]..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 68,
          "block": ".optional(),\n    phone: z.string().optional(),\n    status: z.enum([\"active\", \"inactive\", \"on_leave\"]..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 69,
          "block": "phone: z.string().optional(),\n    status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 69,
          "block": "phone: z.string().optional(),\n    status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 70,
          "block": "status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active\"),\n    salary: z.number().optiona..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 70,
          "block": "status: z.enum([\"active\", \"inactive\", \"on_leave\"]).default(\"active\"),\n    salary: z.number().optiona..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 72,
          "block": "notes: z.string().optional(),\n  });\n\n  // Set up default values\n  const defaultValues: Partial<Emplo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 72,
          "block": "notes: z.string().optional(),\n  });\n\n  // Set up default values\n  const defaultValues: Partial<Emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 73,
          "block": "});\n\n  // Set up default values\n  const defaultValues: Partial<EmployeeFormValues> = {\n    first_nam..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 73,
          "block": "});\n\n  // Set up default values\n  const defaultValues: Partial<EmployeeFormValues> = {\n    first_nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 74,
          "block": "// Set up default values\n  const defaultValues: Partial<EmployeeFormValues> = {\n    first_name: empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 74,
          "block": "// Set up default values\n  const defaultValues: Partial<EmployeeFormValues> = {\n    first_name: empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 75,
          "block": "// Set up default values\n  const defaultValues: Partial<EmployeeFormValues> = {\n    first_name: empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 75,
          "block": "// Set up default values\n  const defaultValues: Partial<EmployeeFormValues> = {\n    first_name: empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 76,
          "block": "const defaultValues: Partial<EmployeeFormValues> = {\n    first_name: employee?.first_name || \"\",\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 76,
          "block": "const defaultValues: Partial<EmployeeFormValues> = {\n    first_name: employee?.first_name || \"\",\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 77,
          "block": "first_name: employee?.first_name || \"\",\n    last_name: employee?.last_name || \"\",\n    position: empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 77,
          "block": "first_name: employee?.first_name || \"\",\n    last_name: employee?.last_name || \"\",\n    position: empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 78,
          "block": "last_name: employee?.last_name || \"\",\n    position: employee?.position || \"\",\n    department: employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 78,
          "block": "last_name: employee?.last_name || \"\",\n    position: employee?.position || \"\",\n    department: employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 79,
          "block": "position: employee?.position || \"\",\n    department: employee?.department || \"\",\n    hire_date: emplo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 79,
          "block": "position: employee?.position || \"\",\n    department: employee?.department || \"\",\n    hire_date: emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 80,
          "block": "department: employee?.department || \"\",\n    hire_date: employee?.hire_date\n      ? new Date(employee..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 80,
          "block": "department: employee?.department || \"\",\n    hire_date: employee?.hire_date\n      ? new Date(employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 81,
          "block": "hire_date: employee?.hire_date\n      ? new Date(employee.hire_date).toISOString().split(\"T\")[0]\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 81,
          "block": "hire_date: employee?.hire_date\n      ? new Date(employee.hire_date).toISOString().split(\"T\")[0]\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 82,
          "block": "? new Date(employee.hire_date).toISOString().split(\"T\")[0]\n      : \"\",\n    email: employee?.email ||..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 82,
          "block": "? new Date(employee.hire_date).toISOString().split(\"T\")[0]\n      : \"\",\n    email: employee?.email ||..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 83,
          "block": ": \"\",\n    email: employee?.email || \"\",\n    phone: employee?.phone || \"\",\n    status: employee?.stat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 83,
          "block": ": \"\",\n    email: employee?.email || \"\",\n    phone: employee?.phone || \"\",\n    status: employee?.stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 84,
          "block": "email: employee?.email || \"\",\n    phone: employee?.phone || \"\",\n    status: employee?.status || \"act..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 84,
          "block": "email: employee?.email || \"\",\n    phone: employee?.phone || \"\",\n    status: employee?.status || \"act..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 85,
          "block": "phone: employee?.phone || \"\",\n    status: employee?.status || \"active\",\n    salary: employee?.salary..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 85,
          "block": "phone: employee?.phone || \"\",\n    status: employee?.status || \"active\",\n    salary: employee?.salary..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 86,
          "block": "status: employee?.status || \"active\",\n    salary: employee?.salary || 0,\n    notes: employee?.notes ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 86,
          "block": "status: employee?.status || \"active\",\n    salary: employee?.salary || 0,\n    notes: employee?.notes ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 88,
          "block": "notes: employee?.notes || \"\",\n  };\n\n  // Handle form submission\n  const handleSubmit = async (data: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 88,
          "block": "notes: employee?.notes || \"\",\n  };\n\n  // Handle form submission\n  const handleSubmit = async (data: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 89,
          "block": "};\n\n  // Handle form submission\n  const handleSubmit = async (data: EmployeeFormValues) => {\n    try..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 89,
          "block": "};\n\n  // Handle form submission\n  const handleSubmit = async (data: EmployeeFormValues) => {\n    try..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 90,
          "block": "// Handle form submission\n  const handleSubmit = async (data: EmployeeFormValues) => {\n    try {\n   ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 91,
          "block": "// Handle form submission\n  const handleSubmit = async (data: EmployeeFormValues) => {\n    try {\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 90,
          "block": "// Handle form submission\n  const handleSubmit = async (data: EmployeeFormValues) => {\n    try {\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 91,
          "block": "// Handle form submission\n  const handleSubmit = async (data: EmployeeFormValues) => {\n    try {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 92,
          "block": "const handleSubmit = async (data: EmployeeFormValues) => {\n    try {\n      const success = await onS..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 92,
          "block": "const handleSubmit = async (data: EmployeeFormValues) => {\n    try {\n      const success = await onS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 94,
          "block": "const success = await onSubmit(data);\n\n      if (success) {\n        sonnerToast.success(\n          i..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 94,
          "block": "const success = await onSubmit(data);\n\n      if (success) {\n        sonnerToast.success(\n          i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 95,
          "block": "if (success) {\n        sonnerToast.success(\n          isEditing\n            ? t(\"employees.updateSuc..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 95,
          "block": "if (success) {\n        sonnerToast.success(\n          isEditing\n            ? t(\"employees.updateSuc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 96,
          "block": "if (success) {\n        sonnerToast.success(\n          isEditing\n            ? t(\"employees.updateSuc..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 96,
          "block": "if (success) {\n        sonnerToast.success(\n          isEditing\n            ? t(\"employees.updateSuc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 97,
          "block": "sonnerToast.success(\n          isEditing\n            ? t(\"employees.updateSuccess\", \"Employee update..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 97,
          "block": "sonnerToast.success(\n          isEditing\n            ? t(\"employees.updateSuccess\", \"Employee update..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 98,
          "block": "isEditing\n            ? t(\"employees.updateSuccess\", \"Employee updated successfully\")\n            : ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 98,
          "block": "isEditing\n            ? t(\"employees.updateSuccess\", \"Employee updated successfully\")\n            : ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 99,
          "block": "? t(\"employees.updateSuccess\", \"Employee updated successfully\")\n            : t(\"employees.createSuc..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 99,
          "block": "? t(\"employees.updateSuccess\", \"Employee updated successfully\")\n            : t(\"employees.createSuc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 100,
          "block": ": t(\"employees.createSuccess\", \"Employee created successfully\")\n        );\n        return true;\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 100,
          "block": ": t(\"employees.createSuccess\", \"Employee created successfully\")\n        );\n        return true;\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 102,
          "block": "return true;\n      }\n      return false;\n    } catch (error) {\n      sonnerToast.error(t(\"employees...."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 102,
          "block": "return true;\n      }\n      return false;\n    } catch (error) {\n      sonnerToast.error(t(\"employees...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 103,
          "block": "}\n      return false;\n    } catch (error) {\n      sonnerToast.error(t(\"employees.saveError\", \"Failed..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 103,
          "block": "}\n      return false;\n    } catch (error) {\n      sonnerToast.error(t(\"employees.saveError\", \"Failed..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 104,
          "block": "return false;\n    } catch (error) {\n      sonnerToast.error(t(\"employees.saveError\", \"Failed to save..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 104,
          "block": "return false;\n    } catch (error) {\n      sonnerToast.error(t(\"employees.saveError\", \"Failed to save..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 105,
          "block": "} catch (error) {\n      sonnerToast.error(t(\"employees.saveError\", \"Failed to save employee\"));\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 105,
          "block": "} catch (error) {\n      sonnerToast.error(t(\"employees.saveError\", \"Failed to save employee\"));\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 106,
          "block": "sonnerToast.error(t(\"employees.saveError\", \"Failed to save employee\"));\n      return false;\n    }\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 106,
          "block": "sonnerToast.error(t(\"employees.saveError\", \"Failed to save employee\"));\n      return false;\n    }\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 113,
          "block": "open={open}\n      onOpenChange={onOpenChange}\n      title={\n        isEditing\n          ? t(\"employe..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 113,
          "block": "open={open}\n      onOpenChange={onOpenChange}\n      title={\n        isEditing\n          ? t(\"employe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 114,
          "block": "onOpenChange={onOpenChange}\n      title={\n        isEditing\n          ? t(\"employees.editEmployee\", ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 114,
          "block": "onOpenChange={onOpenChange}\n      title={\n        isEditing\n          ? t(\"employees.editEmployee\", ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 115,
          "block": "title={\n        isEditing\n          ? t(\"employees.editEmployee\", \"Edit Employee\")\n          : t(\"em..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 115,
          "block": "title={\n        isEditing\n          ? t(\"employees.editEmployee\", \"Edit Employee\")\n          : t(\"em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 116,
          "block": "isEditing\n          ? t(\"employees.editEmployee\", \"Edit Employee\")\n          : t(\"employees.addEmplo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 116,
          "block": "isEditing\n          ? t(\"employees.editEmployee\", \"Edit Employee\")\n          : t(\"employees.addEmplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 117,
          "block": "? t(\"employees.editEmployee\", \"Edit Employee\")\n          : t(\"employees.addEmployee\", \"Add Employee\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 117,
          "block": "? t(\"employees.editEmployee\", \"Edit Employee\")\n          : t(\"employees.addEmployee\", \"Add Employee\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 118,
          "block": ": t(\"employees.addEmployee\", \"Add Employee\")\n      }\n      schema={employeeSchema}\n      defaultValu..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 118,
          "block": ": t(\"employees.addEmployee\", \"Add Employee\")\n      }\n      schema={employeeSchema}\n      defaultValu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 119,
          "block": "}\n      schema={employeeSchema}\n      defaultValues={defaultValues}\n      onSubmit={handleSubmit}\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 119,
          "block": "}\n      schema={employeeSchema}\n      defaultValues={defaultValues}\n      onSubmit={handleSubmit}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 120,
          "block": "schema={employeeSchema}\n      defaultValues={defaultValues}\n      onSubmit={handleSubmit}\n      subm..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 120,
          "block": "schema={employeeSchema}\n      defaultValues={defaultValues}\n      onSubmit={handleSubmit}\n      subm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 121,
          "block": "defaultValues={defaultValues}\n      onSubmit={handleSubmit}\n      submitText={\n        isLoading\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 121,
          "block": "defaultValues={defaultValues}\n      onSubmit={handleSubmit}\n      submitText={\n        isLoading\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 122,
          "block": "onSubmit={handleSubmit}\n      submitText={\n        isLoading\n          ? t(\"common.saving\", \"Saving...."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 122,
          "block": "onSubmit={handleSubmit}\n      submitText={\n        isLoading\n          ? t(\"common.saving\", \"Saving...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 123,
          "block": "submitText={\n        isLoading\n          ? t(\"common.saving\", \"Saving...\")\n          : isEditing\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 123,
          "block": "submitText={\n        isLoading\n          ? t(\"common.saving\", \"Saving...\")\n          : isEditing\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 124,
          "block": "isLoading\n          ? t(\"common.saving\", \"Saving...\")\n          : isEditing\n            ? t(\"common...."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 124,
          "block": "isLoading\n          ? t(\"common.saving\", \"Saving...\")\n          : isEditing\n            ? t(\"common...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 125,
          "block": "? t(\"common.saving\", \"Saving...\")\n          : isEditing\n            ? t(\"common.save\", \"Save\")\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 125,
          "block": "? t(\"common.saving\", \"Saving...\")\n          : isEditing\n            ? t(\"common.save\", \"Save\")\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 126,
          "block": ": isEditing\n            ? t(\"common.save\", \"Save\")\n            : t(\"common.create\", \"Create\")\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 126,
          "block": ": isEditing\n            ? t(\"common.save\", \"Save\")\n            : t(\"common.create\", \"Create\")\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 127,
          "block": "? t(\"common.save\", \"Save\")\n            : t(\"common.create\", \"Create\")\n      }\n      isSubmitting={is..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 127,
          "block": "? t(\"common.save\", \"Save\")\n            : t(\"common.create\", \"Create\")\n      }\n      isSubmitting={is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 131,
          "block": "size=\"lg\"\n    >\n      {({ control }) => (\n        <>\n          <div className=\"grid grid-cols-1 md:g..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 131,
          "block": "size=\"lg\"\n    >\n      {({ control }) => (\n        <>\n          <div className=\"grid grid-cols-1 md:g..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 132,
          "block": ">\n      {({ control }) => (\n        <>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 132,
          "block": ">\n      {({ control }) => (\n        <>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 133,
          "block": "{({ control }) => (\n        <>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 133,
          "block": "{({ control }) => (\n        <>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 134,
          "block": "<>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 134,
          "block": "<>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 135,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 135,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 136,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"first_name\"\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 136,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"first_name\"\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 137,
          "block": "control={control as Control<FieldValues>}\n              name=\"first_name\"\n              render={({ f..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 137,
          "block": "control={control as Control<FieldValues>}\n              name=\"first_name\"\n              render={({ f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 138,
          "block": "name=\"first_name\"\n              render={({ field }) => (\n                <FormItem>\n                ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 138,
          "block": "name=\"first_name\"\n              render={({ field }) => (\n                <FormItem>\n                ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 139,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.firstNam..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 139,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.firstNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 140,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.firstName\", \"First Name\")}</FormLabel>\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 140,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.firstName\", \"First Name\")}</FormLabel>\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 141,
          "block": "<FormLabel>{t(\"common.firstName\", \"First Name\")}</FormLabel>\n                  <FormControl>\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 141,
          "block": "<FormLabel>{t(\"common.firstName\", \"First Name\")}</FormLabel>\n                  <FormControl>\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 148,
          "block": "/>\n\n            <FormField\n              control={control as Control<FieldValues>}\n              nam..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 148,
          "block": "/>\n\n            <FormField\n              control={control as Control<FieldValues>}\n              nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 149,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"last_name\"\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 149,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"last_name\"\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 150,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"last_name\"\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 150,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"last_name\"\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 151,
          "block": "control={control as Control<FieldValues>}\n              name=\"last_name\"\n              render={({ fi..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 151,
          "block": "control={control as Control<FieldValues>}\n              name=\"last_name\"\n              render={({ fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 152,
          "block": "name=\"last_name\"\n              render={({ field }) => (\n                <FormItem>\n                 ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 152,
          "block": "name=\"last_name\"\n              render={({ field }) => (\n                <FormItem>\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 153,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.lastName..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 153,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.lastName..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 154,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.lastName\", \"Last Name\")}</FormLabel>\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 154,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.lastName\", \"Last Name\")}</FormLabel>\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 155,
          "block": "<FormLabel>{t(\"common.lastName\", \"Last Name\")}</FormLabel>\n                  <FormControl>\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 155,
          "block": "<FormLabel>{t(\"common.lastName\", \"Last Name\")}</FormLabel>\n                  <FormControl>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 163,
          "block": "</div>\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 163,
          "block": "</div>\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 164,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"position\"\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 164,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"position\"\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 165,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"position\"\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 165,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"position\"\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 166,
          "block": "control={control as Control<FieldValues>}\n            name=\"position\"\n            render={({ field }..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 166,
          "block": "control={control as Control<FieldValues>}\n            name=\"position\"\n            render={({ field }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 167,
          "block": "name=\"position\"\n            render={({ field }) => (\n              <FormItem>\n                <FormL..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 167,
          "block": "name=\"position\"\n            render={({ field }) => (\n              <FormItem>\n                <FormL..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 168,
          "block": "render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t(\"employees.position\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 168,
          "block": "render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t(\"employees.position\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 169,
          "block": "<FormItem>\n                <FormLabel>{t(\"employees.position\", \"Position\")}</FormLabel>\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 169,
          "block": "<FormItem>\n                <FormLabel>{t(\"employees.position\", \"Position\")}</FormLabel>\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 170,
          "block": "<FormLabel>{t(\"employees.position\", \"Position\")}</FormLabel>\n                <FormControl>\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 170,
          "block": "<FormLabel>{t(\"employees.position\", \"Position\")}</FormLabel>\n                <FormControl>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 171,
          "block": "<FormControl>\n                  <Input {...field} />\n                </FormControl>\n                ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 171,
          "block": "<FormControl>\n                  <Input {...field} />\n                </FormControl>\n                ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 172,
          "block": "<Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 172,
          "block": "<Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 177,
          "block": "/>\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=\"dep..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 177,
          "block": "/>\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=\"dep..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 178,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"department\"\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 178,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"department\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 179,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"department\"\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 179,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"department\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 180,
          "block": "control={control as Control<FieldValues>}\n            name=\"department\"\n            render={({ field..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 180,
          "block": "control={control as Control<FieldValues>}\n            name=\"department\"\n            render={({ field..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 181,
          "block": "name=\"department\"\n            render={({ field }) => (\n              <FormItem>\n                <For..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 181,
          "block": "name=\"department\"\n            render={({ field }) => (\n              <FormItem>\n                <For..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 182,
          "block": "render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t(\"employees.departmen..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 182,
          "block": "render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t(\"employees.departmen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 183,
          "block": "<FormItem>\n                <FormLabel>{t(\"employees.department\", \"Department\")}</FormLabel>\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 183,
          "block": "<FormItem>\n                <FormLabel>{t(\"employees.department\", \"Department\")}</FormLabel>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 184,
          "block": "<FormLabel>{t(\"employees.department\", \"Department\")}</FormLabel>\n                <FormControl>\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 184,
          "block": "<FormLabel>{t(\"employees.department\", \"Department\")}</FormLabel>\n                <FormControl>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 185,
          "block": "<FormControl>\n                  <Input {...field} value={field.value || \"\"} />\n                </For..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 185,
          "block": "<FormControl>\n                  <Input {...field} value={field.value || \"\"} />\n                </For..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 186,
          "block": "<Input {...field} value={field.value || \"\"} />\n                </FormControl>\n                <FormM..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 186,
          "block": "<Input {...field} value={field.value || \"\"} />\n                </FormControl>\n                <FormM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 192,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 192,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 193,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 193,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 194,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"hire_date\"\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 194,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"hire_date\"\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 195,
          "block": "control={control as Control<FieldValues>}\n              name=\"hire_date\"\n              render={({ fi..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 195,
          "block": "control={control as Control<FieldValues>}\n              name=\"hire_date\"\n              render={({ fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 196,
          "block": "name=\"hire_date\"\n              render={({ field }) => (\n                <FormItem>\n                 ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 196,
          "block": "name=\"hire_date\"\n              render={({ field }) => (\n                <FormItem>\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 197,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"employees.hireD..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 197,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"employees.hireD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 198,
          "block": "<FormItem>\n                  <FormLabel>{t(\"employees.hireDate\", \"Hire Date\")}</FormLabel>\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 198,
          "block": "<FormItem>\n                  <FormLabel>{t(\"employees.hireDate\", \"Hire Date\")}</FormLabel>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 199,
          "block": "<FormLabel>{t(\"employees.hireDate\", \"Hire Date\")}</FormLabel>\n                  <FormControl>\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 199,
          "block": "<FormLabel>{t(\"employees.hireDate\", \"Hire Date\")}</FormLabel>\n                  <FormControl>\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 200,
          "block": "<FormControl>\n                    <Input type=\"date\" {...field} value={field.value || \"\"} />\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 200,
          "block": "<FormControl>\n                    <Input type=\"date\" {...field} value={field.value || \"\"} />\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 201,
          "block": "<Input type=\"date\" {...field} value={field.value || \"\"} />\n                  </FormControl>\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 201,
          "block": "<Input type=\"date\" {...field} value={field.value || \"\"} />\n                  </FormControl>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 206,
          "block": "/>\n\n            <FormField\n              control={control as Control<FieldValues>}\n              nam..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 206,
          "block": "/>\n\n            <FormField\n              control={control as Control<FieldValues>}\n              nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 207,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"status\"\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 207,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"status\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 208,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"status\"\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 208,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"status\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 209,
          "block": "control={control as Control<FieldValues>}\n              name=\"status\"\n              render={({ field..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 209,
          "block": "control={control as Control<FieldValues>}\n              name=\"status\"\n              render={({ field..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 210,
          "block": "name=\"status\"\n              render={({ field }) => (\n                <FormItem>\n                  <F..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 210,
          "block": "name=\"status\"\n              render={({ field }) => (\n                <FormItem>\n                  <F..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 211,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"employees.statu..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 211,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"employees.statu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 212,
          "block": "<FormItem>\n                  <FormLabel>{t(\"employees.status\", \"Status\")}</FormLabel>\n              ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 212,
          "block": "<FormItem>\n                  <FormLabel>{t(\"employees.status\", \"Status\")}</FormLabel>\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 213,
          "block": "<FormLabel>{t(\"employees.status\", \"Status\")}</FormLabel>\n                  <FormControl>\n           ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 213,
          "block": "<FormLabel>{t(\"employees.status\", \"Status\")}</FormLabel>\n                  <FormControl>\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 214,
          "block": "<FormControl>\n                    <select\n                      className=\"w-full px-3 py-2 border r..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 214,
          "block": "<FormControl>\n                    <select\n                      className=\"w-full px-3 py-2 border r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 215,
          "block": "<select\n                      className=\"w-full px-3 py-2 border rounded-md\"\n                      {..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 215,
          "block": "<select\n                      className=\"w-full px-3 py-2 border rounded-md\"\n                      {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 216,
          "block": "className=\"w-full px-3 py-2 border rounded-md\"\n                      {...field}\n                    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 216,
          "block": "className=\"w-full px-3 py-2 border rounded-md\"\n                      {...field}\n                    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 217,
          "block": "{...field}\n                    >\n                      <option value=\"active\">\n                     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 217,
          "block": "{...field}\n                    >\n                      <option value=\"active\">\n                     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 218,
          "block": ">\n                      <option value=\"active\">\n                        {t(\"employees.statusActive\",..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 218,
          "block": ">\n                      <option value=\"active\">\n                        {t(\"employees.statusActive\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 219,
          "block": "<option value=\"active\">\n                        {t(\"employees.statusActive\", \"Active\")}\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 219,
          "block": "<option value=\"active\">\n                        {t(\"employees.statusActive\", \"Active\")}\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 220,
          "block": "{t(\"employees.statusActive\", \"Active\")}\n                      </option>\n                      <optio..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 220,
          "block": "{t(\"employees.statusActive\", \"Active\")}\n                      </option>\n                      <optio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 221,
          "block": "</option>\n                      <option value=\"inactive\">\n                        {t(\"employees.stat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 221,
          "block": "</option>\n                      <option value=\"inactive\">\n                        {t(\"employees.stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 222,
          "block": "<option value=\"inactive\">\n                        {t(\"employees.statusInactive\", \"Inactive\")}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 222,
          "block": "<option value=\"inactive\">\n                        {t(\"employees.statusInactive\", \"Inactive\")}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 223,
          "block": "{t(\"employees.statusInactive\", \"Inactive\")}\n                      </option>\n                      <o..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 223,
          "block": "{t(\"employees.statusInactive\", \"Inactive\")}\n                      </option>\n                      <o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 224,
          "block": "</option>\n                      <option value=\"on_leave\">\n                        {t(\"employees.stat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 224,
          "block": "</option>\n                      <option value=\"on_leave\">\n                        {t(\"employees.stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 225,
          "block": "<option value=\"on_leave\">\n                        {t(\"employees.statusOnLeave\", \"On Leave\")}\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 225,
          "block": "<option value=\"on_leave\">\n                        {t(\"employees.statusOnLeave\", \"On Leave\")}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 226,
          "block": "{t(\"employees.statusOnLeave\", \"On Leave\")}\n                      </option>\n                    </sel..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 226,
          "block": "{t(\"employees.statusOnLeave\", \"On Leave\")}\n                      </option>\n                    </sel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 227,
          "block": "</option>\n                    </select>\n                  </FormControl>\n                  <FormMess..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 227,
          "block": "</option>\n                    </select>\n                  </FormControl>\n                  <FormMess..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 228,
          "block": "</select>\n                  </FormControl>\n                  <FormMessage />\n                </FormI..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 228,
          "block": "</select>\n                  </FormControl>\n                  <FormMessage />\n                </FormI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 232,
          "block": ")}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 232,
          "block": ")}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 233,
          "block": "/>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 233,
          "block": "/>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 234,
          "block": "</div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 234,
          "block": "</div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 235,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 235,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 236,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 236,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 237,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"email\"\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 237,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"email\"\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 238,
          "block": "control={control as Control<FieldValues>}\n              name=\"email\"\n              render={({ field ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 238,
          "block": "control={control as Control<FieldValues>}\n              name=\"email\"\n              render={({ field ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 239,
          "block": "name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <Fo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 239,
          "block": "name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 240,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.email\", ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 240,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.email\", ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 241,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.email\", \"Email\")}</FormLabel>\n                  <..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 241,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.email\", \"Email\")}</FormLabel>\n                  <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 242,
          "block": "<FormLabel>{t(\"common.email\", \"Email\")}</FormLabel>\n                  <FormControl>\n                ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 242,
          "block": "<FormLabel>{t(\"common.email\", \"Email\")}</FormLabel>\n                  <FormControl>\n                ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 243,
          "block": "<FormControl>\n                    <Input type=\"email\" {...field} value={field.value || \"\"} />\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 243,
          "block": "<FormControl>\n                    <Input type=\"email\" {...field} value={field.value || \"\"} />\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 244,
          "block": "<Input type=\"email\" {...field} value={field.value || \"\"} />\n                  </FormControl>\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 244,
          "block": "<Input type=\"email\" {...field} value={field.value || \"\"} />\n                  </FormControl>\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 249,
          "block": "/>\n\n            <FormField\n              control={control as Control<FieldValues>}\n              nam..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 249,
          "block": "/>\n\n            <FormField\n              control={control as Control<FieldValues>}\n              nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 250,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"phone\"\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 250,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"phone\"\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 251,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"phone\"\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 251,
          "block": "<FormField\n              control={control as Control<FieldValues>}\n              name=\"phone\"\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 252,
          "block": "control={control as Control<FieldValues>}\n              name=\"phone\"\n              render={({ field ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 252,
          "block": "control={control as Control<FieldValues>}\n              name=\"phone\"\n              render={({ field ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 253,
          "block": "name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <Fo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 253,
          "block": "name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 254,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.phone\", ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 254,
          "block": "render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t(\"common.phone\", ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 255,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.phone\", \"Phone\")}</FormLabel>\n                  <..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 255,
          "block": "<FormItem>\n                  <FormLabel>{t(\"common.phone\", \"Phone\")}</FormLabel>\n                  <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 256,
          "block": "<FormLabel>{t(\"common.phone\", \"Phone\")}</FormLabel>\n                  <FormControl>\n                ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 256,
          "block": "<FormLabel>{t(\"common.phone\", \"Phone\")}</FormLabel>\n                  <FormControl>\n                ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 257,
          "block": "<FormControl>\n                    <Input {...field} value={field.value || \"\"} />\n                  <..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 257,
          "block": "<FormControl>\n                    <Input {...field} value={field.value || \"\"} />\n                  <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 258,
          "block": "<Input {...field} value={field.value || \"\"} />\n                  </FormControl>\n                  <F..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 258,
          "block": "<Input {...field} value={field.value || \"\"} />\n                  </FormControl>\n                  <F..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 264,
          "block": "</div>\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 264,
          "block": "</div>\n\n          <FormField\n            control={control as Control<FieldValues>}\n            name=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 265,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"notes\"\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 265,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"notes\"\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 266,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"notes\"\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 266,
          "block": "<FormField\n            control={control as Control<FieldValues>}\n            name=\"notes\"\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 267,
          "block": "control={control as Control<FieldValues>}\n            name=\"notes\"\n            render={({ field }) =..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 267,
          "block": "control={control as Control<FieldValues>}\n            name=\"notes\"\n            render={({ field }) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 268,
          "block": "name=\"notes\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabe..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 268,
          "block": "name=\"notes\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 269,
          "block": "render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t(\"common.notes\", \"Not..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 269,
          "block": "render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t(\"common.notes\", \"Not..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 270,
          "block": "<FormItem>\n                <FormLabel>{t(\"common.notes\", \"Notes\")}</FormLabel>\n                <Form..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 270,
          "block": "<FormItem>\n                <FormLabel>{t(\"common.notes\", \"Notes\")}</FormLabel>\n                <Form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 271,
          "block": "<FormLabel>{t(\"common.notes\", \"Notes\")}</FormLabel>\n                <FormControl>\n                  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 271,
          "block": "<FormLabel>{t(\"common.notes\", \"Notes\")}</FormLabel>\n                <FormControl>\n                  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 272,
          "block": "<FormControl>\n                  <textarea\n                    className=\"w-full h-20 px-3 py-2 borde..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 272,
          "block": "<FormControl>\n                  <textarea\n                    className=\"w-full h-20 px-3 py-2 borde..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 273,
          "block": "<textarea\n                    className=\"w-full h-20 px-3 py-2 border rounded-md resize-none\"\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 273,
          "block": "<textarea\n                    className=\"w-full h-20 px-3 py-2 border rounded-md resize-none\"\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 274,
          "block": "className=\"w-full h-20 px-3 py-2 border rounded-md resize-none\"\n                    {...field}\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 274,
          "block": "className=\"w-full h-20 px-3 py-2 border rounded-md resize-none\"\n                    {...field}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 275,
          "block": "{...field}\n                    value={field.value || \"\"}\n                  />\n                </Form..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 275,
          "block": "{...field}\n                    value={field.value || \"\"}\n                  />\n                </Form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 276,
          "block": "value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormM..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 276,
          "block": "value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 277,
          "block": "/>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeDialogStandardized.tsx",
          "startLine": 277,
          "block": "/>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 1,
          "block": "import React, { useCallback } from \"react\";\nimport { Button } from \"@/core/components/ui/primitives/..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 1,
          "block": "import React, { useCallback } from \"react\";\nimport { Button } from \"@/core/components/ui/primitives/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/primitives/button\";\nimport { Plus } from \"lucide-react\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/primitives/button\";\nimport { Plus } from \"lucide-react\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 3,
          "block": "import { Plus } from \"lucide-react\";\nimport { useEmployeeDialog } from \"../hooks/useEmployeeDialog\";..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 3,
          "block": "import { Plus } from \"lucide-react\";\nimport { useEmployeeDialog } from \"../hooks/useEmployeeDialog\";..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 4,
          "block": "import { useEmployeeDialog } from \"../hooks/useEmployeeDialog\";\nimport { Employee } from \"../types/e..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 4,
          "block": "import { useEmployeeDialog } from \"../hooks/useEmployeeDialog\";\nimport { Employee } from \"../types/e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 5,
          "block": "import { Employee } from \"../types/employees.types\";\nimport EmployeeDialogStandardized, {\n  Employee..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 5,
          "block": "import { Employee } from \"../types/employees.types\";\nimport EmployeeDialogStandardized, {\n  Employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 6,
          "block": "import EmployeeDialogStandardized, {\n  EmployeeFormValues,\n} from \"./EmployeeDialogStandardized\";\n\ni..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 6,
          "block": "import EmployeeDialogStandardized, {\n  EmployeeFormValues,\n} from \"./EmployeeDialogStandardized\";\n\ni..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 8,
          "block": "} from \"./EmployeeDialogStandardized\";\n\ninterface EmployeeManagerProps {\n  /**\n   * Callback when an..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 8,
          "block": "} from \"./EmployeeDialogStandardized\";\n\ninterface EmployeeManagerProps {\n  /**\n   * Callback when an..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 10,
          "block": "interface EmployeeManagerProps {\n  /**\n   * Callback when an employee is created\n   */\n  onEmployeeC..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 10,
          "block": "interface EmployeeManagerProps {\n  /**\n   * Callback when an employee is created\n   */\n  onEmployeeC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 11,
          "block": "/**\n   * Callback when an employee is created\n   */\n  onEmployeeCreated?: (employee: Employee) => vo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 11,
          "block": "/**\n   * Callback when an employee is created\n   */\n  onEmployeeCreated?: (employee: Employee) => vo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 12,
          "block": "* Callback when an employee is created\n   */\n  onEmployeeCreated?: (employee: Employee) => void;\n\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 12,
          "block": "* Callback when an employee is created\n   */\n  onEmployeeCreated?: (employee: Employee) => void;\n\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 13,
          "block": "*/\n  onEmployeeCreated?: (employee: Employee) => void;\n\n  /**\n   * Callback when an employee is upda..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 13,
          "block": "*/\n  onEmployeeCreated?: (employee: Employee) => void;\n\n  /**\n   * Callback when an employee is upda..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 14,
          "block": "onEmployeeCreated?: (employee: Employee) => void;\n\n  /**\n   * Callback when an employee is updated\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 14,
          "block": "onEmployeeCreated?: (employee: Employee) => void;\n\n  /**\n   * Callback when an employee is updated\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 15,
          "block": "/**\n   * Callback when an employee is updated\n   */\n  onEmployeeUpdated?: (employee: Employee) => vo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 15,
          "block": "/**\n   * Callback when an employee is updated\n   */\n  onEmployeeUpdated?: (employee: Employee) => vo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 16,
          "block": "/**\n   * Callback when an employee is updated\n   */\n  onEmployeeUpdated?: (employee: Employee) => vo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 16,
          "block": "/**\n   * Callback when an employee is updated\n   */\n  onEmployeeUpdated?: (employee: Employee) => vo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 19,
          "block": "onEmployeeUpdated?: (employee: Employee) => void;\n}\n\n/**\n * Employee management component that demon..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 19,
          "block": "onEmployeeUpdated?: (employee: Employee) => void;\n}\n\n/**\n * Employee management component that demon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 21,
          "block": "/**\n * Employee management component that demonstrates using the refactored hooks\n *\n * This compone..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 21,
          "block": "/**\n * Employee management component that demonstrates using the refactored hooks\n *\n * This compone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 22,
          "block": "/**\n * Employee management component that demonstrates using the refactored hooks\n *\n * This compone..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 22,
          "block": "/**\n * Employee management component that demonstrates using the refactored hooks\n *\n * This compone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 23,
          "block": "* Employee management component that demonstrates using the refactored hooks\n *\n * This component sh..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 23,
          "block": "* Employee management component that demonstrates using the refactored hooks\n *\n * This component sh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 24,
          "block": "*\n * This component shows how to use the new hooks architecture to manage employee operations\n * wit..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 24,
          "block": "*\n * This component shows how to use the new hooks architecture to manage employee operations\n * wit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 25,
          "block": "* This component shows how to use the new hooks architecture to manage employee operations\n * with s..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 25,
          "block": "* This component shows how to use the new hooks architecture to manage employee operations\n * with s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 26,
          "block": "* with significantly less boilerplate code.\n */\nexport function EmployeeManager({\n  onEmployeeCreate..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 26,
          "block": "* with significantly less boilerplate code.\n */\nexport function EmployeeManager({\n  onEmployeeCreate..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 27,
          "block": "*/\nexport function EmployeeManager({\n  onEmployeeCreated,\n  onEmployeeUpdated,\n}: EmployeeManagerPro..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 27,
          "block": "*/\nexport function EmployeeManager({\n  onEmployeeCreated,\n  onEmployeeUpdated,\n}: EmployeeManagerPro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 28,
          "block": "export function EmployeeManager({\n  onEmployeeCreated,\n  onEmployeeUpdated,\n}: EmployeeManagerProps)..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 28,
          "block": "export function EmployeeManager({\n  onEmployeeCreated,\n  onEmployeeUpdated,\n}: EmployeeManagerProps)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 29,
          "block": "onEmployeeCreated,\n  onEmployeeUpdated,\n}: EmployeeManagerProps) {\n  // Use our new hook with much l..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 29,
          "block": "onEmployeeCreated,\n  onEmployeeUpdated,\n}: EmployeeManagerProps) {\n  // Use our new hook with much l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 30,
          "block": "onEmployeeUpdated,\n}: EmployeeManagerProps) {\n  // Use our new hook with much less boilerplate\n  con..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 30,
          "block": "onEmployeeUpdated,\n}: EmployeeManagerProps) {\n  // Use our new hook with much less boilerplate\n  con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 31,
          "block": "}: EmployeeManagerProps) {\n  // Use our new hook with much less boilerplate\n  const employeeDialog =..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 31,
          "block": "}: EmployeeManagerProps) {\n  // Use our new hook with much less boilerplate\n  const employeeDialog =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 32,
          "block": "// Use our new hook with much less boilerplate\n  const employeeDialog = useEmployeeDialog({\n    onCr..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 32,
          "block": "// Use our new hook with much less boilerplate\n  const employeeDialog = useEmployeeDialog({\n    onCr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 33,
          "block": "const employeeDialog = useEmployeeDialog({\n    onCreateSuccess: onEmployeeCreated,\n    onUpdateSucce..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 33,
          "block": "const employeeDialog = useEmployeeDialog({\n    onCreateSuccess: onEmployeeCreated,\n    onUpdateSucce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 34,
          "block": "onCreateSuccess: onEmployeeCreated,\n    onUpdateSuccess: onEmployeeUpdated,\n  });\n\n  // Handler for ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 34,
          "block": "onCreateSuccess: onEmployeeCreated,\n    onUpdateSuccess: onEmployeeUpdated,\n  });\n\n  // Handler for ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 35,
          "block": "onUpdateSuccess: onEmployeeUpdated,\n  });\n\n  // Handler for form submission - now much simpler with ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 35,
          "block": "onUpdateSuccess: onEmployeeUpdated,\n  });\n\n  // Handler for form submission - now much simpler with ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 36,
          "block": "});\n\n  // Handler for form submission - now much simpler with our new hook\n  const handleSubmit = us..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 36,
          "block": "});\n\n  // Handler for form submission - now much simpler with our new hook\n  const handleSubmit = us..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 37,
          "block": "// Handler for form submission - now much simpler with our new hook\n  const handleSubmit = useCallba..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 37,
          "block": "// Handler for form submission - now much simpler with our new hook\n  const handleSubmit = useCallba..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 38,
          "block": "// Handler for form submission - now much simpler with our new hook\n  const handleSubmit = useCallba..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 38,
          "block": "// Handler for form submission - now much simpler with our new hook\n  const handleSubmit = useCallba..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 39,
          "block": "const handleSubmit = useCallback(\n    async (data: EmployeeFormValues) => {\n      try {\n        awai..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 39,
          "block": "const handleSubmit = useCallback(\n    async (data: EmployeeFormValues) => {\n      try {\n        awai..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 40,
          "block": "async (data: EmployeeFormValues) => {\n      try {\n        await employeeDialog.handleSubmit(data);\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 40,
          "block": "async (data: EmployeeFormValues) => {\n      try {\n        await employeeDialog.handleSubmit(data);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 41,
          "block": "try {\n        await employeeDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 41,
          "block": "try {\n        await employeeDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 42,
          "block": "await employeeDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n        consol..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 42,
          "block": "await employeeDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n        consol..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 43,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting employee form:\", error)..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 43,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting employee form:\", error)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 44,
          "block": "} catch (error) {\n        console.error(\"Error submitting employee form:\", error);\n        return fa..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 44,
          "block": "} catch (error) {\n        console.error(\"Error submitting employee form:\", error);\n        return fa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 45,
          "block": "console.error(\"Error submitting employee form:\", error);\n        return false;\n      }\n    },\n    [e..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 45,
          "block": "console.error(\"Error submitting employee form:\", error);\n        return false;\n      }\n    },\n    [e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 51,
          "block": "return (\n    <div>\n      {/* Add employee button */}\n      <Button onClick={employeeDialog.openCreat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 51,
          "block": "return (\n    <div>\n      {/* Add employee button */}\n      <Button onClick={employeeDialog.openCreat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 52,
          "block": "return (\n    <div>\n      {/* Add employee button */}\n      <Button onClick={employeeDialog.openCreat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 52,
          "block": "return (\n    <div>\n      {/* Add employee button */}\n      <Button onClick={employeeDialog.openCreat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 53,
          "block": "<div>\n      {/* Add employee button */}\n      <Button onClick={employeeDialog.openCreate} className=..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 53,
          "block": "<div>\n      {/* Add employee button */}\n      <Button onClick={employeeDialog.openCreate} className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 54,
          "block": "{/* Add employee button */}\n      <Button onClick={employeeDialog.openCreate} className=\"mb-4\">\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 54,
          "block": "{/* Add employee button */}\n      <Button onClick={employeeDialog.openCreate} className=\"mb-4\">\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 55,
          "block": "<Button onClick={employeeDialog.openCreate} className=\"mb-4\">\n        <Plus className=\"mr-2 h-4 w-4\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 55,
          "block": "<Button onClick={employeeDialog.openCreate} className=\"mb-4\">\n        <Plus className=\"mr-2 h-4 w-4\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 56,
          "block": "<Plus className=\"mr-2 h-4 w-4\" />\n        Add Employee\n      </Button>\n\n      {/* Employee dialog us..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 56,
          "block": "<Plus className=\"mr-2 h-4 w-4\" />\n        Add Employee\n      </Button>\n\n      {/* Employee dialog us..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 57,
          "block": "Add Employee\n      </Button>\n\n      {/* Employee dialog using our new hook */}\n      <EmployeeDialog..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 57,
          "block": "Add Employee\n      </Button>\n\n      {/* Employee dialog using our new hook */}\n      <EmployeeDialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 58,
          "block": "</Button>\n\n      {/* Employee dialog using our new hook */}\n      <EmployeeDialogStandardized\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 58,
          "block": "</Button>\n\n      {/* Employee dialog using our new hook */}\n      <EmployeeDialogStandardized\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 59,
          "block": "{/* Employee dialog using our new hook */}\n      <EmployeeDialogStandardized\n        open={employeeD..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 59,
          "block": "{/* Employee dialog using our new hook */}\n      <EmployeeDialogStandardized\n        open={employeeD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 60,
          "block": "{/* Employee dialog using our new hook */}\n      <EmployeeDialogStandardized\n        open={employeeD..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 60,
          "block": "{/* Employee dialog using our new hook */}\n      <EmployeeDialogStandardized\n        open={employeeD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 61,
          "block": "<EmployeeDialogStandardized\n        open={employeeDialog.isOpen}\n        onOpenChange={employeeDialo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 61,
          "block": "<EmployeeDialogStandardized\n        open={employeeDialog.isOpen}\n        onOpenChange={employeeDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 62,
          "block": "open={employeeDialog.isOpen}\n        onOpenChange={employeeDialog.onOpenChange}\n        employee={em..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 62,
          "block": "open={employeeDialog.isOpen}\n        onOpenChange={employeeDialog.onOpenChange}\n        employee={em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 63,
          "block": "onOpenChange={employeeDialog.onOpenChange}\n        employee={employeeDialog.selectedEmployee as Empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 63,
          "block": "onOpenChange={employeeDialog.onOpenChange}\n        employee={employeeDialog.selectedEmployee as Empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeeManager.tsx",
          "startLine": 64,
          "block": "employee={employeeDialog.selectedEmployee as Employee}\n        onSubmit={handleSubmit}\n        isLoa..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeeManager.tsx",
          "startLine": 64,
          "block": "employee={employeeDialog.selectedEmployee as Employee}\n        onSubmit={handleSubmit}\n        isLoa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 1,
          "block": "import { useMemo, useState, useCallback } from \"react\";\nimport { useTranslation } from \"react-i18nex..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 1,
          "block": "import { useMemo, useState, useCallback } from \"react\";\nimport { useTranslation } from \"react-i18nex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { format } from \"date-fns\";\nimport {\n  User,\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { format } from \"date-fns\";\nimport {\n  User,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 13,
          "block": "import {\n  FiltersShape,\n  createBadgeCell,\n  createDateCell,\n} from \"@/shared/components/unified/St..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 13,
          "block": "import {\n  FiltersShape,\n  createBadgeCell,\n  createDateCell,\n} from \"@/shared/components/unified/St..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 14,
          "block": "FiltersShape,\n  createBadgeCell,\n  createDateCell,\n} from \"@/shared/components/unified/StandardizedD..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 14,
          "block": "FiltersShape,\n  createBadgeCell,\n  createDateCell,\n} from \"@/shared/components/unified/StandardizedD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 15,
          "block": "createBadgeCell,\n  createDateCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\nimpor..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 15,
          "block": "createBadgeCell,\n  createDateCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\nimpor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 16,
          "block": "createDateCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { ResponsiveDataT..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 16,
          "block": "createDateCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { ResponsiveDataT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 17,
          "block": "} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { ResponsiveDataTable } from \"@/s..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 17,
          "block": "} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { ResponsiveDataTable } from \"@/s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 18,
          "block": "import { ResponsiveDataTable } from \"@/shared/components/unified/ResponsiveDataTable\";\nimport { Badg..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 18,
          "block": "import { ResponsiveDataTable } from \"@/shared/components/unified/ResponsiveDataTable\";\nimport { Badg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 19,
          "block": "import { Badge } from \"@/core/components/ui/primitives/badge\";\nimport type { Employee } from \"../typ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 19,
          "block": "import { Badge } from \"@/core/components/ui/primitives/badge\";\nimport type { Employee } from \"../typ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 20,
          "block": "import type { Employee } from \"../types/employees.types\";\nimport { VisuallyHidden } from \"@/core/com..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 20,
          "block": "import type { Employee } from \"../types/employees.types\";\nimport { VisuallyHidden } from \"@/core/com..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 21,
          "block": "import { VisuallyHidden } from \"@/core/components/ui/accessibility/visually-hidden\";\n\ninterface Empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 21,
          "block": "import { VisuallyHidden } from \"@/core/components/ui/accessibility/visually-hidden\";\n\ninterface Empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 22,
          "block": "interface EmployeesTableStandardizedProps {\n  employees: Employee[];\n  isLoading: boolean;\n  onEdit?..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 22,
          "block": "interface EmployeesTableStandardizedProps {\n  employees: Employee[];\n  isLoading: boolean;\n  onEdit?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 23,
          "block": "interface EmployeesTableStandardizedProps {\n  employees: Employee[];\n  isLoading: boolean;\n  onEdit?..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 23,
          "block": "interface EmployeesTableStandardizedProps {\n  employees: Employee[];\n  isLoading: boolean;\n  onEdit?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 24,
          "block": "employees: Employee[];\n  isLoading: boolean;\n  onEdit?: (employee: Employee) => void;\n  onDelete?: (..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 24,
          "block": "employees: Employee[];\n  isLoading: boolean;\n  onEdit?: (employee: Employee) => void;\n  onDelete?: (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 25,
          "block": "isLoading: boolean;\n  onEdit?: (employee: Employee) => void;\n  onDelete?: (id: string) => void;\n  on..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 25,
          "block": "isLoading: boolean;\n  onEdit?: (employee: Employee) => void;\n  onDelete?: (id: string) => void;\n  on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 26,
          "block": "onEdit?: (employee: Employee) => void;\n  onDelete?: (id: string) => void;\n  onView?: (employee: Empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 26,
          "block": "onEdit?: (employee: Employee) => void;\n  onDelete?: (id: string) => void;\n  onView?: (employee: Empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 27,
          "block": "onDelete?: (id: string) => void;\n  onView?: (employee: Employee) => void;\n  positions?: { id: string..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 27,
          "block": "onDelete?: (id: string) => void;\n  onView?: (employee: Employee) => void;\n  positions?: { id: string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 28,
          "block": "onView?: (employee: Employee) => void;\n  positions?: { id: string; name: string }[];\n  departments?:..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 28,
          "block": "onView?: (employee: Employee) => void;\n  positions?: { id: string; name: string }[];\n  departments?:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 29,
          "block": "positions?: { id: string; name: string }[];\n  departments?: { id: string; name: string }[];\n  onFilt..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 29,
          "block": "positions?: { id: string; name: string }[];\n  departments?: { id: string; name: string }[];\n  onFilt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 30,
          "block": "departments?: { id: string; name: string }[];\n  onFiltersChange?: (filters: FiltersShape) => void;\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 30,
          "block": "departments?: { id: string; name: string }[];\n  onFiltersChange?: (filters: FiltersShape) => void;\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 31,
          "block": "onFiltersChange?: (filters: FiltersShape) => void;\n  totalCount?: number;\n  onPageChange?: (page: nu..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 22,
          "block": "onFiltersChange?: (filters: FiltersShape) => void;\n  totalCount?: number;\n  onPageChange?: (page: nu..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 23,
          "block": "onFiltersChange?: (filters: FiltersShape) => void;\n  totalCount?: number;\n  onPageChange?: (page: nu..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 31,
          "block": "onFiltersChange?: (filters: FiltersShape) => void;\n  totalCount?: number;\n  onPageChange?: (page: nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 32,
          "block": "totalCount?: number;\n  onPageChange?: (page: number, pageSize: number) => void;\n  onSortChange?: (co..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 23,
          "block": "totalCount?: number;\n  onPageChange?: (page: number, pageSize: number) => void;\n  onSortChange?: (co..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 24,
          "block": "totalCount?: number;\n  onPageChange?: (page: number, pageSize: number) => void;\n  onSortChange?: (co..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 32,
          "block": "totalCount?: number;\n  onPageChange?: (page: number, pageSize: number) => void;\n  onSortChange?: (co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 33,
          "block": "onPageChange?: (page: number, pageSize: number) => void;\n  onSortChange?: (column: string | null, di..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 33,
          "block": "onPageChange?: (page: number, pageSize: number) => void;\n  onSortChange?: (column: string | null, di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 34,
          "block": "onSortChange?: (column: string | null, direction: \"asc\" | \"desc\") => void;\n}\n\nexport function Employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 34,
          "block": "onSortChange?: (column: string | null, direction: \"asc\" | \"desc\") => void;\n}\n\nexport function Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 45,
          "block": "onFiltersChange = () => {},\n  totalCount = 0,\n  onPageChange,\n  onSortChange,\n}: EmployeesTableStand..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 45,
          "block": "onFiltersChange = () => {},\n  totalCount = 0,\n  onPageChange,\n  onSortChange,\n}: EmployeesTableStand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 46,
          "block": "totalCount = 0,\n  onPageChange,\n  onSortChange,\n}: EmployeesTableStandardizedProps) {\n  const { t } ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 46,
          "block": "totalCount = 0,\n  onPageChange,\n  onSortChange,\n}: EmployeesTableStandardizedProps) {\n  const { t } ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 47,
          "block": "onPageChange,\n  onSortChange,\n}: EmployeesTableStandardizedProps) {\n  const { t } = useTranslation([..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 47,
          "block": "onPageChange,\n  onSortChange,\n}: EmployeesTableStandardizedProps) {\n  const { t } = useTranslation([..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 48,
          "block": "onSortChange,\n}: EmployeesTableStandardizedProps) {\n  const { t } = useTranslation([\"employees\", \"co..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 48,
          "block": "onSortChange,\n}: EmployeesTableStandardizedProps) {\n  const { t } = useTranslation([\"employees\", \"co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 49,
          "block": "}: EmployeesTableStandardizedProps) {\n  const { t } = useTranslation([\"employees\", \"common\"]);\n\n  //..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 49,
          "block": "}: EmployeesTableStandardizedProps) {\n  const { t } = useTranslation([\"employees\", \"common\"]);\n\n  //..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 50,
          "block": "const { t } = useTranslation([\"employees\", \"common\"]);\n\n  // Initial filter state\n  const [filters, ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 50,
          "block": "const { t } = useTranslation([\"employees\", \"common\"]);\n\n  // Initial filter state\n  const [filters, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 51,
          "block": "// Initial filter state\n  const [filters, setFilters] = useState<FiltersShape>({\n    searchTerm: \"\",..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 51,
          "block": "// Initial filter state\n  const [filters, setFilters] = useState<FiltersShape>({\n    searchTerm: \"\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 52,
          "block": "// Initial filter state\n  const [filters, setFilters] = useState<FiltersShape>({\n    searchTerm: \"\",..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 52,
          "block": "// Initial filter state\n  const [filters, setFilters] = useState<FiltersShape>({\n    searchTerm: \"\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 55,
          "block": "status: \"all\",\n  });\n\n  // Handle filter changes\n  const handleFilterChange = (newFilters: FiltersSh..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 55,
          "block": "status: \"all\",\n  });\n\n  // Handle filter changes\n  const handleFilterChange = (newFilters: FiltersSh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 56,
          "block": "});\n\n  // Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    set..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 45,
          "block": "});\n\n  // Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    set..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 56,
          "block": "});\n\n  // Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    set..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 57,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 46,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 78,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 57,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 58,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 47,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 79,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 58,
          "block": "// Handle filter changes\n  const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 59,
          "block": "const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters(newFilters);\n    onFilters..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 48,
          "block": "const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters(newFilters);\n    onFilters..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 80,
          "block": "const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters(newFilters);\n    onFilters..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 59,
          "block": "const handleFilterChange = (newFilters: FiltersShape) => {\n    setFilters(newFilters);\n    onFilters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 61,
          "block": "onFiltersChange(newFilters);\n  };\n\n  // Get status badge variant\n  const getStatusBadgeVariant = use..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 61,
          "block": "onFiltersChange(newFilters);\n  };\n\n  // Get status badge variant\n  const getStatusBadgeVariant = use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 62,
          "block": "};\n\n  // Get status badge variant\n  const getStatusBadgeVariant = useCallback((status?: string) => {..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 62,
          "block": "};\n\n  // Get status badge variant\n  const getStatusBadgeVariant = useCallback((status?: string) => {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 63,
          "block": "// Get status badge variant\n  const getStatusBadgeVariant = useCallback((status?: string) => {\n    i..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 63,
          "block": "// Get status badge variant\n  const getStatusBadgeVariant = useCallback((status?: string) => {\n    i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 64,
          "block": "// Get status badge variant\n  const getStatusBadgeVariant = useCallback((status?: string) => {\n    i..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 64,
          "block": "// Get status badge variant\n  const getStatusBadgeVariant = useCallback((status?: string) => {\n    i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 65,
          "block": "const getStatusBadgeVariant = useCallback((status?: string) => {\n    if (!status) return \"outline\";\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 65,
          "block": "const getStatusBadgeVariant = useCallback((status?: string) => {\n    if (!status) return \"outline\";\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 66,
          "block": "if (!status) return \"outline\";\n\n    switch (status.toLowerCase()) {\n      case \"active\":\n        ret..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 66,
          "block": "if (!status) return \"outline\";\n\n    switch (status.toLowerCase()) {\n      case \"active\":\n        ret..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 67,
          "block": "switch (status.toLowerCase()) {\n      case \"active\":\n        return \"success\";\n      case \"on_leave\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 67,
          "block": "switch (status.toLowerCase()) {\n      case \"active\":\n        return \"success\";\n      case \"on_leave\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 68,
          "block": "switch (status.toLowerCase()) {\n      case \"active\":\n        return \"success\";\n      case \"on_leave\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 68,
          "block": "switch (status.toLowerCase()) {\n      case \"active\":\n        return \"success\";\n      case \"on_leave\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 69,
          "block": "case \"active\":\n        return \"success\";\n      case \"on_leave\":\n        return \"warning\";\n      case..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 69,
          "block": "case \"active\":\n        return \"success\";\n      case \"on_leave\":\n        return \"warning\";\n      case..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 70,
          "block": "return \"success\";\n      case \"on_leave\":\n        return \"warning\";\n      case \"inactive\":\n        re..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 70,
          "block": "return \"success\";\n      case \"on_leave\":\n        return \"warning\";\n      case \"inactive\":\n        re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 71,
          "block": "case \"on_leave\":\n        return \"warning\";\n      case \"inactive\":\n        return \"secondary\";\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 71,
          "block": "case \"on_leave\":\n        return \"warning\";\n      case \"inactive\":\n        return \"secondary\";\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 72,
          "block": "return \"warning\";\n      case \"inactive\":\n        return \"secondary\";\n      default:\n        return \"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 72,
          "block": "return \"warning\";\n      case \"inactive\":\n        return \"secondary\";\n      default:\n        return \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 79,
          "block": "// Format status text\n  const formatStatus = useCallback(\n    (status?: string) => {\n      if (!stat..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 80,
          "block": "// Format status text\n  const formatStatus = useCallback(\n    (status?: string) => {\n      if (!stat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 79,
          "block": "// Format status text\n  const formatStatus = useCallback(\n    (status?: string) => {\n      if (!stat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 80,
          "block": "// Format status text\n  const formatStatus = useCallback(\n    (status?: string) => {\n      if (!stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 81,
          "block": "const formatStatus = useCallback(\n    (status?: string) => {\n      if (!status) return \"Unknown\";\n\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 81,
          "block": "const formatStatus = useCallback(\n    (status?: string) => {\n      if (!status) return \"Unknown\";\n\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 82,
          "block": "(status?: string) => {\n      if (!status) return \"Unknown\";\n\n      switch (status.toLowerCase()) {\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 82,
          "block": "(status?: string) => {\n      if (!status) return \"Unknown\";\n\n      switch (status.toLowerCase()) {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 83,
          "block": "if (!status) return \"Unknown\";\n\n      switch (status.toLowerCase()) {\n        case \"active\":\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 83,
          "block": "if (!status) return \"Unknown\";\n\n      switch (status.toLowerCase()) {\n        case \"active\":\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 84,
          "block": "switch (status.toLowerCase()) {\n        case \"active\":\n          return t(\"employees:status.active\",..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 84,
          "block": "switch (status.toLowerCase()) {\n        case \"active\":\n          return t(\"employees:status.active\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 85,
          "block": "switch (status.toLowerCase()) {\n        case \"active\":\n          return t(\"employees:status.active\",..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 85,
          "block": "switch (status.toLowerCase()) {\n        case \"active\":\n          return t(\"employees:status.active\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 86,
          "block": "case \"active\":\n          return t(\"employees:status.active\", \"Active\");\n        case \"on_leave\":\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 86,
          "block": "case \"active\":\n          return t(\"employees:status.active\", \"Active\");\n        case \"on_leave\":\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 87,
          "block": "return t(\"employees:status.active\", \"Active\");\n        case \"on_leave\":\n          return t(\"employee..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 87,
          "block": "return t(\"employees:status.active\", \"Active\");\n        case \"on_leave\":\n          return t(\"employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 88,
          "block": "case \"on_leave\":\n          return t(\"employees:status.onLeave\", \"On Leave\");\n        case \"inactive\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 88,
          "block": "case \"on_leave\":\n          return t(\"employees:status.onLeave\", \"On Leave\");\n        case \"inactive\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 89,
          "block": "return t(\"employees:status.onLeave\", \"On Leave\");\n        case \"inactive\":\n          return t(\"emplo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 89,
          "block": "return t(\"employees:status.onLeave\", \"On Leave\");\n        case \"inactive\":\n          return t(\"emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 90,
          "block": "case \"inactive\":\n          return t(\"employees:status.inactive\", \"Inactive\");\n        default:\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 90,
          "block": "case \"inactive\":\n          return t(\"employees:status.inactive\", \"Inactive\");\n        default:\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 91,
          "block": "return t(\"employees:status.inactive\", \"Inactive\");\n        default:\n          return status;\n      }..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 91,
          "block": "return t(\"employees:status.inactive\", \"Inactive\");\n        default:\n          return status;\n      }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 97,
          "block": ");\n\n  // Handle edit with full employee object\n  const handleEdit = useCallback(\n    (id: string) =>..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 97,
          "block": ");\n\n  // Handle edit with full employee object\n  const handleEdit = useCallback(\n    (id: string) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 98,
          "block": "// Handle edit with full employee object\n  const handleEdit = useCallback(\n    (id: string) => {\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 98,
          "block": "// Handle edit with full employee object\n  const handleEdit = useCallback(\n    (id: string) => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 99,
          "block": "// Handle edit with full employee object\n  const handleEdit = useCallback(\n    (id: string) => {\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 99,
          "block": "// Handle edit with full employee object\n  const handleEdit = useCallback(\n    (id: string) => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 100,
          "block": "const handleEdit = useCallback(\n    (id: string) => {\n      if (onEdit) {\n        const employee = e..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 100,
          "block": "const handleEdit = useCallback(\n    (id: string) => {\n      if (onEdit) {\n        const employee = e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 101,
          "block": "(id: string) => {\n      if (onEdit) {\n        const employee = employees.find((emp) => emp.id === id..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 101,
          "block": "(id: string) => {\n      if (onEdit) {\n        const employee = employees.find((emp) => emp.id === id..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 102,
          "block": "if (onEdit) {\n        const employee = employees.find((emp) => emp.id === id);\n        if (employee)..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 102,
          "block": "if (onEdit) {\n        const employee = employees.find((emp) => emp.id === id);\n        if (employee)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 103,
          "block": "const employee = employees.find((emp) => emp.id === id);\n        if (employee) {\n          onEdit(em..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 103,
          "block": "const employee = employees.find((emp) => emp.id === id);\n        if (employee) {\n          onEdit(em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 109,
          "block": "[employees, onEdit]\n  );\n\n  // Handle view with full employee object\n  const handleRowClick = useCal..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 109,
          "block": "[employees, onEdit]\n  );\n\n  // Handle view with full employee object\n  const handleRowClick = useCal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 110,
          "block": ");\n\n  // Handle view with full employee object\n  const handleRowClick = useCallback(\n    (employee: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 110,
          "block": ");\n\n  // Handle view with full employee object\n  const handleRowClick = useCallback(\n    (employee: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 111,
          "block": "// Handle view with full employee object\n  const handleRowClick = useCallback(\n    (employee: Employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 111,
          "block": "// Handle view with full employee object\n  const handleRowClick = useCallback(\n    (employee: Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 112,
          "block": "// Handle view with full employee object\n  const handleRowClick = useCallback(\n    (employee: Employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 112,
          "block": "// Handle view with full employee object\n  const handleRowClick = useCallback(\n    (employee: Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 113,
          "block": "const handleRowClick = useCallback(\n    (employee: Employee) => {\n      if (onView) {\n        onView..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 113,
          "block": "const handleRowClick = useCallback(\n    (employee: Employee) => {\n      if (onView) {\n        onView..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 119,
          "block": "[onView]\n  );\n\n  // Format employee name\n  const formatEmployeeName = useCallback((employee: Employe..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 119,
          "block": "[onView]\n  );\n\n  // Format employee name\n  const formatEmployeeName = useCallback((employee: Employe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 120,
          "block": ");\n\n  // Format employee name\n  const formatEmployeeName = useCallback((employee: Employee) => {\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 120,
          "block": ");\n\n  // Format employee name\n  const formatEmployeeName = useCallback((employee: Employee) => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 121,
          "block": "// Format employee name\n  const formatEmployeeName = useCallback((employee: Employee) => {\n    retur..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 122,
          "block": "// Format employee name\n  const formatEmployeeName = useCallback((employee: Employee) => {\n    retur..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 121,
          "block": "// Format employee name\n  const formatEmployeeName = useCallback((employee: Employee) => {\n    retur..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 122,
          "block": "// Format employee name\n  const formatEmployeeName = useCallback((employee: Employee) => {\n    retur..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 123,
          "block": "const formatEmployeeName = useCallback((employee: Employee) => {\n    return `${employee.first_name} ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 123,
          "block": "const formatEmployeeName = useCallback((employee: Employee) => {\n    return `${employee.first_name} ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 124,
          "block": "return `${employee.first_name} ${employee.last_name}`;\n  }, []);\n\n  // Define columns for the Standa..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 124,
          "block": "return `${employee.first_name} ${employee.last_name}`;\n  }, []);\n\n  // Define columns for the Standa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 127,
          "block": "// Define columns for the StandardizedDataTable\n  const columns = useMemo(\n    () => [\n      {\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 127,
          "block": "// Define columns for the StandardizedDataTable\n  const columns = useMemo(\n    () => [\n      {\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 128,
          "block": "const columns = useMemo(\n    () => [\n      {\n        header: t(\"employees:fields.name\"),\n        acc..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 128,
          "block": "const columns = useMemo(\n    () => [\n      {\n        header: t(\"employees:fields.name\"),\n        acc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 129,
          "block": "() => [\n      {\n        header: t(\"employees:fields.name\"),\n        accessorKey: \"id\" as keyof Emplo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 129,
          "block": "() => [\n      {\n        header: t(\"employees:fields.name\"),\n        accessorKey: \"id\" as keyof Emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 130,
          "block": "{\n        header: t(\"employees:fields.name\"),\n        accessorKey: \"id\" as keyof Employee,\n        c..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 130,
          "block": "{\n        header: t(\"employees:fields.name\"),\n        accessorKey: \"id\" as keyof Employee,\n        c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 131,
          "block": "header: t(\"employees:fields.name\"),\n        accessorKey: \"id\" as keyof Employee,\n        cell: (_val..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 131,
          "block": "header: t(\"employees:fields.name\"),\n        accessorKey: \"id\" as keyof Employee,\n        cell: (_val..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 132,
          "block": "accessorKey: \"id\" as keyof Employee,\n        cell: (_value: string, row: Employee) => (\n          <d..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 132,
          "block": "accessorKey: \"id\" as keyof Employee,\n        cell: (_value: string, row: Employee) => (\n          <d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 133,
          "block": "cell: (_value: string, row: Employee) => (\n          <div className=\"flex items-center gap-2\" role=\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 133,
          "block": "cell: (_value: string, row: Employee) => (\n          <div className=\"flex items-center gap-2\" role=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 134,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <User\n              className=\"h-4..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 134,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <User\n              className=\"h-4..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 135,
          "block": "<User\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 135,
          "block": "<User\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 136,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 136,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 137,
          "block": "aria-hidden=\"true\"\n            />\n            <span className=\"font-medium\">{formatEmployeeName(row)..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 137,
          "block": "aria-hidden=\"true\"\n            />\n            <span className=\"font-medium\">{formatEmployeeName(row)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 138,
          "block": "/>\n            <span className=\"font-medium\">{formatEmployeeName(row)}</span>\n          </div>\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 138,
          "block": "/>\n            <span className=\"font-medium\">{formatEmployeeName(row)}</span>\n          </div>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 139,
          "block": "<span className=\"font-medium\">{formatEmployeeName(row)}</span>\n          </div>\n        ),\n        e..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 139,
          "block": "<span className=\"font-medium\">{formatEmployeeName(row)}</span>\n          </div>\n        ),\n        e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 140,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 140,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 141,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByName\", ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 141,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByName\", ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 142,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByName\", \"Sort by na..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 142,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByName\", \"Sort by na..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 143,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByName\", \"Sort by name\"),\n        },\n      },\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 143,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByName\", \"Sort by name\"),\n        },\n      },\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 144,
          "block": "ariaLabel: t(\"employees:aria.sortByName\", \"Sort by name\"),\n        },\n      },\n      {\n        heade..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 144,
          "block": "ariaLabel: t(\"employees:aria.sortByName\", \"Sort by name\"),\n        },\n      },\n      {\n        heade..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 145,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 145,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 146,
          "block": "},\n      {\n        header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" as keyof ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 146,
          "block": "},\n      {\n        header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" as keyof ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 147,
          "block": "{\n        header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" as keyof Employee,..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 147,
          "block": "{\n        header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" as keyof Employee,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 148,
          "block": "header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" as keyof Employee,\n        c..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 148,
          "block": "header: t(\"employees:fields.position\"),\n        accessorKey: \"position\" as keyof Employee,\n        c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 149,
          "block": "accessorKey: \"position\" as keyof Employee,\n        cell: (value: string) => (\n          <div classNa..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 149,
          "block": "accessorKey: \"position\" as keyof Employee,\n        cell: (value: string) => (\n          <div classNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 150,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 150,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 151,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Briefcase\n              className..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 151,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Briefcase\n              className..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 152,
          "block": "<Briefcase\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 152,
          "block": "<Briefcase\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 153,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 170,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 209,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 226,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 153,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 170,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 209,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 226,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 154,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 171,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 210,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 227,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 154,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 171,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 210,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 227,
          "block": "aria-hidden=\"true\"\n            />\n            <span>{value || t(\"common:notAvailable\")}</span>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 155,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 172,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 211,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 228,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 155,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 172,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 211,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 228,
          "block": "/>\n            <span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 156,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 173,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 212,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 229,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 156,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 173,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 212,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 229,
          "block": "<span>{value || t(\"common:notAvailable\")}</span>\n          </div>\n        ),\n        enableSorting: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 157,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 157,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 158,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPositio..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 158,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPositio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 159,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPosition\", \"Sort b..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 159,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPosition\", \"Sort b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 160,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByPosition\", \"Sort by position\"),\n        },\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 160,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByPosition\", \"Sort by position\"),\n        },\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 161,
          "block": "ariaLabel: t(\"employees:aria.sortByPosition\", \"Sort by position\"),\n        },\n      },\n      {\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 161,
          "block": "ariaLabel: t(\"employees:aria.sortByPosition\", \"Sort by position\"),\n        },\n      },\n      {\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 162,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.department\"),\n        accessorKey: \"departme..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 162,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.department\"),\n        accessorKey: \"departme..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 163,
          "block": "},\n      {\n        header: t(\"employees:fields.department\"),\n        accessorKey: \"department\" as ke..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 163,
          "block": "},\n      {\n        header: t(\"employees:fields.department\"),\n        accessorKey: \"department\" as ke..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 164,
          "block": "{\n        header: t(\"employees:fields.department\"),\n        accessorKey: \"department\" as keyof Emplo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 164,
          "block": "{\n        header: t(\"employees:fields.department\"),\n        accessorKey: \"department\" as keyof Emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 165,
          "block": "header: t(\"employees:fields.department\"),\n        accessorKey: \"department\" as keyof Employee,\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 165,
          "block": "header: t(\"employees:fields.department\"),\n        accessorKey: \"department\" as keyof Employee,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 166,
          "block": "accessorKey: \"department\" as keyof Employee,\n        cell: (value: string) => (\n          <div class..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 166,
          "block": "accessorKey: \"department\" as keyof Employee,\n        cell: (value: string) => (\n          <div class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 167,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 206,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 167,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 206,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 168,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Mail\n              className=\"h-4..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 207,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Mail\n              className=\"h-4..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 168,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Mail\n              className=\"h-4..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 207,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Mail\n              className=\"h-4..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 169,
          "block": "<Mail\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n     ..."
        },
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 208,
          "block": "<Mail\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 169,
          "block": "<Mail\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 208,
          "block": "<Mail\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 174,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 174,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 175,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByDepartm..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 175,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByDepartm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 176,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByDepartment\", \"Sort..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 176,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByDepartment\", \"Sort..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 177,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByDepartment\", \"Sort by department\"),\n        },\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 177,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByDepartment\", \"Sort by department\"),\n        },\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 178,
          "block": "ariaLabel: t(\"employees:aria.sortByDepartment\", \"Sort by department\"),\n        },\n      },\n      {\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 178,
          "block": "ariaLabel: t(\"employees:aria.sortByDepartment\", \"Sort by department\"),\n        },\n      },\n      {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 179,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 179,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 180,
          "block": "},\n      {\n        header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\" as keyof..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 180,
          "block": "},\n      {\n        header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\" as keyof..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 181,
          "block": "{\n        header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\" as keyof Employee..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 181,
          "block": "{\n        header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\" as keyof Employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 182,
          "block": "header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\" as keyof Employee,\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 182,
          "block": "header: t(\"employees:fields.hireDate\"),\n        accessorKey: \"hire_date\" as keyof Employee,\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 183,
          "block": "accessorKey: \"hire_date\" as keyof Employee,\n        cell: (value: string) => (\n          <div classN..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 183,
          "block": "accessorKey: \"hire_date\" as keyof Employee,\n        cell: (value: string) => (\n          <div classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 184,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 184,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 185,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Calendar\n              className=..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 185,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Calendar\n              className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 186,
          "block": "<Calendar\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 186,
          "block": "<Calendar\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 187,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 187,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 188,
          "block": "aria-hidden=\"true\"\n            />\n            <span>\n              {value ? format(new Date(value), ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 188,
          "block": "aria-hidden=\"true\"\n            />\n            <span>\n              {value ? format(new Date(value), ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 189,
          "block": "/>\n            <span>\n              {value ? format(new Date(value), \"PP\") : t(\"common:notAvailable\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 189,
          "block": "/>\n            <span>\n              {value ? format(new Date(value), \"PP\") : t(\"common:notAvailable\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 190,
          "block": "<span>\n              {value ? format(new Date(value), \"PP\") : t(\"common:notAvailable\")}\n            ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 190,
          "block": "<span>\n              {value ? format(new Date(value), \"PP\") : t(\"common:notAvailable\")}\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 191,
          "block": "{value ? format(new Date(value), \"PP\") : t(\"common:notAvailable\")}\n            </span>\n            {..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 191,
          "block": "{value ? format(new Date(value), \"PP\") : t(\"common:notAvailable\")}\n            </span>\n            {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 192,
          "block": "</span>\n            {value && (\n              <VisuallyHidden>{format(new Date(value), \"PPPP\")}</Vis..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 192,
          "block": "</span>\n            {value && (\n              <VisuallyHidden>{format(new Date(value), \"PPPP\")}</Vis..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 193,
          "block": "{value && (\n              <VisuallyHidden>{format(new Date(value), \"PPPP\")}</VisuallyHidden>\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 193,
          "block": "{value && (\n              <VisuallyHidden>{format(new Date(value), \"PPPP\")}</VisuallyHidden>\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 194,
          "block": "<VisuallyHidden>{format(new Date(value), \"PPPP\")}</VisuallyHidden>\n            )}\n          </div>\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 194,
          "block": "<VisuallyHidden>{format(new Date(value), \"PPPP\")}</VisuallyHidden>\n            )}\n          </div>\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 196,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 196,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 197,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByHireDat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 197,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByHireDat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 198,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByHireDate\", \"Sort b..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 198,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByHireDate\", \"Sort b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 199,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByHireDate\", \"Sort by hire date\"),\n        },\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 199,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByHireDate\", \"Sort by hire date\"),\n        },\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 200,
          "block": "ariaLabel: t(\"employees:aria.sortByHireDate\", \"Sort by hire date\"),\n        },\n      },\n      {\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 200,
          "block": "ariaLabel: t(\"employees:aria.sortByHireDate\", \"Sort by hire date\"),\n        },\n      },\n      {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 201,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as key..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 201,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as key..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 202,
          "block": "},\n      {\n        header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as keyof Employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 202,
          "block": "},\n      {\n        header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as keyof Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 203,
          "block": "{\n        header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as keyof Employee,\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 203,
          "block": "{\n        header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as keyof Employee,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 204,
          "block": "header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as keyof Employee,\n        cell: (..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 204,
          "block": "header: t(\"employees:fields.email\"),\n        accessorKey: \"email\" as keyof Employee,\n        cell: (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 205,
          "block": "accessorKey: \"email\" as keyof Employee,\n        cell: (value: string) => (\n          <div className=..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 205,
          "block": "accessorKey: \"email\" as keyof Employee,\n        cell: (value: string) => (\n          <div className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 213,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 213,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 214,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByEmail\",..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 214,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByEmail\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 215,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByEmail\", \"Sort by e..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 215,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByEmail\", \"Sort by e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 216,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByEmail\", \"Sort by email\"),\n        },\n      },\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 216,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByEmail\", \"Sort by email\"),\n        },\n      },\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 217,
          "block": "ariaLabel: t(\"employees:aria.sortByEmail\", \"Sort by email\"),\n        },\n      },\n      {\n        hea..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 217,
          "block": "ariaLabel: t(\"employees:aria.sortByEmail\", \"Sort by email\"),\n        },\n      },\n      {\n        hea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 218,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as key..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 218,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as key..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 219,
          "block": "},\n      {\n        header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as keyof Employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 219,
          "block": "},\n      {\n        header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as keyof Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 220,
          "block": "{\n        header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as keyof Employee,\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 220,
          "block": "{\n        header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as keyof Employee,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 221,
          "block": "header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as keyof Employee,\n        cell: (..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 221,
          "block": "header: t(\"employees:fields.phone\"),\n        accessorKey: \"phone\" as keyof Employee,\n        cell: (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 222,
          "block": "accessorKey: \"phone\" as keyof Employee,\n        cell: (value: string) => (\n          <div className=..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 222,
          "block": "accessorKey: \"phone\" as keyof Employee,\n        cell: (value: string) => (\n          <div className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 223,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 223,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 224,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Phone\n              className=\"h-..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 224,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <Phone\n              className=\"h-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 225,
          "block": "<Phone\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n    ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 225,
          "block": "<Phone\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 230,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 230,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 231,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPhone\",..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 231,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPhone\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 232,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPhone\", \"Sort by p..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 232,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByPhone\", \"Sort by p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 233,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByPhone\", \"Sort by phone\"),\n        },\n      },\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 233,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByPhone\", \"Sort by phone\"),\n        },\n      },\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 234,
          "block": "ariaLabel: t(\"employees:aria.sortByPhone\", \"Sort by phone\"),\n        },\n      },\n      {\n        hea..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 234,
          "block": "ariaLabel: t(\"employees:aria.sortByPhone\", \"Sort by phone\"),\n        },\n      },\n      {\n        hea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 235,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as k..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 235,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as k..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 236,
          "block": "},\n      {\n        header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as keyof Empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 236,
          "block": "},\n      {\n        header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as keyof Empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 237,
          "block": "{\n        header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as keyof Employee,\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 237,
          "block": "{\n        header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as keyof Employee,\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 238,
          "block": "header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as keyof Employee,\n        cell:..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 238,
          "block": "header: t(\"employees:fields.salary\"),\n        accessorKey: \"salary\" as keyof Employee,\n        cell:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 239,
          "block": "accessorKey: \"salary\" as keyof Employee,\n        cell: (value: number) => (\n          <div className..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 239,
          "block": "accessorKey: \"salary\" as keyof Employee,\n        cell: (value: number) => (\n          <div className..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 240,
          "block": "cell: (value: number) => (\n          <div className=\"flex items-center gap-2 justify-end\" role=\"cell..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 240,
          "block": "cell: (value: number) => (\n          <div className=\"flex items-center gap-2 justify-end\" role=\"cell..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 241,
          "block": "<div className=\"flex items-center gap-2 justify-end\" role=\"cell\">\n            <Wallet\n              ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 241,
          "block": "<div className=\"flex items-center gap-2 justify-end\" role=\"cell\">\n            <Wallet\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 242,
          "block": "<Wallet\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 242,
          "block": "<Wallet\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 243,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 243,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 244,
          "block": "aria-hidden=\"true\"\n            />\n            <span className=\"font-medium tabular-nums\">\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 244,
          "block": "aria-hidden=\"true\"\n            />\n            <span className=\"font-medium tabular-nums\">\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 245,
          "block": "/>\n            <span className=\"font-medium tabular-nums\">\n              {value ? value.toLocaleStri..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 245,
          "block": "/>\n            <span className=\"font-medium tabular-nums\">\n              {value ? value.toLocaleStri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 246,
          "block": "<span className=\"font-medium tabular-nums\">\n              {value ? value.toLocaleString() + \" ֏\" : t..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 246,
          "block": "<span className=\"font-medium tabular-nums\">\n              {value ? value.toLocaleString() + \" ֏\" : t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 247,
          "block": "{value ? value.toLocaleString() + \" ֏\" : t(\"common:notAvailable\")}\n            </span>\n            {..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 247,
          "block": "{value ? value.toLocaleString() + \" ֏\" : t(\"common:notAvailable\")}\n            </span>\n            {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 248,
          "block": "</span>\n            {value && (\n              <VisuallyHidden>\n                {t(\"employees:aria.sa..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 248,
          "block": "</span>\n            {value && (\n              <VisuallyHidden>\n                {t(\"employees:aria.sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 249,
          "block": "{value && (\n              <VisuallyHidden>\n                {t(\"employees:aria.salary\", \"{{amount}} A..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 249,
          "block": "{value && (\n              <VisuallyHidden>\n                {t(\"employees:aria.salary\", \"{{amount}} A..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 250,
          "block": "<VisuallyHidden>\n                {t(\"employees:aria.salary\", \"{{amount}} Armenian Dram\", {\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 250,
          "block": "<VisuallyHidden>\n                {t(\"employees:aria.salary\", \"{{amount}} Armenian Dram\", {\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 251,
          "block": "{t(\"employees:aria.salary\", \"{{amount}} Armenian Dram\", {\n                  amount: value.toLocaleSt..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 251,
          "block": "{t(\"employees:aria.salary\", \"{{amount}} Armenian Dram\", {\n                  amount: value.toLocaleSt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 252,
          "block": "amount: value.toLocaleString(),\n                })}\n              </VisuallyHidden>\n            )}\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 252,
          "block": "amount: value.toLocaleString(),\n                })}\n              </VisuallyHidden>\n            )}\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 256,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 256,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 257,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortBySalary\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 257,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortBySalary\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 258,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortBySalary\", \"Sort by ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 258,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortBySalary\", \"Sort by ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 259,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortBySalary\", \"Sort by salary\"),\n        },\n      },..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 259,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortBySalary\", \"Sort by salary\"),\n        },\n      },..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 260,
          "block": "ariaLabel: t(\"employees:aria.sortBySalary\", \"Sort by salary\"),\n        },\n      },\n      {\n        h..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 260,
          "block": "ariaLabel: t(\"employees:aria.sortBySalary\", \"Sort by salary\"),\n        },\n      },\n      {\n        h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 261,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as k..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 261,
          "block": "},\n      },\n      {\n        header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as k..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 262,
          "block": "},\n      {\n        header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as keyof Empl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 262,
          "block": "},\n      {\n        header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as keyof Empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 263,
          "block": "{\n        header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as keyof Employee,\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 263,
          "block": "{\n        header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as keyof Employee,\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 264,
          "block": "header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as keyof Employee,\n        cell:..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 264,
          "block": "header: t(\"employees:fields.status\"),\n        accessorKey: \"status\" as keyof Employee,\n        cell:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 265,
          "block": "accessorKey: \"status\" as keyof Employee,\n        cell: (value: string) => (\n          <div className..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 265,
          "block": "accessorKey: \"status\" as keyof Employee,\n        cell: (value: string) => (\n          <div className..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 266,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 266,
          "block": "cell: (value: string) => (\n          <div className=\"flex items-center gap-2\" role=\"cell\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 267,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <CircleUser\n              classNam..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 267,
          "block": "<div className=\"flex items-center gap-2\" role=\"cell\">\n            <CircleUser\n              classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 268,
          "block": "<CircleUser\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 268,
          "block": "<CircleUser\n              className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 269,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 269,
          "block": "className=\"h-4 w-4 text-muted-foreground\"\n              aria-hidden=\"true\"\n            />\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 270,
          "block": "aria-hidden=\"true\"\n            />\n            <Badge variant={getStatusBadgeVariant(value)}>\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 270,
          "block": "aria-hidden=\"true\"\n            />\n            <Badge variant={getStatusBadgeVariant(value)}>\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 271,
          "block": "/>\n            <Badge variant={getStatusBadgeVariant(value)}>\n              {formatStatus(value)}\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 271,
          "block": "/>\n            <Badge variant={getStatusBadgeVariant(value)}>\n              {formatStatus(value)}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 272,
          "block": "<Badge variant={getStatusBadgeVariant(value)}>\n              {formatStatus(value)}\n            </Bad..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 272,
          "block": "<Badge variant={getStatusBadgeVariant(value)}>\n              {formatStatus(value)}\n            </Bad..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 275,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 275,
          "block": "</div>\n        ),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:ari..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 276,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByStatus\"..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 276,
          "block": "),\n        enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByStatus\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 277,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByStatus\", \"Sort by ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 277,
          "block": "enableSorting: true,\n        meta: {\n          ariaLabel: t(\"employees:aria.sortByStatus\", \"Sort by ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 278,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByStatus\", \"Sort by status\"),\n        },\n      },..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 278,
          "block": "meta: {\n          ariaLabel: t(\"employees:aria.sortByStatus\", \"Sort by status\"),\n        },\n      },..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 279,
          "block": "ariaLabel: t(\"employees:aria.sortByStatus\", \"Sort by status\"),\n        },\n      },\n    ],\n    [t, fo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 279,
          "block": "ariaLabel: t(\"employees:aria.sortByStatus\", \"Sort by status\"),\n        },\n      },\n    ],\n    [t, fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 282,
          "block": "],\n    [t, formatStatus, getStatusBadgeVariant, formatEmployeeName]\n  );\n\n  const isServerSide = Boo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 282,
          "block": "],\n    [t, formatStatus, getStatusBadgeVariant, formatEmployeeName]\n  );\n\n  const isServerSide = Boo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 283,
          "block": "[t, formatStatus, getStatusBadgeVariant, formatEmployeeName]\n  );\n\n  const isServerSide = Boolean(on..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 283,
          "block": "[t, formatStatus, getStatusBadgeVariant, formatEmployeeName]\n  );\n\n  const isServerSide = Boolean(on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 284,
          "block": ");\n\n  const isServerSide = Boolean(onPageChange && onSortChange);\n\n  // Function to extract plain te..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 284,
          "block": ");\n\n  const isServerSide = Boolean(onPageChange && onSortChange);\n\n  // Function to extract plain te..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 285,
          "block": "const isServerSide = Boolean(onPageChange && onSortChange);\n\n  // Function to extract plain text dat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 285,
          "block": "const isServerSide = Boolean(onPageChange && onSortChange);\n\n  // Function to extract plain text dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 286,
          "block": "const isServerSide = Boolean(onPageChange && onSortChange);\n\n  // Function to extract plain text dat..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 286,
          "block": "const isServerSide = Boolean(onPageChange && onSortChange);\n\n  // Function to extract plain text dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 287,
          "block": "// Function to extract plain text data for screen readers\n  const getAccessibleRowData = useCallback..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 287,
          "block": "// Function to extract plain text data for screen readers\n  const getAccessibleRowData = useCallback..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 288,
          "block": "// Function to extract plain text data for screen readers\n  const getAccessibleRowData = useCallback..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 288,
          "block": "// Function to extract plain text data for screen readers\n  const getAccessibleRowData = useCallback..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 289,
          "block": "const getAccessibleRowData = useCallback(\n    (employee: Employee) => {\n      return {\n        name:..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 289,
          "block": "const getAccessibleRowData = useCallback(\n    (employee: Employee) => {\n      return {\n        name:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 290,
          "block": "(employee: Employee) => {\n      return {\n        name: formatEmployeeName(employee),\n        positio..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 290,
          "block": "(employee: Employee) => {\n      return {\n        name: formatEmployeeName(employee),\n        positio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 291,
          "block": "return {\n        name: formatEmployeeName(employee),\n        position: employee.position || t(\"commo..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 291,
          "block": "return {\n        name: formatEmployeeName(employee),\n        position: employee.position || t(\"commo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 292,
          "block": "name: formatEmployeeName(employee),\n        position: employee.position || t(\"common:notAvailable\"),..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 292,
          "block": "name: formatEmployeeName(employee),\n        position: employee.position || t(\"common:notAvailable\"),..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 293,
          "block": "position: employee.position || t(\"common:notAvailable\"),\n        department: employee.department || ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 293,
          "block": "position: employee.position || t(\"common:notAvailable\"),\n        department: employee.department || ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 294,
          "block": "department: employee.department || t(\"common:notAvailable\"),\n        hireDate: employee.hire_date\n  ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 294,
          "block": "department: employee.department || t(\"common:notAvailable\"),\n        hireDate: employee.hire_date\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 295,
          "block": "hireDate: employee.hire_date\n          ? format(new Date(employee.hire_date), \"PP\")\n          : t(\"c..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 295,
          "block": "hireDate: employee.hire_date\n          ? format(new Date(employee.hire_date), \"PP\")\n          : t(\"c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 296,
          "block": "? format(new Date(employee.hire_date), \"PP\")\n          : t(\"common:notAvailable\"),\n        email: em..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 296,
          "block": "? format(new Date(employee.hire_date), \"PP\")\n          : t(\"common:notAvailable\"),\n        email: em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 297,
          "block": ": t(\"common:notAvailable\"),\n        email: employee.email || t(\"common:notAvailable\"),\n        phone..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 297,
          "block": ": t(\"common:notAvailable\"),\n        email: employee.email || t(\"common:notAvailable\"),\n        phone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 298,
          "block": "email: employee.email || t(\"common:notAvailable\"),\n        phone: employee.phone || t(\"common:notAva..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 298,
          "block": "email: employee.email || t(\"common:notAvailable\"),\n        phone: employee.phone || t(\"common:notAva..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 299,
          "block": "phone: employee.phone || t(\"common:notAvailable\"),\n        salary: employee.salary\n          ? `${em..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 299,
          "block": "phone: employee.phone || t(\"common:notAvailable\"),\n        salary: employee.salary\n          ? `${em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 300,
          "block": "salary: employee.salary\n          ? `${employee.salary.toLocaleString()} ֏`\n          : t(\"common:no..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 300,
          "block": "salary: employee.salary\n          ? `${employee.salary.toLocaleString()} ֏`\n          : t(\"common:no..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 301,
          "block": "? `${employee.salary.toLocaleString()} ֏`\n          : t(\"common:notAvailable\"),\n        status: form..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 301,
          "block": "? `${employee.salary.toLocaleString()} ֏`\n          : t(\"common:notAvailable\"),\n        status: form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 302,
          "block": ": t(\"common:notAvailable\"),\n        status: formatStatus(employee.status),\n      };\n    },\n    [form..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 302,
          "block": ": t(\"common:notAvailable\"),\n        status: formatStatus(employee.status),\n      };\n    },\n    [form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 303,
          "block": "status: formatStatus(employee.status),\n      };\n    },\n    [formatEmployeeName, formatStatus, t]\n  )..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 303,
          "block": "status: formatStatus(employee.status),\n      };\n    },\n    [formatEmployeeName, formatStatus, t]\n  )..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 309,
          "block": "return (\n    <ResponsiveDataTable\n      title={t(\"employees:title\")}\n      columns={columns}\n      d..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 309,
          "block": "return (\n    <ResponsiveDataTable\n      title={t(\"employees:title\")}\n      columns={columns}\n      d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 310,
          "block": "<ResponsiveDataTable\n      title={t(\"employees:title\")}\n      columns={columns}\n      data={employee..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 310,
          "block": "<ResponsiveDataTable\n      title={t(\"employees:title\")}\n      columns={columns}\n      data={employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 311,
          "block": "title={t(\"employees:title\")}\n      columns={columns}\n      data={employees}\n      loading={isLoading..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 311,
          "block": "title={t(\"employees:title\")}\n      columns={columns}\n      data={employees}\n      loading={isLoading..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 312,
          "block": "columns={columns}\n      data={employees}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 312,
          "block": "columns={columns}\n      data={employees}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 313,
          "block": "data={employees}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDe..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 313,
          "block": "data={employees}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 314,
          "block": "loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDelete={onDelete}\n      o..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 314,
          "block": "loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDelete={onDelete}\n      o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 315,
          "block": "onEdit={onEdit ? handleEdit : undefined}\n      onDelete={onDelete}\n      onRowClick={onView ? handle..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 315,
          "block": "onEdit={onEdit ? handleEdit : undefined}\n      onDelete={onDelete}\n      onRowClick={onView ? handle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 316,
          "block": "onDelete={onDelete}\n      onRowClick={onView ? handleRowClick : undefined}\n      filters={filters}\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 316,
          "block": "onDelete={onDelete}\n      onRowClick={onView ? handleRowClick : undefined}\n      filters={filters}\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 317,
          "block": "onRowClick={onView ? handleRowClick : undefined}\n      filters={filters}\n      onFilterChange={handl..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 317,
          "block": "onRowClick={onView ? handleRowClick : undefined}\n      filters={filters}\n      onFilterChange={handl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 318,
          "block": "filters={filters}\n      onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serve..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 151,
          "block": "filters={filters}\n      onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serve..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 161,
          "block": "filters={filters}\n      onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serve..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 318,
          "block": "filters={filters}\n      onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serve..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 319,
          "block": "onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serverSide={isServerSide}\n   ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 152,
          "block": "onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serverSide={isServerSide}\n   ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 162,
          "block": "onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serverSide={isServerSide}\n   ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 319,
          "block": "onFilterChange={handleFilterChange}\n      totalRows={totalCount}\n      serverSide={isServerSide}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 320,
          "block": "totalRows={totalCount}\n      serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSor..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 153,
          "block": "totalRows={totalCount}\n      serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSor..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 163,
          "block": "totalRows={totalCount}\n      serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSor..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 320,
          "block": "totalRows={totalCount}\n      serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 321,
          "block": "serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSortChange={onSortChange}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 154,
          "block": "serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSortChange={onSortChange}\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 164,
          "block": "serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSortChange={onSortChange}\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 321,
          "block": "serverSide={isServerSide}\n      onPageChange={onPageChange}\n      onSortChange={onSortChange}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 322,
          "block": "onPageChange={onPageChange}\n      onSortChange={onSortChange}\n      exportOptions={{\n        enabled..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 322,
          "block": "onPageChange={onPageChange}\n      onSortChange={onSortChange}\n      exportOptions={{\n        enabled..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 323,
          "block": "onSortChange={onSortChange}\n      exportOptions={{\n        enabled: true,\n        filename: \"employe..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 323,
          "block": "onSortChange={onSortChange}\n      exportOptions={{\n        enabled: true,\n        filename: \"employe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 324,
          "block": "exportOptions={{\n        enabled: true,\n        filename: \"employees-export\",\n        exportAll: tru..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 324,
          "block": "exportOptions={{\n        enabled: true,\n        filename: \"employees-export\",\n        exportAll: tru..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 325,
          "block": "enabled: true,\n        filename: \"employees-export\",\n        exportAll: true,\n      }}\n      aria-la..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 325,
          "block": "enabled: true,\n        filename: \"employees-export\",\n        exportAll: true,\n      }}\n      aria-la..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 326,
          "block": "filename: \"employees-export\",\n        exportAll: true,\n      }}\n      aria-label={t(\n        \"employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 326,
          "block": "filename: \"employees-export\",\n        exportAll: true,\n      }}\n      aria-label={t(\n        \"employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 327,
          "block": "exportAll: true,\n      }}\n      aria-label={t(\n        \"employees:aria.employeesTable\",\n        \"Emp..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 327,
          "block": "exportAll: true,\n      }}\n      aria-label={t(\n        \"employees:aria.employeesTable\",\n        \"Emp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 328,
          "block": "}}\n      aria-label={t(\n        \"employees:aria.employeesTable\",\n        \"Employees table with sorta..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 328,
          "block": "}}\n      aria-label={t(\n        \"employees:aria.employeesTable\",\n        \"Employees table with sorta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 329,
          "block": "aria-label={t(\n        \"employees:aria.employeesTable\",\n        \"Employees table with sortable colum..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 329,
          "block": "aria-label={t(\n        \"employees:aria.employeesTable\",\n        \"Employees table with sortable colum..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 330,
          "block": "\"employees:aria.employeesTable\",\n        \"Employees table with sortable columns\"\n      )}\n      getR..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 330,
          "block": "\"employees:aria.employeesTable\",\n        \"Employees table with sortable columns\"\n      )}\n      getR..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 331,
          "block": "\"Employees table with sortable columns\"\n      )}\n      getRowAriaLabel={(employee) => {\n        cons..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 331,
          "block": "\"Employees table with sortable columns\"\n      )}\n      getRowAriaLabel={(employee) => {\n        cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 332,
          "block": ")}\n      getRowAriaLabel={(employee) => {\n        const data = getAccessibleRowData(employee);\n     ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 332,
          "block": ")}\n      getRowAriaLabel={(employee) => {\n        const data = getAccessibleRowData(employee);\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 333,
          "block": "getRowAriaLabel={(employee) => {\n        const data = getAccessibleRowData(employee);\n        return..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 333,
          "block": "getRowAriaLabel={(employee) => {\n        const data = getAccessibleRowData(employee);\n        return..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 334,
          "block": "const data = getAccessibleRowData(employee);\n        return t(\n          \"employees:aria.employeeRow..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 334,
          "block": "const data = getAccessibleRowData(employee);\n        return t(\n          \"employees:aria.employeeRow..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 335,
          "block": "return t(\n          \"employees:aria.employeeRow\",\n          \"{{name}}, Position: {{position}}, Depar..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 335,
          "block": "return t(\n          \"employees:aria.employeeRow\",\n          \"{{name}}, Position: {{position}}, Depar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 336,
          "block": "\"employees:aria.employeeRow\",\n          \"{{name}}, Position: {{position}}, Department: {{department}..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 336,
          "block": "\"employees:aria.employeeRow\",\n          \"{{name}}, Position: {{position}}, Department: {{department}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 337,
          "block": "\"{{name}}, Position: {{position}}, Department: {{department}}, Status: {{status}}\",\n          data\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 337,
          "block": "\"{{name}}, Position: {{position}}, Department: {{department}}, Status: {{status}}\",\n          data\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 340,
          "block": "}}\n      keyboardNavigation={{\n        enabled: true,\n        rowFocusKey: \"id\",\n        onKeyDown: ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 340,
          "block": "}}\n      keyboardNavigation={{\n        enabled: true,\n        rowFocusKey: \"id\",\n        onKeyDown: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 341,
          "block": "keyboardNavigation={{\n        enabled: true,\n        rowFocusKey: \"id\",\n        onKeyDown: (e, row) ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 341,
          "block": "keyboardNavigation={{\n        enabled: true,\n        rowFocusKey: \"id\",\n        onKeyDown: (e, row) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 342,
          "block": "enabled: true,\n        rowFocusKey: \"id\",\n        onKeyDown: (e, row) => {\n          // Handle Enter..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 342,
          "block": "enabled: true,\n        rowFocusKey: \"id\",\n        onKeyDown: (e, row) => {\n          // Handle Enter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 343,
          "block": "rowFocusKey: \"id\",\n        onKeyDown: (e, row) => {\n          // Handle Enter key for opening employ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 343,
          "block": "rowFocusKey: \"id\",\n        onKeyDown: (e, row) => {\n          // Handle Enter key for opening employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 344,
          "block": "onKeyDown: (e, row) => {\n          // Handle Enter key for opening employee details\n          if (e...."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 344,
          "block": "onKeyDown: (e, row) => {\n          // Handle Enter key for opening employee details\n          if (e...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 345,
          "block": "// Handle Enter key for opening employee details\n          if (e.key === \"Enter\" && onView) {\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 345,
          "block": "// Handle Enter key for opening employee details\n          if (e.key === \"Enter\" && onView) {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 346,
          "block": "if (e.key === \"Enter\" && onView) {\n            handleRowClick(row);\n          }\n          // Handle ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 346,
          "block": "if (e.key === \"Enter\" && onView) {\n            handleRowClick(row);\n          }\n          // Handle ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 347,
          "block": "handleRowClick(row);\n          }\n          // Handle Edit with E key\n          if (e.key === \"e\" && ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 347,
          "block": "handleRowClick(row);\n          }\n          // Handle Edit with E key\n          if (e.key === \"e\" && ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 348,
          "block": "}\n          // Handle Edit with E key\n          if (e.key === \"e\" && onEdit) {\n            handleEdi..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 348,
          "block": "}\n          // Handle Edit with E key\n          if (e.key === \"e\" && onEdit) {\n            handleEdi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 349,
          "block": "// Handle Edit with E key\n          if (e.key === \"e\" && onEdit) {\n            handleEdit(row.id);\n ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 349,
          "block": "// Handle Edit with E key\n          if (e.key === \"e\" && onEdit) {\n            handleEdit(row.id);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 350,
          "block": "if (e.key === \"e\" && onEdit) {\n            handleEdit(row.id);\n          }\n          // Handle Delet..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 350,
          "block": "if (e.key === \"e\" && onEdit) {\n            handleEdit(row.id);\n          }\n          // Handle Delet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 351,
          "block": "handleEdit(row.id);\n          }\n          // Handle Delete with Delete key\n          if (\n          ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 351,
          "block": "handleEdit(row.id);\n          }\n          // Handle Delete with Delete key\n          if (\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 352,
          "block": "}\n          // Handle Delete with Delete key\n          if (\n            e.key === \"Delete\" &&\n      ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 352,
          "block": "}\n          // Handle Delete with Delete key\n          if (\n            e.key === \"Delete\" &&\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 353,
          "block": "// Handle Delete with Delete key\n          if (\n            e.key === \"Delete\" &&\n            onDele..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 353,
          "block": "// Handle Delete with Delete key\n          if (\n            e.key === \"Delete\" &&\n            onDele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 354,
          "block": "if (\n            e.key === \"Delete\" &&\n            onDelete &&\n            window.confirm(\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 354,
          "block": "if (\n            e.key === \"Delete\" &&\n            onDelete &&\n            window.confirm(\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 355,
          "block": "e.key === \"Delete\" &&\n            onDelete &&\n            window.confirm(\n              t(\n         ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 355,
          "block": "e.key === \"Delete\" &&\n            onDelete &&\n            window.confirm(\n              t(\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 356,
          "block": "onDelete &&\n            window.confirm(\n              t(\n                \"employees:confirmDelete\",\n..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 356,
          "block": "onDelete &&\n            window.confirm(\n              t(\n                \"employees:confirmDelete\",\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 357,
          "block": "window.confirm(\n              t(\n                \"employees:confirmDelete\",\n                \"Are you..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 357,
          "block": "window.confirm(\n              t(\n                \"employees:confirmDelete\",\n                \"Are you..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 358,
          "block": "t(\n                \"employees:confirmDelete\",\n                \"Are you sure you want to delete this ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 358,
          "block": "t(\n                \"employees:confirmDelete\",\n                \"Are you sure you want to delete this ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 359,
          "block": "\"employees:confirmDelete\",\n                \"Are you sure you want to delete this employee?\"\n        ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 359,
          "block": "\"employees:confirmDelete\",\n                \"Are you sure you want to delete this employee?\"\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\EmployeesTableStandardized.tsx",
          "startLine": 360,
          "block": "\"Are you sure you want to delete this employee?\"\n              )\n            )\n          ) {\n       ..."
        },
        {
          "file": "src\\features\\management\\components\\EmployeesTableStandardized.tsx",
          "startLine": 360,
          "block": "\"Are you sure you want to delete this employee?\"\n              )\n            )\n          ) {\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\components\\index.ts",
          "startLine": 1,
          "block": "// Export all components from the employees feature\nexport * from \"./EmployeesTable\";\nexport * from ..."
        },
        {
          "file": "src\\features\\management\\components\\index.ts",
          "startLine": 1,
          "block": "// Export all components from the employees feature\nexport * from \"./EmployeesTable\";\nexport * from ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 3,
          "block": "import { useToast } from \"@/hooks\";\n\n/**\n * Custom hook for managing EmployeeDialog state and data h..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 3,
          "block": "import { useToast } from \"@/hooks\";\n\n/**\n * Custom hook for managing EmployeeDialog state and data h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 4,
          "block": "/**\n * Custom hook for managing EmployeeDialog state and data handling\n */\nexport function useEmploy..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 4,
          "block": "/**\n * Custom hook for managing EmployeeDialog state and data handling\n */\nexport function useEmploy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 5,
          "block": "/**\n * Custom hook for managing EmployeeDialog state and data handling\n */\nexport function useEmploy..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 5,
          "block": "/**\n * Custom hook for managing EmployeeDialog state and data handling\n */\nexport function useEmploy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 6,
          "block": "* Custom hook for managing EmployeeDialog state and data handling\n */\nexport function useEmployeeDia..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 6,
          "block": "* Custom hook for managing EmployeeDialog state and data handling\n */\nexport function useEmployeeDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 7,
          "block": "*/\nexport function useEmployeeDialog(options?: {\n  onCreateSuccess?: (employee: Employee) => void;\n ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 7,
          "block": "*/\nexport function useEmployeeDialog(options?: {\n  onCreateSuccess?: (employee: Employee) => void;\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 8,
          "block": "export function useEmployeeDialog(options?: {\n  onCreateSuccess?: (employee: Employee) => void;\n  on..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 8,
          "block": "export function useEmployeeDialog(options?: {\n  onCreateSuccess?: (employee: Employee) => void;\n  on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 9,
          "block": "onCreateSuccess?: (employee: Employee) => void;\n  onUpdateSuccess?: (employee: Employee) => void;\n})..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 9,
          "block": "onCreateSuccess?: (employee: Employee) => void;\n  onUpdateSuccess?: (employee: Employee) => void;\n})..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 10,
          "block": "onUpdateSuccess?: (employee: Employee) => void;\n}) {\n  const { toast } = useToast();\n  \n  // Dialog ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 10,
          "block": "onUpdateSuccess?: (employee: Employee) => void;\n}) {\n  const { toast } = useToast();\n  \n  // Dialog ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 11,
          "block": "}) {\n  const { toast } = useToast();\n  \n  // Dialog state\n  const [isOpen, setIsOpen] = useState(fal..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 11,
          "block": "}) {\n  const { toast } = useToast();\n  \n  // Dialog state\n  const [isOpen, setIsOpen] = useState(fal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 12,
          "block": "const { toast } = useToast();\n  \n  // Dialog state\n  const [isOpen, setIsOpen] = useState(false);\n  ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 12,
          "block": "const { toast } = useToast();\n  \n  // Dialog state\n  const [isOpen, setIsOpen] = useState(false);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 13,
          "block": "// Dialog state\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedEmployee, setSelecte..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 13,
          "block": "// Dialog state\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedEmployee, setSelecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 14,
          "block": "// Dialog state\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedEmployee, setSelecte..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 14,
          "block": "// Dialog state\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedEmployee, setSelecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 15,
          "block": "const [isOpen, setIsOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useSt..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 15,
          "block": "const [isOpen, setIsOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useSt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 16,
          "block": "const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(\n    null\n  );\n  const [is..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 16,
          "block": "const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(\n    null\n  );\n  const [is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 17,
          "block": "null\n  );\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const triggerRef = useRef<HTM..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 17,
          "block": "null\n  );\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const triggerRef = useRef<HTM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 18,
          "block": ");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const triggerRef = useRef<HTMLElemen..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 18,
          "block": ");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const triggerRef = useRef<HTMLElemen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 19,
          "block": "const [isSubmitting, setIsSubmitting] = useState(false);\n  const triggerRef = useRef<HTMLElement>(nu..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 19,
          "block": "const [isSubmitting, setIsSubmitting] = useState(false);\n  const triggerRef = useRef<HTMLElement>(nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 22,
          "block": "/**\n   * Open dialog to create a new employee\n   */\n  const openCreate = useCallback(() => {\n    set..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 22,
          "block": "/**\n   * Open dialog to create a new employee\n   */\n  const openCreate = useCallback(() => {\n    set..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 23,
          "block": "* Open dialog to create a new employee\n   */\n  const openCreate = useCallback(() => {\n    setSelecte..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 23,
          "block": "* Open dialog to create a new employee\n   */\n  const openCreate = useCallback(() => {\n    setSelecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 24,
          "block": "*/\n  const openCreate = useCallback(() => {\n    setSelectedEmployee(null);\n    setIsOpen(true);\n  },..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 24,
          "block": "*/\n  const openCreate = useCallback(() => {\n    setSelectedEmployee(null);\n    setIsOpen(true);\n  },..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 29,
          "block": "/**\n   * Open dialog to edit an existing employee\n   */\n  const openEdit = useCallback((employee: Em..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 29,
          "block": "/**\n   * Open dialog to edit an existing employee\n   */\n  const openEdit = useCallback((employee: Em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 30,
          "block": "/**\n   * Open dialog to edit an existing employee\n   */\n  const openEdit = useCallback((employee: Em..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 30,
          "block": "/**\n   * Open dialog to edit an existing employee\n   */\n  const openEdit = useCallback((employee: Em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 31,
          "block": "* Open dialog to edit an existing employee\n   */\n  const openEdit = useCallback((employee: Employee)..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 31,
          "block": "* Open dialog to edit an existing employee\n   */\n  const openEdit = useCallback((employee: Employee)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 32,
          "block": "*/\n  const openEdit = useCallback((employee: Employee) => {\n    setSelectedEmployee(employee);\n    s..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 32,
          "block": "*/\n  const openEdit = useCallback((employee: Employee) => {\n    setSelectedEmployee(employee);\n    s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 33,
          "block": "const openEdit = useCallback((employee: Employee) => {\n    setSelectedEmployee(employee);\n    setIsO..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 33,
          "block": "const openEdit = useCallback((employee: Employee) => {\n    setSelectedEmployee(employee);\n    setIsO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 39,
          "block": "* Close the dialog\n   */\n  const close = useCallback(() => {\n    setIsOpen(false);\n    // Optional: ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 39,
          "block": "* Close the dialog\n   */\n  const close = useCallback(() => {\n    setIsOpen(false);\n    // Optional: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 40,
          "block": "*/\n  const close = useCallback(() => {\n    setIsOpen(false);\n    // Optional: Reset selected employe..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 40,
          "block": "*/\n  const close = useCallback(() => {\n    setIsOpen(false);\n    // Optional: Reset selected employe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 41,
          "block": "const close = useCallback(() => {\n    setIsOpen(false);\n    // Optional: Reset selected employee aft..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 41,
          "block": "const close = useCallback(() => {\n    setIsOpen(false);\n    // Optional: Reset selected employee aft..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 42,
          "block": "setIsOpen(false);\n    // Optional: Reset selected employee after a delay to avoid UI flicker\n    set..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 42,
          "block": "setIsOpen(false);\n    // Optional: Reset selected employee after a delay to avoid UI flicker\n    set..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 43,
          "block": "// Optional: Reset selected employee after a delay to avoid UI flicker\n    setTimeout(() => {\n      ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 43,
          "block": "// Optional: Reset selected employee after a delay to avoid UI flicker\n    setTimeout(() => {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 50,
          "block": "* Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) => {\n    ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 50,
          "block": "* Handle dialog open state change\n   */\n  const onOpenChange = useCallback((open: boolean) => {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 51,
          "block": "*/\n  const onOpenChange = useCallback((open: boolean) => {\n    setIsOpen(open);\n    if (!open) {\n   ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 51,
          "block": "*/\n  const onOpenChange = useCallback((open: boolean) => {\n    setIsOpen(open);\n    if (!open) {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 52,
          "block": "const onOpenChange = useCallback((open: boolean) => {\n    setIsOpen(open);\n    if (!open) {\n      //..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 52,
          "block": "const onOpenChange = useCallback((open: boolean) => {\n    setIsOpen(open);\n    if (!open) {\n      //..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 53,
          "block": "setIsOpen(open);\n    if (!open) {\n      // Optional: Reset selected employee after a delay to avoid ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 53,
          "block": "setIsOpen(open);\n    if (!open) {\n      // Optional: Reset selected employee after a delay to avoid ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 54,
          "block": "if (!open) {\n      // Optional: Reset selected employee after a delay to avoid UI flicker\n      setT..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 54,
          "block": "if (!open) {\n      // Optional: Reset selected employee after a delay to avoid UI flicker\n      setT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 55,
          "block": "// Optional: Reset selected employee after a delay to avoid UI flicker\n      setTimeout(() => {\n    ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 55,
          "block": "// Optional: Reset selected employee after a delay to avoid UI flicker\n      setTimeout(() => {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 62,
          "block": "/**\n   * Handle form submission\n   */\n  const handleSubmit = useCallback(\n    async (formData: Parti..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 62,
          "block": "/**\n   * Handle form submission\n   */\n  const handleSubmit = useCallback(\n    async (formData: Parti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 63,
          "block": "* Handle form submission\n   */\n  const handleSubmit = useCallback(\n    async (formData: Partial<Empl..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 63,
          "block": "* Handle form submission\n   */\n  const handleSubmit = useCallback(\n    async (formData: Partial<Empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 64,
          "block": "*/\n  const handleSubmit = useCallback(\n    async (formData: Partial<Employee>) => {\n      try {\n    ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 64,
          "block": "*/\n  const handleSubmit = useCallback(\n    async (formData: Partial<Employee>) => {\n      try {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 65,
          "block": "const handleSubmit = useCallback(\n    async (formData: Partial<Employee>) => {\n      try {\n        s..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 65,
          "block": "const handleSubmit = useCallback(\n    async (formData: Partial<Employee>) => {\n      try {\n        s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 66,
          "block": "async (formData: Partial<Employee>) => {\n      try {\n        setIsSubmitting(true);\n\n        if (sel..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 66,
          "block": "async (formData: Partial<Employee>) => {\n      try {\n        setIsSubmitting(true);\n\n        if (sel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 67,
          "block": "try {\n        setIsSubmitting(true);\n\n        if (selectedEmployee) {\n          // Update existing e..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 67,
          "block": "try {\n        setIsSubmitting(true);\n\n        if (selectedEmployee) {\n          // Update existing e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 68,
          "block": "setIsSubmitting(true);\n\n        if (selectedEmployee) {\n          // Update existing employee\n      ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 68,
          "block": "setIsSubmitting(true);\n\n        if (selectedEmployee) {\n          // Update existing employee\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 69,
          "block": "if (selectedEmployee) {\n          // Update existing employee\n          const updatedEmployee = {\n  ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 69,
          "block": "if (selectedEmployee) {\n          // Update existing employee\n          const updatedEmployee = {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 70,
          "block": "if (selectedEmployee) {\n          // Update existing employee\n          const updatedEmployee = {\n  ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 70,
          "block": "if (selectedEmployee) {\n          // Update existing employee\n          const updatedEmployee = {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 71,
          "block": "// Update existing employee\n          const updatedEmployee = {\n            ...selectedEmployee,\n   ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 71,
          "block": "// Update existing employee\n          const updatedEmployee = {\n            ...selectedEmployee,\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 73,
          "block": "...selectedEmployee,\n            ...formData,\n          };\n\n          // Here you would typically ma..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 73,
          "block": "...selectedEmployee,\n            ...formData,\n          };\n\n          // Here you would typically ma..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 74,
          "block": "...formData,\n          };\n\n          // Here you would typically make an API call to update the empl..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 74,
          "block": "...formData,\n          };\n\n          // Here you would typically make an API call to update the empl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 75,
          "block": "};\n\n          // Here you would typically make an API call to update the employee\n          // await..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 75,
          "block": "};\n\n          // Here you would typically make an API call to update the employee\n          // await..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 79,
          "block": "toast({\n            title: \"Employee updated\",\n            description: `Successfully updated ${upda..."
        },
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 80,
          "block": "toast({\n            title: \"Employee updated\",\n            description: `Successfully updated ${upda..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 83,
          "block": "});\n\n          if (options?.onUpdateSuccess) {\n            options.onUpdateSuccess(updatedEmployee a..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 84,
          "block": "});\n\n          if (options?.onUpdateSuccess) {\n            options.onUpdateSuccess(updatedEmployee a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 84,
          "block": "if (options?.onUpdateSuccess) {\n            options.onUpdateSuccess(updatedEmployee as Employee);\n  ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 85,
          "block": "if (options?.onUpdateSuccess) {\n            options.onUpdateSuccess(updatedEmployee as Employee);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 85,
          "block": "if (options?.onUpdateSuccess) {\n            options.onUpdateSuccess(updatedEmployee as Employee);\n  ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 86,
          "block": "if (options?.onUpdateSuccess) {\n            options.onUpdateSuccess(updatedEmployee as Employee);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 86,
          "block": "options.onUpdateSuccess(updatedEmployee as Employee);\n          }\n        } else {\n          // Crea..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 87,
          "block": "options.onUpdateSuccess(updatedEmployee as Employee);\n          }\n        } else {\n          // Crea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 87,
          "block": "}\n        } else {\n          // Create new employee\n          const newEmployee = {\n            id: ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 88,
          "block": "}\n        } else {\n          // Create new employee\n          const newEmployee = {\n            id: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 88,
          "block": "} else {\n          // Create new employee\n          const newEmployee = {\n            id: `temp-${Da..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 89,
          "block": "} else {\n          // Create new employee\n          const newEmployee = {\n            id: `temp-${Da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 89,
          "block": "// Create new employee\n          const newEmployee = {\n            id: `temp-${Date.now()}`, // This..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 90,
          "block": "// Create new employee\n          const newEmployee = {\n            id: `temp-${Date.now()}`, // This..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 90,
          "block": "const newEmployee = {\n            id: `temp-${Date.now()}`, // This would be replaced by the databas..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 91,
          "block": "const newEmployee = {\n            id: `temp-${Date.now()}`, // This would be replaced by the databas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 91,
          "block": "id: `temp-${Date.now()}`, // This would be replaced by the database\n            created_at: new Date..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 92,
          "block": "id: `temp-${Date.now()}`, // This would be replaced by the database\n            created_at: new Date..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 92,
          "block": "created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 93,
          "block": "created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 93,
          "block": "updated_at: new Date().toISOString(),\n            ...formData,\n          } as Employee;\n\n          /..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 94,
          "block": "updated_at: new Date().toISOString(),\n            ...formData,\n          } as Employee;\n\n          /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 94,
          "block": "...formData,\n          } as Employee;\n\n          // Here you would typically make an API call to cre..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 95,
          "block": "...formData,\n          } as Employee;\n\n          // Here you would typically make an API call to cre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 95,
          "block": "} as Employee;\n\n          // Here you would typically make an API call to create the employee\n      ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 96,
          "block": "} as Employee;\n\n          // Here you would typically make an API call to create the employee\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 99,
          "block": "toast({\n            title: \"Employee created\",\n            description: `Successfully added ${newEmp..."
        },
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 100,
          "block": "toast({\n            title: \"Employee created\",\n            description: `Successfully added ${newEmp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 103,
          "block": "});\n\n          if (options?.onCreateSuccess) {\n            options.onCreateSuccess(newEmployee);\n   ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 105,
          "block": "});\n\n          if (options?.onCreateSuccess) {\n            options.onCreateSuccess(newEmployee);\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 104,
          "block": "if (options?.onCreateSuccess) {\n            options.onCreateSuccess(newEmployee);\n          }\n      ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 105,
          "block": "if (options?.onCreateSuccess) {\n            options.onCreateSuccess(newEmployee);\n          }\n      ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 106,
          "block": "if (options?.onCreateSuccess) {\n            options.onCreateSuccess(newEmployee);\n          }\n      ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 107,
          "block": "if (options?.onCreateSuccess) {\n            options.onCreateSuccess(newEmployee);\n          }\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 109,
          "block": "// Close dialog\n        setIsOpen(false);\n\n        // Optional: Reset selected employee after a dela..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 111,
          "block": "// Close dialog\n        setIsOpen(false);\n\n        // Optional: Reset selected employee after a dela..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 110,
          "block": "// Close dialog\n        setIsOpen(false);\n\n        // Optional: Reset selected employee after a dela..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 112,
          "block": "// Close dialog\n        setIsOpen(false);\n\n        // Optional: Reset selected employee after a dela..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 111,
          "block": "setIsOpen(false);\n\n        // Optional: Reset selected employee after a delay\n        setTimeout(() ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 113,
          "block": "setIsOpen(false);\n\n        // Optional: Reset selected employee after a delay\n        setTimeout(() ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 112,
          "block": "// Optional: Reset selected employee after a delay\n        setTimeout(() => {\n          setSelectedE..."
        },
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 113,
          "block": "// Optional: Reset selected employee after a delay\n        setTimeout(() => {\n          setSelectedE..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 114,
          "block": "// Optional: Reset selected employee after a delay\n        setTimeout(() => {\n          setSelectedE..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 115,
          "block": "// Optional: Reset selected employee after a delay\n        setTimeout(() => {\n          setSelectedE..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 116,
          "block": "}, 300);\n\n        return true;\n      } catch (error) {\n        console.error(\"Error submitting emplo..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 118,
          "block": "}, 300);\n\n        return true;\n      } catch (error) {\n        console.error(\"Error submitting emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 117,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting employee form:\", error)..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 119,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting employee form:\", error)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 118,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting employee form:\", error)..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 120,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting employee form:\", error)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 119,
          "block": "} catch (error) {\n        console.error(\"Error submitting employee form:\", error);\n\n        toast({\n..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 121,
          "block": "} catch (error) {\n        console.error(\"Error submitting employee form:\", error);\n\n        toast({\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 120,
          "block": "console.error(\"Error submitting employee form:\", error);\n\n        toast({\n          title: \"Error\",\n..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 122,
          "block": "console.error(\"Error submitting employee form:\", error);\n\n        toast({\n          title: \"Error\",\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 121,
          "block": "toast({\n          title: \"Error\",\n          description: `Failed to ${selectedEmployee ? \"update\" : ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 123,
          "block": "toast({\n          title: \"Error\",\n          description: `Failed to ${selectedEmployee ? \"update\" : ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 122,
          "block": "toast({\n          title: \"Error\",\n          description: `Failed to ${selectedEmployee ? \"update\" : ..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 124,
          "block": "toast({\n          title: \"Error\",\n          description: `Failed to ${selectedEmployee ? \"update\" : ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 123,
          "block": "title: \"Error\",\n          description: `Failed to ${selectedEmployee ? \"update\" : \"create\"} employee..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 125,
          "block": "title: \"Error\",\n          description: `Failed to ${selectedEmployee ? \"update\" : \"create\"} employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\useEmployeeDialog.ts",
          "startLine": 124,
          "block": "description: `Failed to ${selectedEmployee ? \"update\" : \"create\"} employee.`,\n          variant: \"de..."
        },
        {
          "file": "src\\features\\management\\hooks\\useEmployeeDialog.ts",
          "startLine": 126,
          "block": "description: `Failed to ${selectedEmployee ? \"update\" : \"create\"} employee.`,\n          variant: \"de..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 37,
          "block": "const mockEmployees = [\n        {\n          id: \"1\",\n          first_name: \"John\",\n          last_na..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 88,
          "block": "const mockEmployees = [\n        {\n          id: \"1\",\n          first_name: \"John\",\n          last_na..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 38,
          "block": "{\n          id: \"1\",\n          first_name: \"John\",\n          last_name: \"Doe\",\n          email: \"joh..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 89,
          "block": "{\n          id: \"1\",\n          first_name: \"John\",\n          last_name: \"Doe\",\n          email: \"joh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 39,
          "block": "id: \"1\",\n          first_name: \"John\",\n          last_name: \"Doe\",\n          email: \"john@example.co..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 90,
          "block": "id: \"1\",\n          first_name: \"John\",\n          last_name: \"Doe\",\n          email: \"john@example.co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 40,
          "block": "first_name: \"John\",\n          last_name: \"Doe\",\n          email: \"john@example.com\",\n          phone..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 91,
          "block": "first_name: \"John\",\n          last_name: \"Doe\",\n          email: \"john@example.com\",\n          phone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 41,
          "block": "last_name: \"Doe\",\n          email: \"john@example.com\",\n          phone: \"123-456-7890\",\n          po..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 92,
          "block": "last_name: \"Doe\",\n          email: \"john@example.com\",\n          phone: \"123-456-7890\",\n          po..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 42,
          "block": "email: \"john@example.com\",\n          phone: \"123-456-7890\",\n          position: \"Manager\",\n         ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 93,
          "block": "email: \"john@example.com\",\n          phone: \"123-456-7890\",\n          position: \"Manager\",\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 43,
          "block": "phone: \"123-456-7890\",\n          position: \"Manager\",\n          department: \"Operations\",\n          ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 94,
          "block": "phone: \"123-456-7890\",\n          position: \"Manager\",\n          department: \"Operations\",\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 44,
          "block": "position: \"Manager\",\n          department: \"Operations\",\n          hire_date: \"2023-01-01\",\n        ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 95,
          "block": "position: \"Manager\",\n          department: \"Operations\",\n          hire_date: \"2023-01-01\",\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 45,
          "block": "department: \"Operations\",\n          hire_date: \"2023-01-01\",\n          salary: 75000,\n          stat..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 96,
          "block": "department: \"Operations\",\n          hire_date: \"2023-01-01\",\n          salary: 75000,\n          stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 46,
          "block": "hire_date: \"2023-01-01\",\n          salary: 75000,\n          status: \"active\",\n          notes: \"\",\n ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 97,
          "block": "hire_date: \"2023-01-01\",\n          salary: 75000,\n          status: \"active\",\n          notes: \"\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 47,
          "block": "salary: 75000,\n          status: \"active\",\n          notes: \"\",\n          created_at: \"2023-01-01\",\n..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 98,
          "block": "salary: 75000,\n          status: \"active\",\n          notes: \"\",\n          created_at: \"2023-01-01\",\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 48,
          "block": "status: \"active\",\n          notes: \"\",\n          created_at: \"2023-01-01\",\n          updated_at: \"20..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 99,
          "block": "status: \"active\",\n          notes: \"\",\n          created_at: \"2023-01-01\",\n          updated_at: \"20..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 50,
          "block": "created_at: \"2023-01-01\",\n          updated_at: \"2023-01-01\",\n        },\n        {\n          id: \"2\"..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 56,
          "block": "created_at: \"2023-01-01\",\n          updated_at: \"2023-01-01\",\n        },\n        {\n          id: \"2\"..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 96,
          "block": "created_at: \"2023-01-01\",\n          updated_at: \"2023-01-01\",\n        },\n        {\n          id: \"2\"..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 57,
          "block": "created_at: \"2023-01-01\",\n          updated_at: \"2023-01-01\",\n        },\n        {\n          id: \"2\"..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 352,
          "block": "created_at: \"2023-01-01\",\n          updated_at: \"2023-01-01\",\n        },\n        {\n          id: \"2\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 68,
          "block": "];\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n  ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 104,
          "block": "];\n\n      // Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 69,
          "block": "// Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n      mockFe..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 105,
          "block": "// Use shared test utility\n      const { renderTestHook, mockFetch } = setupHookTest();\n      mockFe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 78,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 112,
          "block": "await waitFor(() => {\n        expect(result.current.isLoading).toBe(false);\n      });\n\n      expect(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 119,
          "block": "it(\"should handle employee fetch error\", async () => {\n      // Use shared error test utility\n      ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 120,
          "block": "it(\"should handle employee fetch error\", async () => {\n      // Use shared error test utility\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 212,
          "block": "const { result } = renderTestHook(() => useEmployees());\n\n      await act(async () => {\n        resu..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 316,
          "block": "const { result } = renderTestHook(() => useEmployees());\n\n      await act(async () => {\n        resu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 213,
          "block": "const { result } = renderTestHook(() => useEmployees());\n\n      await act(async () => {\n        resu..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 317,
          "block": "const { result } = renderTestHook(() => useEmployees());\n\n      await act(async () => {\n        resu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 215,
          "block": "await act(async () => {\n        result.current.createEmployee.mutate(newEmployee);\n      });\n\n      ..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 319,
          "block": "await act(async () => {\n        result.current.createEmployee.mutate(newEmployee);\n      });\n\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 216,
          "block": "result.current.createEmployee.mutate(newEmployee);\n      });\n\n      await waitFor(() => {\n        ex..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 320,
          "block": "result.current.createEmployee.mutate(newEmployee);\n      });\n\n      await waitFor(() => {\n        ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 218,
          "block": "await waitFor(() => {\n        expect(result.current.createEmployee.isSuccess).toBe(true);\n        ex..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 219,
          "block": "await waitFor(() => {\n        expect(result.current.createEmployee.isSuccess).toBe(true);\n        ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 261,
          "block": "await waitFor(() => {\n        expect(result.current.updateEmployee.isSuccess).toBe(true);\n        ex..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 262,
          "block": "await waitFor(() => {\n        expect(result.current.updateEmployee.isSuccess).toBe(true);\n        ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 282,
          "block": "await waitFor(() => {\n        expect(result.current.deleteEmployee.isSuccess).toBe(true);\n        ex..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 283,
          "block": "await waitFor(() => {\n        expect(result.current.deleteEmployee.isSuccess).toBe(true);\n        ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 290,
          "block": "it(\"should invalidate queries after successful mutations\", async () => {\n      // Setup a mock query..."
        },
        {
          "file": "src\\features\\employees\\hooks\\__tests__\\useEmployees.test.ts",
          "startLine": 291,
          "block": "it(\"should invalidate queries after successful mutations\", async () => {\n      // Setup a mock query..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 1,
          "block": "import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card, CardCont..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 1,
          "block": "import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card, CardCont..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 25,
          "block": "} from 'lucide-react';\r\nimport { DashboardCard } from '@/components/ui/dashboard-card';\r\nimport { Da..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 25,
          "block": "} from 'lucide-react';\r\nimport { DashboardCard } from '@/components/ui/dashboard-card';\r\nimport { Da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 26,
          "block": "import { DashboardCard } from '@/components/ui/dashboard-card';\r\nimport { DashboardGrid } from '@/co..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 26,
          "block": "import { DashboardCard } from '@/components/ui/dashboard-card';\r\nimport { DashboardGrid } from '@/co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 208,
          "block": "const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        r..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 170,
          "block": "const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 218,
          "block": "return 'bg-gray-100 text-gray-800 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status:..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 218,
          "block": "return 'bg-gray-100 text-gray-800 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status:..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 180,
          "block": "return 'bg-gray-100 text-gray-800 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 221,
          "block": "const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        re..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 183,
          "block": "const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 241,
          "block": "};\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-p..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 195,
          "block": "};\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 242,
          "block": "return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 196,
          "block": "return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 243,
          "block": "return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 197,
          "block": "return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 244,
          "block": "<div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 p-6\">\r\n      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 198,
          "block": "<div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 p-6\">\r\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 245,
          "block": "<div className=\"mx-auto max-w-7xl space-y-8\">\r\n        {/* Page Header */}\r\n        <div className=\"..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 248,
          "block": "<div className=\"mx-auto max-w-7xl space-y-8\">\r\n        {/* Page Header */}\r\n        <div className=\"..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 199,
          "block": "<div className=\"mx-auto max-w-7xl space-y-8\">\r\n        {/* Page Header */}\r\n        <div className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 246,
          "block": "{/* Page Header */}\r\n        <div className=\"page-header-container\">\r\n          <div className=\"flex..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 200,
          "block": "{/* Page Header */}\r\n        <div className=\"page-header-container\">\r\n          <div className=\"flex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 255,
          "block": "</p>\r\n            </div>\r\n            <div className=\"flex space-x-3\">\r\n              <Button varian..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 258,
          "block": "</p>\r\n            </div>\r\n            <div className=\"flex space-x-3\">\r\n              <Button varian..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 256,
          "block": "</div>\r\n            <div className=\"flex space-x-3\">\r\n              <Button variant=\"outline\" size=\"..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 259,
          "block": "</div>\r\n            <div className=\"flex space-x-3\">\r\n              <Button variant=\"outline\" size=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 257,
          "block": "<div className=\"flex space-x-3\">\r\n              <Button variant=\"outline\" size=\"lg\" className=\"glass..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 260,
          "block": "<div className=\"flex space-x-3\">\r\n              <Button variant=\"outline\" size=\"lg\" className=\"glass..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 258,
          "block": "<Button variant=\"outline\" size=\"lg\" className=\"glass-effect\">\r\n                <Search className=\"mr..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 261,
          "block": "<Button variant=\"outline\" size=\"lg\" className=\"glass-effect\">\r\n                <Search className=\"mr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 259,
          "block": "<Search className=\"mr-2 h-5 w-5\" />\r\n                {t('common.search')}\r\n              </Button>\r\n..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 262,
          "block": "<Search className=\"mr-2 h-5 w-5\" />\r\n                {t('common.search')}\r\n              </Button>\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 260,
          "block": "{t('common.search')}\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"lg\" cla..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 263,
          "block": "{t('common.search')}\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"lg\" cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 261,
          "block": "</Button>\r\n              <Button variant=\"outline\" size=\"lg\" className=\"glass-effect\">\r\n            ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 264,
          "block": "</Button>\r\n              <Button variant=\"outline\" size=\"lg\" className=\"glass-effect\">\r\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 277,
          "block": "<DashboardCard\r\n              key={index}\r\n              title={stat.title}\r\n              value={st..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 284,
          "block": "<DashboardCard\r\n              key={index}\r\n              title={stat.title}\r\n              value={st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 278,
          "block": "key={index}\r\n              title={stat.title}\r\n              value={stat.value}\r\n              descr..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 285,
          "block": "key={index}\r\n              title={stat.title}\r\n              value={stat.value}\r\n              descr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 279,
          "block": "title={stat.title}\r\n              value={stat.value}\r\n              description={stat.description}\r\n..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 286,
          "block": "title={stat.title}\r\n              value={stat.value}\r\n              description={stat.description}\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 280,
          "block": "value={stat.value}\r\n              description={stat.description}\r\n              icon={stat.icon}\r\n  ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 287,
          "block": "value={stat.value}\r\n              description={stat.description}\r\n              icon={stat.icon}\r\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 281,
          "block": "description={stat.description}\r\n              icon={stat.icon}\r\n              trend={stat.trend}\r\n  ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 288,
          "block": "description={stat.description}\r\n              icon={stat.icon}\r\n              trend={stat.trend}\r\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 282,
          "block": "icon={stat.icon}\r\n              trend={stat.trend}\r\n              change={stat.change}\r\n            ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 289,
          "block": "icon={stat.icon}\r\n              trend={stat.trend}\r\n              change={stat.change}\r\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 283,
          "block": "trend={stat.trend}\r\n              change={stat.change}\r\n              color={stat.color}\r\n          ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 290,
          "block": "trend={stat.trend}\r\n              change={stat.change}\r\n              color={stat.color}\r\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 284,
          "block": "change={stat.change}\r\n              color={stat.color}\r\n            />\r\n          ))}\r\n        </Das..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 291,
          "block": "change={stat.change}\r\n              color={stat.color}\r\n            />\r\n          ))}\r\n        </Das..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 288,
          "block": "</DashboardGrid>\r\n\r\n        {/* Quick Actions */}\r\n        <CardContainer>\r\n          <Card classNam..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 295,
          "block": "</DashboardGrid>\r\n\r\n        {/* Quick Actions */}\r\n        <CardContainer>\r\n          <Card classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 289,
          "block": "{/* Quick Actions */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n        ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 296,
          "block": "{/* Quick Actions */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 290,
          "block": "{/* Quick Actions */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n        ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 297,
          "block": "{/* Quick Actions */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 300,
          "block": "</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div classNa..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 307,
          "block": "</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div classNa..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 258,
          "block": "</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div classNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 301,
          "block": "</CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-col..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 308,
          "block": "</CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-col..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 259,
          "block": "</CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-col..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 302,
          "block": "<CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 309,
          "block": "<CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 260,
          "block": "<CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 303,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {quickAction..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 310,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {quickAction..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 261,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {quickAction..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 304,
          "block": "{quickActions.map((action, index) => (\r\n                  <Button\r\n                    key={index}\r\n..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 311,
          "block": "{quickActions.map((action, index) => (\r\n                  <Button\r\n                    key={index}\r\n..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 262,
          "block": "{quickActions.map((action, index) => (\r\n                  <Button\r\n                    key={index}\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 305,
          "block": "<Button\r\n                    key={index}\r\n                    variant=\"outline\"\r\n                   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 312,
          "block": "<Button\r\n                    key={index}\r\n                    variant=\"outline\"\r\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 263,
          "block": "<Button\r\n                    key={index}\r\n                    variant=\"outline\"\r\n                   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 306,
          "block": "key={index}\r\n                    variant=\"outline\"\r\n                    className=\"h-24 flex flex-co..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 313,
          "block": "key={index}\r\n                    variant=\"outline\"\r\n                    className=\"h-24 flex flex-co..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 264,
          "block": "key={index}\r\n                    variant=\"outline\"\r\n                    className=\"h-24 flex flex-co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 307,
          "block": "variant=\"outline\"\r\n                    className=\"h-24 flex flex-col items-center justify-center spa..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 314,
          "block": "variant=\"outline\"\r\n                    className=\"h-24 flex flex-col items-center justify-center spa..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 265,
          "block": "variant=\"outline\"\r\n                    className=\"h-24 flex flex-col items-center justify-center spa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 308,
          "block": "className=\"h-24 flex flex-col items-center justify-center space-y-2 glass-effect hover:shadow-lg tra..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 315,
          "block": "className=\"h-24 flex flex-col items-center justify-center space-y-2 glass-effect hover:shadow-lg tra..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 266,
          "block": "className=\"h-24 flex flex-col items-center justify-center space-y-2 glass-effect hover:shadow-lg tra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 309,
          "block": ">\r\n                    <div className={cn(\"p-2 rounded-lg\", action.color)}>\r\n                      <..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 316,
          "block": ">\r\n                    <div className={cn(\"p-2 rounded-lg\", action.color)}>\r\n                      <..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 267,
          "block": ">\r\n                    <div className={cn(\"p-2 rounded-lg\", action.color)}>\r\n                      <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 310,
          "block": "<div className={cn(\"p-2 rounded-lg\", action.color)}>\r\n                      <action.icon className={..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 317,
          "block": "<div className={cn(\"p-2 rounded-lg\", action.color)}>\r\n                      <action.icon className={..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 268,
          "block": "<div className={cn(\"p-2 rounded-lg\", action.color)}>\r\n                      <action.icon className={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 311,
          "block": "<action.icon className={cn(\"h-5 w-5\", action.iconColor)} />\r\n                    </div>\r\n           ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 318,
          "block": "<action.icon className={cn(\"h-5 w-5\", action.iconColor)} />\r\n                    </div>\r\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 269,
          "block": "<action.icon className={cn(\"h-5 w-5\", action.iconColor)} />\r\n                    </div>\r\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 312,
          "block": "</div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"fon..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 319,
          "block": "</div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"fon..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 270,
          "block": "</div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"fon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 313,
          "block": "<div className=\"text-center\">\r\n                      <div className=\"font-medium\">{action.title}</di..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 320,
          "block": "<div className=\"text-center\">\r\n                      <div className=\"font-medium\">{action.title}</di..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 271,
          "block": "<div className=\"text-center\">\r\n                      <div className=\"font-medium\">{action.title}</di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 314,
          "block": "<div className=\"font-medium\">{action.title}</div>\r\n                      <div className=\"text-xs tex..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 321,
          "block": "<div className=\"font-medium\">{action.title}</div>\r\n                      <div className=\"text-xs tex..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 272,
          "block": "<div className=\"font-medium\">{action.title}</div>\r\n                      <div className=\"text-xs tex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 315,
          "block": "<div className=\"text-xs text-muted-foreground\">{action.description}</div>\r\n                    </div..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 322,
          "block": "<div className=\"text-xs text-muted-foreground\">{action.description}</div>\r\n                    </div..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 273,
          "block": "<div className=\"text-xs text-muted-foreground\">{action.description}</div>\r\n                    </div..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 316,
          "block": "</div>\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </CardCo..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 323,
          "block": "</div>\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </CardCo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 274,
          "block": "</div>\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </CardCo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 385,
          "block": "<Button variant=\"ghost\" size=\"sm\">\r\n                          <MoreVertical className=\"h-4 w-4\" />\r\n..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 549,
          "block": "<Button variant=\"ghost\" size=\"sm\">\r\n                          <MoreVertical className=\"h-4 w-4\" />\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 388,
          "block": "</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </C..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 390,
          "block": "</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </C..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 431,
          "block": "</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </C..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 470,
          "block": "</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </C..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 335,
          "block": "</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </C..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 374,
          "block": "</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </C..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 389,
          "block": "</div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </C..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 423,
          "block": "</div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </C..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 391,
          "block": "</div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </C..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 432,
          "block": "</div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </C..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 471,
          "block": "</div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </C..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 336,
          "block": "</div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </C..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 375,
          "block": "</div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </C..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 412,
          "block": "<div\r\n                      key={index}\r\n                      className=\"flex items-center justify-..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 452,
          "block": "<div\r\n                      key={index}\r\n                      className=\"flex items-center justify-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 435,
          "block": "</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div classNa..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 483,
          "block": "</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div classNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 455,
          "block": "</div>\r\n\r\n        {/* Performance Overview */}\r\n        <CardContainer>\r\n          <Card className=\"..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 503,
          "block": "</div>\r\n\r\n        {/* Performance Overview */}\r\n        <CardContainer>\r\n          <Card className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 456,
          "block": "{/* Performance Overview */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 504,
          "block": "{/* Performance Overview */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 457,
          "block": "{/* Performance Overview */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 505,
          "block": "{/* Performance Overview */}\r\n        <CardContainer>\r\n          <Card className=\"card-enhanced\">\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 467,
          "block": "</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div classNa..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 515,
          "block": "</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div classNa..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 393,
          "block": "</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div classNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
          "startLine": 486,
          "block": "</div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </CardContainer..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 534,
          "block": "</div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </CardContainer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 4,
          "block": "// Import our custom UI components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nim..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 5,
          "block": "// Import our custom UI components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nim..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 5,
          "block": "// Import our custom UI components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 5,
          "block": "// Import our custom UI components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nim..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 6,
          "block": "// Import our custom UI components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nim..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 6,
          "block": "// Import our custom UI components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 6,
          "block": "import { PageHeader } from \"@/core/components/ui/page-header\";\nimport { CreateButton } from \"@/core/..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 7,
          "block": "import { PageHeader } from \"@/core/components/ui/page-header\";\nimport { CreateButton } from \"@/core/..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 7,
          "block": "import { PageHeader } from \"@/core/components/ui/page-header\";\nimport { CreateButton } from \"@/core/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 7,
          "block": "import { CreateButton } from \"@/core/components/ui/create-button\";\nimport {\n  Card,\n  CardContent,\n ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 8,
          "block": "import { CreateButton } from \"@/core/components/ui/create-button\";\nimport {\n  Card,\n  CardContent,\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 8,
          "block": "import { CreateButton } from \"@/core/components/ui/create-button\";\nimport {\n  Card,\n  CardContent,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 14,
          "block": "// Import our specialized data table component\nimport { EmployeesTableStandardized } from \"@/feature..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 15,
          "block": "// Import our specialized data table component\nimport { EmployeesTableStandardized } from \"@/feature..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 72,
          "block": "export function EmployeesPage() {\n  const { t } = useTranslation();\n  const { toast } = useToast();\n..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 73,
          "block": "export function EmployeesPage() {\n  const { t } = useTranslation();\n  const { toast } = useToast();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 105,
          "block": "}\n      return result;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey:..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 141,
          "block": "}\n      return result;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 106,
          "block": "return result;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"emplo..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 142,
          "block": "return result;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 107,
          "block": "},\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"employees\"] });\n      se..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 143,
          "block": "},\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"employees\"] });\n      se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 108,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"employees\"] });\n      setIsDial..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 144,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"employees\"] });\n      setIsDial..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 109,
          "block": "queryClient.invalidateQueries({ queryKey: [\"employees\"] });\n      setIsDialogOpen(false);\n      toas..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 145,
          "block": "queryClient.invalidateQueries({ queryKey: [\"employees\"] });\n      setIsDialogOpen(false);\n      toas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 110,
          "block": "setIsDialogOpen(false);\n      toast({\n        title: t(\"employees.success\"),\n        description: ge..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 146,
          "block": "setIsDialogOpen(false);\n      toast({\n        title: t(\"employees.success\"),\n        description: ge..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 262,
          "block": "const handleOpenCreateDialog = useCallback(() => {\n    setSelectedEmployee(null);\n    setIsDialogOpe..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 263,
          "block": "const handleOpenCreateDialog = useCallback(() => {\n    setSelectedEmployee(null);\n    setIsDialogOpe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 301,
          "block": "</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gray-800/50 backdro..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 321,
          "block": "</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gray-800/50 backdro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 302,
          "block": "</CardContent>\n          </Card>\n\n          <Card className=\"bg-gray-800/50 backdrop-blur border bor..."
        },
        {
          "file": "src\\features\\employees\\pages\\EmployeesPage.tsx",
          "startLine": 322,
          "block": "</CardContent>\n          </Card>\n\n          <Card className=\"bg-gray-800/50 backdrop-blur border bor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 20,
          "block": "// Parse contact string (assuming format \"email|phone\")\n  const contactParts = (centralizedEmployee...."
        },
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 21,
          "block": "// Parse contact string (assuming format \"email|phone\")\n  const contactParts = (centralizedEmployee...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 42,
          "block": "// Helper function to adapt feature type to centralized request for creation/update\nfunction adaptFe..."
        },
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 43,
          "block": "// Helper function to adapt feature type to centralized request for creation/update\nfunction adaptFe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 45,
          "block": "// Combine first and last name\n  const name = `${employee.first_name} ${employee.last_name}`;\n\n  // ..."
        },
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 77,
          "block": "// Combine first and last name\n  const name = `${employee.first_name} ${employee.last_name}`;\n\n  // ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 77,
          "block": "// Combine first and last name\n  const name = `${employee.first_name} ${employee.last_name}`;\n\n  // ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 46,
          "block": "const name = `${employee.first_name} ${employee.last_name}`;\n\n  // Combine email and phone into cont..."
        },
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 78,
          "block": "const name = `${employee.first_name} ${employee.last_name}`;\n\n  // Combine email and phone into cont..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 78,
          "block": "const name = `${employee.first_name} ${employee.last_name}`;\n\n  // Combine email and phone into cont..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 61,
          "block": "name,\n    contact,\n    position: employee.position,\n    hire_date: employee.hire_date,\n    salary: e..."
        },
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 92,
          "block": "name,\n    contact,\n    position: employee.position,\n    hire_date: employee.hire_date,\n    salary: e..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 92,
          "block": "name,\n    contact,\n    position: employee.position,\n    hire_date: employee.hire_date,\n    salary: e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 62,
          "block": "contact,\n    position: employee.position,\n    hire_date: employee.hire_date,\n    salary: employee.sa..."
        },
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 93,
          "block": "contact,\n    position: employee.position,\n    hire_date: employee.hire_date,\n    salary: employee.sa..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 93,
          "block": "contact,\n    position: employee.position,\n    hire_date: employee.hire_date,\n    salary: employee.sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 63,
          "block": "position: employee.position,\n    hire_date: employee.hire_date,\n    salary: employee.salary,\n    sta..."
        },
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 94,
          "block": "position: employee.position,\n    hire_date: employee.hire_date,\n    salary: employee.salary,\n    sta..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 94,
          "block": "position: employee.position,\n    hire_date: employee.hire_date,\n    salary: employee.salary,\n    sta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 96,
          "block": "if (filters.department) {\n        employees = employees.filter((e) => e.department === filters.depar..."
        },
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 97,
          "block": "if (filters.department) {\n        employees = employees.filter((e) => e.department === filters.depar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 136,
          "block": "if (!response.data) {\n      return null;\n    }\n    \n    return adaptCentralizedToFeatureType(respons..."
        },
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 158,
          "block": "if (!response.data) {\n      return null;\n    }\n    \n    return adaptCentralizedToFeatureType(respons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 198,
          "block": "const departmentCounts = employees.reduce((acc, emp) => {\n      acc[emp.department] = (acc[emp.depar..."
        },
        {
          "file": "src\\features\\employees\\services\\index.ts",
          "startLine": 199,
          "block": "const departmentCounts = employees.reduce((acc, emp) => {\n      acc[emp.department] = (acc[emp.depar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 1,
          "block": "import type { Database } from \"@/types/supabase\";\n\n// Type for database employees shape\nexport type ..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 1,
          "block": "import type { Database } from \"@/types/supabase\";\n\n// Type for database employees shape\nexport type ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 2,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 2,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 3,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 3,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 4,
          "block": "export type DbEmployee = Database[\"public\"][\"Tables\"][\"employees\"][\"Row\"];\n\n// Employee domain model..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 4,
          "block": "export type DbEmployee = Database[\"public\"][\"Tables\"][\"employees\"][\"Row\"];\n\n// Employee domain model..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 6,
          "block": "// Employee domain model\nexport interface Employee {\n  id: string;\n  first_name: string;\n  last_name..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 6,
          "block": "// Employee domain model\nexport interface Employee {\n  id: string;\n  first_name: string;\n  last_name..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 7,
          "block": "export interface Employee {\n  id: string;\n  first_name: string;\n  last_name: string;\n  email: string..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 7,
          "block": "export interface Employee {\n  id: string;\n  first_name: string;\n  last_name: string;\n  email: string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 13,
          "block": "position: string;\n  department: string;\n  hire_date: string;\n  salary: number;\n  status: \"active\" | ..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 13,
          "block": "position: string;\n  department: string;\n  hire_date: string;\n  salary: number;\n  status: \"active\" | ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 14,
          "block": "department: string;\n  hire_date: string;\n  salary: number;\n  status: \"active\" | \"inactive\" | \"on_lea..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 14,
          "block": "department: string;\n  hire_date: string;\n  salary: number;\n  status: \"active\" | \"inactive\" | \"on_lea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 15,
          "block": "hire_date: string;\n  salary: number;\n  status: \"active\" | \"inactive\" | \"on_leave\";\n  notes: string;\n..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 15,
          "block": "hire_date: string;\n  salary: number;\n  status: \"active\" | \"inactive\" | \"on_leave\";\n  notes: string;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 16,
          "block": "salary: number;\n  status: \"active\" | \"inactive\" | \"on_leave\";\n  notes: string;\n  created_at: string;..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 16,
          "block": "salary: number;\n  status: \"active\" | \"inactive\" | \"on_leave\";\n  notes: string;\n  created_at: string;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 17,
          "block": "status: \"active\" | \"inactive\" | \"on_leave\";\n  notes: string;\n  created_at: string;\n  updated_at: str..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 17,
          "block": "status: \"active\" | \"inactive\" | \"on_leave\";\n  notes: string;\n  created_at: string;\n  updated_at: str..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 20,
          "block": "updated_at: string;\n}\n\n// Form data for creating/updating employees\nexport type EmployeeFormData = O..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 20,
          "block": "updated_at: string;\n}\n\n// Form data for creating/updating employees\nexport type EmployeeFormData = O..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 22,
          "block": "// Form data for creating/updating employees\nexport type EmployeeFormData = Omit<\n  Employee,\n  \"id\"..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 22,
          "block": "// Form data for creating/updating employees\nexport type EmployeeFormData = Omit<\n  Employee,\n  \"id\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 23,
          "block": "// Form data for creating/updating employees\nexport type EmployeeFormData = Omit<\n  Employee,\n  \"id\"..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 23,
          "block": "// Form data for creating/updating employees\nexport type EmployeeFormData = Omit<\n  Employee,\n  \"id\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 26,
          "block": "\"id\" | \"created_at\" | \"updated_at\"\n>;\n\n// Filter options for employee queries\nexport interface Emplo..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 26,
          "block": "\"id\" | \"created_at\" | \"updated_at\"\n>;\n\n// Filter options for employee queries\nexport interface Emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 28,
          "block": "// Filter options for employee queries\nexport interface EmployeeFilters {\n  status?: string;\n  searc..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 28,
          "block": "// Filter options for employee queries\nexport interface EmployeeFilters {\n  status?: string;\n  searc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 29,
          "block": "// Filter options for employee queries\nexport interface EmployeeFilters {\n  status?: string;\n  searc..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 29,
          "block": "// Filter options for employee queries\nexport interface EmployeeFilters {\n  status?: string;\n  searc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 30,
          "block": "export interface EmployeeFilters {\n  status?: string;\n  searchQuery?: string;\n  department?: string;..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 30,
          "block": "export interface EmployeeFilters {\n  status?: string;\n  searchQuery?: string;\n  department?: string;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 35,
          "block": "// Summary statistics for employees\nexport interface EmployeeSummary {\n  totalEmployees: number;\n  a..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 35,
          "block": "// Summary statistics for employees\nexport interface EmployeeSummary {\n  totalEmployees: number;\n  a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 36,
          "block": "// Summary statistics for employees\nexport interface EmployeeSummary {\n  totalEmployees: number;\n  a..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 36,
          "block": "// Summary statistics for employees\nexport interface EmployeeSummary {\n  totalEmployees: number;\n  a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 37,
          "block": "export interface EmployeeSummary {\n  totalEmployees: number;\n  activeEmployees: number;\n  onLeaveEmp..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 37,
          "block": "export interface EmployeeSummary {\n  totalEmployees: number;\n  activeEmployees: number;\n  onLeaveEmp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 38,
          "block": "totalEmployees: number;\n  activeEmployees: number;\n  onLeaveEmployees: number;\n  departments: Array<..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 38,
          "block": "totalEmployees: number;\n  activeEmployees: number;\n  onLeaveEmployees: number;\n  departments: Array<..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\types\\employees.types.ts",
          "startLine": 39,
          "block": "activeEmployees: number;\n  onLeaveEmployees: number;\n  departments: Array<{\n    name: string;\n    co..."
        },
        {
          "file": "src\\features\\management\\types\\employees.types.ts",
          "startLine": 39,
          "block": "activeEmployees: number;\n  onLeaveEmployees: number;\n  departments: Array<{\n    name: string;\n    co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 1,
          "block": "import type { Database } from \"@/types/supabase\";\nimport type { Employee, EmployeeFormData } from \"...."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 1,
          "block": "import type { Database } from \"@/types/supabase\";\nimport type { Employee, EmployeeFormData } from \"...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 2,
          "block": "import type { Employee, EmployeeFormData } from \"../types/employees.types\";\n\n// Type for database em..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 2,
          "block": "import type { Employee, EmployeeFormData } from \"../types/employees.types\";\n\n// Type for database em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 3,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 3,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 4,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 4,
          "block": "// Type for database employees shape\nexport type DbEmployee = Database[\"public\"][\"Tables\"][\"employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 5,
          "block": "export type DbEmployee = Database[\"public\"][\"Tables\"][\"employees\"][\"Row\"];\n\n/**\n * Extract departmen..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 5,
          "block": "export type DbEmployee = Database[\"public\"][\"Tables\"][\"employees\"][\"Row\"];\n\n/**\n * Extract departmen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 6,
          "block": "/**\n * Extract department information from status field\n * @param status - Status string which may c..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 6,
          "block": "/**\n * Extract department information from status field\n * @param status - Status string which may c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 7,
          "block": "/**\n * Extract department information from status field\n * @param status - Status string which may c..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 7,
          "block": "/**\n * Extract department information from status field\n * @param status - Status string which may c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 8,
          "block": "* Extract department information from status field\n * @param status - Status string which may contai..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 8,
          "block": "* Extract department information from status field\n * @param status - Status string which may contai..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 9,
          "block": "* @param status - Status string which may contain department info\n */\nexport function extractDepartm..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 9,
          "block": "* @param status - Status string which may contain department info\n */\nexport function extractDepartm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 10,
          "block": "*/\nexport function extractDepartment(status: string): string {\n  if (status.includes(\"dept:\")) {\n   ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 10,
          "block": "*/\nexport function extractDepartment(status: string): string {\n  if (status.includes(\"dept:\")) {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 11,
          "block": "export function extractDepartment(status: string): string {\n  if (status.includes(\"dept:\")) {\n    re..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 11,
          "block": "export function extractDepartment(status: string): string {\n  if (status.includes(\"dept:\")) {\n    re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 16,
          "block": "}\n\n/**\n * Normalize status to one of the allowed values\n * @param status - Status string from databa..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 16,
          "block": "}\n\n/**\n * Normalize status to one of the allowed values\n * @param status - Status string from databa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 17,
          "block": "/**\n * Normalize status to one of the allowed values\n * @param status - Status string from database\n..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 17,
          "block": "/**\n * Normalize status to one of the allowed values\n * @param status - Status string from database\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 18,
          "block": "/**\n * Normalize status to one of the allowed values\n * @param status - Status string from database\n..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 18,
          "block": "/**\n * Normalize status to one of the allowed values\n * @param status - Status string from database\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 19,
          "block": "* Normalize status to one of the allowed values\n * @param status - Status string from database\n */\ne..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 19,
          "block": "* Normalize status to one of the allowed values\n * @param status - Status string from database\n */\ne..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 20,
          "block": "* @param status - Status string from database\n */\nexport function normalizeStatus(\n  status: string\n..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 20,
          "block": "* @param status - Status string from database\n */\nexport function normalizeStatus(\n  status: string\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 21,
          "block": "*/\nexport function normalizeStatus(\n  status: string\n): \"active\" | \"inactive\" | \"on_leave\" {\n  if (s..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 21,
          "block": "*/\nexport function normalizeStatus(\n  status: string\n): \"active\" | \"inactive\" | \"on_leave\" {\n  if (s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 22,
          "block": "export function normalizeStatus(\n  status: string\n): \"active\" | \"inactive\" | \"on_leave\" {\n  if (stat..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 22,
          "block": "export function normalizeStatus(\n  status: string\n): \"active\" | \"inactive\" | \"on_leave\" {\n  if (stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 23,
          "block": "status: string\n): \"active\" | \"inactive\" | \"on_leave\" {\n  if (status.includes(\"dept:\")) {\n    return ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 23,
          "block": "status: string\n): \"active\" | \"inactive\" | \"on_leave\" {\n  if (status.includes(\"dept:\")) {\n    return ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 25,
          "block": "if (status.includes(\"dept:\")) {\n    return \"active\";\n  }\n\n  if ([\"active\", \"inactive\", \"on_leave\"].i..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 25,
          "block": "if (status.includes(\"dept:\")) {\n    return \"active\";\n  }\n\n  if ([\"active\", \"inactive\", \"on_leave\"].i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 26,
          "block": "return \"active\";\n  }\n\n  if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 26,
          "block": "return \"active\";\n  }\n\n  if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 27,
          "block": "}\n\n  if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status as \"active\" | \"ina..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 27,
          "block": "}\n\n  if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status as \"active\" | \"ina..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 28,
          "block": "if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status as \"active\" | \"inactive..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 28,
          "block": "if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status as \"active\" | \"inactive..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 29,
          "block": "if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status as \"active\" | \"inactive..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 29,
          "block": "if ([\"active\", \"inactive\", \"on_leave\"].includes(status)) {\n    return status as \"active\" | \"inactive..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 33,
          "block": "return \"active\"; // Default fallback\n}\n\n/**\n * Maps a database employee record to a domain Employee ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 33,
          "block": "return \"active\"; // Default fallback\n}\n\n/**\n * Maps a database employee record to a domain Employee ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 34,
          "block": "}\n\n/**\n * Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 34,
          "block": "}\n\n/**\n * Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 35,
          "block": "/**\n * Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee re..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 35,
          "block": "/**\n * Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 36,
          "block": "/**\n * Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee re..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 36,
          "block": "/**\n * Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 37,
          "block": "* Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee record ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 37,
          "block": "* Maps a database employee record to a domain Employee model\n * @param dbEmployee - Employee record ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 38,
          "block": "* @param dbEmployee - Employee record from database\n * @returns Domain Employee model\n */\nexport fun..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 38,
          "block": "* @param dbEmployee - Employee record from database\n * @returns Domain Employee model\n */\nexport fun..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 39,
          "block": "* @returns Domain Employee model\n */\nexport function mapDbToEmployee(dbEmployee: DbEmployee): Employ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 39,
          "block": "* @returns Domain Employee model\n */\nexport function mapDbToEmployee(dbEmployee: DbEmployee): Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 40,
          "block": "*/\nexport function mapDbToEmployee(dbEmployee: DbEmployee): Employee {\n  // Parse name into first an..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 40,
          "block": "*/\nexport function mapDbToEmployee(dbEmployee: DbEmployee): Employee {\n  // Parse name into first an..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 41,
          "block": "export function mapDbToEmployee(dbEmployee: DbEmployee): Employee {\n  // Parse name into first and l..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 41,
          "block": "export function mapDbToEmployee(dbEmployee: DbEmployee): Employee {\n  // Parse name into first and l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 42,
          "block": "// Parse name into first and last name (assuming format \"First Last\")\n  const nameParts = dbEmployee..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 42,
          "block": "// Parse name into first and last name (assuming format \"First Last\")\n  const nameParts = dbEmployee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 43,
          "block": "const nameParts = dbEmployee.name.split(\" \");\n  const firstName = nameParts[0] || \"\";\n  const lastNa..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 43,
          "block": "const nameParts = dbEmployee.name.split(\" \");\n  const firstName = nameParts[0] || \"\";\n  const lastNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 44,
          "block": "const firstName = nameParts[0] || \"\";\n  const lastName = nameParts.slice(1).join(\" \") || \"\";\n\n  // P..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 44,
          "block": "const firstName = nameParts[0] || \"\";\n  const lastName = nameParts.slice(1).join(\" \") || \"\";\n\n  // P..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 45,
          "block": "const lastName = nameParts.slice(1).join(\" \") || \"\";\n\n  // Parse contact string (assuming format \"em..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 45,
          "block": "const lastName = nameParts.slice(1).join(\" \") || \"\";\n\n  // Parse contact string (assuming format \"em..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 46,
          "block": "// Parse contact string (assuming format \"email|phone\")\n  const contactParts = dbEmployee.contact.sp..."
        },
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 47,
          "block": "// Parse contact string (assuming format \"email|phone\")\n  const contactParts = dbEmployee.contact.sp..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 46,
          "block": "// Parse contact string (assuming format \"email|phone\")\n  const contactParts = dbEmployee.contact.sp..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 47,
          "block": "// Parse contact string (assuming format \"email|phone\")\n  const contactParts = dbEmployee.contact.sp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 48,
          "block": "const contactParts = dbEmployee.contact.split(\"|\");\n  const email = contactParts[0] || \"\";\n  const p..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 48,
          "block": "const contactParts = dbEmployee.contact.split(\"|\");\n  const email = contactParts[0] || \"\";\n  const p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 49,
          "block": "const email = contactParts[0] || \"\";\n  const phone = contactParts[1] || \"\";\n\n  return {\n    id: dbEm..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 49,
          "block": "const email = contactParts[0] || \"\";\n  const phone = contactParts[1] || \"\";\n\n  return {\n    id: dbEm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 54,
          "block": "first_name: firstName,\n    last_name: lastName,\n    email,\n    phone,\n    position: dbEmployee.posit..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 54,
          "block": "first_name: firstName,\n    last_name: lastName,\n    email,\n    phone,\n    position: dbEmployee.posit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 55,
          "block": "last_name: lastName,\n    email,\n    phone,\n    position: dbEmployee.position,\n    department: extrac..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 55,
          "block": "last_name: lastName,\n    email,\n    phone,\n    position: dbEmployee.position,\n    department: extrac..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 56,
          "block": "email,\n    phone,\n    position: dbEmployee.position,\n    department: extractDepartment(dbEmployee.st..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 56,
          "block": "email,\n    phone,\n    position: dbEmployee.position,\n    department: extractDepartment(dbEmployee.st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 57,
          "block": "phone,\n    position: dbEmployee.position,\n    department: extractDepartment(dbEmployee.status),\n    ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 57,
          "block": "phone,\n    position: dbEmployee.position,\n    department: extractDepartment(dbEmployee.status),\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 58,
          "block": "position: dbEmployee.position,\n    department: extractDepartment(dbEmployee.status),\n    hire_date: ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 58,
          "block": "position: dbEmployee.position,\n    department: extractDepartment(dbEmployee.status),\n    hire_date: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 59,
          "block": "department: extractDepartment(dbEmployee.status),\n    hire_date: dbEmployee.hire_date,\n    salary: d..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 59,
          "block": "department: extractDepartment(dbEmployee.status),\n    hire_date: dbEmployee.hire_date,\n    salary: d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 60,
          "block": "hire_date: dbEmployee.hire_date,\n    salary: dbEmployee.salary,\n    status: normalizeStatus(dbEmploy..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 60,
          "block": "hire_date: dbEmployee.hire_date,\n    salary: dbEmployee.salary,\n    status: normalizeStatus(dbEmploy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 61,
          "block": "salary: dbEmployee.salary,\n    status: normalizeStatus(dbEmployee.status),\n    notes: \"\",\n    create..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 61,
          "block": "salary: dbEmployee.salary,\n    status: normalizeStatus(dbEmployee.status),\n    notes: \"\",\n    create..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 62,
          "block": "status: normalizeStatus(dbEmployee.status),\n    notes: \"\",\n    created_at: dbEmployee.created_at || ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 62,
          "block": "status: normalizeStatus(dbEmployee.status),\n    notes: \"\",\n    created_at: dbEmployee.created_at || ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 63,
          "block": "notes: \"\",\n    created_at: dbEmployee.created_at || new Date().toISOString(),\n    updated_at: dbEmpl..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 63,
          "block": "notes: \"\",\n    created_at: dbEmployee.created_at || new Date().toISOString(),\n    updated_at: dbEmpl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 64,
          "block": "created_at: dbEmployee.created_at || new Date().toISOString(),\n    updated_at: dbEmployee.created_at..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 64,
          "block": "created_at: dbEmployee.created_at || new Date().toISOString(),\n    updated_at: dbEmployee.created_at..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 67,
          "block": "}\n\n/**\n * Maps a domain Employee model to database format for insert/update\n * @param employee - Emp..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 67,
          "block": "}\n\n/**\n * Maps a domain Employee model to database format for insert/update\n * @param employee - Emp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 68,
          "block": "/**\n * Maps a domain Employee model to database format for insert/update\n * @param employee - Employ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 68,
          "block": "/**\n * Maps a domain Employee model to database format for insert/update\n * @param employee - Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 69,
          "block": "/**\n * Maps a domain Employee model to database format for insert/update\n * @param employee - Employ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 69,
          "block": "/**\n * Maps a domain Employee model to database format for insert/update\n * @param employee - Employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 70,
          "block": "* Maps a domain Employee model to database format for insert/update\n * @param employee - Employee fo..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 70,
          "block": "* Maps a domain Employee model to database format for insert/update\n * @param employee - Employee fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 71,
          "block": "* @param employee - Employee form data\n * @returns Employee data in database format\n */\nexport funct..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 71,
          "block": "* @param employee - Employee form data\n * @returns Employee data in database format\n */\nexport funct..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 72,
          "block": "* @returns Employee data in database format\n */\nexport function mapEmployeeToDb(\n  employee: Employe..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 72,
          "block": "* @returns Employee data in database format\n */\nexport function mapEmployeeToDb(\n  employee: Employe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 73,
          "block": "*/\nexport function mapEmployeeToDb(\n  employee: EmployeeFormData\n): Omit<DbEmployee, \"id\" | \"created..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 73,
          "block": "*/\nexport function mapEmployeeToDb(\n  employee: EmployeeFormData\n): Omit<DbEmployee, \"id\" | \"created..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 74,
          "block": "export function mapEmployeeToDb(\n  employee: EmployeeFormData\n): Omit<DbEmployee, \"id\" | \"created_at..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 74,
          "block": "export function mapEmployeeToDb(\n  employee: EmployeeFormData\n): Omit<DbEmployee, \"id\" | \"created_at..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 75,
          "block": "employee: EmployeeFormData\n): Omit<DbEmployee, \"id\" | \"created_at\"> {\n  // Combine first and last na..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 75,
          "block": "employee: EmployeeFormData\n): Omit<DbEmployee, \"id\" | \"created_at\"> {\n  // Combine first and last na..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 76,
          "block": "): Omit<DbEmployee, \"id\" | \"created_at\"> {\n  // Combine first and last name\n  const name = `${employ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 76,
          "block": "): Omit<DbEmployee, \"id\" | \"created_at\"> {\n  // Combine first and last name\n  const name = `${employ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 79,
          "block": "// Combine email and phone into contact string\n  const contact = `${employee.email}|${employee.phone..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 79,
          "block": "// Combine email and phone into contact string\n  const contact = `${employee.email}|${employee.phone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 80,
          "block": "// Combine email and phone into contact string\n  const contact = `${employee.email}|${employee.phone..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 80,
          "block": "// Combine email and phone into contact string\n  const contact = `${employee.email}|${employee.phone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 81,
          "block": "const contact = `${employee.email}|${employee.phone}`;\n\n  // Store department info in status field i..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 81,
          "block": "const contact = `${employee.email}|${employee.phone}`;\n\n  // Store department info in status field i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 82,
          "block": "// Store department info in status field if not general\n  // The database status field is a string t..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 82,
          "block": "// Store department info in status field if not general\n  // The database status field is a string t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 83,
          "block": "// Store department info in status field if not general\n  // The database status field is a string t..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 83,
          "block": "// Store department info in status field if not general\n  // The database status field is a string t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 84,
          "block": "// The database status field is a string type that can hold both status values\n  // and department i..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 84,
          "block": "// The database status field is a string type that can hold both status values\n  // and department i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 85,
          "block": "// and department information using our own convention\n  let status: string = employee.status;\n  if ..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 85,
          "block": "// and department information using our own convention\n  let status: string = employee.status;\n  if ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\employeeMappers.ts",
          "startLine": 86,
          "block": "let status: string = employee.status;\n  if (employee.department !== \"general\") {\n    status = `dept:..."
        },
        {
          "file": "src\\features\\management\\utils\\employeeMappers.ts",
          "startLine": 86,
          "block": "let status: string = employee.status;\n  if (employee.department !== \"general\") {\n    status = `dept:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\index.ts",
          "startLine": 1,
          "block": "/**\n * Employees Feature - Utilities\n *\n * This module exports utility functions for employee data m..."
        },
        {
          "file": "src\\features\\management\\utils\\index.ts",
          "startLine": 1,
          "block": "/**\n * Employees Feature - Utilities\n *\n * This module exports utility functions for employee data m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\index.ts",
          "startLine": 2,
          "block": "* Employees Feature - Utilities\n *\n * This module exports utility functions for employee data manipu..."
        },
        {
          "file": "src\\features\\management\\utils\\index.ts",
          "startLine": 2,
          "block": "* Employees Feature - Utilities\n *\n * This module exports utility functions for employee data manipu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\index.ts",
          "startLine": 4,
          "block": "* This module exports utility functions for employee data manipulation.\n */\n\nexport {\n  mapDbToEmplo..."
        },
        {
          "file": "src\\features\\management\\utils\\index.ts",
          "startLine": 4,
          "block": "* This module exports utility functions for employee data manipulation.\n */\n\nexport {\n  mapDbToEmplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\employees\\utils\\index.ts",
          "startLine": 8,
          "block": "mapDbToEmployee,\n  mapEmployeeToDb,\n  extractDepartment,\n  normalizeStatus,\n} from \"./employeeMapper..."
        },
        {
          "file": "src\\features\\management\\utils\\index.ts",
          "startLine": 8,
          "block": "mapDbToEmployee,\n  mapEmployeeToDb,\n  extractDepartment,\n  normalizeStatus,\n} from \"./employeeMapper..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 4,
          "block": "/**\n * ExpensesTable component\n *\n * @placeholder This is a placeholder component that needs proper ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 4,
          "block": "/**\n * ExpensesTable component\n *\n * @placeholder This is a placeholder component that needs proper ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 5,
          "block": "/**\n * ExpensesTable component\n *\n * @placeholder This is a placeholder component that needs proper ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 5,
          "block": "/**\n * ExpensesTable component\n *\n * @placeholder This is a placeholder component that needs proper ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 6,
          "block": "* ExpensesTable component\n *\n * @placeholder This is a placeholder component that needs proper imple..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 6,
          "block": "* ExpensesTable component\n *\n * @placeholder This is a placeholder component that needs proper imple..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 7,
          "block": "*\n * @placeholder This is a placeholder component that needs proper implementation\n */\nexport functi..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 7,
          "block": "*\n * @placeholder This is a placeholder component that needs proper implementation\n */\nexport functi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 8,
          "block": "* @placeholder This is a placeholder component that needs proper implementation\n */\nexport function ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 8,
          "block": "* @placeholder This is a placeholder component that needs proper implementation\n */\nexport function ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 9,
          "block": "*/\nexport function ExpensesTable({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 9,
          "block": "*/\nexport function ExpensesTable({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 10,
          "block": "export function ExpensesTable({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 10,
          "block": "export function ExpensesTable({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 11,
          "block": "className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 11,
          "block": "className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 12,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-expenses-tab..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 12,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-expenses-tab..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 13,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-expenses-table\", clas..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 13,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-expenses-table\", clas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 14,
          "block": "return (\n    <div className={cn(\"-expenses-table\", className)} {...props}>\n      {/* Placeholder for..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 14,
          "block": "return (\n    <div className={cn(\"-expenses-table\", className)} {...props}>\n      {/* Placeholder for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 15,
          "block": "<div className={cn(\"-expenses-table\", className)} {...props}>\n      {/* Placeholder for ExpensesTabl..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 15,
          "block": "<div className={cn(\"-expenses-table\", className)} {...props}>\n      {/* Placeholder for ExpensesTabl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 16,
          "block": "{/* Placeholder for ExpensesTable implementation */}\n      <div className=\"p-4 border border-dashed ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 16,
          "block": "{/* Placeholder for ExpensesTable implementation */}\n      <div className=\"p-4 border border-dashed ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\ExpensesTable.tsx",
          "startLine": 17,
          "block": "<div className=\"p-4 border border-dashed border-gray-300 rounded-md text-center text-gray-500\">\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpensesTable.tsx",
          "startLine": 17,
          "block": "<div className=\"p-4 border border-dashed border-gray-300 rounded-md text-center text-gray-500\">\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 4,
          "block": "/**\n * FilterPanel component\n *\n * @placeholder This is a placeholder component that needs proper im..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 4,
          "block": "/**\n * FilterPanel component\n *\n * @placeholder This is a placeholder component that needs proper im..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 5,
          "block": "/**\n * FilterPanel component\n *\n * @placeholder This is a placeholder component that needs proper im..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 5,
          "block": "/**\n * FilterPanel component\n *\n * @placeholder This is a placeholder component that needs proper im..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 6,
          "block": "* FilterPanel component\n *\n * @placeholder This is a placeholder component that needs proper impleme..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 6,
          "block": "* FilterPanel component\n *\n * @placeholder This is a placeholder component that needs proper impleme..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 7,
          "block": "*\n * @placeholder This is a placeholder component that needs proper implementation\n */\nexport functi..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 7,
          "block": "*\n * @placeholder This is a placeholder component that needs proper implementation\n */\nexport functi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 8,
          "block": "* @placeholder This is a placeholder component that needs proper implementation\n */\nexport function ..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 8,
          "block": "* @placeholder This is a placeholder component that needs proper implementation\n */\nexport function ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 10,
          "block": "export function FilterPanel({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  r..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 10,
          "block": "export function FilterPanel({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 11,
          "block": "className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 11,
          "block": "className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 12,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-filter-panel..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 12,
          "block": "...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-filter-panel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 13,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-filter-panel\", classN..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 13,
          "block": "}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn(\"-filter-panel\", classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 14,
          "block": "return (\n    <div className={cn(\"-filter-panel\", className)} {...props}>\n      {/* Placeholder for F..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 14,
          "block": "return (\n    <div className={cn(\"-filter-panel\", className)} {...props}>\n      {/* Placeholder for F..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 15,
          "block": "<div className={cn(\"-filter-panel\", className)} {...props}>\n      {/* Placeholder for FilterPanel im..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 15,
          "block": "<div className={cn(\"-filter-panel\", className)} {...props}>\n      {/* Placeholder for FilterPanel im..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 16,
          "block": "{/* Placeholder for FilterPanel implementation */}\n      <div className=\"p-4 border border-dashed bo..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 16,
          "block": "{/* Placeholder for FilterPanel implementation */}\n      <div className=\"p-4 border border-dashed bo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\components\\FilterPanel.tsx",
          "startLine": 17,
          "block": "<div className=\"p-4 border border-dashed border-gray-300 rounded-md text-center text-gray-500\">\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\FilterPanel.tsx",
          "startLine": 17,
          "block": "<div className=\"p-4 border border-dashed border-gray-300 rounded-md text-center text-gray-500\">\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\pages\\ExpensesPage.tsx",
          "startLine": 7,
          "block": "DownloadIcon,\n  PlusCircle,\n  AlertTriangle,\n} from \"lucide-react\";\nimport { format } from \"date-fns..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesPage.tsx",
          "startLine": 5,
          "block": "DownloadIcon,\n  PlusCircle,\n  AlertTriangle,\n} from \"lucide-react\";\nimport { format } from \"date-fns..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\pages\\ExpensesPage.tsx",
          "startLine": 40,
          "block": "const navigate = useNavigate();\n  const { toast } = useToast();\n  const queryClient = useQueryClient..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesPage.tsx",
          "startLine": 35,
          "block": "const navigate = useNavigate();\n  const { toast } = useToast();\n  const queryClient = useQueryClient..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\pages\\ExpensesPage.tsx",
          "startLine": 128,
          "block": "onError: (error) => {\n      toast({\n        title: t(\"common.error\"),\n        description:\n         ..."
        },
        {
          "file": "src\\features\\expenses\\pages\\ExpensesPage.tsx",
          "startLine": 150,
          "block": "onError: (error) => {\n      toast({\n        title: t(\"common.error\"),\n        description:\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\pages\\ExpensesPage.tsx",
          "startLine": 129,
          "block": "toast({\n        title: t(\"common.error\"),\n        description:\n          error instanceof Error\n    ..."
        },
        {
          "file": "src\\features\\expenses\\pages\\ExpensesPage.tsx",
          "startLine": 151,
          "block": "toast({\n        title: t(\"common.error\"),\n        description:\n          error instanceof Error\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\expenses\\pages\\ExpensesPage.tsx",
          "startLine": 161,
          "block": "// Handle delete confirmation\n  const handleDelete = async (id: string) => {\n    try {\n      await d..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesPage.tsx",
          "startLine": 82,
          "block": "// Handle delete confirmation\n  const handleDelete = async (id: string) => {\n    try {\n      await d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemCard.tsx",
          "startLine": 20,
          "block": "const handleEdit = (system: FillingSystem) => {\n    setFillingSystem(system);\n    setIsEditing(true)..."
        },
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemCard.tsx",
          "startLine": 21,
          "block": "const handleEdit = (system: FillingSystem) => {\n    setFillingSystem(system);\n    setIsEditing(true)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemCard.tsx",
          "startLine": 25,
          "block": "const handleDelete = (system: FillingSystem) => {\n    setFillingSystem(system);\n    setIsDeleting(tr..."
        },
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemCard.tsx",
          "startLine": 26,
          "block": "const handleDelete = (system: FillingSystem) => {\n    setFillingSystem(system);\n    setIsDeleting(tr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 1,
          "block": "import { z } from \"zod\";\nimport { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 1,
          "block": "import { z } from \"zod\";\nimport { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 2,
          "block": "import { z } from \"zod\";\nimport { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 2,
          "block": "import { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";\nimport { Button } from \"..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 2,
          "block": "import { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";\nimport { Button } from \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 3,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { useToast } from \"@/hooks\";\nimport { u..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 3,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { useToast } from \"@/hooks\";\nimport { u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 4,
          "block": "import { useToast } from \"@/hooks\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { tanks..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 4,
          "block": "import { useToast } from \"@/hooks\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { tanks..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 5,
          "block": "import { useQuery } from \"@tanstack/react-query\";\nimport { tanksApi } from \"@/core/api\";\nimport {\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 5,
          "block": "import { useQuery } from \"@tanstack/react-query\";\nimport { tanksApi } from \"@/core/api\";\nimport {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 6,
          "block": "import { tanksApi } from \"@/core/api\";\nimport {\n  FormInput,\n  FormSelect,\n} from \"@/core/components..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 6,
          "block": "import { tanksApi } from \"@/core/api\";\nimport {\n  FormInput,\n  FormSelect,\n} from \"@/core/components..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 7,
          "block": "import {\n  FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { use..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 6,
          "block": "import {\n  FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { use..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 7,
          "block": "import {\n  FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { use..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 6,
          "block": "import {\n  FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { use..."
        },
        {
          "file": "src\\shared\\components\\shared\\PaymentMethodFormStandardized.tsx",
          "startLine": 12,
          "block": "import {\n  FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 8,
          "block": "FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, us..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 8,
          "block": "FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, us..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 9,
          "block": "FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHa..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 9,
          "block": "FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 10,
          "block": "} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHandler } from..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 10,
          "block": "} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHandler } from..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 11,
          "block": "import { useZodForm, useFormSubmitHandler } from \"@/shared/hooks/use-form\";\nimport { useTranslation ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 11,
          "block": "import { useZodForm, useFormSubmitHandler } from \"@/shared/hooks/use-form\";\nimport { useTranslation ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 12,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { apiNamespaces, getApiActionLabel } from \"@/..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 12,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { apiNamespaces, getApiActionLabel } from \"@/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 13,
          "block": "import { apiNamespaces, getApiActionLabel } from \"@/i18n/i18n\";\nimport { useFillingSystem } from \"....."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 13,
          "block": "import { apiNamespaces, getApiActionLabel } from \"@/i18n/i18n\";\nimport { useFillingSystem } from \"....."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 14,
          "block": "import { useFillingSystem } from \"../hooks/useFillingSystem\";\n\ninterface FillingSystemFormStandardiz..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 14,
          "block": "import { useFillingSystem } from \"../hooks/useFillingSystem\";\n\ninterface FillingSystemFormStandardiz..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 15,
          "block": "interface FillingSystemFormStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => v..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 15,
          "block": "interface FillingSystemFormStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 16,
          "block": "interface FillingSystemFormStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => v..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 16,
          "block": "interface FillingSystemFormStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 18,
          "block": "onOpenChange: (open: boolean) => void;\n  onSuccess: () => void;\n}\n\n// Define Zod schema for validati..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 18,
          "block": "onOpenChange: (open: boolean) => void;\n  onSuccess: () => void;\n}\n\n// Define Zod schema for validati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 21,
          "block": "// Define Zod schema for validation\nconst fillingSystemSchema = z.object({\n  name: z\n    .string({ r..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 21,
          "block": "// Define Zod schema for validation\nconst fillingSystemSchema = z.object({\n  name: z\n    .string({ r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 22,
          "block": "// Define Zod schema for validation\nconst fillingSystemSchema = z.object({\n  name: z\n    .string({ r..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 22,
          "block": "// Define Zod schema for validation\nconst fillingSystemSchema = z.object({\n  name: z\n    .string({ r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 23,
          "block": "const fillingSystemSchema = z.object({\n  name: z\n    .string({ required_error: \"Name is required\" })..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 23,
          "block": "const fillingSystemSchema = z.object({\n  name: z\n    .string({ required_error: \"Name is required\" })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 24,
          "block": "name: z\n    .string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 cha..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 24,
          "block": "name: z\n    .string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 cha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 25,
          "block": ".string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 characters\"),\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 25,
          "block": ".string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 characters\"),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 26,
          "block": ".min(2, \"Name must be at least 2 characters\"),\n  tank_id: z.string({ required_error: \"Tank selection..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 26,
          "block": ".min(2, \"Name must be at least 2 characters\"),\n  tank_id: z.string({ required_error: \"Tank selection..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 27,
          "block": "tank_id: z.string({ required_error: \"Tank selection is required\" }),\n});\n\n// Type based on schema\nty..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 27,
          "block": "tank_id: z.string({ required_error: \"Tank selection is required\" }),\n});\n\n// Type based on schema\nty..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 29,
          "block": "// Type based on schema\ntype FillingSystemFormData = z.infer<typeof fillingSystemSchema>;\n\nexport fu..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 29,
          "block": "// Type based on schema\ntype FillingSystemFormData = z.infer<typeof fillingSystemSchema>;\n\nexport fu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 30,
          "block": "// Type based on schema\ntype FillingSystemFormData = z.infer<typeof fillingSystemSchema>;\n\nexport fu..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 30,
          "block": "// Type based on schema\ntype FillingSystemFormData = z.infer<typeof fillingSystemSchema>;\n\nexport fu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 31,
          "block": "type FillingSystemFormData = z.infer<typeof fillingSystemSchema>;\n\nexport function FillingSystemForm..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 31,
          "block": "type FillingSystemFormData = z.infer<typeof fillingSystemSchema>;\n\nexport function FillingSystemForm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 33,
          "block": "export function FillingSystemFormStandardized({\n  open,\n  onOpenChange,\n  onSuccess,\n}: FillingSyste..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 33,
          "block": "export function FillingSystemFormStandardized({\n  open,\n  onOpenChange,\n  onSuccess,\n}: FillingSyste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 34,
          "block": "open,\n  onOpenChange,\n  onSuccess,\n}: FillingSystemFormStandardizedProps) {\n  const { t } = useTrans..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 34,
          "block": "open,\n  onOpenChange,\n  onSuccess,\n}: FillingSystemFormStandardizedProps) {\n  const { t } = useTrans..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 35,
          "block": "onOpenChange,\n  onSuccess,\n}: FillingSystemFormStandardizedProps) {\n  const { t } = useTranslation()..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 35,
          "block": "onOpenChange,\n  onSuccess,\n}: FillingSystemFormStandardizedProps) {\n  const { t } = useTranslation()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 36,
          "block": "onSuccess,\n}: FillingSystemFormStandardizedProps) {\n  const { t } = useTranslation();\n  const { toas..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 36,
          "block": "onSuccess,\n}: FillingSystemFormStandardizedProps) {\n  const { t } = useTranslation();\n  const { toas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 37,
          "block": "}: FillingSystemFormStandardizedProps) {\n  const { t } = useTranslation();\n  const { toast } = useTo..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 37,
          "block": "}: FillingSystemFormStandardizedProps) {\n  const { t } = useTranslation();\n  const { toast } = useTo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 38,
          "block": "const { t } = useTranslation();\n  const { toast } = useToast();\n  const { useCreateFillingSystemMuta..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 38,
          "block": "const { t } = useTranslation();\n  const { toast } = useToast();\n  const { useCreateFillingSystemMuta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 39,
          "block": "const { toast } = useToast();\n  const { useCreateFillingSystemMutation } = useFillingSystem();\n  con..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 39,
          "block": "const { toast } = useToast();\n  const { useCreateFillingSystemMutation } = useFillingSystem();\n  con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 40,
          "block": "const { useCreateFillingSystemMutation } = useFillingSystem();\n  const createFillingSystemMutation =..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 40,
          "block": "const { useCreateFillingSystemMutation } = useFillingSystem();\n  const createFillingSystemMutation =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 41,
          "block": "const createFillingSystemMutation = useCreateFillingSystemMutation();\n\n  // Initialize form with Zod..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 41,
          "block": "const createFillingSystemMutation = useCreateFillingSystemMutation();\n\n  // Initialize form with Zod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 42,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: fillingSystemSchema,\n..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 42,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: fillingSystemSchema,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 43,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: fillingSystemSchema,\n..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 43,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: fillingSystemSchema,\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 44,
          "block": "const form = useZodForm({\n    schema: fillingSystemSchema,\n    defaultValues: {\n      name: \"\",\n    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 44,
          "block": "const form = useZodForm({\n    schema: fillingSystemSchema,\n    defaultValues: {\n      name: \"\",\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 50,
          "block": "});\n\n  const { data: tanks } = useQuery({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTan..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 50,
          "block": "});\n\n  const { data: tanks } = useQuery({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 51,
          "block": "const { data: tanks } = useQuery({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTanks,\n  }..."
        },
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 52,
          "block": "const { data: tanks } = useQuery({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTanks,\n  }..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 51,
          "block": "const { data: tanks } = useQuery({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTanks,\n  }..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 52,
          "block": "const { data: tanks } = useQuery({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTanks,\n  }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 53,
          "block": "queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTanks,\n  });\n\n  // Format tanks as options for se..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 53,
          "block": "queryKey: [\"fuel-tanks\"],\n    queryFn: tanksApi.getTanks,\n  });\n\n  // Format tanks as options for se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 56,
          "block": "// Format tanks as options for select\n  const tankOptions =\n    tanks?.data?.map((tank) => ({\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 56,
          "block": "// Format tanks as options for select\n  const tankOptions =\n    tanks?.data?.map((tank) => ({\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 57,
          "block": "// Format tanks as options for select\n  const tankOptions =\n    tanks?.data?.map((tank) => ({\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 57,
          "block": "// Format tanks as options for select\n  const tankOptions =\n    tanks?.data?.map((tank) => ({\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 58,
          "block": "const tankOptions =\n    tanks?.data?.map((tank) => ({\n      value: tank.id,\n      label: `${tank.nam..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 58,
          "block": "const tankOptions =\n    tanks?.data?.map((tank) => ({\n      value: tank.id,\n      label: `${tank.nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 59,
          "block": "tanks?.data?.map((tank) => ({\n      value: tank.id,\n      label: `${tank.name} (${tank.fuel_type_id}..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 59,
          "block": "tanks?.data?.map((tank) => ({\n      value: tank.id,\n      label: `${tank.name} (${tank.fuel_type_id}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 60,
          "block": "value: tank.id,\n      label: `${tank.name} (${tank.fuel_type_id})`,\n    })) || [];\n\n  // Get transla..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 60,
          "block": "value: tank.id,\n      label: `${tank.name} (${tank.fuel_type_id})`,\n    })) || [];\n\n  // Get transla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 61,
          "block": "label: `${tank.name} (${tank.fuel_type_id})`,\n    })) || [];\n\n  // Get translated strings or use API..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 61,
          "block": "label: `${tank.name} (${tank.fuel_type_id})`,\n    })) || [];\n\n  // Get translated strings or use API..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 62,
          "block": "})) || [];\n\n  // Get translated strings or use API translation helpers\n  const title =\n    t(\"fillin..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 62,
          "block": "})) || [];\n\n  // Get translated strings or use API translation helpers\n  const title =\n    t(\"fillin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 63,
          "block": "// Get translated strings or use API translation helpers\n  const title =\n    t(\"fillingSystems.addSy..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 63,
          "block": "// Get translated strings or use API translation helpers\n  const title =\n    t(\"fillingSystems.addSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 64,
          "block": "// Get translated strings or use API translation helpers\n  const title =\n    t(\"fillingSystems.addSy..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 64,
          "block": "// Get translated strings or use API translation helpers\n  const title =\n    t(\"fillingSystems.addSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 65,
          "block": "const title =\n    t(\"fillingSystems.addSystem\") ||\n    getApiActionLabel(apiNamespaces.fillingSystem..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 65,
          "block": "const title =\n    t(\"fillingSystems.addSystem\") ||\n    getApiActionLabel(apiNamespaces.fillingSystem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 66,
          "block": "t(\"fillingSystems.addSystem\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"create\");\n  co..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 66,
          "block": "t(\"fillingSystems.addSystem\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"create\");\n  co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 67,
          "block": "getApiActionLabel(apiNamespaces.fillingSystems, \"create\");\n  const description =\n    t(\"fillingSyste..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 67,
          "block": "getApiActionLabel(apiNamespaces.fillingSystems, \"create\");\n  const description =\n    t(\"fillingSyste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 68,
          "block": "const description =\n    t(\"fillingSystems.addSystemDescription\") ||\n    \"Create a new filling system..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 68,
          "block": "const description =\n    t(\"fillingSystems.addSystemDescription\") ||\n    \"Create a new filling system..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 69,
          "block": "t(\"fillingSystems.addSystemDescription\") ||\n    \"Create a new filling system connected to a fuel tan..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 69,
          "block": "t(\"fillingSystems.addSystemDescription\") ||\n    \"Create a new filling system connected to a fuel tan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 70,
          "block": "\"Create a new filling system connected to a fuel tank\";\n  const cancelButton = t(\"common.cancel\") ||..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 70,
          "block": "\"Create a new filling system connected to a fuel tank\";\n  const cancelButton = t(\"common.cancel\") ||..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 71,
          "block": "const cancelButton = t(\"common.cancel\") || \"Cancel\";\n  const createButton = t(\"common.create\") || \"C..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 71,
          "block": "const cancelButton = t(\"common.cancel\") || \"Cancel\";\n  const createButton = t(\"common.create\") || \"C..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 72,
          "block": "const createButton = t(\"common.create\") || \"Create System\";\n  const creatingButton = t(\"common.creat..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 72,
          "block": "const createButton = t(\"common.create\") || \"Create System\";\n  const creatingButton = t(\"common.creat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 73,
          "block": "const creatingButton = t(\"common.creating\") || \"Creating...\";\n  const systemNameLabel = t(\"fillingSy..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 73,
          "block": "const creatingButton = t(\"common.creating\") || \"Creating...\";\n  const systemNameLabel = t(\"fillingSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 74,
          "block": "const systemNameLabel = t(\"fillingSystems.systemName\") || \"System Name\";\n  const systemNamePlacehold..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 74,
          "block": "const systemNameLabel = t(\"fillingSystems.systemName\") || \"System Name\";\n  const systemNamePlacehold..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 75,
          "block": "const systemNamePlaceholder =\n    t(\"fillingSystems.enterSystemName\") || \"Enter system name\";\n  cons..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 75,
          "block": "const systemNamePlaceholder =\n    t(\"fillingSystems.enterSystemName\") || \"Enter system name\";\n  cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 76,
          "block": "t(\"fillingSystems.enterSystemName\") || \"Enter system name\";\n  const tankLabel = t(\"fillingSystems.as..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 76,
          "block": "t(\"fillingSystems.enterSystemName\") || \"Enter system name\";\n  const tankLabel = t(\"fillingSystems.as..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 77,
          "block": "const tankLabel = t(\"fillingSystems.associatedTank\") || \"Associated Tank\";\n  const tankPlaceholder =..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 77,
          "block": "const tankLabel = t(\"fillingSystems.associatedTank\") || \"Associated Tank\";\n  const tankPlaceholder =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 78,
          "block": "const tankPlaceholder = t(\"fillingSystems.selectTank\") || \"Select a tank\";\n\n  // Form submission han..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 78,
          "block": "const tankPlaceholder = t(\"fillingSystems.selectTank\") || \"Select a tank\";\n\n  // Form submission han..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 79,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 79,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 80,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 80,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 81,
          "block": "const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandler<FillingSystemFormData>(for..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 81,
          "block": "const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandler<FillingSystemFormData>(for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 82,
          "block": "useFormSubmitHandler<FillingSystemFormData>(form, async (data) => {\n      try {\n        // Use the m..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 82,
          "block": "useFormSubmitHandler<FillingSystemFormData>(form, async (data) => {\n      try {\n        // Use the m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 83,
          "block": "try {\n        // Use the mutation from our hook\n        await createFillingSystemMutation.mutateAsyn..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 83,
          "block": "try {\n        // Use the mutation from our hook\n        await createFillingSystemMutation.mutateAsyn..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 84,
          "block": "// Use the mutation from our hook\n        await createFillingSystemMutation.mutateAsync({\n          ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 84,
          "block": "// Use the mutation from our hook\n        await createFillingSystemMutation.mutateAsync({\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 85,
          "block": "await createFillingSystemMutation.mutateAsync({\n          name: data.name,\n          tank_id: data.t..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 85,
          "block": "await createFillingSystemMutation.mutateAsync({\n          name: data.name,\n          tank_id: data.t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 86,
          "block": "name: data.name,\n          tank_id: data.tank_id,\n          location: \"Default Location\",\n          ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 86,
          "block": "name: data.name,\n          tank_id: data.tank_id,\n          location: \"Default Location\",\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 87,
          "block": "tank_id: data.tank_id,\n          location: \"Default Location\",\n          status: \"active\",\n         ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 87,
          "block": "tank_id: data.tank_id,\n          location: \"Default Location\",\n          status: \"active\",\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 88,
          "block": "location: \"Default Location\",\n          status: \"active\",\n          type: \"standard\",\n        });\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 88,
          "block": "location: \"Default Location\",\n          status: \"active\",\n          type: \"standard\",\n        });\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 92,
          "block": "form.reset();\n        onSuccess();\n        return true;\n      } catch (error) {\n        return false..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 92,
          "block": "form.reset();\n        onSuccess();\n        return true;\n      } catch (error) {\n        return false..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 98,
          "block": "});\n\n  // Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 90,
          "block": "});\n\n  // Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 98,
          "block": "});\n\n  // Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 96,
          "block": "});\n\n  // Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 99,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 91,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 99,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 97,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 100,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 92,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 100,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 98,
          "block": "// Create form actions\n  const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 101,
          "block": "const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"b..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 93,
          "block": "const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"b..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 101,
          "block": "const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"b..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 138,
          "block": "const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"b..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 99,
          "block": "const formActions = (\n    <div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 102,
          "block": "<div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"button\"\n        variant=\"ou..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 94,
          "block": "<div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"button\"\n        variant=\"ou..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 102,
          "block": "<div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"button\"\n        variant=\"ou..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 139,
          "block": "<div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"button\"\n        variant=\"ou..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 100,
          "block": "<div className=\"flex justify-end space-x-2\">\n      <Button\n        type=\"button\"\n        variant=\"ou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 103,
          "block": "<Button\n        type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 95,
          "block": "<Button\n        type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 103,
          "block": "<Button\n        type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 140,
          "block": "<Button\n        type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 101,
          "block": "<Button\n        type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 104,
          "block": "type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled..."
        },
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 96,
          "block": "type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 104,
          "block": "type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 141,
          "block": "type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 102,
          "block": "type=\"button\"\n        variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 105,
          "block": "variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 105,
          "block": "variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 106,
          "block": "onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      >\n        {cancelButton}\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 106,
          "block": "onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      >\n        {cancelButton}\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 107,
          "block": "disabled={isSubmitting}\n      >\n        {cancelButton}\n      </Button>\n      <Button type=\"submit\" d..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 107,
          "block": "disabled={isSubmitting}\n      >\n        {cancelButton}\n      </Button>\n      <Button type=\"submit\" d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 108,
          "block": ">\n        {cancelButton}\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"f..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 108,
          "block": ">\n        {cancelButton}\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 109,
          "block": "{cancelButton}\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"filling-sys..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 109,
          "block": "{cancelButton}\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"filling-sys..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 110,
          "block": "</Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"filling-system-form\">\n        {i..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 110,
          "block": "</Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"filling-system-form\">\n        {i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 111,
          "block": "<Button type=\"submit\" disabled={isSubmitting} form=\"filling-system-form\">\n        {isSubmitting ? cr..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 111,
          "block": "<Button type=\"submit\" disabled={isSubmitting} form=\"filling-system-form\">\n        {isSubmitting ? cr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 117,
          "block": "return (\n    <StandardDialog\n      isOpen={open}\n      onOpenChange={onOpenChange}\n      title={titl..."
        },
        {
          "file": "src\\shared\\components\\shared\\InvoiceFormStandardized.tsx",
          "startLine": 86,
          "block": "return (\n    <StandardDialog\n      isOpen={open}\n      onOpenChange={onOpenChange}\n      title={titl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 125,
          "block": ">\n      <form\n        id=\"filling-system-form\"\n        onSubmit={handleSubmit}\n        className=\"sp..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 125,
          "block": ">\n      <form\n        id=\"filling-system-form\"\n        onSubmit={handleSubmit}\n        className=\"sp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 126,
          "block": "<form\n        id=\"filling-system-form\"\n        onSubmit={handleSubmit}\n        className=\"space-y-4\"..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 126,
          "block": "<form\n        id=\"filling-system-form\"\n        onSubmit={handleSubmit}\n        className=\"space-y-4\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 127,
          "block": "id=\"filling-system-form\"\n        onSubmit={handleSubmit}\n        className=\"space-y-4\"\n      >\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 127,
          "block": "id=\"filling-system-form\"\n        onSubmit={handleSubmit}\n        className=\"space-y-4\"\n      >\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 128,
          "block": "onSubmit={handleSubmit}\n        className=\"space-y-4\"\n      >\n        <FormInput\n          name=\"nam..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 128,
          "block": "onSubmit={handleSubmit}\n        className=\"space-y-4\"\n      >\n        <FormInput\n          name=\"nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 129,
          "block": "className=\"space-y-4\"\n      >\n        <FormInput\n          name=\"name\"\n          label={systemNameLa..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 129,
          "block": "className=\"space-y-4\"\n      >\n        <FormInput\n          name=\"name\"\n          label={systemNameLa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 131,
          "block": "<FormInput\n          name=\"name\"\n          label={systemNameLabel}\n          form={form}\n          p..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 131,
          "block": "<FormInput\n          name=\"name\"\n          label={systemNameLabel}\n          form={form}\n          p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 138,
          "block": "<FormSelect\n          name=\"tank_id\"\n          label={tankLabel}\n          form={form}\n          opt..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 139,
          "block": "<FormSelect\n          name=\"tank_id\"\n          label={tankLabel}\n          form={form}\n          opt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 139,
          "block": "name=\"tank_id\"\n          label={tankLabel}\n          form={form}\n          options={tankOptions}\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 140,
          "block": "name=\"tank_id\"\n          label={tankLabel}\n          form={form}\n          options={tankOptions}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 140,
          "block": "label={tankLabel}\n          form={form}\n          options={tankOptions}\n          placeholder={tankP..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 141,
          "block": "label={tankLabel}\n          form={form}\n          options={tankOptions}\n          placeholder={tankP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 141,
          "block": "form={form}\n          options={tankOptions}\n          placeholder={tankPlaceholder}\n        />\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 142,
          "block": "form={form}\n          options={tankOptions}\n          placeholder={tankPlaceholder}\n        />\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 142,
          "block": "options={tankOptions}\n          placeholder={tankPlaceholder}\n        />\n      </form>\n    </Standar..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 143,
          "block": "options={tankOptions}\n          placeholder={tankPlaceholder}\n        />\n      </form>\n    </Standar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 1,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Plus } from \"lucide-react\";\nimport { ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 1,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Plus } from \"lucide-react\";\nimport { ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 2,
          "block": "import { Plus } from \"lucide-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { apiNam..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 2,
          "block": "import { Plus } from \"lucide-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { apiNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { apiNamespaces, getApiActionLabel } from \"@/..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { apiNamespaces, getApiActionLabel } from \"@/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 4,
          "block": "import { apiNamespaces, getApiActionLabel } from \"@/i18n/i18n\";\n\ninterface FillingSystemHeaderProps ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 4,
          "block": "import { apiNamespaces, getApiActionLabel } from \"@/i18n/i18n\";\n\ninterface FillingSystemHeaderProps ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 10,
          "block": "export function FillingSystemHeader({\n  onAddNew,\n  showAddButton = true,\n}: FillingSystemHeaderProp..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 10,
          "block": "export function FillingSystemHeader({\n  onAddNew,\n  showAddButton = true,\n}: FillingSystemHeaderProp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 11,
          "block": "export function FillingSystemHeader({\n  onAddNew,\n  showAddButton = true,\n}: FillingSystemHeaderProp..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 11,
          "block": "export function FillingSystemHeader({\n  onAddNew,\n  showAddButton = true,\n}: FillingSystemHeaderProp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 13,
          "block": "showAddButton = true,\n}: FillingSystemHeaderProps) {\n  const { t } = useTranslation();\n\n  // Get tra..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 13,
          "block": "showAddButton = true,\n}: FillingSystemHeaderProps) {\n  const { t } = useTranslation();\n\n  // Get tra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 14,
          "block": "}: FillingSystemHeaderProps) {\n  const { t } = useTranslation();\n\n  // Get translated title using AP..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 14,
          "block": "}: FillingSystemHeaderProps) {\n  const { t } = useTranslation();\n\n  // Get translated title using AP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 15,
          "block": "const { t } = useTranslation();\n\n  // Get translated title using API helpers or fallback to direct t..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 15,
          "block": "const { t } = useTranslation();\n\n  // Get translated title using API helpers or fallback to direct t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 16,
          "block": "// Get translated title using API helpers or fallback to direct translation\n  const title =\n    t(\"f..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 16,
          "block": "// Get translated title using API helpers or fallback to direct translation\n  const title =\n    t(\"f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 17,
          "block": "// Get translated title using API helpers or fallback to direct translation\n  const title =\n    t(\"f..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 17,
          "block": "// Get translated title using API helpers or fallback to direct translation\n  const title =\n    t(\"f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 18,
          "block": "const title =\n    t(\"fillingSystems.title\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 18,
          "block": "const title =\n    t(\"fillingSystems.title\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 19,
          "block": "t(\"fillingSystems.title\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"list\");\n  const ad..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 19,
          "block": "t(\"fillingSystems.title\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"list\");\n  const ad..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 20,
          "block": "getApiActionLabel(apiNamespaces.fillingSystems, \"list\");\n  const addButtonText =\n    t(\"fillingSyste..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 20,
          "block": "getApiActionLabel(apiNamespaces.fillingSystems, \"list\");\n  const addButtonText =\n    t(\"fillingSyste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 21,
          "block": "const addButtonText =\n    t(\"fillingSystems.addFillingSystem\") ||\n    getApiActionLabel(apiNamespace..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 21,
          "block": "const addButtonText =\n    t(\"fillingSystems.addFillingSystem\") ||\n    getApiActionLabel(apiNamespace..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 22,
          "block": "t(\"fillingSystems.addFillingSystem\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"create\"..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 22,
          "block": "t(\"fillingSystems.addFillingSystem\") ||\n    getApiActionLabel(apiNamespaces.fillingSystems, \"create\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 23,
          "block": "getApiActionLabel(apiNamespaces.fillingSystems, \"create\");\n\n  return (\n    <div className=\"flex item..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 23,
          "block": "getApiActionLabel(apiNamespaces.fillingSystems, \"create\");\n\n  return (\n    <div className=\"flex item..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 24,
          "block": "return (\n    <div className=\"flex items-center justify-between\">\n      <h1 className=\"text-2xl font-..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 24,
          "block": "return (\n    <div className=\"flex items-center justify-between\">\n      <h1 className=\"text-2xl font-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 25,
          "block": "return (\n    <div className=\"flex items-center justify-between\">\n      <h1 className=\"text-2xl font-..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 25,
          "block": "return (\n    <div className=\"flex items-center justify-between\">\n      <h1 className=\"text-2xl font-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 26,
          "block": "<div className=\"flex items-center justify-between\">\n      <h1 className=\"text-2xl font-semibold\">{ti..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 26,
          "block": "<div className=\"flex items-center justify-between\">\n      <h1 className=\"text-2xl font-semibold\">{ti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 27,
          "block": "<h1 className=\"text-2xl font-semibold\">{title}</h1>\n      {showAddButton && (\n        <Button onClic..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 27,
          "block": "<h1 className=\"text-2xl font-semibold\">{title}</h1>\n      {showAddButton && (\n        <Button onClic..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 28,
          "block": "{showAddButton && (\n        <Button onClick={onAddNew}>\n          <Plus className=\"w-4 h-4 mr-2\" />\n..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 28,
          "block": "{showAddButton && (\n        <Button onClick={onAddNew}>\n          <Plus className=\"w-4 h-4 mr-2\" />\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemHeader.tsx",
          "startLine": 29,
          "block": "<Button onClick={onAddNew}>\n          <Plus className=\"w-4 h-4 mr-2\" />\n          {addButtonText}\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemHeader.tsx",
          "startLine": 29,
          "block": "<Button onClick={onAddNew}>\n          <Plus className=\"w-4 h-4 mr-2\" />\n          {addButtonText}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 1,
          "block": "import { useState } from \"react\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { Tra..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 1,
          "block": "import { useState } from \"react\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { Tra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Trash2 } from \"lucide-react\";\nimport ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Trash2 } from \"lucide-react\";\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 3,
          "block": "import { Trash2 } from \"lucide-react\";\nimport { useToast } from \"@/hooks\";\nimport { useTranslation }..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 3,
          "block": "import { Trash2 } from \"lucide-react\";\nimport { useToast } from \"@/hooks\";\nimport { useTranslation }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 4,
          "block": "import { useToast } from \"@/hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport { useQuer..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 4,
          "block": "import { useToast } from \"@/hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport { useQuer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 10,
          "block": "import { DeleteConfirmDialog } from \"@/shared/components/common/dialog/DeleteConfirmDialog\";\n\ninterf..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 10,
          "block": "import { DeleteConfirmDialog } from \"@/shared/components/common/dialog/DeleteConfirmDialog\";\n\ninterf..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 11,
          "block": "interface FillingSystemListProps {\n  fillingSystems: FillingSystem[];\n  isLoading: boolean;\n  onDele..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 11,
          "block": "interface FillingSystemListProps {\n  fillingSystems: FillingSystem[];\n  isLoading: boolean;\n  onDele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 12,
          "block": "interface FillingSystemListProps {\n  fillingSystems: FillingSystem[];\n  isLoading: boolean;\n  onDele..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 12,
          "block": "interface FillingSystemListProps {\n  fillingSystems: FillingSystem[];\n  isLoading: boolean;\n  onDele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 18,
          "block": "export function FillingSystemList({\n  fillingSystems,\n  isLoading,\n  onDelete,\n}: FillingSystemListP..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 18,
          "block": "export function FillingSystemList({\n  fillingSystems,\n  isLoading,\n  onDelete,\n}: FillingSystemListP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 19,
          "block": "fillingSystems,\n  isLoading,\n  onDelete,\n}: FillingSystemListProps) {\n  const { t } = useTranslation..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 19,
          "block": "fillingSystems,\n  isLoading,\n  onDelete,\n}: FillingSystemListProps) {\n  const { t } = useTranslation..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 20,
          "block": "isLoading,\n  onDelete,\n}: FillingSystemListProps) {\n  const { t } = useTranslation();\n  const { toas..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 20,
          "block": "isLoading,\n  onDelete,\n}: FillingSystemListProps) {\n  const { t } = useTranslation();\n  const { toas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 21,
          "block": "onDelete,\n}: FillingSystemListProps) {\n  const { t } = useTranslation();\n  const { toast } = useToas..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 21,
          "block": "onDelete,\n}: FillingSystemListProps) {\n  const { t } = useTranslation();\n  const { toast } = useToas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 22,
          "block": "}: FillingSystemListProps) {\n  const { t } = useTranslation();\n  const { toast } = useToast();\n  con..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 22,
          "block": "}: FillingSystemListProps) {\n  const { t } = useTranslation();\n  const { toast } = useToast();\n  con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 23,
          "block": "const { t } = useTranslation();\n  const { toast } = useToast();\n  const [isConfirmOpen, setIsConfirm..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 23,
          "block": "const { t } = useTranslation();\n  const { toast } = useToast();\n  const [isConfirmOpen, setIsConfirm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 24,
          "block": "const { toast } = useToast();\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n  const [..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 24,
          "block": "const { toast } = useToast();\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n  const [..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 25,
          "block": "const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = use..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 25,
          "block": "const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 26,
          "block": "const [isDeleting, setIsDeleting] = useState(false);\n  const [systemToDelete, setSystemToDelete] = u..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 26,
          "block": "const [isDeleting, setIsDeleting] = useState(false);\n  const [systemToDelete, setSystemToDelete] = u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 27,
          "block": "const [systemToDelete, setSystemToDelete] = useState<FillingSystem | null>(\n    null\n  );\n  const [d..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 27,
          "block": "const [systemToDelete, setSystemToDelete] = useState<FillingSystem | null>(\n    null\n  );\n  const [d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 28,
          "block": "null\n  );\n  const [deleteDialog, setDeleteDialog] = useState({ open: false, id: null });\n\n  // Fetch..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 28,
          "block": "null\n  );\n  const [deleteDialog, setDeleteDialog] = useState({ open: false, id: null });\n\n  // Fetch..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 29,
          "block": ");\n  const [deleteDialog, setDeleteDialog] = useState({ open: false, id: null });\n\n  // Fetch tanks ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 29,
          "block": ");\n  const [deleteDialog, setDeleteDialog] = useState({ open: false, id: null });\n\n  // Fetch tanks ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 30,
          "block": "const [deleteDialog, setDeleteDialog] = useState({ open: false, id: null });\n\n  // Fetch tanks to as..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 30,
          "block": "const [deleteDialog, setDeleteDialog] = useState({ open: false, id: null });\n\n  // Fetch tanks to as..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 31,
          "block": "// Fetch tanks to associate with filling systems\n  const { data: tanks } = useQuery({\n    queryKey: ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 31,
          "block": "// Fetch tanks to associate with filling systems\n  const { data: tanks } = useQuery({\n    queryKey: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 32,
          "block": "// Fetch tanks to associate with filling systems\n  const { data: tanks } = useQuery({\n    queryKey: ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 32,
          "block": "// Fetch tanks to associate with filling systems\n  const { data: tanks } = useQuery({\n    queryKey: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 34,
          "block": "queryKey: [\"tanks\"],\n    queryFn: tanksApi.getTanks,\n  });\n\n  // Get tank details for a given tank I..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 34,
          "block": "queryKey: [\"tanks\"],\n    queryFn: tanksApi.getTanks,\n  });\n\n  // Get tank details for a given tank I..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 35,
          "block": "queryFn: tanksApi.getTanks,\n  });\n\n  // Get tank details for a given tank ID\n  const getTankDetails ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 35,
          "block": "queryFn: tanksApi.getTanks,\n  });\n\n  // Get tank details for a given tank ID\n  const getTankDetails ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 36,
          "block": "});\n\n  // Get tank details for a given tank ID\n  const getTankDetails = (tankId: string): FuelTank |..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 36,
          "block": "});\n\n  // Get tank details for a given tank ID\n  const getTankDetails = (tankId: string): FuelTank |..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 37,
          "block": "// Get tank details for a given tank ID\n  const getTankDetails = (tankId: string): FuelTank | undefi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 37,
          "block": "// Get tank details for a given tank ID\n  const getTankDetails = (tankId: string): FuelTank | undefi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 38,
          "block": "// Get tank details for a given tank ID\n  const getTankDetails = (tankId: string): FuelTank | undefi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 38,
          "block": "// Get tank details for a given tank ID\n  const getTankDetails = (tankId: string): FuelTank | undefi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 39,
          "block": "const getTankDetails = (tankId: string): FuelTank | undefined => {\n    return tanks?.data?.find((tan..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 39,
          "block": "const getTankDetails = (tankId: string): FuelTank | undefined => {\n    return tanks?.data?.find((tan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 42,
          "block": "| undefined;\n  };\n\n  const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(sy..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 42,
          "block": "| undefined;\n  };\n\n  const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(sy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 43,
          "block": "};\n\n  const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(system);\n    setI..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 43,
          "block": "};\n\n  const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(system);\n    setI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 44,
          "block": "const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(system);\n    setIsConfi..."
        },
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 45,
          "block": "const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(system);\n    setIsConfi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 44,
          "block": "const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(system);\n    setIsConfi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 45,
          "block": "const openDeleteConfirm = (system: FillingSystem) => {\n    setSystemToDelete(system);\n    setIsConfi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 48,
          "block": "};\n\n  const closeDeleteConfirm = () => {\n    setIsConfirmOpen(false);\n    // Reset system to delete ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 48,
          "block": "};\n\n  const closeDeleteConfirm = () => {\n    setIsConfirmOpen(false);\n    // Reset system to delete ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 49,
          "block": "const closeDeleteConfirm = () => {\n    setIsConfirmOpen(false);\n    // Reset system to delete after ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 49,
          "block": "const closeDeleteConfirm = () => {\n    setIsConfirmOpen(false);\n    // Reset system to delete after ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 50,
          "block": "const closeDeleteConfirm = () => {\n    setIsConfirmOpen(false);\n    // Reset system to delete after ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 50,
          "block": "const closeDeleteConfirm = () => {\n    setIsConfirmOpen(false);\n    // Reset system to delete after ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 51,
          "block": "setIsConfirmOpen(false);\n    // Reset system to delete after a brief delay to allow the dialog closi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 51,
          "block": "setIsConfirmOpen(false);\n    // Reset system to delete after a brief delay to allow the dialog closi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 52,
          "block": "// Reset system to delete after a brief delay to allow the dialog closing animation\n    setTimeout((..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 52,
          "block": "// Reset system to delete after a brief delay to allow the dialog closing animation\n    setTimeout((..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 53,
          "block": "setTimeout(() => setSystemToDelete(null), 300);\n  };\n\n  const handleDelete = async () => {\n    if (!..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 53,
          "block": "setTimeout(() => setSystemToDelete(null), 300);\n  };\n\n  const handleDelete = async () => {\n    if (!..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 56,
          "block": "const handleDelete = async () => {\n    if (!systemToDelete) return;\n\n    setIsDeleting(true);\n    tr..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 56,
          "block": "const handleDelete = async () => {\n    if (!systemToDelete) return;\n\n    setIsDeleting(true);\n    tr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 57,
          "block": "if (!systemToDelete) return;\n\n    setIsDeleting(true);\n    try {\n      // Note: This would be handle..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 57,
          "block": "if (!systemToDelete) return;\n\n    setIsDeleting(true);\n    try {\n      // Note: This would be handle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 58,
          "block": "setIsDeleting(true);\n    try {\n      // Note: This would be handled through useFillingSystem in Fill..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 58,
          "block": "setIsDeleting(true);\n    try {\n      // Note: This would be handled through useFillingSystem in Fill..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 59,
          "block": "setIsDeleting(true);\n    try {\n      // Note: This would be handled through useFillingSystem in Fill..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 59,
          "block": "setIsDeleting(true);\n    try {\n      // Note: This would be handled through useFillingSystem in Fill..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 60,
          "block": "try {\n      // Note: This would be handled through useFillingSystem in FillingSystemManagerStandardi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 60,
          "block": "try {\n      // Note: This would be handled through useFillingSystem in FillingSystemManagerStandardi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 61,
          "block": "// Note: This would be handled through useFillingSystem in FillingSystemManagerStandardized\n      on..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 61,
          "block": "// Note: This would be handled through useFillingSystem in FillingSystemManagerStandardized\n      on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 62,
          "block": "onDelete();\n      closeDeleteConfirm();\n    } catch (error) {\n      toast({\n        title: t(\"common..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 62,
          "block": "onDelete();\n      closeDeleteConfirm();\n    } catch (error) {\n      toast({\n        title: t(\"common..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 63,
          "block": "closeDeleteConfirm();\n    } catch (error) {\n      toast({\n        title: t(\"common.error\"),\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 63,
          "block": "closeDeleteConfirm();\n    } catch (error) {\n      toast({\n        title: t(\"common.error\"),\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 64,
          "block": "} catch (error) {\n      toast({\n        title: t(\"common.error\"),\n        message: t(\"fillingSystems..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 64,
          "block": "} catch (error) {\n      toast({\n        title: t(\"common.error\"),\n        message: t(\"fillingSystems..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 65,
          "block": "toast({\n        title: t(\"common.error\"),\n        message: t(\"fillingSystems.errorAddingSystem\"),\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 65,
          "block": "toast({\n        title: t(\"common.error\"),\n        message: t(\"fillingSystems.errorAddingSystem\"),\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 66,
          "block": "title: t(\"common.error\"),\n        message: t(\"fillingSystems.errorAddingSystem\"),\n        type: \"err..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 66,
          "block": "title: t(\"common.error\"),\n        message: t(\"fillingSystems.errorAddingSystem\"),\n        type: \"err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 67,
          "block": "message: t(\"fillingSystems.errorAddingSystem\"),\n        type: \"error\",\n      });\n    } finally {\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 67,
          "block": "message: t(\"fillingSystems.errorAddingSystem\"),\n        type: \"error\",\n      });\n    } finally {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 75,
          "block": "const handleDeleteConfirm = () => {\n    // Implementation of handleDeleteConfirm\n  };\n\n  if (isLoadi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 75,
          "block": "const handleDeleteConfirm = () => {\n    // Implementation of handleDeleteConfirm\n  };\n\n  if (isLoadi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 77,
          "block": "};\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full p-8 flex items-center justify-cente..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 77,
          "block": "};\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full p-8 flex items-center justify-cente..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 78,
          "block": "if (isLoading) {\n    return (\n      <div className=\"w-full p-8 flex items-center justify-center\">\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 78,
          "block": "if (isLoading) {\n    return (\n      <div className=\"w-full p-8 flex items-center justify-center\">\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 79,
          "block": "if (isLoading) {\n    return (\n      <div className=\"w-full p-8 flex items-center justify-center\">\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 79,
          "block": "if (isLoading) {\n    return (\n      <div className=\"w-full p-8 flex items-center justify-center\">\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 80,
          "block": "return (\n      <div className=\"w-full p-8 flex items-center justify-center\">\n        <div className=..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 80,
          "block": "return (\n      <div className=\"w-full p-8 flex items-center justify-center\">\n        <div className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 81,
          "block": "<div className=\"w-full p-8 flex items-center justify-center\">\n        <div className=\"text-muted-for..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 81,
          "block": "<div className=\"w-full p-8 flex items-center justify-center\">\n        <div className=\"text-muted-for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 86,
          "block": "return (\n    <>\n      <div className=\"overflow-hidden rounded-md border\">\n        <table className=\"..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 86,
          "block": "return (\n    <>\n      <div className=\"overflow-hidden rounded-md border\">\n        <table className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 87,
          "block": "return (\n    <>\n      <div className=\"overflow-hidden rounded-md border\">\n        <table className=\"..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 87,
          "block": "return (\n    <>\n      <div className=\"overflow-hidden rounded-md border\">\n        <table className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 88,
          "block": "<>\n      <div className=\"overflow-hidden rounded-md border\">\n        <table className=\"w-full table-..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 88,
          "block": "<>\n      <div className=\"overflow-hidden rounded-md border\">\n        <table className=\"w-full table-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 89,
          "block": "<div className=\"overflow-hidden rounded-md border\">\n        <table className=\"w-full table-fixed\">\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 89,
          "block": "<div className=\"overflow-hidden rounded-md border\">\n        <table className=\"w-full table-fixed\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 90,
          "block": "<table className=\"w-full table-fixed\">\n          <thead className=\"bg-muted\">\n            <tr>\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 90,
          "block": "<table className=\"w-full table-fixed\">\n          <thead className=\"bg-muted\">\n            <tr>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 91,
          "block": "<thead className=\"bg-muted\">\n            <tr>\n              <th className=\"p-3 text-left font-medium..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 91,
          "block": "<thead className=\"bg-muted\">\n            <tr>\n              <th className=\"p-3 text-left font-medium..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 92,
          "block": "<tr>\n              <th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.sys..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 92,
          "block": "<tr>\n              <th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.sys..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 93,
          "block": "<th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.systemName\")}\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 93,
          "block": "<th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.systemName\")}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 94,
          "block": "{t(\"fillingSystems.systemName\")}\n              </th>\n              <th className=\"p-3 text-left font..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 94,
          "block": "{t(\"fillingSystems.systemName\")}\n              </th>\n              <th className=\"p-3 text-left font..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 95,
          "block": "</th>\n              <th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.co..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 95,
          "block": "</th>\n              <th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 96,
          "block": "<th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.connectedTank\")}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 96,
          "block": "<th className=\"p-3 text-left font-medium\">\n                {t(\"fillingSystems.connectedTank\")}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 97,
          "block": "{t(\"fillingSystems.connectedTank\")}\n              </th>\n              <th className=\"p-3 text-center..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 97,
          "block": "{t(\"fillingSystems.connectedTank\")}\n              </th>\n              <th className=\"p-3 text-center..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 98,
          "block": "</th>\n              <th className=\"p-3 text-center w-24\">{t(\"common.actions\")}</th>\n            </tr..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 98,
          "block": "</th>\n              <th className=\"p-3 text-center w-24\">{t(\"common.actions\")}</th>\n            </tr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 99,
          "block": "<th className=\"p-3 text-center w-24\">{t(\"common.actions\")}</th>\n            </tr>\n          </thead>..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 99,
          "block": "<th className=\"p-3 text-center w-24\">{t(\"common.actions\")}</th>\n            </tr>\n          </thead>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 100,
          "block": "</tr>\n          </thead>\n          <tbody>\n            {fillingSystems.map((system) => (\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 100,
          "block": "</tr>\n          </thead>\n          <tbody>\n            {fillingSystems.map((system) => (\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 101,
          "block": "</thead>\n          <tbody>\n            {fillingSystems.map((system) => (\n              <tr key={syst..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 101,
          "block": "</thead>\n          <tbody>\n            {fillingSystems.map((system) => (\n              <tr key={syst..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 102,
          "block": "<tbody>\n            {fillingSystems.map((system) => (\n              <tr key={system.id} className=\"b..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 102,
          "block": "<tbody>\n            {fillingSystems.map((system) => (\n              <tr key={system.id} className=\"b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 103,
          "block": "{fillingSystems.map((system) => (\n              <tr key={system.id} className=\"border-t\">\n          ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 103,
          "block": "{fillingSystems.map((system) => (\n              <tr key={system.id} className=\"border-t\">\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 104,
          "block": "<tr key={system.id} className=\"border-t\">\n                <td className=\"p-3\">{system.name}</td>\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 104,
          "block": "<tr key={system.id} className=\"border-t\">\n                <td className=\"p-3\">{system.name}</td>\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 105,
          "block": "<td className=\"p-3\">{system.name}</td>\n                <td className=\"p-3\">\n                  {syste..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 105,
          "block": "<td className=\"p-3\">{system.name}</td>\n                <td className=\"p-3\">\n                  {syste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 106,
          "block": "<td className=\"p-3\">\n                  {system.tank_id\n                    ? (() => {\n              ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 106,
          "block": "<td className=\"p-3\">\n                  {system.tank_id\n                    ? (() => {\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 107,
          "block": "{system.tank_id\n                    ? (() => {\n                        const tank = getTankDetails(s..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 107,
          "block": "{system.tank_id\n                    ? (() => {\n                        const tank = getTankDetails(s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 108,
          "block": "? (() => {\n                        const tank = getTankDetails(system.tank_id);\n                    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 108,
          "block": "? (() => {\n                        const tank = getTankDetails(system.tank_id);\n                    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 109,
          "block": "const tank = getTankDetails(system.tank_id);\n                        if (!tank) return t(\"common.unk..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 109,
          "block": "const tank = getTankDetails(system.tank_id);\n                        if (!tank) return t(\"common.unk..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 110,
          "block": "if (!tank) return t(\"common.unknown\");\n                        return (\n                          <s..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 110,
          "block": "if (!tank) return t(\"common.unknown\");\n                        return (\n                          <s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 111,
          "block": "return (\n                          <span className=\"flex items-center\">\n                            ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 111,
          "block": "return (\n                          <span className=\"flex items-center\">\n                            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 112,
          "block": "<span className=\"flex items-center\">\n                            {tank.name}\n                       ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 112,
          "block": "<span className=\"flex items-center\">\n                            {tank.name}\n                       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 113,
          "block": "{tank.name}\n                            <span className=\"ml-2 text-xs text-muted-foreground\">\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 113,
          "block": "{tank.name}\n                            <span className=\"ml-2 text-xs text-muted-foreground\">\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 114,
          "block": "<span className=\"ml-2 text-xs text-muted-foreground\">\n                              ({tank.fuel_type..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 114,
          "block": "<span className=\"ml-2 text-xs text-muted-foreground\">\n                              ({tank.fuel_type..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 115,
          "block": "({tank.fuel_type_id})\n                            </span>\n                          </span>\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 115,
          "block": "({tank.fuel_type_id})\n                            </span>\n                          </span>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 116,
          "block": "</span>\n                          </span>\n                        );\n                      })()\n    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 116,
          "block": "</span>\n                          </span>\n                        );\n                      })()\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 117,
          "block": "</span>\n                        );\n                      })()\n                    : t(\"common.unknow..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 117,
          "block": "</span>\n                        );\n                      })()\n                    : t(\"common.unknow..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 118,
          "block": ");\n                      })()\n                    : t(\"common.unknown\")}\n                </td>\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 118,
          "block": ");\n                      })()\n                    : t(\"common.unknown\")}\n                </td>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 119,
          "block": "})()\n                    : t(\"common.unknown\")}\n                </td>\n                <td className=..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 119,
          "block": "})()\n                    : t(\"common.unknown\")}\n                </td>\n                <td className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 120,
          "block": ": t(\"common.unknown\")}\n                </td>\n                <td className=\"p-3 text-center\">\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 120,
          "block": ": t(\"common.unknown\")}\n                </td>\n                <td className=\"p-3 text-center\">\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 121,
          "block": "</td>\n                <td className=\"p-3 text-center\">\n                  <Button\n                   ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 121,
          "block": "</td>\n                <td className=\"p-3 text-center\">\n                  <Button\n                   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 122,
          "block": "<td className=\"p-3 text-center\">\n                  <Button\n                    variant=\"ghost\"\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 122,
          "block": "<td className=\"p-3 text-center\">\n                  <Button\n                    variant=\"ghost\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 123,
          "block": "<Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onCl..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 123,
          "block": "<Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onCl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 124,
          "block": "variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => openDeleteConfirm..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 124,
          "block": "variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => openDeleteConfirm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 125,
          "block": "size=\"icon\"\n                    onClick={() => openDeleteConfirm(system)}\n                  >\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 125,
          "block": "size=\"icon\"\n                    onClick={() => openDeleteConfirm(system)}\n                  >\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 126,
          "block": "onClick={() => openDeleteConfirm(system)}\n                  >\n                    <Trash2 className=..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 126,
          "block": "onClick={() => openDeleteConfirm(system)}\n                  >\n                    <Trash2 className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 127,
          "block": ">\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </t..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 127,
          "block": ">\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemList.tsx",
          "startLine": 128,
          "block": "<Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </td>\n              </tr>..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemList.tsx",
          "startLine": 128,
          "block": "<Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </td>\n              </tr>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 1,
          "block": "import React, { useMemo, useCallback } from \"react\";\nimport { useDialog } from \"@/core/hooks/useDial..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 1,
          "block": "import React, { useMemo, useCallback } from \"react\";\nimport { useDialog } from \"@/core/hooks/useDial..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 2,
          "block": "import { useDialog } from \"@/core/hooks/useDialog\";\nimport { useFillingSystem } from \"../hooks/useFi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 2,
          "block": "import { useDialog } from \"@/core/hooks/useDialog\";\nimport { useFillingSystem } from \"../hooks/useFi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 3,
          "block": "import { useFillingSystem } from \"../hooks/useFillingSystem\";\nimport { FillingSystem } from \"../type..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 3,
          "block": "import { useFillingSystem } from \"../hooks/useFillingSystem\";\nimport { FillingSystem } from \"../type..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 4,
          "block": "import { FillingSystem } from \"../types\";\n\n// Import components within the feature\nimport { FillingS..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 4,
          "block": "import { FillingSystem } from \"../types\";\n\n// Import components within the feature\nimport { FillingS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 5,
          "block": "// Import components within the feature\nimport { FillingSystemHeader } from \"./FillingSystemHeader\";..."
        },
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 6,
          "block": "// Import components within the feature\nimport { FillingSystemHeader } from \"./FillingSystemHeader\";..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 5,
          "block": "// Import components within the feature\nimport { FillingSystemHeader } from \"./FillingSystemHeader\";..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 6,
          "block": "// Import components within the feature\nimport { FillingSystemHeader } from \"./FillingSystemHeader\";..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 7,
          "block": "import { FillingSystemHeader } from \"./FillingSystemHeader\";\nimport { FillingSystemList } from \"./Fi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 7,
          "block": "import { FillingSystemHeader } from \"./FillingSystemHeader\";\nimport { FillingSystemList } from \"./Fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 8,
          "block": "import { FillingSystemList } from \"./FillingSystemList\";\nimport { FillingSystemFormStandardized } fr..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 8,
          "block": "import { FillingSystemList } from \"./FillingSystemList\";\nimport { FillingSystemFormStandardized } fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 9,
          "block": "import { FillingSystemFormStandardized } from \"./FillingSystemFormStandardized\";\n\ninterface FillingS..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 9,
          "block": "import { FillingSystemFormStandardized } from \"./FillingSystemFormStandardized\";\n\ninterface FillingS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 10,
          "block": "interface FillingSystemManagerStandardizedProps {\n  onRenderAction?: (actionElement: React.ReactNode..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 10,
          "block": "interface FillingSystemManagerStandardizedProps {\n  onRenderAction?: (actionElement: React.ReactNode..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 11,
          "block": "interface FillingSystemManagerStandardizedProps {\n  onRenderAction?: (actionElement: React.ReactNode..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 11,
          "block": "interface FillingSystemManagerStandardizedProps {\n  onRenderAction?: (actionElement: React.ReactNode..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 12,
          "block": "onRenderAction?: (actionElement: React.ReactNode) => void;\n}\n\nexport function FillingSystemManagerSt..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 12,
          "block": "onRenderAction?: (actionElement: React.ReactNode) => void;\n}\n\nexport function FillingSystemManagerSt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 13,
          "block": "}\n\nexport function FillingSystemManagerStandardized({\n  onRenderAction,\n}: FillingSystemManagerStand..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 13,
          "block": "}\n\nexport function FillingSystemManagerStandardized({\n  onRenderAction,\n}: FillingSystemManagerStand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 14,
          "block": "export function FillingSystemManagerStandardized({\n  onRenderAction,\n}: FillingSystemManagerStandard..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 14,
          "block": "export function FillingSystemManagerStandardized({\n  onRenderAction,\n}: FillingSystemManagerStandard..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 15,
          "block": "export function FillingSystemManagerStandardized({\n  onRenderAction,\n}: FillingSystemManagerStandard..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 15,
          "block": "export function FillingSystemManagerStandardized({\n  onRenderAction,\n}: FillingSystemManagerStandard..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 16,
          "block": "onRenderAction,\n}: FillingSystemManagerStandardizedProps) {\n  // Use dialog hook for managing the fo..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 16,
          "block": "onRenderAction,\n}: FillingSystemManagerStandardizedProps) {\n  // Use dialog hook for managing the fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 17,
          "block": "}: FillingSystemManagerStandardizedProps) {\n  // Use dialog hook for managing the form dialog\n  cons..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 17,
          "block": "}: FillingSystemManagerStandardizedProps) {\n  // Use dialog hook for managing the form dialog\n  cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 18,
          "block": "// Use dialog hook for managing the form dialog\n  const formDialog = useDialog();\n\n  // Use the cust..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 18,
          "block": "// Use dialog hook for managing the form dialog\n  const formDialog = useDialog();\n\n  // Use the cust..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 19,
          "block": "const formDialog = useDialog();\n\n  // Use the custom hook for filling systems\n  const { useFillingSy..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 19,
          "block": "const formDialog = useDialog();\n\n  // Use the custom hook for filling systems\n  const { useFillingSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 20,
          "block": "// Use the custom hook for filling systems\n  const { useFillingSystemsQuery } = useFillingSystem();\n..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 20,
          "block": "// Use the custom hook for filling systems\n  const { useFillingSystemsQuery } = useFillingSystem();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 21,
          "block": "// Use the custom hook for filling systems\n  const { useFillingSystemsQuery } = useFillingSystem();\n..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 21,
          "block": "// Use the custom hook for filling systems\n  const { useFillingSystemsQuery } = useFillingSystem();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 22,
          "block": "const { useFillingSystemsQuery } = useFillingSystem();\n\n  // Query for filling systems data\n  const ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 22,
          "block": "const { useFillingSystemsQuery } = useFillingSystem();\n\n  // Query for filling systems data\n  const ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 24,
          "block": "// Query for filling systems data\n  const {\n    data: fillingSystemsResponse,\n    isLoading,\n    ref..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 24,
          "block": "// Query for filling systems data\n  const {\n    data: fillingSystemsResponse,\n    isLoading,\n    ref..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 25,
          "block": "const {\n    data: fillingSystemsResponse,\n    isLoading,\n    refetch,\n  } = useFillingSystemsQuery()..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 25,
          "block": "const {\n    data: fillingSystemsResponse,\n    isLoading,\n    refetch,\n  } = useFillingSystemsQuery()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 28,
          "block": "refetch,\n  } = useFillingSystemsQuery();\n\n  // Memoize the action element\n  const actionElement = us..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 28,
          "block": "refetch,\n  } = useFillingSystemsQuery();\n\n  // Memoize the action element\n  const actionElement = us..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 29,
          "block": "} = useFillingSystemsQuery();\n\n  // Memoize the action element\n  const actionElement = useMemo(\n    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 29,
          "block": "} = useFillingSystemsQuery();\n\n  // Memoize the action element\n  const actionElement = useMemo(\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 30,
          "block": "// Memoize the action element\n  const actionElement = useMemo(\n    () => (\n      <FillingSystemHeade..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 30,
          "block": "// Memoize the action element\n  const actionElement = useMemo(\n    () => (\n      <FillingSystemHeade..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 31,
          "block": "// Memoize the action element\n  const actionElement = useMemo(\n    () => (\n      <FillingSystemHeade..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 31,
          "block": "// Memoize the action element\n  const actionElement = useMemo(\n    () => (\n      <FillingSystemHeade..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 32,
          "block": "const actionElement = useMemo(\n    () => (\n      <FillingSystemHeader onAddNew={formDialog.open} sho..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 32,
          "block": "const actionElement = useMemo(\n    () => (\n      <FillingSystemHeader onAddNew={formDialog.open} sho..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 33,
          "block": "() => (\n      <FillingSystemHeader onAddNew={formDialog.open} showAddButton={false} />\n    ),\n    [f..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 33,
          "block": "() => (\n      <FillingSystemHeader onAddNew={formDialog.open} showAddButton={false} />\n    ),\n    [f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 34,
          "block": "<FillingSystemHeader onAddNew={formDialog.open} showAddButton={false} />\n    ),\n    [formDialog.open..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 34,
          "block": "<FillingSystemHeader onAddNew={formDialog.open} showAddButton={false} />\n    ),\n    [formDialog.open..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 35,
          "block": "),\n    [formDialog.open]\n  );\n\n  // Call the onRenderAction prop with the memoized action element if..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 35,
          "block": "),\n    [formDialog.open]\n  );\n\n  // Call the onRenderAction prop with the memoized action element if..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 36,
          "block": "[formDialog.open]\n  );\n\n  // Call the onRenderAction prop with the memoized action element if provid..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 36,
          "block": "[formDialog.open]\n  );\n\n  // Call the onRenderAction prop with the memoized action element if provid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 37,
          "block": ");\n\n  // Call the onRenderAction prop with the memoized action element if provided\n  React.useEffect..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 37,
          "block": ");\n\n  // Call the onRenderAction prop with the memoized action element if provided\n  React.useEffect..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 38,
          "block": "// Call the onRenderAction prop with the memoized action element if provided\n  React.useEffect(() =>..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 38,
          "block": "// Call the onRenderAction prop with the memoized action element if provided\n  React.useEffect(() =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 39,
          "block": "// Call the onRenderAction prop with the memoized action element if provided\n  React.useEffect(() =>..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 39,
          "block": "// Call the onRenderAction prop with the memoized action element if provided\n  React.useEffect(() =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 40,
          "block": "React.useEffect(() => {\n    if (onRenderAction) {\n      onRenderAction(actionElement);\n    }\n  }, [o..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 40,
          "block": "React.useEffect(() => {\n    if (onRenderAction) {\n      onRenderAction(actionElement);\n    }\n  }, [o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 41,
          "block": "if (onRenderAction) {\n      onRenderAction(actionElement);\n    }\n  }, [onRenderAction, actionElement..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 41,
          "block": "if (onRenderAction) {\n      onRenderAction(actionElement);\n    }\n  }, [onRenderAction, actionElement..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 42,
          "block": "onRenderAction(actionElement);\n    }\n  }, [onRenderAction, actionElement]);\n\n  // Memoize the fillin..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 42,
          "block": "onRenderAction(actionElement);\n    }\n  }, [onRenderAction, actionElement]);\n\n  // Memoize the fillin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 43,
          "block": "}\n  }, [onRenderAction, actionElement]);\n\n  // Memoize the filling systems data\n  const fillingSyste..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 43,
          "block": "}\n  }, [onRenderAction, actionElement]);\n\n  // Memoize the filling systems data\n  const fillingSyste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 44,
          "block": "}, [onRenderAction, actionElement]);\n\n  // Memoize the filling systems data\n  const fillingSystemsDa..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 44,
          "block": "}, [onRenderAction, actionElement]);\n\n  // Memoize the filling systems data\n  const fillingSystemsDa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 45,
          "block": "// Memoize the filling systems data\n  const fillingSystemsData = useMemo(() => {\n    if (!fillingSys..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 45,
          "block": "// Memoize the filling systems data\n  const fillingSystemsData = useMemo(() => {\n    if (!fillingSys..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 46,
          "block": "// Memoize the filling systems data\n  const fillingSystemsData = useMemo(() => {\n    if (!fillingSys..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 46,
          "block": "// Memoize the filling systems data\n  const fillingSystemsData = useMemo(() => {\n    if (!fillingSys..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 47,
          "block": "const fillingSystemsData = useMemo(() => {\n    if (!fillingSystemsResponse) {\n      return [];\n    }..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 47,
          "block": "const fillingSystemsData = useMemo(() => {\n    if (!fillingSystemsResponse) {\n      return [];\n    }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 48,
          "block": "if (!fillingSystemsResponse) {\n      return [];\n    }\n    // Map the API response to our feature's F..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 48,
          "block": "if (!fillingSystemsResponse) {\n      return [];\n    }\n    // Map the API response to our feature's F..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 49,
          "block": "return [];\n    }\n    // Map the API response to our feature's FillingSystem type\n    return fillingS..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 49,
          "block": "return [];\n    }\n    // Map the API response to our feature's FillingSystem type\n    return fillingS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 50,
          "block": "}\n    // Map the API response to our feature's FillingSystem type\n    return fillingSystemsResponse...."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 50,
          "block": "}\n    // Map the API response to our feature's FillingSystem type\n    return fillingSystemsResponse...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 51,
          "block": "// Map the API response to our feature's FillingSystem type\n    return fillingSystemsResponse.map(\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 51,
          "block": "// Map the API response to our feature's FillingSystem type\n    return fillingSystemsResponse.map(\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 52,
          "block": "return fillingSystemsResponse.map(\n      (apiSystem) =>\n        ({\n          id: apiSystem.id,\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 52,
          "block": "return fillingSystemsResponse.map(\n      (apiSystem) =>\n        ({\n          id: apiSystem.id,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 53,
          "block": "(apiSystem) =>\n        ({\n          id: apiSystem.id,\n          name: apiSystem.name,\n          stat..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 53,
          "block": "(apiSystem) =>\n        ({\n          id: apiSystem.id,\n          name: apiSystem.name,\n          stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 54,
          "block": "({\n          id: apiSystem.id,\n          name: apiSystem.name,\n          status: apiSystem.status ||..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 54,
          "block": "({\n          id: apiSystem.id,\n          name: apiSystem.name,\n          status: apiSystem.status ||..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 55,
          "block": "id: apiSystem.id,\n          name: apiSystem.name,\n          status: apiSystem.status || \"active\",\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 55,
          "block": "id: apiSystem.id,\n          name: apiSystem.name,\n          status: apiSystem.status || \"active\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 56,
          "block": "name: apiSystem.name,\n          status: apiSystem.status || \"active\",\n          type: \"standard\", //..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 56,
          "block": "name: apiSystem.name,\n          status: apiSystem.status || \"active\",\n          type: \"standard\", //..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 57,
          "block": "status: apiSystem.status || \"active\",\n          type: \"standard\", // Add default type since it's not..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 57,
          "block": "status: apiSystem.status || \"active\",\n          type: \"standard\", // Add default type since it's not..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 58,
          "block": "type: \"standard\", // Add default type since it's not in the API response\n          tank_id: apiSyste..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 58,
          "block": "type: \"standard\", // Add default type since it's not in the API response\n          tank_id: apiSyste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 59,
          "block": "tank_id: apiSystem.tank_id,\n          location: apiSystem.location,\n          created_at: apiSystem...."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 59,
          "block": "tank_id: apiSystem.tank_id,\n          location: apiSystem.location,\n          created_at: apiSystem...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 60,
          "block": "location: apiSystem.location,\n          created_at: apiSystem.created_at,\n          updated_at: apiS..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 60,
          "block": "location: apiSystem.location,\n          created_at: apiSystem.created_at,\n          updated_at: apiS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 61,
          "block": "created_at: apiSystem.created_at,\n          updated_at: apiSystem.updated_at,\n        }) as FillingS..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 61,
          "block": "created_at: apiSystem.created_at,\n          updated_at: apiSystem.updated_at,\n        }) as FillingS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 64,
          "block": ");\n  }, [fillingSystemsResponse]);\n\n  // Memoize the delete handler\n  const handleDelete = useCallba..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 64,
          "block": ");\n  }, [fillingSystemsResponse]);\n\n  // Memoize the delete handler\n  const handleDelete = useCallba..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 65,
          "block": "}, [fillingSystemsResponse]);\n\n  // Memoize the delete handler\n  const handleDelete = useCallback(()..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 65,
          "block": "}, [fillingSystemsResponse]);\n\n  // Memoize the delete handler\n  const handleDelete = useCallback(()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 66,
          "block": "// Memoize the delete handler\n  const handleDelete = useCallback(() => {\n    refetch();\n  }, [refetc..."
        },
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 67,
          "block": "// Memoize the delete handler\n  const handleDelete = useCallback(() => {\n    refetch();\n  }, [refetc..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 66,
          "block": "// Memoize the delete handler\n  const handleDelete = useCallback(() => {\n    refetch();\n  }, [refetc..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 67,
          "block": "// Memoize the delete handler\n  const handleDelete = useCallback(() => {\n    refetch();\n  }, [refetc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 68,
          "block": "const handleDelete = useCallback(() => {\n    refetch();\n  }, [refetch]);\n\n  // Memoize the success h..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 68,
          "block": "const handleDelete = useCallback(() => {\n    refetch();\n  }, [refetch]);\n\n  // Memoize the success h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 69,
          "block": "refetch();\n  }, [refetch]);\n\n  // Memoize the success handler\n  const handleSuccess = useCallback(()..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 69,
          "block": "refetch();\n  }, [refetch]);\n\n  // Memoize the success handler\n  const handleSuccess = useCallback(()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 70,
          "block": "}, [refetch]);\n\n  // Memoize the success handler\n  const handleSuccess = useCallback(() => {\n    for..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 70,
          "block": "}, [refetch]);\n\n  // Memoize the success handler\n  const handleSuccess = useCallback(() => {\n    for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 71,
          "block": "// Memoize the success handler\n  const handleSuccess = useCallback(() => {\n    formDialog.close();\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 71,
          "block": "// Memoize the success handler\n  const handleSuccess = useCallback(() => {\n    formDialog.close();\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 72,
          "block": "// Memoize the success handler\n  const handleSuccess = useCallback(() => {\n    formDialog.close();\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 72,
          "block": "// Memoize the success handler\n  const handleSuccess = useCallback(() => {\n    formDialog.close();\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 73,
          "block": "const handleSuccess = useCallback(() => {\n    formDialog.close();\n    refetch();\n  }, [formDialog, r..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 73,
          "block": "const handleSuccess = useCallback(() => {\n    formDialog.close();\n    refetch();\n  }, [formDialog, r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 77,
          "block": "return (\n    <div className=\"space-y-6\">\n      <FillingSystemList\n        fillingSystems={fillingSys..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 77,
          "block": "return (\n    <div className=\"space-y-6\">\n      <FillingSystemList\n        fillingSystems={fillingSys..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 78,
          "block": "return (\n    <div className=\"space-y-6\">\n      <FillingSystemList\n        fillingSystems={fillingSys..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 78,
          "block": "return (\n    <div className=\"space-y-6\">\n      <FillingSystemList\n        fillingSystems={fillingSys..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 79,
          "block": "<div className=\"space-y-6\">\n      <FillingSystemList\n        fillingSystems={fillingSystemsData}\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 79,
          "block": "<div className=\"space-y-6\">\n      <FillingSystemList\n        fillingSystems={fillingSystemsData}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 80,
          "block": "<FillingSystemList\n        fillingSystems={fillingSystemsData}\n        isLoading={isLoading}\n       ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 80,
          "block": "<FillingSystemList\n        fillingSystems={fillingSystemsData}\n        isLoading={isLoading}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 81,
          "block": "fillingSystems={fillingSystemsData}\n        isLoading={isLoading}\n        onDelete={handleDelete}\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 81,
          "block": "fillingSystems={fillingSystemsData}\n        isLoading={isLoading}\n        onDelete={handleDelete}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 83,
          "block": "onDelete={handleDelete}\n      />\n\n      <FillingSystemFormStandardized\n        open={formDialog.isOp..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 83,
          "block": "onDelete={handleDelete}\n      />\n\n      <FillingSystemFormStandardized\n        open={formDialog.isOp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 84,
          "block": "/>\n\n      <FillingSystemFormStandardized\n        open={formDialog.isOpen}\n        onOpenChange={form..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 84,
          "block": "/>\n\n      <FillingSystemFormStandardized\n        open={formDialog.isOpen}\n        onOpenChange={form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 85,
          "block": "<FillingSystemFormStandardized\n        open={formDialog.isOpen}\n        onOpenChange={formDialog.onO..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 85,
          "block": "<FillingSystemFormStandardized\n        open={formDialog.isOpen}\n        onOpenChange={formDialog.onO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 86,
          "block": "<FillingSystemFormStandardized\n        open={formDialog.isOpen}\n        onOpenChange={formDialog.onO..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 86,
          "block": "<FillingSystemFormStandardized\n        open={formDialog.isOpen}\n        onOpenChange={formDialog.onO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 87,
          "block": "open={formDialog.isOpen}\n        onOpenChange={formDialog.onOpenChange}\n        onSuccess={handleSuc..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemManagerStandardized.tsx",
          "startLine": 87,
          "block": "open={formDialog.isOpen}\n        onOpenChange={formDialog.onOpenChange}\n        onSuccess={handleSuc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 1,
          "block": "/**\n * useFillingSystem Hook\n *\n * Custom hook for working with filling systems data using React Que..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 1,
          "block": "/**\n * useFillingSystem Hook\n *\n * Custom hook for working with filling systems data using React Que..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 2,
          "block": "* useFillingSystem Hook\n *\n * Custom hook for working with filling systems data using React Query\n *..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 2,
          "block": "* useFillingSystem Hook\n *\n * Custom hook for working with filling systems data using React Query\n *..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 3,
          "block": "*\n * Custom hook for working with filling systems data using React Query\n */\nimport { useQuery, useM..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 3,
          "block": "*\n * Custom hook for working with filling systems data using React Query\n */\nimport { useQuery, useM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 4,
          "block": "* Custom hook for working with filling systems data using React Query\n */\nimport { useQuery, useMuta..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 4,
          "block": "* Custom hook for working with filling systems data using React Query\n */\nimport { useQuery, useMuta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 5,
          "block": "*/\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 5,
          "block": "*/\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 6,
          "block": "import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } f..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 6,
          "block": "import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 7,
          "block": "import { useToast } from \"@/core/hooks/useToast\";\nimport {\n  apiNamespaces,\n  getApiErrorMessage,\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 7,
          "block": "import { useToast } from \"@/core/hooks/useToast\";\nimport {\n  apiNamespaces,\n  getApiErrorMessage,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 9,
          "block": "apiNamespaces,\n  getApiErrorMessage,\n  getApiSuccessMessage,\n} from \"@/i18n/i18n\";\nimport { useTrans..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 9,
          "block": "apiNamespaces,\n  getApiErrorMessage,\n  getApiSuccessMessage,\n} from \"@/i18n/i18n\";\nimport { useTrans..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 10,
          "block": "getApiErrorMessage,\n  getApiSuccessMessage,\n} from \"@/i18n/i18n\";\nimport { useTranslation } from \"re..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 10,
          "block": "getApiErrorMessage,\n  getApiSuccessMessage,\n} from \"@/i18n/i18n\";\nimport { useTranslation } from \"re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 11,
          "block": "getApiSuccessMessage,\n} from \"@/i18n/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nimport ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 11,
          "block": "getApiSuccessMessage,\n} from \"@/i18n/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 12,
          "block": "} from \"@/i18n/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  getFillingSystemsW..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 12,
          "block": "} from \"@/i18n/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  getFillingSystemsW..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 13,
          "block": "import { useTranslation } from \"react-i18next\";\n\nimport {\n  getFillingSystemsWithFilters,\n  getFilli..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 13,
          "block": "import { useTranslation } from \"react-i18next\";\n\nimport {\n  getFillingSystemsWithFilters,\n  getFilli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 14,
          "block": "import {\n  getFillingSystemsWithFilters,\n  getFillingSystemById,\n  createFillingSystem as createFill..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 14,
          "block": "import {\n  getFillingSystemsWithFilters,\n  getFillingSystemById,\n  createFillingSystem as createFill..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 15,
          "block": "import {\n  getFillingSystemsWithFilters,\n  getFillingSystemById,\n  createFillingSystem as createFill..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 15,
          "block": "import {\n  getFillingSystemsWithFilters,\n  getFillingSystemById,\n  createFillingSystem as createFill..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 16,
          "block": "getFillingSystemsWithFilters,\n  getFillingSystemById,\n  createFillingSystem as createFillingSystemSe..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 16,
          "block": "getFillingSystemsWithFilters,\n  getFillingSystemById,\n  createFillingSystem as createFillingSystemSe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 17,
          "block": "getFillingSystemById,\n  createFillingSystem as createFillingSystemService,\n  updateFillingSystem as ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 17,
          "block": "getFillingSystemById,\n  createFillingSystem as createFillingSystemService,\n  updateFillingSystem as ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 18,
          "block": "createFillingSystem as createFillingSystemService,\n  updateFillingSystem as updateFillingSystemServi..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 18,
          "block": "createFillingSystem as createFillingSystemService,\n  updateFillingSystem as updateFillingSystemServi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 19,
          "block": "updateFillingSystem as updateFillingSystemService,\n  deleteFillingSystem as deleteFillingSystemServi..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 19,
          "block": "updateFillingSystem as updateFillingSystemService,\n  deleteFillingSystem as deleteFillingSystemServi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 20,
          "block": "deleteFillingSystem as deleteFillingSystemService,\n  validateTankIds as validateTankIdsService,\n} fr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 20,
          "block": "deleteFillingSystem as deleteFillingSystemService,\n  validateTankIds as validateTankIdsService,\n} fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 21,
          "block": "validateTankIds as validateTankIdsService,\n} from \"../services\";\nimport type {\n  FillingSystem,\n  Cr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 21,
          "block": "validateTankIds as validateTankIdsService,\n} from \"../services\";\nimport type {\n  FillingSystem,\n  Cr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 22,
          "block": "} from \"../services\";\nimport type {\n  FillingSystem,\n  CreateFillingSystemRequest,\n  UpdateFillingSy..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 22,
          "block": "} from \"../services\";\nimport type {\n  FillingSystem,\n  CreateFillingSystemRequest,\n  UpdateFillingSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 23,
          "block": "import type {\n  FillingSystem,\n  CreateFillingSystemRequest,\n  UpdateFillingSystemRequest,\n  Filling..."
        },
        {
          "file": "src\\features\\filling-systems\\services\\index.ts",
          "startLine": 11,
          "block": "import type {\n  FillingSystem,\n  CreateFillingSystemRequest,\n  UpdateFillingSystemRequest,\n  Filling..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 23,
          "block": "import type {\n  FillingSystem,\n  CreateFillingSystemRequest,\n  UpdateFillingSystemRequest,\n  Filling..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 24,
          "block": "FillingSystem,\n  CreateFillingSystemRequest,\n  UpdateFillingSystemRequest,\n  FillingSystemFilters,\n}..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 24,
          "block": "FillingSystem,\n  CreateFillingSystemRequest,\n  UpdateFillingSystemRequest,\n  FillingSystemFilters,\n}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 29,
          "block": "/**\n * Hook for managing filling systems with React Query\n */\nexport const useFillingSystem = () => ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 29,
          "block": "/**\n * Hook for managing filling systems with React Query\n */\nexport const useFillingSystem = () => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 30,
          "block": "/**\n * Hook for managing filling systems with React Query\n */\nexport const useFillingSystem = () => ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 30,
          "block": "/**\n * Hook for managing filling systems with React Query\n */\nexport const useFillingSystem = () => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 31,
          "block": "* Hook for managing filling systems with React Query\n */\nexport const useFillingSystem = () => {\n  c..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 31,
          "block": "* Hook for managing filling systems with React Query\n */\nexport const useFillingSystem = () => {\n  c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 32,
          "block": "*/\nexport const useFillingSystem = () => {\n  const queryClient = useQueryClient();\n  const { toast }..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 32,
          "block": "*/\nexport const useFillingSystem = () => {\n  const queryClient = useQueryClient();\n  const { toast }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 33,
          "block": "export const useFillingSystem = () => {\n  const queryClient = useQueryClient();\n  const { toast } = ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 33,
          "block": "export const useFillingSystem = () => {\n  const queryClient = useQueryClient();\n  const { toast } = ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 34,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n  const { t } = useTranslation..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 34,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n  const { t } = useTranslation..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 35,
          "block": "const { toast } = useToast();\n  const { t } = useTranslation();\n\n  /**\n   * Query to fetch filling s..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 35,
          "block": "const { toast } = useToast();\n  const { t } = useTranslation();\n\n  /**\n   * Query to fetch filling s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 36,
          "block": "const { t } = useTranslation();\n\n  /**\n   * Query to fetch filling systems with optional filters\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 36,
          "block": "const { t } = useTranslation();\n\n  /**\n   * Query to fetch filling systems with optional filters\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 37,
          "block": "/**\n   * Query to fetch filling systems with optional filters\n   */\n  const useFillingSystemsQuery =..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 37,
          "block": "/**\n   * Query to fetch filling systems with optional filters\n   */\n  const useFillingSystemsQuery =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 38,
          "block": "/**\n   * Query to fetch filling systems with optional filters\n   */\n  const useFillingSystemsQuery =..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 38,
          "block": "/**\n   * Query to fetch filling systems with optional filters\n   */\n  const useFillingSystemsQuery =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 39,
          "block": "* Query to fetch filling systems with optional filters\n   */\n  const useFillingSystemsQuery = (filte..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 39,
          "block": "* Query to fetch filling systems with optional filters\n   */\n  const useFillingSystemsQuery = (filte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 40,
          "block": "*/\n  const useFillingSystemsQuery = (filters?: FillingSystemFilters) => {\n    return useQuery({\n    ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 40,
          "block": "*/\n  const useFillingSystemsQuery = (filters?: FillingSystemFilters) => {\n    return useQuery({\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 41,
          "block": "const useFillingSystemsQuery = (filters?: FillingSystemFilters) => {\n    return useQuery({\n      que..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 41,
          "block": "const useFillingSystemsQuery = (filters?: FillingSystemFilters) => {\n    return useQuery({\n      que..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 42,
          "block": "return useQuery({\n      queryKey: [\"filling-systems\", filters],\n      queryFn: () => getFillingSyste..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 42,
          "block": "return useQuery({\n      queryKey: [\"filling-systems\", filters],\n      queryFn: () => getFillingSyste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 43,
          "block": "queryKey: [\"filling-systems\", filters],\n      queryFn: () => getFillingSystemsWithFilters(filters),\n..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 43,
          "block": "queryKey: [\"filling-systems\", filters],\n      queryFn: () => getFillingSystemsWithFilters(filters),\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 47,
          "block": "/**\n   * Query to fetch a single filling system by ID\n   */\n  const useFillingSystemByIdQuery = (id:..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 47,
          "block": "/**\n   * Query to fetch a single filling system by ID\n   */\n  const useFillingSystemByIdQuery = (id:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 48,
          "block": "/**\n   * Query to fetch a single filling system by ID\n   */\n  const useFillingSystemByIdQuery = (id:..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 48,
          "block": "/**\n   * Query to fetch a single filling system by ID\n   */\n  const useFillingSystemByIdQuery = (id:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 49,
          "block": "* Query to fetch a single filling system by ID\n   */\n  const useFillingSystemByIdQuery = (id: string..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 49,
          "block": "* Query to fetch a single filling system by ID\n   */\n  const useFillingSystemByIdQuery = (id: string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 50,
          "block": "*/\n  const useFillingSystemByIdQuery = (id: string) => {\n    return useQuery({\n      queryKey: [\"fil..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 50,
          "block": "*/\n  const useFillingSystemByIdQuery = (id: string) => {\n    return useQuery({\n      queryKey: [\"fil..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 51,
          "block": "const useFillingSystemByIdQuery = (id: string) => {\n    return useQuery({\n      queryKey: [\"filling-..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 51,
          "block": "const useFillingSystemByIdQuery = (id: string) => {\n    return useQuery({\n      queryKey: [\"filling-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 52,
          "block": "return useQuery({\n      queryKey: [\"filling-system\", id],\n      queryFn: () => getFillingSystemById(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 52,
          "block": "return useQuery({\n      queryKey: [\"filling-system\", id],\n      queryFn: () => getFillingSystemById(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 53,
          "block": "queryKey: [\"filling-system\", id],\n      queryFn: () => getFillingSystemById(id),\n      enabled: !!id..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 53,
          "block": "queryKey: [\"filling-system\", id],\n      queryFn: () => getFillingSystemById(id),\n      enabled: !!id..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 58,
          "block": "/**\n   * Mutation to create a new filling system\n   */\n  const useCreateFillingSystemMutation = () =..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 58,
          "block": "/**\n   * Mutation to create a new filling system\n   */\n  const useCreateFillingSystemMutation = () =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 59,
          "block": "/**\n   * Mutation to create a new filling system\n   */\n  const useCreateFillingSystemMutation = () =..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 59,
          "block": "/**\n   * Mutation to create a new filling system\n   */\n  const useCreateFillingSystemMutation = () =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 60,
          "block": "* Mutation to create a new filling system\n   */\n  const useCreateFillingSystemMutation = () => {\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 60,
          "block": "* Mutation to create a new filling system\n   */\n  const useCreateFillingSystemMutation = () => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 61,
          "block": "*/\n  const useCreateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (data..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 61,
          "block": "*/\n  const useCreateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (data..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 62,
          "block": "const useCreateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (data: Cre..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 62,
          "block": "const useCreateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (data: Cre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 63,
          "block": "return useMutation({\n      mutationFn: (data: CreateFillingSystemRequest) =>\n        createFillingSy..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 63,
          "block": "return useMutation({\n      mutationFn: (data: CreateFillingSystemRequest) =>\n        createFillingSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 64,
          "block": "mutationFn: (data: CreateFillingSystemRequest) =>\n        createFillingSystemService(data),\n      on..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 64,
          "block": "mutationFn: (data: CreateFillingSystemRequest) =>\n        createFillingSystemService(data),\n      on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 65,
          "block": "createFillingSystemService(data),\n      onSuccess: () => {\n        queryClient.invalidateQueries({ q..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 65,
          "block": "createFillingSystemService(data),\n      onSuccess: () => {\n        queryClient.invalidateQueries({ q..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 66,
          "block": "onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n       ..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 103,
          "block": "onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n       ..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 134,
          "block": "onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n       ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 66,
          "block": "onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n       ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 103,
          "block": "onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n       ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 134,
          "block": "onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 67,
          "block": "queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n        toast({\n          title: t..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 104,
          "block": "queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n        toast({\n          title: t..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 135,
          "block": "queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n        toast({\n          title: t..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 67,
          "block": "queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n        toast({\n          title: t..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 104,
          "block": "queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n        toast({\n          title: t..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 135,
          "block": "queryClient.invalidateQueries({ queryKey: [\"filling-systems\"] });\n        toast({\n          title: t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 68,
          "block": "toast({\n          title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n         ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 68,
          "block": "toast({\n          title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 69,
          "block": "title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n            apiNamespaces.f..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 69,
          "block": "title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n            apiNamespaces.f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 70,
          "block": "description: getApiSuccessMessage(\n            apiNamespaces.fillingSystems,\n            \"create\",\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 70,
          "block": "description: getApiSuccessMessage(\n            apiNamespaces.fillingSystems,\n            \"create\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 71,
          "block": "apiNamespaces.fillingSystems,\n            \"create\",\n            \"filling system\"\n          ),\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 71,
          "block": "apiNamespaces.fillingSystems,\n            \"create\",\n            \"filling system\"\n          ),\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 76,
          "block": "},\n      onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          descrip..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 113,
          "block": "},\n      onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          descrip..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 144,
          "block": "},\n      onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          descrip..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 76,
          "block": "},\n      onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          descrip..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 113,
          "block": "},\n      onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          descrip..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 144,
          "block": "},\n      onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          descrip..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 77,
          "block": "onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          description: get..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 114,
          "block": "onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          description: get..."
        },
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 145,
          "block": "onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          description: get..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 77,
          "block": "onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          description: get..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 114,
          "block": "onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          description: get..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 145,
          "block": "onError: (error) => {\n        toast({\n          title: t(\"common.error\"),\n          description: get..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 78,
          "block": "toast({\n          title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            a..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 78,
          "block": "toast({\n          title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 79,
          "block": "title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            apiNamespaces.filli..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 79,
          "block": "title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            apiNamespaces.filli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 80,
          "block": "description: getApiErrorMessage(\n            apiNamespaces.fillingSystems,\n            \"create\",\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 80,
          "block": "description: getApiErrorMessage(\n            apiNamespaces.fillingSystems,\n            \"create\",\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 81,
          "block": "apiNamespaces.fillingSystems,\n            \"create\",\n            \"filling system\"\n          ),\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 81,
          "block": "apiNamespaces.fillingSystems,\n            \"create\",\n            \"filling system\"\n          ),\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 90,
          "block": "/**\n   * Mutation to update an existing filling system\n   */\n  const useUpdateFillingSystemMutation ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 90,
          "block": "/**\n   * Mutation to update an existing filling system\n   */\n  const useUpdateFillingSystemMutation ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 91,
          "block": "/**\n   * Mutation to update an existing filling system\n   */\n  const useUpdateFillingSystemMutation ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 91,
          "block": "/**\n   * Mutation to update an existing filling system\n   */\n  const useUpdateFillingSystemMutation ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 92,
          "block": "* Mutation to update an existing filling system\n   */\n  const useUpdateFillingSystemMutation = () =>..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 92,
          "block": "* Mutation to update an existing filling system\n   */\n  const useUpdateFillingSystemMutation = () =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 93,
          "block": "*/\n  const useUpdateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: ({\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 93,
          "block": "*/\n  const useUpdateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: ({\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 94,
          "block": "const useUpdateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: ({\n       ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 94,
          "block": "const useUpdateFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: ({\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 98,
          "block": "data,\n      }: {\n        id: string;\n        data: UpdateFillingSystemRequest;\n      }) => updateFil..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 98,
          "block": "data,\n      }: {\n        id: string;\n        data: UpdateFillingSystemRequest;\n      }) => updateFil..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 99,
          "block": "}: {\n        id: string;\n        data: UpdateFillingSystemRequest;\n      }) => updateFillingSystemSe..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 99,
          "block": "}: {\n        id: string;\n        data: UpdateFillingSystemRequest;\n      }) => updateFillingSystemSe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 100,
          "block": "id: string;\n        data: UpdateFillingSystemRequest;\n      }) => updateFillingSystemService(id, dat..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 100,
          "block": "id: string;\n        data: UpdateFillingSystemRequest;\n      }) => updateFillingSystemService(id, dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 101,
          "block": "data: UpdateFillingSystemRequest;\n      }) => updateFillingSystemService(id, data),\n      onSuccess:..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 101,
          "block": "data: UpdateFillingSystemRequest;\n      }) => updateFillingSystemService(id, data),\n      onSuccess:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 102,
          "block": "}) => updateFillingSystemService(id, data),\n      onSuccess: () => {\n        queryClient.invalidateQ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 102,
          "block": "}) => updateFillingSystemService(id, data),\n      onSuccess: () => {\n        queryClient.invalidateQ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 105,
          "block": "toast({\n          title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n         ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 105,
          "block": "toast({\n          title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 106,
          "block": "title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n            apiNamespaces.f..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 106,
          "block": "title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n            apiNamespaces.f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 107,
          "block": "description: getApiSuccessMessage(\n            apiNamespaces.fillingSystems,\n            \"update\",\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 107,
          "block": "description: getApiSuccessMessage(\n            apiNamespaces.fillingSystems,\n            \"update\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 108,
          "block": "apiNamespaces.fillingSystems,\n            \"update\",\n            \"filling system\"\n          ),\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 108,
          "block": "apiNamespaces.fillingSystems,\n            \"update\",\n            \"filling system\"\n          ),\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 115,
          "block": "toast({\n          title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            a..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 115,
          "block": "toast({\n          title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 116,
          "block": "title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            apiNamespaces.filli..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 116,
          "block": "title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            apiNamespaces.filli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 117,
          "block": "description: getApiErrorMessage(\n            apiNamespaces.fillingSystems,\n            \"update\",\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 117,
          "block": "description: getApiErrorMessage(\n            apiNamespaces.fillingSystems,\n            \"update\",\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 118,
          "block": "apiNamespaces.fillingSystems,\n            \"update\",\n            \"filling system\"\n          ),\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 118,
          "block": "apiNamespaces.fillingSystems,\n            \"update\",\n            \"filling system\"\n          ),\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 128,
          "block": "/**\n   * Mutation to delete a filling system\n   */\n  const useDeleteFillingSystemMutation = () => {\n..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 128,
          "block": "/**\n   * Mutation to delete a filling system\n   */\n  const useDeleteFillingSystemMutation = () => {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 129,
          "block": "* Mutation to delete a filling system\n   */\n  const useDeleteFillingSystemMutation = () => {\n    ret..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 129,
          "block": "* Mutation to delete a filling system\n   */\n  const useDeleteFillingSystemMutation = () => {\n    ret..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 130,
          "block": "*/\n  const useDeleteFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (id: ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 130,
          "block": "*/\n  const useDeleteFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (id: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 131,
          "block": "const useDeleteFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (id: strin..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 131,
          "block": "const useDeleteFillingSystemMutation = () => {\n    return useMutation({\n      mutationFn: (id: strin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 132,
          "block": "return useMutation({\n      mutationFn: (id: string) => deleteFillingSystemService(id),\n      onSucce..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 132,
          "block": "return useMutation({\n      mutationFn: (id: string) => deleteFillingSystemService(id),\n      onSucce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 133,
          "block": "mutationFn: (id: string) => deleteFillingSystemService(id),\n      onSuccess: () => {\n        queryCl..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 133,
          "block": "mutationFn: (id: string) => deleteFillingSystemService(id),\n      onSuccess: () => {\n        queryCl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 136,
          "block": "toast({\n          title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n         ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 136,
          "block": "toast({\n          title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 137,
          "block": "title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n            apiNamespaces.f..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 137,
          "block": "title: t(\"common.success\"),\n          description: getApiSuccessMessage(\n            apiNamespaces.f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 138,
          "block": "description: getApiSuccessMessage(\n            apiNamespaces.fillingSystems,\n            \"delete\",\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 138,
          "block": "description: getApiSuccessMessage(\n            apiNamespaces.fillingSystems,\n            \"delete\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 139,
          "block": "apiNamespaces.fillingSystems,\n            \"delete\",\n            \"filling system\"\n          ),\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 139,
          "block": "apiNamespaces.fillingSystems,\n            \"delete\",\n            \"filling system\"\n          ),\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 146,
          "block": "toast({\n          title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            a..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 146,
          "block": "toast({\n          title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 147,
          "block": "title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            apiNamespaces.filli..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 147,
          "block": "title: t(\"common.error\"),\n          description: getApiErrorMessage(\n            apiNamespaces.filli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 148,
          "block": "description: getApiErrorMessage(\n            apiNamespaces.fillingSystems,\n            \"delete\",\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 148,
          "block": "description: getApiErrorMessage(\n            apiNamespaces.fillingSystems,\n            \"delete\",\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 149,
          "block": "apiNamespaces.fillingSystems,\n            \"delete\",\n            \"filling system\"\n          ),\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 149,
          "block": "apiNamespaces.fillingSystems,\n            \"delete\",\n            \"filling system\"\n          ),\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 159,
          "block": "/**\n   * Validate tank IDs\n   * This is a utility function used by the diagnostics tool\n   */\n  cons..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 159,
          "block": "/**\n   * Validate tank IDs\n   * This is a utility function used by the diagnostics tool\n   */\n  cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 160,
          "block": "* Validate tank IDs\n   * This is a utility function used by the diagnostics tool\n   */\n  const valid..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 160,
          "block": "* Validate tank IDs\n   * This is a utility function used by the diagnostics tool\n   */\n  const valid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 161,
          "block": "* This is a utility function used by the diagnostics tool\n   */\n  const validateTankIds = async (tan..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 161,
          "block": "* This is a utility function used by the diagnostics tool\n   */\n  const validateTankIds = async (tan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 162,
          "block": "*/\n  const validateTankIds = async (tankIds: string[]) => {\n    try {\n      return await validateTan..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 162,
          "block": "*/\n  const validateTankIds = async (tankIds: string[]) => {\n    try {\n      return await validateTan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 163,
          "block": "const validateTankIds = async (tankIds: string[]) => {\n    try {\n      return await validateTankIdsS..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 163,
          "block": "const validateTankIds = async (tankIds: string[]) => {\n    try {\n      return await validateTankIdsS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 164,
          "block": "try {\n      return await validateTankIdsService(tankIds);\n    } catch (error) {\n      console.error(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 164,
          "block": "try {\n      return await validateTankIdsService(tankIds);\n    } catch (error) {\n      console.error(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 165,
          "block": "return await validateTankIdsService(tankIds);\n    } catch (error) {\n      console.error(\"Failed to v..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 165,
          "block": "return await validateTankIdsService(tankIds);\n    } catch (error) {\n      console.error(\"Failed to v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 166,
          "block": "} catch (error) {\n      console.error(\"Failed to validate tank IDs:\", error);\n      return { valid: ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 166,
          "block": "} catch (error) {\n      console.error(\"Failed to validate tank IDs:\", error);\n      return { valid: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 167,
          "block": "console.error(\"Failed to validate tank IDs:\", error);\n      return { valid: false, invalidIds: tankI..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 167,
          "block": "console.error(\"Failed to validate tank IDs:\", error);\n      return { valid: false, invalidIds: tankI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 171,
          "block": "return {\n    useFillingSystemsQuery,\n    useFillingSystemByIdQuery,\n    useCreateFillingSystemMutati..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 171,
          "block": "return {\n    useFillingSystemsQuery,\n    useFillingSystemByIdQuery,\n    useCreateFillingSystemMutati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 172,
          "block": "return {\n    useFillingSystemsQuery,\n    useFillingSystemByIdQuery,\n    useCreateFillingSystemMutati..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 172,
          "block": "return {\n    useFillingSystemsQuery,\n    useFillingSystemByIdQuery,\n    useCreateFillingSystemMutati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 173,
          "block": "useFillingSystemsQuery,\n    useFillingSystemByIdQuery,\n    useCreateFillingSystemMutation,\n    useUp..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 173,
          "block": "useFillingSystemsQuery,\n    useFillingSystemByIdQuery,\n    useCreateFillingSystemMutation,\n    useUp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 174,
          "block": "useFillingSystemByIdQuery,\n    useCreateFillingSystemMutation,\n    useUpdateFillingSystemMutation,\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 174,
          "block": "useFillingSystemByIdQuery,\n    useCreateFillingSystemMutation,\n    useUpdateFillingSystemMutation,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\hooks\\useFillingSystem.ts",
          "startLine": 175,
          "block": "useCreateFillingSystemMutation,\n    useUpdateFillingSystemMutation,\n    useDeleteFillingSystemMutati..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFillingSystem.ts",
          "startLine": 175,
          "block": "useCreateFillingSystemMutation,\n    useUpdateFillingSystemMutation,\n    useDeleteFillingSystemMutati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\filling-systems\\services\\index.ts",
          "startLine": 108,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n    \n    if (!response.da..."
        },
        {
          "file": "src\\features\\filling-systems\\services\\index.ts",
          "startLine": 129,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n    \n    if (!response.da..."
        },
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 37,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n    \n    if (!response.da..."
        },
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 76,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n    \n    if (!response.da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 12,
          "block": "import { Input } from \"@/core/components/ui/primitives/input\";\nimport {\n  Select,\n  SelectContent,\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFilter.tsx",
          "startLine": 5,
          "block": "import { Input } from \"@/core/components/ui/primitives/input\";\nimport {\n  Select,\n  SelectContent,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 165,
          "block": "<Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.v..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 134,
          "block": "<Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.v..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 187,
          "block": "<Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.v..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 166,
          "block": "<Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.v..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 203,
          "block": "<Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.v..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 244,
          "block": "<Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 166,
          "block": "onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 135,
          "block": "onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 188,
          "block": "onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n  ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 167,
          "block": "onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n  ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 204,
          "block": "onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n  ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 245,
          "block": "onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 167,
          "block": "defaultValue={field.value}\n                  >\n                    <FormControl>\n                   ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 136,
          "block": "defaultValue={field.value}\n                  >\n                    <FormControl>\n                   ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 189,
          "block": "defaultValue={field.value}\n                  >\n                    <FormControl>\n                   ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 168,
          "block": "defaultValue={field.value}\n                  >\n                    <FormControl>\n                   ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 205,
          "block": "defaultValue={field.value}\n                  >\n                    <FormControl>\n                   ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 246,
          "block": "defaultValue={field.value}\n                  >\n                    <FormControl>\n                   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 168,
          "block": ">\n                    <FormControl>\n                      <SelectTrigger>\n                        <S..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 190,
          "block": ">\n                    <FormControl>\n                      <SelectTrigger>\n                        <S..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 169,
          "block": ">\n                    <FormControl>\n                      <SelectTrigger>\n                        <S..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 206,
          "block": ">\n                    <FormControl>\n                      <SelectTrigger>\n                        <S..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 247,
          "block": ">\n                    <FormControl>\n                      <SelectTrigger>\n                        <S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 169,
          "block": "<FormControl>\n                      <SelectTrigger>\n                        <SelectValue\n           ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 170,
          "block": "<FormControl>\n                      <SelectTrigger>\n                        <SelectValue\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 174,
          "block": "\"Select category\"\n                          )}\n                        />\n                      </Se..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 196,
          "block": "\"Select category\"\n                          )}\n                        />\n                      </Se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 175,
          "block": ")}\n                        />\n                      </SelectTrigger>\n                    </FormContr..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 197,
          "block": ")}\n                        />\n                      </SelectTrigger>\n                    </FormContr..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 176,
          "block": ")}\n                        />\n                      </SelectTrigger>\n                    </FormContr..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 213,
          "block": ")}\n                        />\n                      </SelectTrigger>\n                    </FormContr..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 254,
          "block": ")}\n                        />\n                      </SelectTrigger>\n                    </FormContr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 197,
          "block": "</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <Fo..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 154,
          "block": "</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <Fo..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 229,
          "block": "</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 198,
          "block": "</SelectContent>\n                  </Select>\n                  <FormMessage />\n                </For..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 155,
          "block": "</SelectContent>\n                  </Select>\n                  <FormMessage />\n                </For..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 207,
          "block": "</SelectContent>\n                  </Select>\n                  <FormMessage />\n                </For..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 189,
          "block": "</SelectContent>\n                  </Select>\n                  <FormMessage />\n                </For..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 230,
          "block": "</SelectContent>\n                  </Select>\n                  <FormMessage />\n                </For..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 264,
          "block": "</SelectContent>\n                  </Select>\n                  <FormMessage />\n                </For..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 199,
          "block": "</Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n           ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 156,
          "block": "</Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n           ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 208,
          "block": "</Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n           ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 190,
          "block": "</Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n           ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 231,
          "block": "</Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n           ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 265,
          "block": "</Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 212,
          "block": "<FormControl>\n                    <Input type=\"date\" {...field} />\n                  </FormControl>\n..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 220,
          "block": "<FormControl>\n                    <Input type=\"date\" {...field} />\n                  </FormControl>\n..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 125,
          "block": "<FormControl>\n                    <Input type=\"date\" {...field} />\n                  </FormControl>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseDialogStandardized.tsx",
          "startLine": 213,
          "block": "<Input type=\"date\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 221,
          "block": "<Input type=\"date\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 126,
          "block": "<Input type=\"date\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 4,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { ExpenseDialogStandardized } from \"./E..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 5,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { ExpenseDialogStandardized } from \"./E..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 22,
          "block": "const handleEdit = (expense: Expense) => {\n    setSelectedExpense(expense);\n    setIsDialogOpen(true..."
        },
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 23,
          "block": "const handleEdit = (expense: Expense) => {\n    setSelectedExpense(expense);\n    setIsDialogOpen(true..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 31,
          "block": "};\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-cent..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 182,
          "block": "};\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-cent..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 32,
          "block": "return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 183,
          "block": "return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 42,
          "block": "</div>\n\n      {isLoading ? (\n        <div className=\"text-center py-4\">\n          {t(\"common.loading..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 193,
          "block": "</div>\n\n      {isLoading ? (\n        <div className=\"text-center py-4\">\n          {t(\"common.loading..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 43,
          "block": "{isLoading ? (\n        <div className=\"text-center py-4\">\n          {t(\"common.loading\", \"Loading......"
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 194,
          "block": "{isLoading ? (\n        <div className=\"text-center py-4\">\n          {t(\"common.loading\", \"Loading......"
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 44,
          "block": "{isLoading ? (\n        <div className=\"text-center py-4\">\n          {t(\"common.loading\", \"Loading......"
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 195,
          "block": "{isLoading ? (\n        <div className=\"text-center py-4\">\n          {t(\"common.loading\", \"Loading......"
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpenseManagerStandardized.tsx",
          "startLine": 45,
          "block": "<div className=\"text-center py-4\">\n          {t(\"common.loading\", \"Loading...\")}\n        </div>\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 196,
          "block": "<div className=\"text-center py-4\">\n          {t(\"common.loading\", \"Loading...\")}\n        </div>\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 7,
          "block": "FiltersShape,\n  createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n} from \"@/shared/components..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 7,
          "block": "FiltersShape,\n  createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n} from \"@/shared/components..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 8,
          "block": "createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n} from \"@/shared/components/unified/Standar..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 8,
          "block": "createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n} from \"@/shared/components/unified/Standar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ExpensesTableStandardized.tsx",
          "startLine": 49,
          "block": "setFilters(newFilters);\n    onFiltersChange(newFilters);\n  };\n\n  // Define status badge variant base..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionsTableStandardized.tsx",
          "startLine": 81,
          "block": "setFilters(newFilters);\n    onFiltersChange(newFilters);\n  };\n\n  // Define status badge variant base..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 6,
          "block": "SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives/select\";\n\ninterface FillingSys..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 6,
          "block": "SelectTrigger,\n  SelectValue,\n} from \"@/core/components/ui/primitives/select\";\n\ninterface FillingSys..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 7,
          "block": "SelectValue,\n} from \"@/core/components/ui/primitives/select\";\n\ninterface FillingSystemSelectProps {\n..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 7,
          "block": "SelectValue,\n} from \"@/core/components/ui/primitives/select\";\n\ninterface FillingSystemSelectProps {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 8,
          "block": "} from \"@/core/components/ui/primitives/select\";\n\ninterface FillingSystemSelectProps {\n  value: stri..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 8,
          "block": "} from \"@/core/components/ui/primitives/select\";\n\ninterface FillingSystemSelectProps {\n  value: stri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 9,
          "block": "interface FillingSystemSelectProps {\n  value: string;\n  onChange: (value: string) => void;\n  systems..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 9,
          "block": "interface FillingSystemSelectProps {\n  value: string;\n  onChange: (value: string) => void;\n  systems..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 10,
          "block": "interface FillingSystemSelectProps {\n  value: string;\n  onChange: (value: string) => void;\n  systems..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 10,
          "block": "interface FillingSystemSelectProps {\n  value: string;\n  onChange: (value: string) => void;\n  systems..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 11,
          "block": "value: string;\n  onChange: (value: string) => void;\n  systems: { id: string; name: string }[];\n  pla..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 11,
          "block": "value: string;\n  onChange: (value: string) => void;\n  systems: { id: string; name: string }[];\n  pla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 12,
          "block": "onChange: (value: string) => void;\n  systems: { id: string; name: string }[];\n  placeholder?: string..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 12,
          "block": "onChange: (value: string) => void;\n  systems: { id: string; name: string }[];\n  placeholder?: string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 18,
          "block": "export function FillingSystemSelect({\n  value,\n  onChange,\n  systems = [],\n  placeholder = \"All syst..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 18,
          "block": "export function FillingSystemSelect({\n  value,\n  onChange,\n  systems = [],\n  placeholder = \"All syst..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 20,
          "block": "onChange,\n  systems = [],\n  placeholder = \"All systems\",\n  className = \"\",\n}: FillingSystemSelectPro..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 20,
          "block": "onChange,\n  systems = [],\n  placeholder = \"All systems\",\n  className = \"\",\n}: FillingSystemSelectPro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 21,
          "block": "systems = [],\n  placeholder = \"All systems\",\n  className = \"\",\n}: FillingSystemSelectProps) {\n  // E..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 21,
          "block": "systems = [],\n  placeholder = \"All systems\",\n  className = \"\",\n}: FillingSystemSelectProps) {\n  // E..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 22,
          "block": "placeholder = \"All systems\",\n  className = \"\",\n}: FillingSystemSelectProps) {\n  // Ensure systems is..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 22,
          "block": "placeholder = \"All systems\",\n  className = \"\",\n}: FillingSystemSelectProps) {\n  // Ensure systems is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 23,
          "block": "className = \"\",\n}: FillingSystemSelectProps) {\n  // Ensure systems is always an array\n  const system..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 23,
          "block": "className = \"\",\n}: FillingSystemSelectProps) {\n  // Ensure systems is always an array\n  const system..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 24,
          "block": "}: FillingSystemSelectProps) {\n  // Ensure systems is always an array\n  const systemsList = Array.is..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 24,
          "block": "}: FillingSystemSelectProps) {\n  // Ensure systems is always an array\n  const systemsList = Array.is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 25,
          "block": "// Ensure systems is always an array\n  const systemsList = Array.isArray(systems) ? systems : [];\n\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 25,
          "block": "// Ensure systems is always an array\n  const systemsList = Array.isArray(systems) ? systems : [];\n\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 26,
          "block": "const systemsList = Array.isArray(systems) ? systems : [];\n\n  return (\n    <div className=\"flex flex..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 26,
          "block": "const systemsList = Array.isArray(systems) ? systems : [];\n\n  return (\n    <div className=\"flex flex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 27,
          "block": "return (\n    <div className=\"flex flex-col gap-1.5\">\n      <label className=\"text-xs font-medium tex..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 27,
          "block": "return (\n    <div className=\"flex flex-col gap-1.5\">\n      <label className=\"text-xs font-medium tex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 28,
          "block": "return (\n    <div className=\"flex flex-col gap-1.5\">\n      <label className=\"text-xs font-medium tex..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 28,
          "block": "return (\n    <div className=\"flex flex-col gap-1.5\">\n      <label className=\"text-xs font-medium tex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 29,
          "block": "<div className=\"flex flex-col gap-1.5\">\n      <label className=\"text-xs font-medium text-muted-foreg..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 29,
          "block": "<div className=\"flex flex-col gap-1.5\">\n      <label className=\"text-xs font-medium text-muted-foreg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 30,
          "block": "<label className=\"text-xs font-medium text-muted-foreground\">\n        Filling System\n      </label>\n..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 30,
          "block": "<label className=\"text-xs font-medium text-muted-foreground\">\n        Filling System\n      </label>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 31,
          "block": "Filling System\n      </label>\n      <Select value={value} onValueChange={onChange}>\n        <SelectT..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 31,
          "block": "Filling System\n      </label>\n      <Select value={value} onValueChange={onChange}>\n        <SelectT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 32,
          "block": "</label>\n      <Select value={value} onValueChange={onChange}>\n        <SelectTrigger\n          clas..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 32,
          "block": "</label>\n      <Select value={value} onValueChange={onChange}>\n        <SelectTrigger\n          clas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 33,
          "block": "<Select value={value} onValueChange={onChange}>\n        <SelectTrigger\n          className={`h-9 px-..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 33,
          "block": "<Select value={value} onValueChange={onChange}>\n        <SelectTrigger\n          className={`h-9 px-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 34,
          "block": "<SelectTrigger\n          className={`h-9 px-3 py-2 w-full rounded-md border border-input bg-gray-50 ..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 34,
          "block": "<SelectTrigger\n          className={`h-9 px-3 py-2 w-full rounded-md border border-input bg-gray-50 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 35,
          "block": "className={`h-9 px-3 py-2 w-full rounded-md border border-input bg-gray-50 text-sm ${className}`}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 35,
          "block": "className={`h-9 px-3 py-2 w-full rounded-md border border-input bg-gray-50 text-sm ${className}`}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 36,
          "block": ">\n          <SelectValue placeholder={placeholder} />\n        </SelectTrigger>\n        <SelectConten..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 36,
          "block": ">\n          <SelectValue placeholder={placeholder} />\n        </SelectTrigger>\n        <SelectConten..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 37,
          "block": "<SelectValue placeholder={placeholder} />\n        </SelectTrigger>\n        <SelectContent>\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 37,
          "block": "<SelectValue placeholder={placeholder} />\n        </SelectTrigger>\n        <SelectContent>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 38,
          "block": "</SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">All systems</SelectItem>\n..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 38,
          "block": "</SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">All systems</SelectItem>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 39,
          "block": "<SelectContent>\n          <SelectItem value=\"all\">All systems</SelectItem>\n          {systemsList.ma..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 39,
          "block": "<SelectContent>\n          <SelectItem value=\"all\">All systems</SelectItem>\n          {systemsList.ma..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 40,
          "block": "<SelectItem value=\"all\">All systems</SelectItem>\n          {systemsList.map((sys) => (\n            <..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 40,
          "block": "<SelectItem value=\"all\">All systems</SelectItem>\n          {systemsList.map((sys) => (\n            <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 41,
          "block": "{systemsList.map((sys) => (\n            <SelectItem key={sys.id} value={sys.id}>\n              {sys...."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 41,
          "block": "{systemsList.map((sys) => (\n            <SelectItem key={sys.id} value={sys.id}>\n              {sys...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FillingSystemSelect.tsx",
          "startLine": 42,
          "block": "<SelectItem key={sys.id} value={sys.id}>\n              {sys.name}\n            </SelectItem>\n        ..."
        },
        {
          "file": "src\\features\\sales\\components\\FillingSystemSelect.tsx",
          "startLine": 42,
          "block": "<SelectItem key={sys.id} value={sys.id}>\n              {sys.name}\n            </SelectItem>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FinanceFiltersStandardized.tsx",
          "startLine": 33,
          "block": "interface FinanceFiltersStandardizedProps {\n  onFilterChange: (filters: FinanceFilters) => void;\n  c..."
        },
        {
          "file": "src\\features\\finance\\components\\FinanceFiltersStandardized.tsx",
          "startLine": 34,
          "block": "interface FinanceFiltersStandardizedProps {\n  onFilterChange: (filters: FinanceFilters) => void;\n  c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FinanceFiltersStandardized.tsx",
          "startLine": 95,
          "block": "setDateRange(resetData.dateRange);\n    setSearchQuery(\"\");\n    setTransactionType(\"all\");\n    setCat..."
        },
        {
          "file": "src\\features\\finance\\components\\FinanceFiltersStandardized.tsx",
          "startLine": 96,
          "block": "setDateRange(resetData.dateRange);\n    setSearchQuery(\"\");\n    setTransactionType(\"all\");\n    setCat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FinanceManagerStandardized.tsx",
          "startLine": 29,
          "block": "const handleEditTransaction = (transaction: Transaction) => {\n    setSelectedTransaction(transaction..."
        },
        {
          "file": "src\\features\\finance\\components\\FinanceManagerStandardized.tsx",
          "startLine": 30,
          "block": "const handleEditTransaction = (transaction: Transaction) => {\n    setSelectedTransaction(transaction..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FinanceManagerStandardized.tsx",
          "startLine": 34,
          "block": "const handleCreateTransaction = () => {\n    setSelectedTransaction(null);\n    setIsTransactionDialog..."
        },
        {
          "file": "src\\features\\finance\\components\\FinanceManagerStandardized.tsx",
          "startLine": 35,
          "block": "const handleCreateTransaction = () => {\n    setSelectedTransaction(null);\n    setIsTransactionDialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FinancialDashboardStandardized.tsx",
          "startLine": 15,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport {\n  Select,\n  SelectContent,\n  SelectIt..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 47,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport {\n  Select,\n  SelectContent,\n  SelectIt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\FinancialDashboardStandardized.tsx",
          "startLine": 73,
          "block": "const formatTrendValue = (value: number) => {\n    const formatted = Math.abs(value).toFixed(1);\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\FinancialDashboardStandardized.tsx",
          "startLine": 74,
          "block": "const formatTrendValue = (value: number) => {\n    const formatted = Math.abs(value).toFixed(1);\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 1,
          "block": "import { useQuery } from \"@tanstack/react-query\";\nimport { fillingSystemsApi } from \"@/core/api\";\nim..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 1,
          "block": "import { useQuery } from \"@tanstack/react-query\";\nimport { fillingSystemsApi } from \"@/core/api\";\nim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 2,
          "block": "import { fillingSystemsApi } from \"@/core/api\";\nimport { FillingSystem } from \"@/core/api\";\nimport {..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 2,
          "block": "import { fillingSystemsApi } from \"@/core/api\";\nimport { FillingSystem } from \"@/core/api\";\nimport {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 3,
          "block": "import { FillingSystem } from \"@/core/api\";\nimport { FormSelect } from \"@/core/components/ui/primiti..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 3,
          "block": "import { FillingSystem } from \"@/core/api\";\nimport { FormSelect } from \"@/core/components/ui/primiti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 4,
          "block": "import { FormSelect } from \"@/core/components/ui/primitives/form-fields\";\nimport { Control, useWatch..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 4,
          "block": "import { FormSelect } from \"@/core/components/ui/primitives/form-fields\";\nimport { Control, useWatch..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 5,
          "block": "import { Control, useWatch } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nim..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 5,
          "block": "import { Control, useWatch } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 6,
          "block": "import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 6,
          "block": "import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 7,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { toast } from \"sonner\";\nimport { Alert, Aler..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 7,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { toast } from \"sonner\";\nimport { Alert, Aler..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 8,
          "block": "import { toast } from \"sonner\";\nimport { Alert, AlertDescription } from \"@/core/components/ui/alert\"..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 8,
          "block": "import { toast } from \"sonner\";\nimport { Alert, AlertDescription } from \"@/core/components/ui/alert\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 9,
          "block": "import { Alert, AlertDescription } from \"@/core/components/ui/alert\";\nimport { AlertCircle, Loader2 ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 9,
          "block": "import { Alert, AlertDescription } from \"@/core/components/ui/alert\";\nimport { AlertCircle, Loader2 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 20,
          "block": "shift_id: string;\n  filling_system_id: string;\n  meter_start: number;\n  meter_end: number;\n  date?: ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 50,
          "block": "shift_id: string;\n  filling_system_id: string;\n  meter_start: number;\n  meter_end: number;\n  date?: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 21,
          "block": "filling_system_id: string;\n  meter_start: number;\n  meter_end: number;\n  date?: string;\n  comments?:..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 51,
          "block": "filling_system_id: string;\n  meter_start: number;\n  meter_end: number;\n  date?: string;\n  comments?:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 27,
          "block": "interface FillingSystemSelectProps {\n  control: Control<SalesFormData>;\n  onChange?: (value: string)..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 15,
          "block": "interface FillingSystemSelectProps {\n  control: Control<SalesFormData>;\n  onChange?: (value: string)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 28,
          "block": "interface FillingSystemSelectProps {\n  control: Control<SalesFormData>;\n  onChange?: (value: string)..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 16,
          "block": "interface FillingSystemSelectProps {\n  control: Control<SalesFormData>;\n  onChange?: (value: string)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 29,
          "block": "control: Control<SalesFormData>;\n  onChange?: (value: string) => void;\n  onSelect?: (systemId: strin..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 17,
          "block": "control: Control<SalesFormData>;\n  onChange?: (value: string) => void;\n  onSelect?: (systemId: strin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 38,
          "block": "onSelect,\n  value,\n}: FillingSystemSelectProps) {\n  const { t } = useTranslation();\n  const [retryCo..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 26,
          "block": "onSelect,\n  value,\n}: FillingSystemSelectProps) {\n  const { t } = useTranslation();\n  const [retryCo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 39,
          "block": "value,\n}: FillingSystemSelectProps) {\n  const { t } = useTranslation();\n  const [retryCount, setRetr..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 27,
          "block": "value,\n}: FillingSystemSelectProps) {\n  const { t } = useTranslation();\n  const [retryCount, setRetr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 40,
          "block": "}: FillingSystemSelectProps) {\n  const { t } = useTranslation();\n  const [retryCount, setRetryCount]..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 28,
          "block": "}: FillingSystemSelectProps) {\n  const { t } = useTranslation();\n  const [retryCount, setRetryCount]..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 41,
          "block": "const { t } = useTranslation();\n  const [retryCount, setRetryCount] = useState(0);\n\n  const {\n    da..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 29,
          "block": "const { t } = useTranslation();\n  const [retryCount, setRetryCount] = useState(0);\n\n  const {\n    da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 48,
          "block": "error,\n    refetch,\n  } = useQuery({\n    queryKey: [\"filling-systems\", retryCount],\n    queryFn: fil..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 36,
          "block": "error,\n    refetch,\n  } = useQuery({\n    queryKey: [\"filling-systems\", retryCount],\n    queryFn: fil..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 49,
          "block": "refetch,\n  } = useQuery({\n    queryKey: [\"filling-systems\", retryCount],\n    queryFn: fillingSystems..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 37,
          "block": "refetch,\n  } = useQuery({\n    queryKey: [\"filling-systems\", retryCount],\n    queryFn: fillingSystems..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 50,
          "block": "} = useQuery({\n    queryKey: [\"filling-systems\", retryCount],\n    queryFn: fillingSystemsApi.getFill..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 38,
          "block": "} = useQuery({\n    queryKey: [\"filling-systems\", retryCount],\n    queryFn: fillingSystemsApi.getFill..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 51,
          "block": "queryKey: [\"filling-systems\", retryCount],\n    queryFn: fillingSystemsApi.getFillingSystems,\n    sta..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 39,
          "block": "queryKey: [\"filling-systems\", retryCount],\n    queryFn: fillingSystemsApi.getFillingSystems,\n    sta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 52,
          "block": "queryFn: fillingSystemsApi.getFillingSystems,\n    staleTime: 1000 * 60 * 5, // 5 minutes\n    retry: ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 40,
          "block": "queryFn: fillingSystemsApi.getFillingSystems,\n    staleTime: 1000 * 60 * 5, // 5 minutes\n    retry: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 53,
          "block": "staleTime: 1000 * 60 * 5, // 5 minutes\n    retry: 2,\n  });\n\n  // Extract the filling systems from th..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 41,
          "block": "staleTime: 1000 * 60 * 5, // 5 minutes\n    retry: 2,\n  });\n\n  // Extract the filling systems from th..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 54,
          "block": "retry: 2,\n  });\n\n  // Extract the filling systems from the API response\n  const fillingSystems = Rea..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 42,
          "block": "retry: 2,\n  });\n\n  // Extract the filling systems from the API response\n  const fillingSystems = Rea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 55,
          "block": "});\n\n  // Extract the filling systems from the API response\n  const fillingSystems = React.useMemo((..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 43,
          "block": "});\n\n  // Extract the filling systems from the API response\n  const fillingSystems = React.useMemo((..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 56,
          "block": "// Extract the filling systems from the API response\n  const fillingSystems = React.useMemo(() => {\n..."
        },
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 57,
          "block": "// Extract the filling systems from the API response\n  const fillingSystems = React.useMemo(() => {\n..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 44,
          "block": "// Extract the filling systems from the API response\n  const fillingSystems = React.useMemo(() => {\n..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 45,
          "block": "// Extract the filling systems from the API response\n  const fillingSystems = React.useMemo(() => {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 58,
          "block": "const fillingSystems = React.useMemo(() => {\n    return (response?.data || []) as FillingSystem[];\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 46,
          "block": "const fillingSystems = React.useMemo(() => {\n    return (response?.data || []) as FillingSystem[];\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 59,
          "block": "return (response?.data || []) as FillingSystem[];\n  }, [response?.data]);\n\n  // Log errors to consol..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 47,
          "block": "return (response?.data || []) as FillingSystem[];\n  }, [response?.data]);\n\n  // Log errors to consol..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 60,
          "block": "}, [response?.data]);\n\n  // Log errors to console and show toast notification\n  useEffect(() => {\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 48,
          "block": "}, [response?.data]);\n\n  // Log errors to console and show toast notification\n  useEffect(() => {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 61,
          "block": "// Log errors to console and show toast notification\n  useEffect(() => {\n    if (error) {\n      cons..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 49,
          "block": "// Log errors to console and show toast notification\n  useEffect(() => {\n    if (error) {\n      cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 62,
          "block": "// Log errors to console and show toast notification\n  useEffect(() => {\n    if (error) {\n      cons..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 50,
          "block": "// Log errors to console and show toast notification\n  useEffect(() => {\n    if (error) {\n      cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 63,
          "block": "useEffect(() => {\n    if (error) {\n      console.error(\"Error fetching filling systems:\", error);\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 51,
          "block": "useEffect(() => {\n    if (error) {\n      console.error(\"Error fetching filling systems:\", error);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 64,
          "block": "if (error) {\n      console.error(\"Error fetching filling systems:\", error);\n      toast.error(t(\"com..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 52,
          "block": "if (error) {\n      console.error(\"Error fetching filling systems:\", error);\n      toast.error(t(\"com..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 65,
          "block": "console.error(\"Error fetching filling systems:\", error);\n      toast.error(t(\"common.error\"), {\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 53,
          "block": "console.error(\"Error fetching filling systems:\", error);\n      toast.error(t(\"common.error\"), {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 66,
          "block": "toast.error(t(\"common.error\"), {\n        description: t(\"common.errorMessage\", { message: String(err..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 54,
          "block": "toast.error(t(\"common.error\"), {\n        description: t(\"common.errorMessage\", { message: String(err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 70,
          "block": "}, [error, t]);\n\n  // Show notification for offline mode\n  useEffect(() => {\n    if (!navigator.onLi..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 58,
          "block": "}, [error, t]);\n\n  // Show notification for offline mode\n  useEffect(() => {\n    if (!navigator.onLi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 71,
          "block": "// Show notification for offline mode\n  useEffect(() => {\n    if (!navigator.onLine && fillingSystem..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 59,
          "block": "// Show notification for offline mode\n  useEffect(() => {\n    if (!navigator.onLine && fillingSystem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 72,
          "block": "// Show notification for offline mode\n  useEffect(() => {\n    if (!navigator.onLine && fillingSystem..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 60,
          "block": "// Show notification for offline mode\n  useEffect(() => {\n    if (!navigator.onLine && fillingSystem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 73,
          "block": "useEffect(() => {\n    if (!navigator.onLine && fillingSystems.length > 0) {\n      toast.warning(t(\"c..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 61,
          "block": "useEffect(() => {\n    if (!navigator.onLine && fillingSystems.length > 0) {\n      toast.warning(t(\"c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 74,
          "block": "if (!navigator.onLine && fillingSystems.length > 0) {\n      toast.warning(t(\"common.warning\"), {\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 62,
          "block": "if (!navigator.onLine && fillingSystems.length > 0) {\n      toast.warning(t(\"common.warning\"), {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 75,
          "block": "toast.warning(t(\"common.warning\"), {\n        description: \"Using offline mode with sample filling sy..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 63,
          "block": "toast.warning(t(\"common.warning\"), {\n        description: \"Using offline mode with sample filling sy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 76,
          "block": "description: \"Using offline mode with sample filling systems data\",\n        duration: 5000,\n      })..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 64,
          "block": "description: \"Using offline mode with sample filling systems data\",\n        duration: 5000,\n      })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 80,
          "block": "}, [fillingSystems, t]);\n\n  // Handle retry when error occurs\n  const handleRetry = () => {\n    setR..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 68,
          "block": "}, [fillingSystems, t]);\n\n  // Handle retry when error occurs\n  const handleRetry = () => {\n    setR..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 81,
          "block": "// Handle retry when error occurs\n  const handleRetry = () => {\n    setRetryCount((prev) => prev + 1..."
        },
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 82,
          "block": "// Handle retry when error occurs\n  const handleRetry = () => {\n    setRetryCount((prev) => prev + 1..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 69,
          "block": "// Handle retry when error occurs\n  const handleRetry = () => {\n    setRetryCount((prev) => prev + 1..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 70,
          "block": "// Handle retry when error occurs\n  const handleRetry = () => {\n    setRetryCount((prev) => prev + 1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 83,
          "block": "const handleRetry = () => {\n    setRetryCount((prev) => prev + 1);\n  };\n\n  // Watch for field change..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 71,
          "block": "const handleRetry = () => {\n    setRetryCount((prev) => prev + 1);\n  };\n\n  // Watch for field change..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 84,
          "block": "setRetryCount((prev) => prev + 1);\n  };\n\n  // Watch for field changes - must be called in every rend..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 72,
          "block": "setRetryCount((prev) => prev + 1);\n  };\n\n  // Watch for field changes - must be called in every rend..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 85,
          "block": "};\n\n  // Watch for field changes - must be called in every render path\n  const selectedValue = useWa..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 73,
          "block": "};\n\n  // Watch for field changes - must be called in every render path\n  const selectedValue = useWa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 91,
          "block": "}) as string;\n\n  // Call callbacks when the value changes\n  useEffect(() => {\n    if (selectedValue ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 79,
          "block": "}) as string;\n\n  // Call callbacks when the value changes\n  useEffect(() => {\n    if (selectedValue ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 92,
          "block": "// Call callbacks when the value changes\n  useEffect(() => {\n    if (selectedValue && typeof selecte..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 80,
          "block": "// Call callbacks when the value changes\n  useEffect(() => {\n    if (selectedValue && typeof selecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 93,
          "block": "// Call callbacks when the value changes\n  useEffect(() => {\n    if (selectedValue && typeof selecte..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 81,
          "block": "// Call callbacks when the value changes\n  useEffect(() => {\n    if (selectedValue && typeof selecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 94,
          "block": "useEffect(() => {\n    if (selectedValue && typeof selectedValue === 'string') {\n      if (onChange) ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 82,
          "block": "useEffect(() => {\n    if (selectedValue && typeof selectedValue === 'string') {\n      if (onChange) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 95,
          "block": "if (selectedValue && typeof selectedValue === 'string') {\n      if (onChange) onChange(selectedValue..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 83,
          "block": "if (selectedValue && typeof selectedValue === 'string') {\n      if (onChange) onChange(selectedValue..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 96,
          "block": "if (onChange) onChange(selectedValue);\n      if (onSelect) onSelect(selectedValue);\n    }\n  }, [sele..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 84,
          "block": "if (onChange) onChange(selectedValue);\n      if (onSelect) onSelect(selectedValue);\n    }\n  }, [sele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 97,
          "block": "if (onSelect) onSelect(selectedValue);\n    }\n  }, [selectedValue, onChange, onSelect]);\n\n  // Create..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 85,
          "block": "if (onSelect) onSelect(selectedValue);\n    }\n  }, [selectedValue, onChange, onSelect]);\n\n  // Create..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 98,
          "block": "}\n  }, [selectedValue, onChange, onSelect]);\n\n  // Create options array for the FormSelect component..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 86,
          "block": "}\n  }, [selectedValue, onChange, onSelect]);\n\n  // Create options array for the FormSelect component..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 99,
          "block": "}, [selectedValue, onChange, onSelect]);\n\n  // Create options array for the FormSelect component (ou..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 87,
          "block": "}, [selectedValue, onChange, onSelect]);\n\n  // Create options array for the FormSelect component (ou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 100,
          "block": "// Create options array for the FormSelect component (outside conditions)\n  const options = fillingS..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 88,
          "block": "// Create options array for the FormSelect component (outside conditions)\n  const options = fillingS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 101,
          "block": "// Create options array for the FormSelect component (outside conditions)\n  const options = fillingS..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 89,
          "block": "// Create options array for the FormSelect component (outside conditions)\n  const options = fillingS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 102,
          "block": "const options = fillingSystems.map((system: FillingSystem) => {\n    // Construct a label based on av..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 90,
          "block": "const options = fillingSystems.map((system: FillingSystem) => {\n    // Construct a label based on av..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 103,
          "block": "// Construct a label based on available properties\n    const name = system.name || `System ${system...."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 91,
          "block": "// Construct a label based on available properties\n    const name = system.name || `System ${system...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 104,
          "block": "const name = system.name || `System ${system.id.substring(0, 8)}`;\n    const status = system.status ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 92,
          "block": "const name = system.name || `System ${system.id.substring(0, 8)}`;\n    const status = system.status ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 105,
          "block": "const status = system.status ? ` (${system.status})` : \"\";\n\n    return {\n      value: system.id,\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 93,
          "block": "const status = system.status ? ` (${system.status})` : \"\";\n\n    return {\n      value: system.id,\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 115,
          "block": "if (isLoading) {\n    content = (\n      <div className=\"space-y-4\">\n        <div className=\"flex item..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 103,
          "block": "if (isLoading) {\n    content = (\n      <div className=\"space-y-4\">\n        <div className=\"flex item..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 116,
          "block": "if (isLoading) {\n    content = (\n      <div className=\"space-y-4\">\n        <div className=\"flex item..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 104,
          "block": "if (isLoading) {\n    content = (\n      <div className=\"space-y-4\">\n        <div className=\"flex item..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 117,
          "block": "content = (\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center space-x-2\">\n..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 105,
          "block": "content = (\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center space-x-2\">\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 118,
          "block": "<div className=\"space-y-4\">\n        <div className=\"flex items-center space-x-2\">\n          <Loader2..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 106,
          "block": "<div className=\"space-y-4\">\n        <div className=\"flex items-center space-x-2\">\n          <Loader2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 119,
          "block": "<div className=\"flex items-center space-x-2\">\n          <Loader2 className=\"h-4 w-4 animate-spin\" />..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 107,
          "block": "<div className=\"flex items-center space-x-2\">\n          <Loader2 className=\"h-4 w-4 animate-spin\" />..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 120,
          "block": "<Loader2 className=\"h-4 w-4 animate-spin\" />\n          <span className=\"text-sm\">\n            {t(\"co..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 108,
          "block": "<Loader2 className=\"h-4 w-4 animate-spin\" />\n          <span className=\"text-sm\">\n            {t(\"co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 121,
          "block": "<span className=\"text-sm\">\n            {t(\"common.loading\", \"Loading filling systems...\")}\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 109,
          "block": "<span className=\"text-sm\">\n            {t(\"common.loading\", \"Loading filling systems...\")}\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 122,
          "block": "{t(\"common.loading\", \"Loading filling systems...\")}\n          </span>\n        </div>\n      </div>\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 110,
          "block": "{t(\"common.loading\", \"Loading filling systems...\")}\n          </span>\n        </div>\n      </div>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 125,
          "block": "</div>\n    );\n  } else if (isError && fillingSystems.length === 0) {\n    content = (\n      <div clas..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 113,
          "block": "</div>\n    );\n  } else if (isError && fillingSystems.length === 0) {\n    content = (\n      <div clas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 126,
          "block": ");\n  } else if (isError && fillingSystems.length === 0) {\n    content = (\n      <div className=\"spac..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 114,
          "block": ");\n  } else if (isError && fillingSystems.length === 0) {\n    content = (\n      <div className=\"spac..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 127,
          "block": "} else if (isError && fillingSystems.length === 0) {\n    content = (\n      <div className=\"space-y-4..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 115,
          "block": "} else if (isError && fillingSystems.length === 0) {\n    content = (\n      <div className=\"space-y-4..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 128,
          "block": "content = (\n      <div className=\"space-y-4\">\n        <Alert variant=\"destructive\">\n          <Alert..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 116,
          "block": "content = (\n      <div className=\"space-y-4\">\n        <Alert variant=\"destructive\">\n          <Alert..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 129,
          "block": "<div className=\"space-y-4\">\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 117,
          "block": "<div className=\"space-y-4\">\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 130,
          "block": "<Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescript..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 118,
          "block": "<Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescript..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 131,
          "block": "<AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            {t(\n              \"fill..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 119,
          "block": "<AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            {t(\n              \"fill..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 132,
          "block": "<AlertDescription>\n            {t(\n              \"fillingSystems.errorFetching\",\n              \"Fail..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 120,
          "block": "<AlertDescription>\n            {t(\n              \"fillingSystems.errorFetching\",\n              \"Fail..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 133,
          "block": "{t(\n              \"fillingSystems.errorFetching\",\n              \"Failed to load filling systems\"\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 121,
          "block": "{t(\n              \"fillingSystems.errorFetching\",\n              \"Failed to load filling systems\"\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 134,
          "block": "\"fillingSystems.errorFetching\",\n              \"Failed to load filling systems\"\n            )}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 122,
          "block": "\"fillingSystems.errorFetching\",\n              \"Failed to load filling systems\"\n            )}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 135,
          "block": "\"Failed to load filling systems\"\n            )}\n          </AlertDescription>\n        </Alert>\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 123,
          "block": "\"Failed to load filling systems\"\n            )}\n          </AlertDescription>\n        </Alert>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 136,
          "block": ")}\n          </AlertDescription>\n        </Alert>\n        <Button variant=\"outline\" size=\"sm\" onClic..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 124,
          "block": ")}\n          </AlertDescription>\n        </Alert>\n        <Button variant=\"outline\" size=\"sm\" onClic..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 137,
          "block": "</AlertDescription>\n        </Alert>\n        <Button variant=\"outline\" size=\"sm\" onClick={handleRetr..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 125,
          "block": "</AlertDescription>\n        </Alert>\n        <Button variant=\"outline\" size=\"sm\" onClick={handleRetr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 138,
          "block": "</Alert>\n        <Button variant=\"outline\" size=\"sm\" onClick={handleRetry}>\n          {t(\"common.ret..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 126,
          "block": "</Alert>\n        <Button variant=\"outline\" size=\"sm\" onClick={handleRetry}>\n          {t(\"common.ret..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 139,
          "block": "<Button variant=\"outline\" size=\"sm\" onClick={handleRetry}>\n          {t(\"common.retry\", \"Retry\")}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 127,
          "block": "<Button variant=\"outline\" size=\"sm\" onClick={handleRetry}>\n          {t(\"common.retry\", \"Retry\")}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 140,
          "block": "{t(\"common.retry\", \"Retry\")}\n        </Button>\n      </div>\n    );\n  } else if (options.length === 0..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 128,
          "block": "{t(\"common.retry\", \"Retry\")}\n        </Button>\n      </div>\n    );\n  } else if (options.length === 0..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 143,
          "block": ");\n  } else if (options.length === 0) {\n    content = (\n      <div className=\"space-y-4\">\n        <A..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 131,
          "block": ");\n  } else if (options.length === 0) {\n    content = (\n      <div className=\"space-y-4\">\n        <A..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 144,
          "block": "} else if (options.length === 0) {\n    content = (\n      <div className=\"space-y-4\">\n        <Alert>..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 132,
          "block": "} else if (options.length === 0) {\n    content = (\n      <div className=\"space-y-4\">\n        <Alert>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 145,
          "block": "content = (\n      <div className=\"space-y-4\">\n        <Alert>\n          <AlertCircle className=\"h-4 ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 133,
          "block": "content = (\n      <div className=\"space-y-4\">\n        <Alert>\n          <AlertCircle className=\"h-4 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 146,
          "block": "<div className=\"space-y-4\">\n        <Alert>\n          <AlertCircle className=\"h-4 w-4\" />\n          ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 134,
          "block": "<div className=\"space-y-4\">\n        <Alert>\n          <AlertCircle className=\"h-4 w-4\" />\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 147,
          "block": "<Alert>\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            {t(\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 135,
          "block": "<Alert>\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            {t(\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 148,
          "block": "<AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            {t(\n              \"fill..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 136,
          "block": "<AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            {t(\n              \"fill..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 149,
          "block": "<AlertDescription>\n            {t(\n              \"fillingSystems.noSystems\",\n              \"No filli..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 137,
          "block": "<AlertDescription>\n            {t(\n              \"fillingSystems.noSystems\",\n              \"No filli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 150,
          "block": "{t(\n              \"fillingSystems.noSystems\",\n              \"No filling systems found. Please add fi..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 138,
          "block": "{t(\n              \"fillingSystems.noSystems\",\n              \"No filling systems found. Please add fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 151,
          "block": "\"fillingSystems.noSystems\",\n              \"No filling systems found. Please add filling systems befo..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 139,
          "block": "\"fillingSystems.noSystems\",\n              \"No filling systems found. Please add filling systems befo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 152,
          "block": "\"No filling systems found. Please add filling systems before creating a sale.\"\n            )}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 140,
          "block": "\"No filling systems found. Please add filling systems before creating a sale.\"\n            )}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 159,
          "block": "// Create a minimal form object for FormSelect\n  const formObject = {\n    control,\n  } as UseFormRet..."
        },
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 160,
          "block": "// Create a minimal form object for FormSelect\n  const formObject = {\n    control,\n  } as UseFormRet..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 147,
          "block": "// Create a minimal form object for FormSelect\n  const formObject = {\n    control,\n  } as UseFormRet..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 148,
          "block": "// Create a minimal form object for FormSelect\n  const formObject = {\n    control,\n  } as UseFormRet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 161,
          "block": "const formObject = {\n    control,\n  } as UseFormReturn<SalesFormData>;\n\n  // Always render the FormS..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 149,
          "block": "const formObject = {\n    control,\n  } as UseFormReturn<SalesFormData>;\n\n  // Always render the FormS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 162,
          "block": "control,\n  } as UseFormReturn<SalesFormData>;\n\n  // Always render the FormSelect component with opti..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 150,
          "block": "control,\n  } as UseFormReturn<SalesFormData>;\n\n  // Always render the FormSelect component with opti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 163,
          "block": "} as UseFormReturn<SalesFormData>;\n\n  // Always render the FormSelect component with options\n  retur..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 151,
          "block": "} as UseFormReturn<SalesFormData>;\n\n  // Always render the FormSelect component with options\n  retur..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 164,
          "block": "// Always render the FormSelect component with options\n  return (\n    <div className=\"space-y-4\">\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 152,
          "block": "// Always render the FormSelect component with options\n  return (\n    <div className=\"space-y-4\">\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 165,
          "block": "// Always render the FormSelect component with options\n  return (\n    <div className=\"space-y-4\">\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 153,
          "block": "// Always render the FormSelect component with options\n  return (\n    <div className=\"space-y-4\">\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 171,
          "block": "label={t(\"sales.fillingSystem\")}\n        form={formObject}\n        options={options}\n        placeho..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 159,
          "block": "label={t(\"sales.fillingSystem\")}\n        form={formObject}\n        options={options}\n        placeho..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 172,
          "block": "form={formObject}\n        options={options}\n        placeholder={\n          isLoading\n            ? ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 160,
          "block": "form={formObject}\n        options={options}\n        placeholder={\n          isLoading\n            ? ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 173,
          "block": "options={options}\n        placeholder={\n          isLoading\n            ? t(\"fillingSystems.loading\"..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 161,
          "block": "options={options}\n        placeholder={\n          isLoading\n            ? t(\"fillingSystems.loading\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 174,
          "block": "placeholder={\n          isLoading\n            ? t(\"fillingSystems.loading\", \"Loading...\")\n          ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 162,
          "block": "placeholder={\n          isLoading\n            ? t(\"fillingSystems.loading\", \"Loading...\")\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 175,
          "block": "isLoading\n            ? t(\"fillingSystems.loading\", \"Loading...\")\n            : t(\"fillingSystems.se..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 163,
          "block": "isLoading\n            ? t(\"fillingSystems.loading\", \"Loading...\")\n            : t(\"fillingSystems.se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 176,
          "block": "? t(\"fillingSystems.loading\", \"Loading...\")\n            : t(\"fillingSystems.selectTank\")\n        }\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\FillingSystemSelect.tsx",
          "startLine": 164,
          "block": "? t(\"fillingSystems.loading\", \"Loading...\")\n            : t(\"fillingSystems.selectTank\")\n        }\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 4,
          "block": "import { useState, useRef } from \"react\";\nimport { salesApi } from \"@/core/api\";\nimport { useToast }..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 5,
          "block": "import { useState, useRef } from \"react\";\nimport { salesApi } from \"@/core/api\";\nimport { useToast }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 5,
          "block": "import { salesApi } from \"@/core/api\";\nimport { useToast } from \"@/hooks\";\nimport { useQueryClient }..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 6,
          "block": "import { salesApi } from \"@/core/api\";\nimport { useToast } from \"@/hooks\";\nimport { useQueryClient }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 6,
          "block": "import { useToast } from \"@/hooks\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport {..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 7,
          "block": "import { useToast } from \"@/hooks\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 7,
          "block": "import { useQueryClient } from \"@tanstack/react-query\";\nimport { Plus } from \"lucide-react\";\nimport ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 8,
          "block": "import { useQueryClient } from \"@tanstack/react-query\";\nimport { Plus } from \"lucide-react\";\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 8,
          "block": "import { Plus } from \"lucide-react\";\nimport React from \"react\";\nimport { CreateButton } from \"@/core..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 9,
          "block": "import { Plus } from \"lucide-react\";\nimport React from \"react\";\nimport { CreateButton } from \"@/core..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 9,
          "block": "import React from \"react\";\nimport { CreateButton } from \"@/core/components/ui/create-button\";\nimport..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 10,
          "block": "import React from \"react\";\nimport { CreateButton } from \"@/core/components/ui/create-button\";\nimport..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 10,
          "block": "import { CreateButton } from \"@/core/components/ui/create-button\";\nimport { Sale } from \"@/core/api/..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 11,
          "block": "import { CreateButton } from \"@/core/components/ui/create-button\";\nimport { Sale } from \"@/core/api/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 13,
          "block": "interface NewSaleButtonProps {\n  className?: string;\n}\n\nexport function NewSaleButton({ className }:..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 14,
          "block": "interface NewSaleButtonProps {\n  className?: string;\n}\n\nexport function NewSaleButton({ className }:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 14,
          "block": "className?: string;\n}\n\nexport function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  con..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 15,
          "block": "className?: string;\n}\n\nexport function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 15,
          "block": "}\n\nexport function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  const [isOpen, setIsOpe..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 16,
          "block": "}\n\nexport function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  const [isOpen, setIsOpe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 16,
          "block": "export function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  const [isOpen, setIsOpen] ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 17,
          "block": "export function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  const [isOpen, setIsOpen] ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 17,
          "block": "export function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  const [isOpen, setIsOpen] ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 18,
          "block": "export function NewSaleButton({ className }: NewSaleButtonProps = {}) {\n  const [isOpen, setIsOpen] ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 18,
          "block": "const [isOpen, setIsOpen] = useState(false);\n  const { toast } = useToast();\n  const queryClient = u..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 19,
          "block": "const [isOpen, setIsOpen] = useState(false);\n  const { toast } = useToast();\n  const queryClient = u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 19,
          "block": "const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const triggerRef = useRef<HT..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 20,
          "block": "const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const triggerRef = useRef<HT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 20,
          "block": "const queryClient = useQueryClient();\n  const triggerRef = useRef<HTMLButtonElement>(null);\n\n  const..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 21,
          "block": "const queryClient = useQueryClient();\n  const triggerRef = useRef<HTMLButtonElement>(null);\n\n  const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 21,
          "block": "const triggerRef = useRef<HTMLButtonElement>(null);\n\n  const handleSubmit = async (data: SalesFormDa..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 22,
          "block": "const triggerRef = useRef<HTMLButtonElement>(null);\n\n  const handleSubmit = async (data: SalesFormDa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 22,
          "block": "const handleSubmit = async (data: SalesFormData): Promise<boolean> => {\n    try {\n      // Map form ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 23,
          "block": "const handleSubmit = async (data: SalesFormData): Promise<boolean> => {\n    try {\n      // Map form ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 35,
          "block": "};\n\n      await salesApi.createSale(saleData);\n      queryClient.invalidateQueries({ queryKey: [\"sal..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 36,
          "block": "};\n\n      await salesApi.createSale(saleData);\n      queryClient.invalidateQueries({ queryKey: [\"sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 36,
          "block": "await salesApi.createSale(saleData);\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 37,
          "block": "await salesApi.createSale(saleData);\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 37,
          "block": "await salesApi.createSale(saleData);\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 38,
          "block": "await salesApi.createSale(saleData);\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 38,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 56,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 26,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 39,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 56,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 26,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 39,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n      queryClient.invalidateQueries({ q..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 57,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n      queryClient.invalidateQueries({ q..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 40,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n      queryClient.invalidateQueries({ q..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 57,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n      queryClient.invalidateQueries({ q..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 40,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n      toast({\n        title: \"Success..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 41,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n      toast({\n        title: \"Success..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 41,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale created successfully and tank level upd..."
        },
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 42,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale created successfully and tank level upd..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 42,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale created successfully and tank level upd..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 43,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale created successfully and tank level upd..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 43,
          "block": "title: \"Success\",\n        description: \"Sale created successfully and tank level updated\",\n      });..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 44,
          "block": "title: \"Success\",\n        description: \"Sale created successfully and tank level updated\",\n      });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 44,
          "block": "description: \"Sale created successfully and tank level updated\",\n      });\n\n      setIsOpen(false);\n..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 45,
          "block": "description: \"Sale created successfully and tank level updated\",\n      });\n\n      setIsOpen(false);\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 47,
          "block": "setIsOpen(false);\n      return true;\n    } catch (error: unknown) {\n      toast({\n        title: \"Er..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 48,
          "block": "setIsOpen(false);\n      return true;\n    } catch (error: unknown) {\n      toast({\n        title: \"Er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 48,
          "block": "return true;\n    } catch (error: unknown) {\n      toast({\n        title: \"Error\",\n        descriptio..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 49,
          "block": "return true;\n    } catch (error: unknown) {\n      toast({\n        title: \"Error\",\n        descriptio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 49,
          "block": "} catch (error: unknown) {\n      toast({\n        title: \"Error\",\n        description: error instance..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 50,
          "block": "} catch (error: unknown) {\n      toast({\n        title: \"Error\",\n        description: error instance..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 50,
          "block": "toast({\n        title: \"Error\",\n        description: error instanceof Error ? error.message : \"Faile..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 51,
          "block": "toast({\n        title: \"Error\",\n        description: error instanceof Error ? error.message : \"Faile..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 51,
          "block": "title: \"Error\",\n        description: error instanceof Error ? error.message : \"Failed to create sale..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 52,
          "block": "title: \"Error\",\n        description: error instanceof Error ? error.message : \"Failed to create sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 52,
          "block": "description: error instanceof Error ? error.message : \"Failed to create sale\",\n        variant: \"des..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 53,
          "block": "description: error instanceof Error ? error.message : \"Failed to create sale\",\n        variant: \"des..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 53,
          "block": "variant: \"destructive\",\n      });\n      console.error(\"Error creating sale:\", error);\n      return f..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 54,
          "block": "variant: \"destructive\",\n      });\n      console.error(\"Error creating sale:\", error);\n      return f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 61,
          "block": "<>\n      <CreateButton\n        ref={triggerRef}\n        label=\"Add Sale\"\n        className={classNam..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 62,
          "block": "<>\n      <CreateButton\n        ref={triggerRef}\n        label=\"Add Sale\"\n        className={classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 62,
          "block": "<CreateButton\n        ref={triggerRef}\n        label=\"Add Sale\"\n        className={className}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 63,
          "block": "<CreateButton\n        ref={triggerRef}\n        label=\"Add Sale\"\n        className={className}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 63,
          "block": "ref={triggerRef}\n        label=\"Add Sale\"\n        className={className}\n        onClick={() => setIs..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 64,
          "block": "ref={triggerRef}\n        label=\"Add Sale\"\n        className={className}\n        onClick={() => setIs..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 64,
          "block": "label=\"Add Sale\"\n        className={className}\n        onClick={() => setIsOpen(true)}\n      />\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 65,
          "block": "label=\"Add Sale\"\n        className={className}\n        onClick={() => setIsOpen(true)}\n      />\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 65,
          "block": "className={className}\n        onClick={() => setIsOpen(true)}\n      />\n      <StandardDialog\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 66,
          "block": "className={className}\n        onClick={() => setIsOpen(true)}\n      />\n      <StandardDialog\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 66,
          "block": "onClick={() => setIsOpen(true)}\n      />\n      <StandardDialog\n        open={isOpen}\n        onOpenC..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 67,
          "block": "onClick={() => setIsOpen(true)}\n      />\n      <StandardDialog\n        open={isOpen}\n        onOpenC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 67,
          "block": "/>\n      <StandardDialog\n        open={isOpen}\n        onOpenChange={setIsOpen}\n        title=\"Add N..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 68,
          "block": "/>\n      <StandardDialog\n        open={isOpen}\n        onOpenChange={setIsOpen}\n        title=\"Add N..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 68,
          "block": "<StandardDialog\n        open={isOpen}\n        onOpenChange={setIsOpen}\n        title=\"Add New Sale\"\n..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 69,
          "block": "<StandardDialog\n        open={isOpen}\n        onOpenChange={setIsOpen}\n        title=\"Add New Sale\"\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 69,
          "block": "open={isOpen}\n        onOpenChange={setIsOpen}\n        title=\"Add New Sale\"\n      >\n        <SalesFo..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 70,
          "block": "open={isOpen}\n        onOpenChange={setIsOpen}\n        title=\"Add New Sale\"\n      >\n        <SalesFo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 70,
          "block": "onOpenChange={setIsOpen}\n        title=\"Add New Sale\"\n      >\n        <SalesFormStandardized onSubmi..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 71,
          "block": "onOpenChange={setIsOpen}\n        title=\"Add New Sale\"\n      >\n        <SalesFormStandardized onSubmi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\NewSaleButton.tsx",
          "startLine": 71,
          "block": "title=\"Add New Sale\"\n      >\n        <SalesFormStandardized onSubmit={handleSubmit} />\n      </Stand..."
        },
        {
          "file": "src\\features\\sales\\components\\NewSaleButton.tsx",
          "startLine": 72,
          "block": "title=\"Add New Sale\"\n      >\n        <SalesFormStandardized onSubmit={handleSubmit} />\n      </Stand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 12,
          "block": "DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/core/components/ui/dialog\";\nimport { Button }..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 9,
          "block": "DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/core/components/ui/dialog\";\nimport { Button }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 13,
          "block": "DialogTitle,\n  DialogFooter,\n} from \"@/core/components/ui/dialog\";\nimport { Button } from \"@/core/co..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 10,
          "block": "DialogTitle,\n  DialogFooter,\n} from \"@/core/components/ui/dialog\";\nimport { Button } from \"@/core/co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 14,
          "block": "DialogFooter,\n} from \"@/core/components/ui/dialog\";\nimport { Button } from \"@/core/components/ui/but..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 11,
          "block": "DialogFooter,\n} from \"@/core/components/ui/dialog\";\nimport { Button } from \"@/core/components/ui/but..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 15,
          "block": "} from \"@/core/components/ui/dialog\";\nimport { Button } from \"@/core/components/ui/button\";\nimport {..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 12,
          "block": "} from \"@/core/components/ui/dialog\";\nimport { Button } from \"@/core/components/ui/button\";\nimport {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 21,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/form\";\nimport { Input } from \"@/c..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 18,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/form\";\nimport { Input } from \"@/c..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 14,
          "block": "FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/core/components/ui/form\";\nimport { Input } from \"@/c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 61,
          "block": "}) => calculateProfitLoss(data.period),\n    onSuccess: () => {\n      queryClient.invalidateQueries({..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 86,
          "block": "}) => calculateProfitLoss(data.period),\n    onSuccess: () => {\n      queryClient.invalidateQueries({..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 267,
          "block": "</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" step=\"0.01..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 283,
          "block": "</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" step=\"0.01..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 268,
          "block": "<FormControl>\n                      <Input type=\"number\" step=\"0.01\" {...field} />\n                 ..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 284,
          "block": "<FormControl>\n                      <Input type=\"number\" step=\"0.01\" {...field} />\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 269,
          "block": "<Input type=\"number\" step=\"0.01\" {...field} />\n                    </FormControl>\n                  ..."
        },
        {
          "file": "src\\features\\finance\\components\\ProfitLossManagerStandardized.tsx",
          "startLine": 285,
          "block": "<Input type=\"number\" step=\"0.01\" {...field} />\n                    </FormControl>\n                  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 1,
          "block": "import { StandardDatePicker } from \"@/shared/components/common/datepicker\";\nimport React from \"react..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 1,
          "block": "import { StandardDatePicker } from \"@/shared/components/common/datepicker\";\nimport React from \"react..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 2,
          "block": "import React from \"react\";\n\ninterface SalesDatePickerProps {\n  date: Date | undefined;\n  onDateChang..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 2,
          "block": "import React from \"react\";\n\ninterface SalesDatePickerProps {\n  date: Date | undefined;\n  onDateChang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 3,
          "block": "interface SalesDatePickerProps {\n  date: Date | undefined;\n  onDateChange: (date: Date | undefined) ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 4,
          "block": "interface SalesDatePickerProps {\n  date: Date | undefined;\n  onDateChange: (date: Date | undefined) ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 3,
          "block": "interface SalesDatePickerProps {\n  date: Date | undefined;\n  onDateChange: (date: Date | undefined) ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 4,
          "block": "interface SalesDatePickerProps {\n  date: Date | undefined;\n  onDateChange: (date: Date | undefined) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 5,
          "block": "date: Date | undefined;\n  onDateChange: (date: Date | undefined) => void;\n}\n\nexport function SalesDa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 5,
          "block": "date: Date | undefined;\n  onDateChange: (date: Date | undefined) => void;\n}\n\nexport function SalesDa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 6,
          "block": "onDateChange: (date: Date | undefined) => void;\n}\n\nexport function SalesDatePicker({ date, onDateCha..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 6,
          "block": "onDateChange: (date: Date | undefined) => void;\n}\n\nexport function SalesDatePicker({ date, onDateCha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 7,
          "block": "}\n\nexport function SalesDatePicker({ date, onDateChange }: SalesDatePickerProps) {\n  return (\n    <S..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 7,
          "block": "}\n\nexport function SalesDatePicker({ date, onDateChange }: SalesDatePickerProps) {\n  return (\n    <S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 8,
          "block": "export function SalesDatePicker({ date, onDateChange }: SalesDatePickerProps) {\n  return (\n    <Stan..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 8,
          "block": "export function SalesDatePicker({ date, onDateChange }: SalesDatePickerProps) {\n  return (\n    <Stan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 9,
          "block": "export function SalesDatePicker({ date, onDateChange }: SalesDatePickerProps) {\n  return (\n    <Stan..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 9,
          "block": "export function SalesDatePicker({ date, onDateChange }: SalesDatePickerProps) {\n  return (\n    <Stan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 11,
          "block": "<StandardDatePicker\n      value={date}\n      onChange={onDateChange}\n      label=\"Date\"\n      mode=\"..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 11,
          "block": "<StandardDatePicker\n      value={date}\n      onChange={onDateChange}\n      label=\"Date\"\n      mode=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDatePicker.tsx",
          "startLine": 12,
          "block": "value={date}\n      onChange={onDateChange}\n      label=\"Date\"\n      mode=\"single\"\n      className=\"w..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDatePicker.tsx",
          "startLine": 12,
          "block": "value={date}\n      onChange={onDateChange}\n      label=\"Date\"\n      mode=\"single\"\n      className=\"w..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 1,
          "block": "import { DeleteConfirmDialog } from \"@/core/components/ui/dialog\";\nimport { Sale } from \"@/types\";\ni..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 1,
          "block": "import { DeleteConfirmDialog } from \"@/core/components/ui/dialog\";\nimport { Sale } from \"@/types\";\ni..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 2,
          "block": "import { Sale } from \"@/types\";\nimport { useTranslation } from \"react-i18next\";\nimport { z } from \"z..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 2,
          "block": "import { Sale } from \"@/types\";\nimport { useTranslation } from \"react-i18next\";\nimport { z } from \"z..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { z } from \"zod\";\nimport {\n  FormField,\n  For..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { z } from \"zod\";\nimport {\n  FormField,\n  For..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 8,
          "block": "FormLabel,\n  FormControl,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Inp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 8,
          "block": "FormLabel,\n  FormControl,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Inp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 9,
          "block": "FormControl,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 9,
          "block": "FormControl,\n  FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 10,
          "block": "FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 10,
          "block": "FormMessage,\n} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 11,
          "block": "} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components/ui/primitive..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 11,
          "block": "} from \"@/core/components/ui/primitives/form\";\nimport { Input } from \"@/core/components/ui/primitive..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 12,
          "block": "import { Input } from \"@/core/components/ui/primitives/input\";\nimport { useEffect, useState } from \"..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 12,
          "block": "import { Input } from \"@/core/components/ui/primitives/input\";\nimport { useEffect, useState } from \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 13,
          "block": "import { useEffect, useState } from \"react\";\nimport { PriceAndEmployeeInputs } from \"./form/PriceAnd..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 13,
          "block": "import { useEffect, useState } from \"react\";\nimport { PriceAndEmployeeInputs } from \"./form/PriceAnd..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 14,
          "block": "import { PriceAndEmployeeInputs } from \"./form/PriceAndEmployeeInputs\";\nimport { FillingSystemSelect..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 14,
          "block": "import { PriceAndEmployeeInputs } from \"./form/PriceAndEmployeeInputs\";\nimport { FillingSystemSelect..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 15,
          "block": "import { FillingSystemSelect } from \"./form/FillingSystemSelect\";\nimport { FormDialog } from \"@/shar..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 15,
          "block": "import { FillingSystemSelect } from \"./form/FillingSystemSelect\";\nimport { FormDialog } from \"@/shar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 26,
          "block": "total_sales: number;\n  shift_id: string;\n  filling_system_id: string;\n  meter_start: number;\n  meter..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 49,
          "block": "total_sales: number;\n  shift_id: string;\n  filling_system_id: string;\n  meter_start: number;\n  meter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 34,
          "block": "}\n\ninterface SalesDialogsProps {\n  isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean)..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 37,
          "block": "}\n\ninterface SalesDialogsProps {\n  isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 35,
          "block": "interface SalesDialogsProps {\n  isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean) =>..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 38,
          "block": "interface SalesDialogsProps {\n  isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 36,
          "block": "interface SalesDialogsProps {\n  isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean) =>..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 39,
          "block": "interface SalesDialogsProps {\n  isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 37,
          "block": "isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean) => void;\n  selectedSale: Sale | nu..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 40,
          "block": "isEditDialogOpen: boolean;\n  setIsEditDialogOpen: (open: boolean) => void;\n  selectedSale: Sale | nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 38,
          "block": "setIsEditDialogOpen: (open: boolean) => void;\n  selectedSale: Sale | null;\n  updateSale: (data: Upda..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 41,
          "block": "setIsEditDialogOpen: (open: boolean) => void;\n  selectedSale: Sale | null;\n  updateSale: (data: Upda..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 39,
          "block": "selectedSale: Sale | null;\n  updateSale: (data: UpdateSaleRequest) => void;\n  isDeleteDialogOpen: bo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 42,
          "block": "selectedSale: Sale | null;\n  updateSale: (data: UpdateSaleRequest) => void;\n  isDeleteDialogOpen: bo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 40,
          "block": "updateSale: (data: UpdateSaleRequest) => void;\n  isDeleteDialogOpen: boolean;\n  setIsDeleteDialogOpe..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 43,
          "block": "updateSale: (data: UpdateSaleRequest) => void;\n  isDeleteDialogOpen: boolean;\n  setIsDeleteDialogOpe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 41,
          "block": "isDeleteDialogOpen: boolean;\n  setIsDeleteDialogOpen: (open: boolean) => void;\n  confirmDelete: () =..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 44,
          "block": "isDeleteDialogOpen: boolean;\n  setIsDeleteDialogOpen: (open: boolean) => void;\n  confirmDelete: () =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 42,
          "block": "setIsDeleteDialogOpen: (open: boolean) => void;\n  confirmDelete: () => void;\n  isLoading?: boolean;\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 45,
          "block": "setIsDeleteDialogOpen: (open: boolean) => void;\n  confirmDelete: () => void;\n  isLoading?: boolean;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 47,
          "block": "export function SalesDialogsStandardized({\n  isEditDialogOpen,\n  setIsEditDialogOpen,\n  selectedSale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 50,
          "block": "export function SalesDialogsStandardized({\n  isEditDialogOpen,\n  setIsEditDialogOpen,\n  selectedSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 48,
          "block": "export function SalesDialogsStandardized({\n  isEditDialogOpen,\n  setIsEditDialogOpen,\n  selectedSale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 51,
          "block": "export function SalesDialogsStandardized({\n  isEditDialogOpen,\n  setIsEditDialogOpen,\n  selectedSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 55,
          "block": "confirmDelete,\n  isLoading = false,\n  employees,\n}: SalesDialogsProps) {\n  const { t } = useTranslat..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 58,
          "block": "confirmDelete,\n  isLoading = false,\n  employees,\n}: SalesDialogsProps) {\n  const { t } = useTranslat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 56,
          "block": "isLoading = false,\n  employees,\n}: SalesDialogsProps) {\n  const { t } = useTranslation();\n  const [t..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 59,
          "block": "isLoading = false,\n  employees,\n}: SalesDialogsProps) {\n  const { t } = useTranslation();\n  const [t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 57,
          "block": "employees,\n}: SalesDialogsProps) {\n  const { t } = useTranslation();\n  const [totalSales, setTotalSa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 60,
          "block": "employees,\n}: SalesDialogsProps) {\n  const { t } = useTranslation();\n  const [totalSales, setTotalSa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 63,
          "block": "const salesFormSchema = z\n    .object({\n      quantity: z\n        .number({\n          required_error..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 73,
          "block": "const salesFormSchema = z\n    .object({\n      quantity: z\n        .number({\n          required_error..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 64,
          "block": ".object({\n      quantity: z\n        .number({\n          required_error: t(\"sales.quantityRequired\", ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 74,
          "block": ".object({\n      quantity: z\n        .number({\n          required_error: t(\"sales.quantityRequired\", ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 65,
          "block": "quantity: z\n        .number({\n          required_error: t(\"sales.quantityRequired\", \"Quantity is req..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 75,
          "block": "quantity: z\n        .number({\n          required_error: t(\"sales.quantityRequired\", \"Quantity is req..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 66,
          "block": ".number({\n          required_error: t(\"sales.quantityRequired\", \"Quantity is required.\"),\n        })..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 76,
          "block": ".number({\n          required_error: t(\"sales.quantityRequired\", \"Quantity is required.\"),\n        })..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 77,
          "block": ".number({\n          required_error: t(\"sales.quantityRequired\", \"Quantity is required.\"),\n        })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 67,
          "block": "required_error: t(\"sales.quantityRequired\", \"Quantity is required.\"),\n        })\n        .min(\n     ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 77,
          "block": "required_error: t(\"sales.quantityRequired\", \"Quantity is required.\"),\n        })\n        .min(\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 78,
          "block": "required_error: t(\"sales.quantityRequired\", \"Quantity is required.\"),\n        })\n        .min(\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 68,
          "block": "})\n        .min(\n          0.01,\n          t(\"sales.quantityPositive\", \"Quantity must be greater tha..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 78,
          "block": "})\n        .min(\n          0.01,\n          t(\"sales.quantityPositive\", \"Quantity must be greater tha..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 79,
          "block": "})\n        .min(\n          0.01,\n          t(\"sales.quantityPositive\", \"Quantity must be greater tha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 69,
          "block": ".min(\n          0.01,\n          t(\"sales.quantityPositive\", \"Quantity must be greater than 0\")\n     ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 79,
          "block": ".min(\n          0.01,\n          t(\"sales.quantityPositive\", \"Quantity must be greater than 0\")\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 70,
          "block": "0.01,\n          t(\"sales.quantityPositive\", \"Quantity must be greater than 0\")\n        ),\n      unit..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 80,
          "block": "0.01,\n          t(\"sales.quantityPositive\", \"Quantity must be greater than 0\")\n        ),\n      unit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 71,
          "block": "t(\"sales.quantityPositive\", \"Quantity must be greater than 0\")\n        ),\n      unit_price: z\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 81,
          "block": "t(\"sales.quantityPositive\", \"Quantity must be greater than 0\")\n        ),\n      unit_price: z\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 72,
          "block": "),\n      unit_price: z\n        .number({\n          required_error: t(\"sales.priceRequired\", \"Unit pr..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 82,
          "block": "),\n      unit_price: z\n        .number({\n          required_error: t(\"sales.priceRequired\", \"Unit pr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 73,
          "block": "unit_price: z\n        .number({\n          required_error: t(\"sales.priceRequired\", \"Unit price is re..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 83,
          "block": "unit_price: z\n        .number({\n          required_error: t(\"sales.priceRequired\", \"Unit price is re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 74,
          "block": ".number({\n          required_error: t(\"sales.priceRequired\", \"Unit price is required.\"),\n        })\n..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 84,
          "block": ".number({\n          required_error: t(\"sales.priceRequired\", \"Unit price is required.\"),\n        })\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 75,
          "block": "required_error: t(\"sales.priceRequired\", \"Unit price is required.\"),\n        })\n        .min(1, t(\"s..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 85,
          "block": "required_error: t(\"sales.priceRequired\", \"Unit price is required.\"),\n        })\n        .min(1, t(\"s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 76,
          "block": "})\n        .min(1, t(\"sales.priceMinimum\", \"Price must be at least 1\")),\n      total_sales: z.number..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 86,
          "block": "})\n        .min(1, t(\"sales.priceMinimum\", \"Price must be at least 1\")),\n      total_sales: z.number..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 77,
          "block": ".min(1, t(\"sales.priceMinimum\", \"Price must be at least 1\")),\n      total_sales: z.number().optional..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 87,
          "block": ".min(1, t(\"sales.priceMinimum\", \"Price must be at least 1\")),\n      total_sales: z.number().optional..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 78,
          "block": "total_sales: z.number().optional(),\n      shift_id: z.string({\n        required_error: t(\"sales.shif..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 88,
          "block": "total_sales: z.number().optional(),\n      shift_id: z.string({\n        required_error: t(\"sales.shif..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 79,
          "block": "shift_id: z.string({\n        required_error: t(\"sales.shiftRequired\", \"Shift is required\"),\n      })..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 89,
          "block": "shift_id: z.string({\n        required_error: t(\"sales.shiftRequired\", \"Shift is required\"),\n      })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 80,
          "block": "required_error: t(\"sales.shiftRequired\", \"Shift is required\"),\n      }),\n      filling_system_id: z...."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 90,
          "block": "required_error: t(\"sales.shiftRequired\", \"Shift is required\"),\n      }),\n      filling_system_id: z...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 81,
          "block": "}),\n      filling_system_id: z.string({\n        required_error: t(\n          \"sales.fillingSystemReq..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 91,
          "block": "}),\n      filling_system_id: z.string({\n        required_error: t(\n          \"sales.fillingSystemReq..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 82,
          "block": "filling_system_id: z.string({\n        required_error: t(\n          \"sales.fillingSystemRequired\",\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 92,
          "block": "filling_system_id: z.string({\n        required_error: t(\n          \"sales.fillingSystemRequired\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 83,
          "block": "required_error: t(\n          \"sales.fillingSystemRequired\",\n          \"Please select a filling syste..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 93,
          "block": "required_error: t(\n          \"sales.fillingSystemRequired\",\n          \"Please select a filling syste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 84,
          "block": "\"sales.fillingSystemRequired\",\n          \"Please select a filling system.\"\n        ),\n      }),\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 94,
          "block": "\"sales.fillingSystemRequired\",\n          \"Please select a filling system.\"\n        ),\n      }),\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 87,
          "block": "}),\n      meter_start: z\n        .number({\n          required_error: t(\n            \"sales.meterStar..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 97,
          "block": "}),\n      meter_start: z\n        .number({\n          required_error: t(\n            \"sales.meterStar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 88,
          "block": "meter_start: z\n        .number({\n          required_error: t(\n            \"sales.meterStartRequired\"..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 98,
          "block": "meter_start: z\n        .number({\n          required_error: t(\n            \"sales.meterStartRequired\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 89,
          "block": ".number({\n          required_error: t(\n            \"sales.meterStartRequired\",\n            \"Starting..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 99,
          "block": ".number({\n          required_error: t(\n            \"sales.meterStartRequired\",\n            \"Starting..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 90,
          "block": "required_error: t(\n            \"sales.meterStartRequired\",\n            \"Starting meter reading is re..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 100,
          "block": "required_error: t(\n            \"sales.meterStartRequired\",\n            \"Starting meter reading is re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 91,
          "block": "\"sales.meterStartRequired\",\n            \"Starting meter reading is required.\"\n          ),\n        }..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 101,
          "block": "\"sales.meterStartRequired\",\n            \"Starting meter reading is required.\"\n          ),\n        }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 94,
          "block": "})\n        .nonnegative(\n          t(\n            \"sales.meterStartPositive\",\n            \"Starting ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 104,
          "block": "})\n        .nonnegative(\n          t(\n            \"sales.meterStartPositive\",\n            \"Starting ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 95,
          "block": ".nonnegative(\n          t(\n            \"sales.meterStartPositive\",\n            \"Starting meter readi..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 105,
          "block": ".nonnegative(\n          t(\n            \"sales.meterStartPositive\",\n            \"Starting meter readi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 96,
          "block": "t(\n            \"sales.meterStartPositive\",\n            \"Starting meter reading must be a positive nu..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 106,
          "block": "t(\n            \"sales.meterStartPositive\",\n            \"Starting meter reading must be a positive nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 97,
          "block": "\"sales.meterStartPositive\",\n            \"Starting meter reading must be a positive number\"\n         ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 107,
          "block": "\"sales.meterStartPositive\",\n            \"Starting meter reading must be a positive number\"\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 98,
          "block": "\"Starting meter reading must be a positive number\"\n          )\n        ),\n      meter_end: z\n       ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 108,
          "block": "\"Starting meter reading must be a positive number\"\n          )\n        ),\n      meter_end: z\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 100,
          "block": "),\n      meter_end: z\n        .number({\n          required_error: t(\n            \"sales.meterEndRequ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 110,
          "block": "),\n      meter_end: z\n        .number({\n          required_error: t(\n            \"sales.meterEndRequ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 101,
          "block": "meter_end: z\n        .number({\n          required_error: t(\n            \"sales.meterEndRequired\",\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 111,
          "block": "meter_end: z\n        .number({\n          required_error: t(\n            \"sales.meterEndRequired\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 102,
          "block": ".number({\n          required_error: t(\n            \"sales.meterEndRequired\",\n            \"Ending met..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 112,
          "block": ".number({\n          required_error: t(\n            \"sales.meterEndRequired\",\n            \"Ending met..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 103,
          "block": "required_error: t(\n            \"sales.meterEndRequired\",\n            \"Ending meter reading is requir..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 113,
          "block": "required_error: t(\n            \"sales.meterEndRequired\",\n            \"Ending meter reading is requir..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 104,
          "block": "\"sales.meterEndRequired\",\n            \"Ending meter reading is required.\"\n          ),\n        })\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 114,
          "block": "\"sales.meterEndRequired\",\n            \"Ending meter reading is required.\"\n          ),\n        })\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 107,
          "block": "})\n        .nonnegative(\n          t(\n            \"sales.meterEndPositive\",\n            \"Ending mete..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 117,
          "block": "})\n        .nonnegative(\n          t(\n            \"sales.meterEndPositive\",\n            \"Ending mete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 108,
          "block": ".nonnegative(\n          t(\n            \"sales.meterEndPositive\",\n            \"Ending meter reading m..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 118,
          "block": ".nonnegative(\n          t(\n            \"sales.meterEndPositive\",\n            \"Ending meter reading m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 109,
          "block": "t(\n            \"sales.meterEndPositive\",\n            \"Ending meter reading must be a positive number..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 119,
          "block": "t(\n            \"sales.meterEndPositive\",\n            \"Ending meter reading must be a positive number..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 110,
          "block": "\"sales.meterEndPositive\",\n            \"Ending meter reading must be a positive number\"\n          )\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 120,
          "block": "\"sales.meterEndPositive\",\n            \"Ending meter reading must be a positive number\"\n          )\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 111,
          "block": "\"Ending meter reading must be a positive number\"\n          )\n        ),\n      date: z.string().optio..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 121,
          "block": "\"Ending meter reading must be a positive number\"\n          )\n        ),\n      date: z.string().optio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 113,
          "block": "),\n      date: z.string().optional(),\n      comments: z.string().optional(),\n    })\n    .refine((dat..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 123,
          "block": "),\n      date: z.string().optional(),\n      comments: z.string().optional(),\n    })\n    .refine((dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 114,
          "block": "date: z.string().optional(),\n      comments: z.string().optional(),\n    })\n    .refine((data) => dat..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 124,
          "block": "date: z.string().optional(),\n      comments: z.string().optional(),\n    })\n    .refine((data) => dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 115,
          "block": "comments: z.string().optional(),\n    })\n    .refine((data) => data.meter_end >= data.meter_start, {\n..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 125,
          "block": "comments: z.string().optional(),\n    })\n    .refine((data) => data.meter_end >= data.meter_start, {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 116,
          "block": "})\n    .refine((data) => data.meter_end >= data.meter_start, {\n      message: t(\n        \"sales.mete..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 126,
          "block": "})\n    .refine((data) => data.meter_end >= data.meter_start, {\n      message: t(\n        \"sales.mete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 117,
          "block": ".refine((data) => data.meter_end >= data.meter_start, {\n      message: t(\n        \"sales.meterEndGre..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 127,
          "block": ".refine((data) => data.meter_end >= data.meter_start, {\n      message: t(\n        \"sales.meterEndGre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 118,
          "block": "message: t(\n        \"sales.meterEndGreater\",\n        \"Ending meter reading must be greater than or e..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 128,
          "block": "message: t(\n        \"sales.meterEndGreater\",\n        \"Ending meter reading must be greater than or e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 119,
          "block": "\"sales.meterEndGreater\",\n        \"Ending meter reading must be greater than or equal to starting met..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 129,
          "block": "\"sales.meterEndGreater\",\n        \"Ending meter reading must be greater than or equal to starting met..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 120,
          "block": "\"Ending meter reading must be greater than or equal to starting meter reading\"\n      ),\n      path: ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 130,
          "block": "\"Ending meter reading must be greater than or equal to starting meter reading\"\n      ),\n      path: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 122,
          "block": "path: [\"meter_end\"],\n    });\n\n  // Create and export the type for use in other components\n  type Sal..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 132,
          "block": "path: [\"meter_end\"],\n    });\n\n  // Create and export the type for use in other components\n  type Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 123,
          "block": "});\n\n  // Create and export the type for use in other components\n  type SalesFormData = z.infer<type..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 133,
          "block": "});\n\n  // Create and export the type for use in other components\n  type SalesFormData = z.infer<type..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 124,
          "block": "// Create and export the type for use in other components\n  type SalesFormData = z.infer<typeof sale..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 134,
          "block": "// Create and export the type for use in other components\n  type SalesFormData = z.infer<typeof sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 125,
          "block": "// Create and export the type for use in other components\n  type SalesFormData = z.infer<typeof sale..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 135,
          "block": "// Create and export the type for use in other components\n  type SalesFormData = z.infer<typeof sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 149,
          "block": "if (selectedSale?.id) {\n        // Update existing sale\n        updateSale({\n          id: selectedS..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 155,
          "block": "if (selectedSale?.id) {\n        // Update existing sale\n        updateSale({\n          id: selectedS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 150,
          "block": "if (selectedSale?.id) {\n        // Update existing sale\n        updateSale({\n          id: selectedS..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 156,
          "block": "if (selectedSale?.id) {\n        // Update existing sale\n        updateSale({\n          id: selectedS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 151,
          "block": "// Update existing sale\n        updateSale({\n          id: selectedSale.id,\n          ...submissionD..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 157,
          "block": "// Update existing sale\n        updateSale({\n          id: selectedSale.id,\n          ...submissionD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 153,
          "block": "id: selectedSale.id,\n          ...submissionData,\n        });\n\n        toast.success(t(\"sales.update..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 159,
          "block": "id: selectedSale.id,\n          ...submissionData,\n        });\n\n        toast.success(t(\"sales.update..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 154,
          "block": "...submissionData,\n        });\n\n        toast.success(t(\"sales.updated\", \"Sale updated.\"));\n        ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 160,
          "block": "...submissionData,\n        });\n\n        toast.success(t(\"sales.updated\", \"Sale updated.\"));\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 157,
          "block": "toast.success(t(\"sales.updated\", \"Sale updated.\"));\n        return true;\n      }\n\n      return false..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 163,
          "block": "toast.success(t(\"sales.updated\", \"Sale updated.\"));\n        return true;\n      }\n\n      return false..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 160,
          "block": "return false;\n    } catch (error) {\n      console.error(\"Error updating sale:\", error);\n      toast...."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 166,
          "block": "return false;\n    } catch (error) {\n      console.error(\"Error updating sale:\", error);\n      toast...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 161,
          "block": "return false;\n    } catch (error) {\n      console.error(\"Error updating sale:\", error);\n      toast...."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 167,
          "block": "return false;\n    } catch (error) {\n      console.error(\"Error updating sale:\", error);\n      toast...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 162,
          "block": "} catch (error) {\n      console.error(\"Error updating sale:\", error);\n      toast.error(t(\"sales.upd..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 168,
          "block": "} catch (error) {\n      console.error(\"Error updating sale:\", error);\n      toast.error(t(\"sales.upd..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 163,
          "block": "console.error(\"Error updating sale:\", error);\n      toast.error(t(\"sales.updateError\", \"Failed to up..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 169,
          "block": "console.error(\"Error updating sale:\", error);\n      toast.error(t(\"sales.updateError\", \"Failed to up..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 169,
          "block": "return (\n    <>\n      <FormDialog\n        open={isEditDialogOpen}\n        onOpenChange={setIsEditDia..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 175,
          "block": "return (\n    <>\n      <FormDialog\n        open={isEditDialogOpen}\n        onOpenChange={setIsEditDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 170,
          "block": "<>\n      <FormDialog\n        open={isEditDialogOpen}\n        onOpenChange={setIsEditDialogOpen}\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 176,
          "block": "<>\n      <FormDialog\n        open={isEditDialogOpen}\n        onOpenChange={setIsEditDialogOpen}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 171,
          "block": "<FormDialog\n        open={isEditDialogOpen}\n        onOpenChange={setIsEditDialogOpen}\n        title..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 177,
          "block": "<FormDialog\n        open={isEditDialogOpen}\n        onOpenChange={setIsEditDialogOpen}\n        title..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 172,
          "block": "open={isEditDialogOpen}\n        onOpenChange={setIsEditDialogOpen}\n        title={\n          selecte..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 178,
          "block": "open={isEditDialogOpen}\n        onOpenChange={setIsEditDialogOpen}\n        title={\n          selecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 173,
          "block": "onOpenChange={setIsEditDialogOpen}\n        title={\n          selectedSale\n            ? t(\"sales.edi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 179,
          "block": "onOpenChange={setIsEditDialogOpen}\n        title={\n          selectedSale\n            ? t(\"sales.edi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 174,
          "block": "title={\n          selectedSale\n            ? t(\"sales.editSale\", \"Edit Sale\")\n            : t(\"sales..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 180,
          "block": "title={\n          selectedSale\n            ? t(\"sales.editSale\", \"Edit Sale\")\n            : t(\"sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 175,
          "block": "selectedSale\n            ? t(\"sales.editSale\", \"Edit Sale\")\n            : t(\"sales.addSale\", \"Add Sa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 181,
          "block": "selectedSale\n            ? t(\"sales.editSale\", \"Edit Sale\")\n            : t(\"sales.addSale\", \"Add Sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 176,
          "block": "? t(\"sales.editSale\", \"Edit Sale\")\n            : t(\"sales.addSale\", \"Add Sale\")\n        }\n        sc..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 182,
          "block": "? t(\"sales.editSale\", \"Edit Sale\")\n            : t(\"sales.addSale\", \"Add Sale\")\n        }\n        sc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 177,
          "block": ": t(\"sales.addSale\", \"Add Sale\")\n        }\n        schema={salesFormSchema}\n        defaultValues={d..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 183,
          "block": ": t(\"sales.addSale\", \"Add Sale\")\n        }\n        schema={salesFormSchema}\n        defaultValues={d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 178,
          "block": "}\n        schema={salesFormSchema}\n        defaultValues={defaultValues}\n        onSubmit={handleSub..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 184,
          "block": "}\n        schema={salesFormSchema}\n        defaultValues={defaultValues}\n        onSubmit={handleSub..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 179,
          "block": "schema={salesFormSchema}\n        defaultValues={defaultValues}\n        onSubmit={handleSubmit}\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 185,
          "block": "schema={salesFormSchema}\n        defaultValues={defaultValues}\n        onSubmit={handleSubmit}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 180,
          "block": "defaultValues={defaultValues}\n        onSubmit={handleSubmit}\n        isSubmitting={isLoading}\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 186,
          "block": "defaultValues={defaultValues}\n        onSubmit={handleSubmit}\n        isSubmitting={isLoading}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 181,
          "block": "onSubmit={handleSubmit}\n        isSubmitting={isLoading}\n        size=\"lg\"\n      >\n        {({ contr..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 187,
          "block": "onSubmit={handleSubmit}\n        isSubmitting={isLoading}\n        size=\"lg\"\n      >\n        {({ contr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 182,
          "block": "isSubmitting={isLoading}\n        size=\"lg\"\n      >\n        {({ control }) => (\n          <SalesFormC..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 188,
          "block": "isSubmitting={isLoading}\n        size=\"lg\"\n      >\n        {({ control }) => (\n          <SalesFormC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 188,
          "block": "employees={employees} \n            totalSales={totalSales}\n            setTotalSales={setTotalSales}..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 194,
          "block": "employees={employees} \n            totalSales={totalSales}\n            setTotalSales={setTotalSales}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 189,
          "block": "totalSales={totalSales}\n            setTotalSales={setTotalSales}\n          />\n        )}\n      </Fo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 195,
          "block": "totalSales={totalSales}\n            setTotalSales={setTotalSales}\n          />\n        )}\n      </Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 221,
          "block": "totalSales: number;\n  setTotalSales: (value: number) => void;\n}\n\nfunction SalesFormContent({ control..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 199,
          "block": "totalSales: number;\n  setTotalSales: (value: number) => void;\n}\n\nfunction SalesFormContent({ control..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 216,
          "block": "totalSales: number;\n  setTotalSales: (value: number) => void;\n}\n\nfunction SalesFormContent({ control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 222,
          "block": "setTotalSales: (value: number) => void;\n}\n\nfunction SalesFormContent({ control, employees, totalSale..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 200,
          "block": "setTotalSales: (value: number) => void;\n}\n\nfunction SalesFormContent({ control, employees, totalSale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 217,
          "block": "setTotalSales: (value: number) => void;\n}\n\nfunction SalesFormContent({ control, employees, totalSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 223,
          "block": "}\n\nfunction SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProp..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 201,
          "block": "}\n\nfunction SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 218,
          "block": "}\n\nfunction SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 224,
          "block": "function SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProps) ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 202,
          "block": "function SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProps) ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 219,
          "block": "function SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProps) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 225,
          "block": "function SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProps) ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 203,
          "block": "function SalesFormContent({ control, employees, totalSales, setTotalSales }: SalesFormContentProps) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 226,
          "block": "const { t } = useTranslation();\n\n  // Watch for changes to calculate derived values\n  const unitPric..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 204,
          "block": "const { t } = useTranslation();\n\n  // Watch for changes to calculate derived values\n  const unitPric..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 227,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 228,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 205,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 206,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 229,
          "block": "const unitPrice = useWatch({ control, name: \"unit_price\" });\n  const meterStart = useWatch({ control..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 207,
          "block": "const unitPrice = useWatch({ control, name: \"unit_price\" });\n  const meterStart = useWatch({ control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 230,
          "block": "const meterStart = useWatch({ control, name: \"meter_start\" });\n  const meterEnd = useWatch({ control..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 208,
          "block": "const meterStart = useWatch({ control, name: \"meter_start\" });\n  const meterEnd = useWatch({ control..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 231,
          "block": "const meterEnd = useWatch({ control, name: \"meter_end\" });\n\n  // Calculate quantity and total sales ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 209,
          "block": "const meterEnd = useWatch({ control, name: \"meter_end\" });\n\n  // Calculate quantity and total sales ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 232,
          "block": "// Calculate quantity and total sales when meter values or unit price changes\n  useEffect(() => {\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 233,
          "block": "// Calculate quantity and total sales when meter values or unit price changes\n  useEffect(() => {\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 210,
          "block": "// Calculate quantity and total sales when meter values or unit price changes\n  useEffect(() => {\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 211,
          "block": "// Calculate quantity and total sales when meter values or unit price changes\n  useEffect(() => {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 234,
          "block": "useEffect(() => {\n    // Calculate quantity from meter readings\n    const calculatedQuantity = Math...."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 212,
          "block": "useEffect(() => {\n    // Calculate quantity from meter readings\n    const calculatedQuantity = Math...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 235,
          "block": "// Calculate quantity from meter readings\n    const calculatedQuantity = Math.max(0, meterEnd - mete..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 213,
          "block": "// Calculate quantity from meter readings\n    const calculatedQuantity = Math.max(0, meterEnd - mete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 236,
          "block": "const calculatedQuantity = Math.max(0, meterEnd - meterStart);\n\n    // Calculate total sales\n    con..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 214,
          "block": "const calculatedQuantity = Math.max(0, meterEnd - meterStart);\n\n    // Calculate total sales\n    con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 237,
          "block": "// Calculate total sales\n    const calculatedTotal = calculatedQuantity * unitPrice;\n    setTotalSal..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 238,
          "block": "// Calculate total sales\n    const calculatedTotal = calculatedQuantity * unitPrice;\n    setTotalSal..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 215,
          "block": "// Calculate total sales\n    const calculatedTotal = calculatedQuantity * unitPrice;\n    setTotalSal..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 216,
          "block": "// Calculate total sales\n    const calculatedTotal = calculatedQuantity * unitPrice;\n    setTotalSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 239,
          "block": "const calculatedTotal = calculatedQuantity * unitPrice;\n    setTotalSales(calculatedTotal || 0);\n  }..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 217,
          "block": "const calculatedTotal = calculatedQuantity * unitPrice;\n    setTotalSales(calculatedTotal || 0);\n  }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 240,
          "block": "setTotalSales(calculatedTotal || 0);\n  }, [meterStart, meterEnd, unitPrice, setTotalSales]);\n\n  retu..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 218,
          "block": "setTotalSales(calculatedTotal || 0);\n  }, [meterStart, meterEnd, unitPrice, setTotalSales]);\n\n  retu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 241,
          "block": "}, [meterStart, meterEnd, unitPrice, setTotalSales]);\n\n  return (\n    <>\n      <div className=\"grid ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 219,
          "block": "}, [meterStart, meterEnd, unitPrice, setTotalSales]);\n\n  return (\n    <>\n      <div className=\"grid ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 243,
          "block": "return (\n    <>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n   ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 221,
          "block": "return (\n    <>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 234,
          "block": "return (\n    <>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 167,
          "block": "return (\n    <>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 244,
          "block": "<>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          contro..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 222,
          "block": "<>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          contro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 245,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 223,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 246,
          "block": "<FormField\n          control={control}\n          name=\"quantity\"\n          render={({ field }) => (\n..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 224,
          "block": "<FormField\n          control={control}\n          name=\"quantity\"\n          render={({ field }) => (\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 247,
          "block": "control={control}\n          name=\"quantity\"\n          render={({ field }) => (\n            <FormItem..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 225,
          "block": "control={control}\n          name=\"quantity\"\n          render={({ field }) => (\n            <FormItem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 248,
          "block": "name=\"quantity\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 226,
          "block": "name=\"quantity\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 249,
          "block": "render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n                {t(\"sales...."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 227,
          "block": "render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n                {t(\"sales...."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 240,
          "block": "render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n                {t(\"sales...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 250,
          "block": "<FormItem>\n              <FormLabel>\n                {t(\"sales.quantity\", \"Quantity\")} (\n           ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 228,
          "block": "<FormItem>\n              <FormLabel>\n                {t(\"sales.quantity\", \"Quantity\")} (\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 241,
          "block": "<FormItem>\n              <FormLabel>\n                {t(\"sales.quantity\", \"Quantity\")} (\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 251,
          "block": "<FormLabel>\n                {t(\"sales.quantity\", \"Quantity\")} (\n                {t(\"common.calculate..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 229,
          "block": "<FormLabel>\n                {t(\"sales.quantity\", \"Quantity\")} (\n                {t(\"common.calculate..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 242,
          "block": "<FormLabel>\n                {t(\"sales.quantity\", \"Quantity\")} (\n                {t(\"common.calculate..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 252,
          "block": "{t(\"sales.quantity\", \"Quantity\")} (\n                {t(\"common.calculated\", \"Calculated\")})\n        ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 230,
          "block": "{t(\"sales.quantity\", \"Quantity\")} (\n                {t(\"common.calculated\", \"Calculated\")})\n        ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 243,
          "block": "{t(\"sales.quantity\", \"Quantity\")} (\n                {t(\"common.calculated\", \"Calculated\")})\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 253,
          "block": "{t(\"common.calculated\", \"Calculated\")})\n              </FormLabel>\n              <FormControl>\n     ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 231,
          "block": "{t(\"common.calculated\", \"Calculated\")})\n              </FormLabel>\n              <FormControl>\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 244,
          "block": "{t(\"common.calculated\", \"Calculated\")})\n              </FormLabel>\n              <FormControl>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 254,
          "block": "</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"number\"\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 285,
          "block": "</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"number\"\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 232,
          "block": "</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"number\"\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 263,
          "block": "</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"number\"\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 245,
          "block": "</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"number\"\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 276,
          "block": "</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"number\"\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 255,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 233,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 246,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 256,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 234,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 247,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 257,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"0\"\n                  {......"
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 235,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"0\"\n                  {......"
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 248,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"0\"\n                  {......"
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 258,
          "block": "step=\"0.01\"\n                  placeholder=\"0\"\n                  {...field}\n                  value={..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 236,
          "block": "step=\"0.01\"\n                  placeholder=\"0\"\n                  {...field}\n                  value={..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 249,
          "block": "step=\"0.01\"\n                  placeholder=\"0\"\n                  {...field}\n                  value={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 259,
          "block": "placeholder=\"0\"\n                  {...field}\n                  value={field.value}\n                 ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 237,
          "block": "placeholder=\"0\"\n                  {...field}\n                  value={field.value}\n                 ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 250,
          "block": "placeholder=\"0\"\n                  {...field}\n                  value={field.value}\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 260,
          "block": "{...field}\n                  value={field.value}\n                  disabled\n                  classN..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 238,
          "block": "{...field}\n                  value={field.value}\n                  disabled\n                  classN..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 251,
          "block": "{...field}\n                  value={field.value}\n                  disabled\n                  classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 261,
          "block": "value={field.value}\n                  disabled\n                  className=\"bg-muted\"\n              ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 239,
          "block": "value={field.value}\n                  disabled\n                  className=\"bg-muted\"\n              ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 252,
          "block": "value={field.value}\n                  disabled\n                  className=\"bg-muted\"\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 262,
          "block": "disabled\n                  className=\"bg-muted\"\n                />\n              </FormControl>\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 240,
          "block": "disabled\n                  className=\"bg-muted\"\n                />\n              </FormControl>\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 253,
          "block": "disabled\n                  className=\"bg-muted\"\n                />\n              </FormControl>\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 263,
          "block": "className=\"bg-muted\"\n                />\n              </FormControl>\n              <FormMessage />\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 241,
          "block": "className=\"bg-muted\"\n                />\n              </FormControl>\n              <FormMessage />\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 254,
          "block": "className=\"bg-muted\"\n                />\n              </FormControl>\n              <FormMessage />\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 275,
          "block": "</div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          c..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 253,
          "block": "</div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          c..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 266,
          "block": "</div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 276,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 254,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 277,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 255,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 278,
          "block": "<FormField\n          control={control}\n          name=\"meter_start\"\n          render={({ field }) =>..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 256,
          "block": "<FormField\n          control={control}\n          name=\"meter_start\"\n          render={({ field }) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 279,
          "block": "control={control}\n          name=\"meter_start\"\n          render={({ field }) => (\n            <FormI..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 257,
          "block": "control={control}\n          name=\"meter_start\"\n          render={({ field }) => (\n            <FormI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 280,
          "block": "name=\"meter_start\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabe..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 258,
          "block": "name=\"meter_start\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 281,
          "block": "render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n                {t(\"sales...."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 259,
          "block": "render={({ field }) => (\n            <FormItem>\n              <FormLabel>\n                {t(\"sales...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 282,
          "block": "<FormItem>\n              <FormLabel>\n                {t(\"sales.meterStart\", \"Meter Start\")}\n        ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 260,
          "block": "<FormItem>\n              <FormLabel>\n                {t(\"sales.meterStart\", \"Meter Start\")}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 283,
          "block": "<FormLabel>\n                {t(\"sales.meterStart\", \"Meter Start\")}\n              </FormLabel>\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 261,
          "block": "<FormLabel>\n                {t(\"sales.meterStart\", \"Meter Start\")}\n              </FormLabel>\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 284,
          "block": "{t(\"sales.meterStart\", \"Meter Start\")}\n              </FormLabel>\n              <FormControl>\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 262,
          "block": "{t(\"sales.meterStart\", \"Meter Start\")}\n              </FormLabel>\n              <FormControl>\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 286,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 311,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 264,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 290,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 277,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 287,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder={..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 265,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 288,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  placeholder={t(\n                    \"s..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 266,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  placeholder={t(\n                    \"s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 289,
          "block": "step=\"0.01\"\n                  placeholder={t(\n                    \"sales.startingMeterReading\",\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 267,
          "block": "step=\"0.01\"\n                  placeholder={t(\n                    \"sales.startingMeterReading\",\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 290,
          "block": "placeholder={t(\n                    \"sales.startingMeterReading\",\n                    \"Starting mete..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 268,
          "block": "placeholder={t(\n                    \"sales.startingMeterReading\",\n                    \"Starting mete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 293,
          "block": ")}\n                  {...field}\n                  onChange={(e) =>\n                    field.onChang..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 318,
          "block": ")}\n                  {...field}\n                  onChange={(e) =>\n                    field.onChang..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 284,
          "block": ")}\n                  {...field}\n                  onChange={(e) =>\n                    field.onChang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 294,
          "block": "{...field}\n                  onChange={(e) =>\n                    field.onChange(parseFloat(e.target..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 319,
          "block": "{...field}\n                  onChange={(e) =>\n                    field.onChange(parseFloat(e.target..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 285,
          "block": "{...field}\n                  onChange={(e) =>\n                    field.onChange(parseFloat(e.target..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 295,
          "block": "onChange={(e) =>\n                    field.onChange(parseFloat(e.target.value) || 0)\n               ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 320,
          "block": "onChange={(e) =>\n                    field.onChange(parseFloat(e.target.value) || 0)\n               ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 274,
          "block": "onChange={(e) =>\n                    field.onChange(parseFloat(e.target.value) || 0)\n               ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 300,
          "block": "onChange={(e) =>\n                    field.onChange(parseFloat(e.target.value) || 0)\n               ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 286,
          "block": "onChange={(e) =>\n                    field.onChange(parseFloat(e.target.value) || 0)\n               ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 296,
          "block": "field.onChange(parseFloat(e.target.value) || 0)\n                  }\n                />\n             ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 321,
          "block": "field.onChange(parseFloat(e.target.value) || 0)\n                  }\n                />\n             ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 275,
          "block": "field.onChange(parseFloat(e.target.value) || 0)\n                  }\n                />\n             ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 301,
          "block": "field.onChange(parseFloat(e.target.value) || 0)\n                  }\n                />\n             ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 287,
          "block": "field.onChange(parseFloat(e.target.value) || 0)\n                  }\n                />\n             ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 297,
          "block": "}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormIt..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 322,
          "block": "}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormIt..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 276,
          "block": "}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormIt..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 302,
          "block": "}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormIt..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 288,
          "block": "}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormIt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 305,
          "block": "<FormField\n          control={control}\n          name=\"meter_end\"\n          render={({ field }) => (..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 284,
          "block": "<FormField\n          control={control}\n          name=\"meter_end\"\n          render={({ field }) => (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 306,
          "block": "control={control}\n          name=\"meter_end\"\n          render={({ field }) => (\n            <FormIte..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 285,
          "block": "control={control}\n          name=\"meter_end\"\n          render={({ field }) => (\n            <FormIte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 307,
          "block": "name=\"meter_end\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 286,
          "block": "name=\"meter_end\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 308,
          "block": "render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t(\"sales.meterEnd\", \"Meter..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 287,
          "block": "render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t(\"sales.meterEnd\", \"Meter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 309,
          "block": "<FormItem>\n              <FormLabel>{t(\"sales.meterEnd\", \"Meter End\")}</FormLabel>\n              <Fo..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 288,
          "block": "<FormItem>\n              <FormLabel>{t(\"sales.meterEnd\", \"Meter End\")}</FormLabel>\n              <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 310,
          "block": "<FormLabel>{t(\"sales.meterEnd\", \"Meter End\")}</FormLabel>\n              <FormControl>\n              ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 289,
          "block": "<FormLabel>{t(\"sales.meterEnd\", \"Meter End\")}</FormLabel>\n              <FormControl>\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 312,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder={..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 291,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 313,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  placeholder={t(\n                    \"s..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 292,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  placeholder={t(\n                    \"s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 314,
          "block": "step=\"0.01\"\n                  placeholder={t(\n                    \"sales.endingMeterReading\",\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 293,
          "block": "step=\"0.01\"\n                  placeholder={t(\n                    \"sales.endingMeterReading\",\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 315,
          "block": "placeholder={t(\n                    \"sales.endingMeterReading\",\n                    \"Ending meter re..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 294,
          "block": "placeholder={t(\n                    \"sales.endingMeterReading\",\n                    \"Ending meter re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 328,
          "block": "/>\n      </div>\n\n      {/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 308,
          "block": "/>\n      </div>\n\n      {/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 294,
          "block": "/>\n      </div>\n\n      {/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 329,
          "block": "</div>\n\n      {/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 rounded-m..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 309,
          "block": "</div>\n\n      {/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 rounded-m..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 295,
          "block": "</div>\n\n      {/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 rounded-m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 330,
          "block": "{/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 rounded-md text-sm\">\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 296,
          "block": "{/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 rounded-md text-sm\">\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 331,
          "block": "{/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 rounded-md text-sm\">\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 297,
          "block": "{/* Display calculated total sales */}\n      <div className=\"bg-muted/30 p-3 rounded-md text-sm\">\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 332,
          "block": "<div className=\"bg-muted/30 p-3 rounded-md text-sm\">\n        <div className=\"font-medium\">\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 298,
          "block": "<div className=\"bg-muted/30 p-3 rounded-md text-sm\">\n        <div className=\"font-medium\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 333,
          "block": "<div className=\"font-medium\">\n          {t(\"sales.totalSales\", \"Total Sales\")}:{\" \"}\n          {tota..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 299,
          "block": "<div className=\"font-medium\">\n          {t(\"sales.totalSales\", \"Total Sales\")}:{\" \"}\n          {tota..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 334,
          "block": "{t(\"sales.totalSales\", \"Total Sales\")}:{\" \"}\n          {totalSales.toFixed(2)} ֏\n        </div>\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 300,
          "block": "{t(\"sales.totalSales\", \"Total Sales\")}:{\" \"}\n          {totalSales.toFixed(2)} ֏\n        </div>\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 335,
          "block": "{totalSales.toFixed(2)} ֏\n        </div>\n      </div>\n\n      <FillingSystemSelect control={control} ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 301,
          "block": "{totalSales.toFixed(2)} ֏\n        </div>\n      </div>\n\n      <FillingSystemSelect control={control} ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 339,
          "block": "<FillingSystemSelect control={control} />\n\n      <FormField\n        control={control}\n        name=\"..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 323,
          "block": "<FillingSystemSelect control={control} />\n\n      <FormField\n        control={control}\n        name=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 341,
          "block": "<FormField\n        control={control}\n        name=\"comments\"\n        render={({ field }) => (\n      ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 325,
          "block": "<FormField\n        control={control}\n        name=\"comments\"\n        render={({ field }) => (\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 342,
          "block": "control={control}\n        name=\"comments\"\n        render={({ field }) => (\n          <FormItem>\n    ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 326,
          "block": "control={control}\n        name=\"comments\"\n        render={({ field }) => (\n          <FormItem>\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 343,
          "block": "name=\"comments\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>{t(\"com..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 327,
          "block": "name=\"comments\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>{t(\"com..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 344,
          "block": "render={({ field }) => (\n          <FormItem>\n            <FormLabel>{t(\"common.comments\", \"Comments..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 328,
          "block": "render={({ field }) => (\n          <FormItem>\n            <FormLabel>{t(\"common.comments\", \"Comments..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 310,
          "block": "render={({ field }) => (\n          <FormItem>\n            <FormLabel>{t(\"common.comments\", \"Comments..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 345,
          "block": "<FormItem>\n            <FormLabel>{t(\"common.comments\", \"Comments\")}</FormLabel>\n            <FormCo..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 329,
          "block": "<FormItem>\n            <FormLabel>{t(\"common.comments\", \"Comments\")}</FormLabel>\n            <FormCo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 311,
          "block": "<FormItem>\n            <FormLabel>{t(\"common.comments\", \"Comments\")}</FormLabel>\n            <FormCo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 346,
          "block": "<FormLabel>{t(\"common.comments\", \"Comments\")}</FormLabel>\n            <FormControl>\n              <I..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 330,
          "block": "<FormLabel>{t(\"common.comments\", \"Comments\")}</FormLabel>\n            <FormControl>\n              <I..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 312,
          "block": "<FormLabel>{t(\"common.comments\", \"Comments\")}</FormLabel>\n            <FormControl>\n              <I..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 347,
          "block": "<FormControl>\n              <Input\n                type=\"text\"\n                placeholder={t(\"commo..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 331,
          "block": "<FormControl>\n              <Input\n                type=\"text\"\n                placeholder={t(\"commo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 313,
          "block": "<FormControl>\n              <Input\n                type=\"text\"\n                placeholder={t(\"commo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 348,
          "block": "<Input\n                type=\"text\"\n                placeholder={t(\"common.comments\", \"Comments\")}\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 332,
          "block": "<Input\n                type=\"text\"\n                placeholder={t(\"common.comments\", \"Comments\")}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 314,
          "block": "<Input\n                type=\"text\"\n                placeholder={t(\"common.comments\", \"Comments\")}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 349,
          "block": "type=\"text\"\n                placeholder={t(\"common.comments\", \"Comments\")}\n                {...field..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 333,
          "block": "type=\"text\"\n                placeholder={t(\"common.comments\", \"Comments\")}\n                {...field..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 315,
          "block": "type=\"text\"\n                placeholder={t(\"common.comments\", \"Comments\")}\n                {...field..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 350,
          "block": "placeholder={t(\"common.comments\", \"Comments\")}\n                {...field}\n                value={fie..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 334,
          "block": "placeholder={t(\"common.comments\", \"Comments\")}\n                {...field}\n                value={fie..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 316,
          "block": "placeholder={t(\"common.comments\", \"Comments\")}\n                {...field}\n                value={fie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 351,
          "block": "{...field}\n                value={field.value || \"\"}\n              />\n            </FormControl>\n   ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 335,
          "block": "{...field}\n                value={field.value || \"\"}\n              />\n            </FormControl>\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 317,
          "block": "{...field}\n                value={field.value || \"\"}\n              />\n            </FormControl>\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesDialogsStandardized.tsx",
          "startLine": 352,
          "block": "value={field.value || \"\"}\n              />\n            </FormControl>\n            <FormMessage />\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 336,
          "block": "value={field.value || \"\"}\n              />\n            </FormControl>\n            <FormMessage />\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 318,
          "block": "value={field.value || \"\"}\n              />\n            </FormControl>\n            <FormMessage />\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 1,
          "block": "import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { X } from \"lucid..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 1,
          "block": "import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { X } from \"lucid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { X } from \"lucide-react\";\nimport { Button } ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { X } from \"lucide-react\";\nimport { Button } ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 3,
          "block": "import { X } from \"lucide-react\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { Sal..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 3,
          "block": "import { X } from \"lucide-react\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 4,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { SalesFilters } from \"./SalesFilters\";..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 4,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { SalesFilters } from \"./SalesFilters\";..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 5,
          "block": "import { SalesFilters } from \"./SalesFilters\";\nimport { SalesRangesFilters } from \"./SalesRangesFilt..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 5,
          "block": "import { SalesFilters } from \"./SalesFilters\";\nimport { SalesRangesFilters } from \"./SalesRangesFilt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 6,
          "block": "import { SalesRangesFilters } from \"./SalesRangesFilters\";\nimport { useSalesFilters } from \"../hooks..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 6,
          "block": "import { SalesRangesFilters } from \"./SalesRangesFilters\";\nimport { useSalesFilters } from \"../hooks..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 7,
          "block": "import { useSalesFilters } from \"../hooks/useSalesFilters\";\nimport { SalesFilters as SalesFiltersTyp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 7,
          "block": "import { useSalesFilters } from \"../hooks/useSalesFilters\";\nimport { SalesFilters as SalesFiltersTyp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 8,
          "block": "import { SalesFilters as SalesFiltersType } from \"../types\";\n\ninterface SalesFilterPanelProps {\n  on..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 8,
          "block": "import { SalesFilters as SalesFiltersType } from \"../types\";\n\ninterface SalesFilterPanelProps {\n  on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 9,
          "block": "interface SalesFilterPanelProps {\n  onClose?: () => void;\n  onFiltersChange?: (filters: SalesFilters..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 10,
          "block": "interface SalesFilterPanelProps {\n  onClose?: () => void;\n  onFiltersChange?: (filters: SalesFilters..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 9,
          "block": "interface SalesFilterPanelProps {\n  onClose?: () => void;\n  onFiltersChange?: (filters: SalesFilters..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 10,
          "block": "interface SalesFilterPanelProps {\n  onClose?: () => void;\n  onFiltersChange?: (filters: SalesFilters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 11,
          "block": "onClose?: () => void;\n  onFiltersChange?: (filters: SalesFiltersType) => void;\n}\n\nexport const Sales..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 11,
          "block": "onClose?: () => void;\n  onFiltersChange?: (filters: SalesFiltersType) => void;\n}\n\nexport const Sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 12,
          "block": "onFiltersChange?: (filters: SalesFiltersType) => void;\n}\n\nexport const SalesFilterPanel: FC<SalesFil..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 12,
          "block": "onFiltersChange?: (filters: SalesFiltersType) => void;\n}\n\nexport const SalesFilterPanel: FC<SalesFil..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 15,
          "block": "export const SalesFilterPanel: FC<SalesFilterPanelProps> = ({\n  onClose,\n  onFiltersChange,\n}) => {\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 15,
          "block": "export const SalesFilterPanel: FC<SalesFilterPanelProps> = ({\n  onClose,\n  onFiltersChange,\n}) => {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 16,
          "block": "onClose,\n  onFiltersChange,\n}) => {\n  const { t } = useTranslation();\n  const { filters, updateFilte..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 16,
          "block": "onClose,\n  onFiltersChange,\n}) => {\n  const { t } = useTranslation();\n  const { filters, updateFilte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 17,
          "block": "onFiltersChange,\n}) => {\n  const { t } = useTranslation();\n  const { filters, updateFilters, resetFi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 17,
          "block": "onFiltersChange,\n}) => {\n  const { t } = useTranslation();\n  const { filters, updateFilters, resetFi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 18,
          "block": "}) => {\n  const { t } = useTranslation();\n  const { filters, updateFilters, resetFilters, filterOpti..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 18,
          "block": "}) => {\n  const { t } = useTranslation();\n  const { filters, updateFilters, resetFilters, filterOpti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 19,
          "block": "const { t } = useTranslation();\n  const { filters, updateFilters, resetFilters, filterOptions } =\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 19,
          "block": "const { t } = useTranslation();\n  const { filters, updateFilters, resetFilters, filterOptions } =\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 20,
          "block": "const { filters, updateFilters, resetFilters, filterOptions } =\n    useSalesFilters();\n\n  // Pass fi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 20,
          "block": "const { filters, updateFilters, resetFilters, filterOptions } =\n    useSalesFilters();\n\n  // Pass fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 21,
          "block": "useSalesFilters();\n\n  // Pass filter changes to parent if provided\n  const handleFiltersChange = (ne..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 21,
          "block": "useSalesFilters();\n\n  // Pass filter changes to parent if provided\n  const handleFiltersChange = (ne..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 22,
          "block": "// Pass filter changes to parent if provided\n  const handleFiltersChange = (newFilters: Partial<Sale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 22,
          "block": "// Pass filter changes to parent if provided\n  const handleFiltersChange = (newFilters: Partial<Sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 23,
          "block": "// Pass filter changes to parent if provided\n  const handleFiltersChange = (newFilters: Partial<Sale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 23,
          "block": "// Pass filter changes to parent if provided\n  const handleFiltersChange = (newFilters: Partial<Sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 24,
          "block": "const handleFiltersChange = (newFilters: Partial<SalesFiltersType>) => {\n    updateFilters(newFilter..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 24,
          "block": "const handleFiltersChange = (newFilters: Partial<SalesFiltersType>) => {\n    updateFilters(newFilter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 29,
          "block": "};\n\n  return (\n    <div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 29,
          "block": "};\n\n  return (\n    <div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 30,
          "block": "return (\n    <div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-betwee..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 30,
          "block": "return (\n    <div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-betwee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 31,
          "block": "return (\n    <div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-betwee..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 31,
          "block": "return (\n    <div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-betwee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 32,
          "block": "<div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-between\">\n        <..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 32,
          "block": "<div className=\"space-y-6 py-2\">\n      <div className=\"flex items-center justify-between\">\n        <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 33,
          "block": "<div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium\">\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 33,
          "block": "<div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium\">\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 34,
          "block": "<h3 className=\"text-lg font-medium\">\n          {t(\"sales.filters.title\", \"Filters\")}\n        </h3>\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 34,
          "block": "<h3 className=\"text-lg font-medium\">\n          {t(\"sales.filters.title\", \"Filters\")}\n        </h3>\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 35,
          "block": "{t(\"sales.filters.title\", \"Filters\")}\n        </h3>\n        {onClose && (\n          <Button variant=..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 35,
          "block": "{t(\"sales.filters.title\", \"Filters\")}\n        </h3>\n        {onClose && (\n          <Button variant=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 36,
          "block": "</h3>\n        {onClose && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 36,
          "block": "</h3>\n        {onClose && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 37,
          "block": "{onClose && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X classNam..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 37,
          "block": "{onClose && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 38,
          "block": "<Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"h-4 w-4\" />\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 38,
          "block": "<Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"h-4 w-4\" />\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 39,
          "block": "<X className=\"h-4 w-4\" />\n            <span className=\"sr-only\">{t(\"common.close\")}</span>\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 39,
          "block": "<X className=\"h-4 w-4\" />\n            <span className=\"sr-only\">{t(\"common.close\")}</span>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 43,
          "block": "</div>\n\n      <div className=\"space-y-6\">\n        <SalesFilters\n          search={filters.searchTerm..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 43,
          "block": "</div>\n\n      <div className=\"space-y-6\">\n        <SalesFilters\n          search={filters.searchTerm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 44,
          "block": "<div className=\"space-y-6\">\n        <SalesFilters\n          search={filters.searchTerm || \"\"}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 44,
          "block": "<div className=\"space-y-6\">\n        <SalesFilters\n          search={filters.searchTerm || \"\"}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 45,
          "block": "<div className=\"space-y-6\">\n        <SalesFilters\n          search={filters.searchTerm || \"\"}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 45,
          "block": "<div className=\"space-y-6\">\n        <SalesFilters\n          search={filters.searchTerm || \"\"}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 46,
          "block": "<SalesFilters\n          search={filters.searchTerm || \"\"}\n          onSearchChange={(value: string) ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 46,
          "block": "<SalesFilters\n          search={filters.searchTerm || \"\"}\n          onSearchChange={(value: string) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 47,
          "block": "search={filters.searchTerm || \"\"}\n          onSearchChange={(value: string) =>\n            handleFil..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 47,
          "block": "search={filters.searchTerm || \"\"}\n          onSearchChange={(value: string) =>\n            handleFil..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 48,
          "block": "onSearchChange={(value: string) =>\n            handleFiltersChange({ searchTerm: value })\n          ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 48,
          "block": "onSearchChange={(value: string) =>\n            handleFiltersChange({ searchTerm: value })\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 49,
          "block": "handleFiltersChange({ searchTerm: value })\n          }\n          date={filters.dateRange?.from}\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 49,
          "block": "handleFiltersChange({ searchTerm: value })\n          }\n          date={filters.dateRange?.from}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 50,
          "block": "}\n          date={filters.dateRange?.from}\n          onDateChange={(date: Date | undefined) =>\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 50,
          "block": "}\n          date={filters.dateRange?.from}\n          onDateChange={(date: Date | undefined) =>\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 51,
          "block": "date={filters.dateRange?.from}\n          onDateChange={(date: Date | undefined) =>\n            handl..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 51,
          "block": "date={filters.dateRange?.from}\n          onDateChange={(date: Date | undefined) =>\n            handl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 52,
          "block": "onDateChange={(date: Date | undefined) =>\n            handleFiltersChange({\n              dateRange:..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 52,
          "block": "onDateChange={(date: Date | undefined) =>\n            handleFiltersChange({\n              dateRange:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 53,
          "block": "handleFiltersChange({\n              dateRange: date ? { from: date } : undefined,\n            })\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 53,
          "block": "handleFiltersChange({\n              dateRange: date ? { from: date } : undefined,\n            })\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 54,
          "block": "dateRange: date ? { from: date } : undefined,\n            })\n          }\n          systemId={filters..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 54,
          "block": "dateRange: date ? { from: date } : undefined,\n            })\n          }\n          systemId={filters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 55,
          "block": "})\n          }\n          systemId={filters.fillingSystem || \"all\"}\n          onSystemChange={(id: st..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 55,
          "block": "})\n          }\n          systemId={filters.fillingSystem || \"all\"}\n          onSystemChange={(id: st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 56,
          "block": "}\n          systemId={filters.fillingSystem || \"all\"}\n          onSystemChange={(id: string) =>\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 56,
          "block": "}\n          systemId={filters.fillingSystem || \"all\"}\n          onSystemChange={(id: string) =>\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 57,
          "block": "systemId={filters.fillingSystem || \"all\"}\n          onSystemChange={(id: string) =>\n            hand..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 57,
          "block": "systemId={filters.fillingSystem || \"all\"}\n          onSystemChange={(id: string) =>\n            hand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 58,
          "block": "onSystemChange={(id: string) =>\n            handleFiltersChange({ fillingSystem: id })\n          }\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 58,
          "block": "onSystemChange={(id: string) =>\n            handleFiltersChange({ fillingSystem: id })\n          }\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 59,
          "block": "handleFiltersChange({ fillingSystem: id })\n          }\n          systems={[{ id: \"all\", name: t(\"com..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 59,
          "block": "handleFiltersChange({ fillingSystem: id })\n          }\n          systems={[{ id: \"all\", name: t(\"com..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 60,
          "block": "}\n          systems={[{ id: \"all\", name: t(\"common.all\") }]} // This should be populated with actual..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 60,
          "block": "}\n          systems={[{ id: \"all\", name: t(\"common.all\") }]} // This should be populated with actual..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 61,
          "block": "systems={[{ id: \"all\", name: t(\"common.all\") }]} // This should be populated with actual systems\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 61,
          "block": "systems={[{ id: \"all\", name: t(\"common.all\") }]} // This should be populated with actual systems\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 62,
          "block": "/>\n\n        <SalesRangesFilters\n          litersRange={[filters.minQuantity || 0, filters.maxQuantit..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 62,
          "block": "/>\n\n        <SalesRangesFilters\n          litersRange={[filters.minQuantity || 0, filters.maxQuantit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 63,
          "block": "<SalesRangesFilters\n          litersRange={[filters.minQuantity || 0, filters.maxQuantity || 0]}\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 63,
          "block": "<SalesRangesFilters\n          litersRange={[filters.minQuantity || 0, filters.maxQuantity || 0]}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 64,
          "block": "<SalesRangesFilters\n          litersRange={[filters.minQuantity || 0, filters.maxQuantity || 0]}\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 64,
          "block": "<SalesRangesFilters\n          litersRange={[filters.minQuantity || 0, filters.maxQuantity || 0]}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 65,
          "block": "litersRange={[filters.minQuantity || 0, filters.maxQuantity || 0]}\n          onLitersRangeChange={([..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 65,
          "block": "litersRange={[filters.minQuantity || 0, filters.maxQuantity || 0]}\n          onLitersRangeChange={([..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 66,
          "block": "onLitersRangeChange={([min, max]) =>\n            handleFiltersChange({\n              minQuantity: mi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 66,
          "block": "onLitersRangeChange={([min, max]) =>\n            handleFiltersChange({\n              minQuantity: mi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 67,
          "block": "handleFiltersChange({\n              minQuantity: min || undefined,\n              maxQuantity: max ||..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 67,
          "block": "handleFiltersChange({\n              minQuantity: min || undefined,\n              maxQuantity: max ||..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 68,
          "block": "minQuantity: min || undefined,\n              maxQuantity: max || undefined,\n            })\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 68,
          "block": "minQuantity: min || undefined,\n              maxQuantity: max || undefined,\n            })\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 69,
          "block": "maxQuantity: max || undefined,\n            })\n          }\n          priceRange={[filters.minAmount |..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 69,
          "block": "maxQuantity: max || undefined,\n            })\n          }\n          priceRange={[filters.minAmount |..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 70,
          "block": "})\n          }\n          priceRange={[filters.minAmount || 0, filters.maxAmount || 0]}\n          onP..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 70,
          "block": "})\n          }\n          priceRange={[filters.minAmount || 0, filters.maxAmount || 0]}\n          onP..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 71,
          "block": "}\n          priceRange={[filters.minAmount || 0, filters.maxAmount || 0]}\n          onPriceRangeChan..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 71,
          "block": "}\n          priceRange={[filters.minAmount || 0, filters.maxAmount || 0]}\n          onPriceRangeChan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 72,
          "block": "priceRange={[filters.minAmount || 0, filters.maxAmount || 0]}\n          onPriceRangeChange={([min, m..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 72,
          "block": "priceRange={[filters.minAmount || 0, filters.maxAmount || 0]}\n          onPriceRangeChange={([min, m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 73,
          "block": "onPriceRangeChange={([min, max]) =>\n            handleFiltersChange({\n              minAmount: min |..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 73,
          "block": "onPriceRangeChange={([min, max]) =>\n            handleFiltersChange({\n              minAmount: min |..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 74,
          "block": "handleFiltersChange({\n              minAmount: min || undefined,\n              maxAmount: max || und..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 74,
          "block": "handleFiltersChange({\n              minAmount: min || undefined,\n              maxAmount: max || und..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 79,
          "block": "/>\n\n        <div className=\"flex justify-end pt-2\">\n          <Button variant=\"outline\" size=\"sm\" on..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 81,
          "block": "/>\n\n        <div className=\"flex justify-end pt-2\">\n          <Button variant=\"outline\" size=\"sm\" on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 80,
          "block": "<div className=\"flex justify-end pt-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={reset..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 82,
          "block": "<div className=\"flex justify-end pt-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={reset..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 81,
          "block": "<div className=\"flex justify-end pt-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={reset..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 83,
          "block": "<div className=\"flex justify-end pt-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={reset..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilterPanel.tsx",
          "startLine": 82,
          "block": "<Button variant=\"outline\" size=\"sm\" onClick={resetFilters}>\n            {t(\"common.reset\", \"Reset\")}..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilterPanel.tsx",
          "startLine": 84,
          "block": "<Button variant=\"outline\" size=\"sm\" onClick={resetFilters}>\n            {t(\"common.reset\", \"Reset\")}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { SalesSearchBar } from \"./SalesSearchBar\";\nimport { SalesDatePick..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { SalesSearchBar } from \"./SalesSearchBar\";\nimport { SalesDatePick..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 2,
          "block": "import { SalesSearchBar } from \"./SalesSearchBar\";\nimport { SalesDatePicker } from \"./SalesDatePicke..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 2,
          "block": "import { SalesSearchBar } from \"./SalesSearchBar\";\nimport { SalesDatePicker } from \"./SalesDatePicke..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 3,
          "block": "import { SalesDatePicker } from \"./SalesDatePicker\";\nimport { SalesSystemSelect } from \"./SalesSyste..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 3,
          "block": "import { SalesDatePicker } from \"./SalesDatePicker\";\nimport { SalesSystemSelect } from \"./SalesSyste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 4,
          "block": "import { SalesSystemSelect } from \"./SalesSystemSelect\";\n\ninterface SalesFiltersProps {\n  search: st..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 4,
          "block": "import { SalesSystemSelect } from \"./SalesSystemSelect\";\n\ninterface SalesFiltersProps {\n  search: st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 5,
          "block": "interface SalesFiltersProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 5,
          "block": "interface SalesFiltersProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 6,
          "block": "interface SalesFiltersProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 6,
          "block": "interface SalesFiltersProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 7,
          "block": "search: string;\n  onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 7,
          "block": "search: string;\n  onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 7,
          "block": "search: string;\n  onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 7,
          "block": "search: string;\n  onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 8,
          "block": "onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange: (date: Date | un..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 8,
          "block": "onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange: (date: Date | un..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 8,
          "block": "onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange: (date: Date | un..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 8,
          "block": "onSearchChange: (search: string) => void;\n  date: Date | undefined;\n  onDateChange: (date: Date | un..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 9,
          "block": "date: Date | undefined;\n  onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSy..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 9,
          "block": "date: Date | undefined;\n  onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSy..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 9,
          "block": "date: Date | undefined;\n  onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSy..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 9,
          "block": "date: Date | undefined;\n  onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 10,
          "block": "onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSystemChange: (id: string) =..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 10,
          "block": "onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSystemChange: (id: string) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 11,
          "block": "systemId: string;\n  onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 11,
          "block": "systemId: string;\n  onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 12,
          "block": "onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];\n}\n\nexport function ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 12,
          "block": "onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];\n}\n\nexport function ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 22,
          "block": "onSystemChange,\n  systems,\n}: SalesFiltersProps) {\n  return (\n    <section className=\"bg-gray-50/80 ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 22,
          "block": "onSystemChange,\n  systems,\n}: SalesFiltersProps) {\n  return (\n    <section className=\"bg-gray-50/80 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 23,
          "block": "systems,\n}: SalesFiltersProps) {\n  return (\n    <section className=\"bg-gray-50/80 rounded-xl border ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 23,
          "block": "systems,\n}: SalesFiltersProps) {\n  return (\n    <section className=\"bg-gray-50/80 rounded-xl border ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 24,
          "block": "}: SalesFiltersProps) {\n  return (\n    <section className=\"bg-gray-50/80 rounded-xl border border-bo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 24,
          "block": "}: SalesFiltersProps) {\n  return (\n    <section className=\"bg-gray-50/80 rounded-xl border border-bo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 25,
          "block": "return (\n    <section className=\"bg-gray-50/80 rounded-xl border border-border shadow-sm p-4 mb-3\">\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 25,
          "block": "return (\n    <section className=\"bg-gray-50/80 rounded-xl border border-border shadow-sm p-4 mb-3\">\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 26,
          "block": "<section className=\"bg-gray-50/80 rounded-xl border border-border shadow-sm p-4 mb-3\">\n      <div cl..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 26,
          "block": "<section className=\"bg-gray-50/80 rounded-xl border border-border shadow-sm p-4 mb-3\">\n      <div cl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 27,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <div className=\"md:co..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 27,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <div className=\"md:co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 28,
          "block": "<div className=\"md:col-span-2 lg:col-span-2 flex flex-col justify-end\">\n          <SalesSearchBar va..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 28,
          "block": "<div className=\"md:col-span-2 lg:col-span-2 flex flex-col justify-end\">\n          <SalesSearchBar va..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 29,
          "block": "<SalesSearchBar value={search} onChange={onSearchChange} />\n        </div>\n        <div className=\"f..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 29,
          "block": "<SalesSearchBar value={search} onChange={onSearchChange} />\n        </div>\n        <div className=\"f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 30,
          "block": "</div>\n        <div className=\"flex flex-col justify-end\">\n          <SalesDatePicker date={date} on..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 30,
          "block": "</div>\n        <div className=\"flex flex-col justify-end\">\n          <SalesDatePicker date={date} on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 31,
          "block": "<div className=\"flex flex-col justify-end\">\n          <SalesDatePicker date={date} onDateChange={onD..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 31,
          "block": "<div className=\"flex flex-col justify-end\">\n          <SalesDatePicker date={date} onDateChange={onD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 32,
          "block": "<SalesDatePicker date={date} onDateChange={onDateChange} />\n        </div>\n        <div className=\"f..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 32,
          "block": "<SalesDatePicker date={date} onDateChange={onDateChange} />\n        </div>\n        <div className=\"f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 33,
          "block": "</div>\n        <div className=\"flex flex-col justify-end\">\n          <SalesSystemSelect\n            ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 33,
          "block": "</div>\n        <div className=\"flex flex-col justify-end\">\n          <SalesSystemSelect\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 34,
          "block": "<div className=\"flex flex-col justify-end\">\n          <SalesSystemSelect\n            value={systemId..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 34,
          "block": "<div className=\"flex flex-col justify-end\">\n          <SalesSystemSelect\n            value={systemId..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 35,
          "block": "<SalesSystemSelect\n            value={systemId}\n            onChange={onSystemChange}\n            sy..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 35,
          "block": "<SalesSystemSelect\n            value={systemId}\n            onChange={onSystemChange}\n            sy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFilters.tsx",
          "startLine": 36,
          "block": "value={systemId}\n            onChange={onSystemChange}\n            systems={systems}\n          />\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFilters.tsx",
          "startLine": 36,
          "block": "value={systemId}\n            onChange={onSystemChange}\n            systems={systems}\n          />\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 1,
          "block": "import { Button } from \"@/core/components/ui/primitives/button\";\nimport {\n  FormControl,\n  FormField..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/primitives/button\";\nimport {\n  FormControl,\n  FormField..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 56,
          "block": "}\n\ninterface SalesFormStandardizedProps {\n  sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 63,
          "block": "}\n\ninterface SalesFormStandardizedProps {\n  sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 57,
          "block": "interface SalesFormStandardizedProps {\n  sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) => ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 64,
          "block": "interface SalesFormStandardizedProps {\n  sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 58,
          "block": "interface SalesFormStandardizedProps {\n  sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) => ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 65,
          "block": "interface SalesFormStandardizedProps {\n  sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 59,
          "block": "sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) => Promise<boolean>;\n  employees?: Employee[..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 66,
          "block": "sale?: SaleFormModel;\n  onSubmit: (data: SalesFormData) => Promise<boolean>;\n  employees?: Employee[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 60,
          "block": "onSubmit: (data: SalesFormData) => Promise<boolean>;\n  employees?: Employee[];\n}\n\nexport function Sa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 67,
          "block": "onSubmit: (data: SalesFormData) => Promise<boolean>;\n  employees?: Employee[];\n}\n\nexport function Sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 64,
          "block": "export function SalesFormStandardized({\n  sale,\n  onSubmit,\n  employees,\n}: SalesFormStandardizedPro..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 71,
          "block": "export function SalesFormStandardized({\n  sale,\n  onSubmit,\n  employees,\n}: SalesFormStandardizedPro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 66,
          "block": "onSubmit,\n  employees,\n}: SalesFormStandardizedProps) {\n  const { t } = useTranslation();\n  const [t..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 73,
          "block": "onSubmit,\n  employees,\n}: SalesFormStandardizedProps) {\n  const { t } = useTranslation();\n  const [t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 67,
          "block": "employees,\n}: SalesFormStandardizedProps) {\n  const { t } = useTranslation();\n  const [totalSales, s..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 74,
          "block": "employees,\n}: SalesFormStandardizedProps) {\n  const { t } = useTranslation();\n  const [totalSales, s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 68,
          "block": "}: SalesFormStandardizedProps) {\n  const { t } = useTranslation();\n  const [totalSales, setTotalSale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 75,
          "block": "}: SalesFormStandardizedProps) {\n  const { t } = useTranslation();\n  const [totalSales, setTotalSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 160,
          "block": "const success = await onSubmit(submissionData);\n\n    if (success) {\n      sonnerToast.success(\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 108,
          "block": "const success = await onSubmit(submissionData);\n\n    if (success) {\n      sonnerToast.success(\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 161,
          "block": "if (success) {\n      sonnerToast.success(\n        sale\n          ? t(\"sales.updated\", \"Sale updated...."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 109,
          "block": "if (success) {\n      sonnerToast.success(\n        sale\n          ? t(\"sales.updated\", \"Sale updated...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 162,
          "block": "if (success) {\n      sonnerToast.success(\n        sale\n          ? t(\"sales.updated\", \"Sale updated...."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 110,
          "block": "if (success) {\n      sonnerToast.success(\n        sale\n          ? t(\"sales.updated\", \"Sale updated...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 163,
          "block": "sonnerToast.success(\n        sale\n          ? t(\"sales.updated\", \"Sale updated.\")\n          : t(\"sal..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 111,
          "block": "sonnerToast.success(\n        sale\n          ? t(\"sales.updated\", \"Sale updated.\")\n          : t(\"sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 164,
          "block": "sale\n          ? t(\"sales.updated\", \"Sale updated.\")\n          : t(\"sales.created\", \"Sale created.\")..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 112,
          "block": "sale\n          ? t(\"sales.updated\", \"Sale updated.\")\n          : t(\"sales.created\", \"Sale created.\")..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 177,
          "block": "onSubmit={handleSubmit}\n      submitText={\n        sale ? t(\"common.update\", \"Update\") : t(\"common.c..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 125,
          "block": "onSubmit={handleSubmit}\n      submitText={\n        sale ? t(\"common.update\", \"Update\") : t(\"common.c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 178,
          "block": "submitText={\n        sale ? t(\"common.update\", \"Update\") : t(\"common.create\", \"Create\")\n      }\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 126,
          "block": "submitText={\n        sale ? t(\"common.update\", \"Update\") : t(\"common.create\", \"Create\")\n      }\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 179,
          "block": "sale ? t(\"common.update\", \"Update\") : t(\"common.create\", \"Create\")\n      }\n      className=\"space-y-..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 127,
          "block": "sale ? t(\"common.update\", \"Update\") : t(\"common.create\", \"Create\")\n      }\n      className=\"space-y-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 186,
          "block": "employees={employees} \n          totalSales={totalSales}\n          setTotalSales={setTotalSales}\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 135,
          "block": "employees={employees} \n          totalSales={totalSales}\n          setTotalSales={setTotalSales}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 187,
          "block": "totalSales={totalSales}\n          setTotalSales={setTotalSales}\n        />\n      )}\n    </StandardFo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 136,
          "block": "totalSales={totalSales}\n          setTotalSales={setTotalSales}\n        />\n      )}\n    </StandardFo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 196,
          "block": "interface SalesFormContentProps {\n  control: Control<SalesFormData>;\n  employees?: Employee[];\n  tot..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 213,
          "block": "interface SalesFormContentProps {\n  control: Control<SalesFormData>;\n  employees?: Employee[];\n  tot..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 197,
          "block": "control: Control<SalesFormData>;\n  employees?: Employee[];\n  totalSales: number;\n  setTotalSales: (v..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 214,
          "block": "control: Control<SalesFormData>;\n  employees?: Employee[];\n  totalSales: number;\n  setTotalSales: (v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 271,
          "block": ")}\n                  {...field}\n                  value={field.value || 0}\n                  onChang..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 297,
          "block": ")}\n                  {...field}\n                  value={field.value || 0}\n                  onChang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 272,
          "block": "{...field}\n                  value={field.value || 0}\n                  onChange={(e) =>\n           ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 298,
          "block": "{...field}\n                  value={field.value || 0}\n                  onChange={(e) =>\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 273,
          "block": "value={field.value || 0}\n                  onChange={(e) =>\n                    field.onChange(parse..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesFormStandardized.tsx",
          "startLine": 299,
          "block": "value={field.value || 0}\n                  onChange={(e) =>\n                    field.onChange(parse..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { SalesFilters } from \"./SalesFilters\";\nimport { SalesRangesFilter..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { SalesFilters } from \"./SalesFilters\";\nimport { SalesRangesFilter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 2,
          "block": "import { SalesFilters } from \"./SalesFilters\";\nimport { SalesRangesFilters } from \"./SalesRangesFilt..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 2,
          "block": "import { SalesFilters } from \"./SalesFilters\";\nimport { SalesRangesFilters } from \"./SalesRangesFilt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 3,
          "block": "import { SalesRangesFilters } from \"./SalesRangesFilters\";\nimport { NewSaleButton } from \"./NewSaleB..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 3,
          "block": "import { SalesRangesFilters } from \"./SalesRangesFilters\";\nimport { NewSaleButton } from \"./NewSaleB..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 4,
          "block": "import { NewSaleButton } from \"./NewSaleButton\";\n\ninterface SalesHeaderProps {\n  search: string;\n  o..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 4,
          "block": "import { NewSaleButton } from \"./NewSaleButton\";\n\ninterface SalesHeaderProps {\n  search: string;\n  o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 5,
          "block": "interface SalesHeaderProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: D..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 5,
          "block": "interface SalesHeaderProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: D..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 6,
          "block": "interface SalesHeaderProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: D..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 6,
          "block": "interface SalesHeaderProps {\n  search: string;\n  onSearchChange: (search: string) => void;\n  date: D..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 10,
          "block": "onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSystemChange: (id: string) =..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 10,
          "block": "onDateChange: (date: Date | undefined) => void;\n  systemId: string;\n  onSystemChange: (id: string) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 11,
          "block": "systemId: string;\n  onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 11,
          "block": "systemId: string;\n  onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 12,
          "block": "onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];\n  litersRange: [num..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 12,
          "block": "onSystemChange: (id: string) => void;\n  systems: { id: string; name: string }[];\n  litersRange: [num..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 13,
          "block": "systems: { id: string; name: string }[];\n  litersRange: [number, number];\n  onLitersRangeChange: (ra..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 13,
          "block": "systems: { id: string; name: string }[];\n  litersRange: [number, number];\n  onLitersRangeChange: (ra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 14,
          "block": "litersRange: [number, number];\n  onLitersRangeChange: (range: [number, number]) => void;\n  priceRang..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 4,
          "block": "litersRange: [number, number];\n  onLitersRangeChange: (range: [number, number]) => void;\n  priceRang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 15,
          "block": "onLitersRangeChange: (range: [number, number]) => void;\n  priceRange: [number, number];\n  onPriceRan..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 5,
          "block": "onLitersRangeChange: (range: [number, number]) => void;\n  priceRange: [number, number];\n  onPriceRan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 16,
          "block": "priceRange: [number, number];\n  onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesR..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 6,
          "block": "priceRange: [number, number];\n  onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesR..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 17,
          "block": "onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesRange?: [number, number];\n  onTot..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 7,
          "block": "onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesRange?: [number, number];\n  onTot..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 31,
          "block": "onLitersRangeChange,\n  priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChang..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 29,
          "block": "onLitersRangeChange,\n  priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChang..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 31,
          "block": "onLitersRangeChange,\n  priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChang..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 29,
          "block": "onLitersRangeChange,\n  priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 32,
          "block": "priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesHeaderProps)..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 32,
          "block": "priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesHeaderProps)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 34,
          "block": "totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesHeaderProps) {\n  return (\n    <div className=\"fl..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 34,
          "block": "totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesHeaderProps) {\n  return (\n    <div className=\"fl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 35,
          "block": "onTotalSalesRangeChange,\n}: SalesHeaderProps) {\n  return (\n    <div className=\"flex flex-col space-y..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 35,
          "block": "onTotalSalesRangeChange,\n}: SalesHeaderProps) {\n  return (\n    <div className=\"flex flex-col space-y..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 36,
          "block": "}: SalesHeaderProps) {\n  return (\n    <div className=\"flex flex-col space-y-6 bg-gray-50\">\n      <di..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 36,
          "block": "}: SalesHeaderProps) {\n  return (\n    <div className=\"flex flex-col space-y-6 bg-gray-50\">\n      <di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 37,
          "block": "return (\n    <div className=\"flex flex-col space-y-6 bg-gray-50\">\n      <div className=\"flex flex-wr..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 37,
          "block": "return (\n    <div className=\"flex flex-col space-y-6 bg-gray-50\">\n      <div className=\"flex flex-wr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 38,
          "block": "<div className=\"flex flex-col space-y-6 bg-gray-50\">\n      <div className=\"flex flex-wrap justify-be..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 38,
          "block": "<div className=\"flex flex-col space-y-6 bg-gray-50\">\n      <div className=\"flex flex-wrap justify-be..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 39,
          "block": "<div className=\"flex flex-wrap justify-between items-center gap-4 mb-2\">\n        <div className=\"hid..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 39,
          "block": "<div className=\"flex flex-wrap justify-between items-center gap-4 mb-2\">\n        <div className=\"hid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 40,
          "block": "<div className=\"hidden\">\n          {/* Prevent duplication with card header */}\n          <h2 classN..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 40,
          "block": "<div className=\"hidden\">\n          {/* Prevent duplication with card header */}\n          <h2 classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 41,
          "block": "{/* Prevent duplication with card header */}\n          <h2 className=\"text-2xl font-semibold trackin..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 41,
          "block": "{/* Prevent duplication with card header */}\n          <h2 className=\"text-2xl font-semibold trackin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 42,
          "block": "<h2 className=\"text-2xl font-semibold tracking-tight text-foreground\">\n            Sales\n          <..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 42,
          "block": "<h2 className=\"text-2xl font-semibold tracking-tight text-foreground\">\n            Sales\n          <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 43,
          "block": "Sales\n          </h2>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            Manag..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 43,
          "block": "Sales\n          </h2>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            Manag..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 44,
          "block": "</h2>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            Manage and track fuel..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 44,
          "block": "</h2>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            Manage and track fuel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 45,
          "block": "<p className=\"text-sm text-muted-foreground mt-1\">\n            Manage and track fuel sales records\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 45,
          "block": "<p className=\"text-sm text-muted-foreground mt-1\">\n            Manage and track fuel sales records\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 46,
          "block": "Manage and track fuel sales records\n          </p>\n        </div>\n        <div className=\"ml-auto\">\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 46,
          "block": "Manage and track fuel sales records\n          </p>\n        </div>\n        <div className=\"ml-auto\">\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 49,
          "block": "<div className=\"ml-auto\">\n          <NewSaleButton />\n        </div>\n      </div>\n      <SalesFilter..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 49,
          "block": "<div className=\"ml-auto\">\n          <NewSaleButton />\n        </div>\n      </div>\n      <SalesFilter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 51,
          "block": "</div>\n      </div>\n      <SalesFilters\n        search={search}\n        onSearchChange={onSearchChan..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 51,
          "block": "</div>\n      </div>\n      <SalesFilters\n        search={search}\n        onSearchChange={onSearchChan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 52,
          "block": "</div>\n      <SalesFilters\n        search={search}\n        onSearchChange={onSearchChange}\n        d..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 52,
          "block": "</div>\n      <SalesFilters\n        search={search}\n        onSearchChange={onSearchChange}\n        d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 53,
          "block": "<SalesFilters\n        search={search}\n        onSearchChange={onSearchChange}\n        date={date}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 53,
          "block": "<SalesFilters\n        search={search}\n        onSearchChange={onSearchChange}\n        date={date}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 54,
          "block": "search={search}\n        onSearchChange={onSearchChange}\n        date={date}\n        onDateChange={on..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 54,
          "block": "search={search}\n        onSearchChange={onSearchChange}\n        date={date}\n        onDateChange={on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 55,
          "block": "onSearchChange={onSearchChange}\n        date={date}\n        onDateChange={onDateChange}\n        syst..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 55,
          "block": "onSearchChange={onSearchChange}\n        date={date}\n        onDateChange={onDateChange}\n        syst..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 56,
          "block": "date={date}\n        onDateChange={onDateChange}\n        systemId={systemId}\n        onSystemChange={..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 56,
          "block": "date={date}\n        onDateChange={onDateChange}\n        systemId={systemId}\n        onSystemChange={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 57,
          "block": "onDateChange={onDateChange}\n        systemId={systemId}\n        onSystemChange={onSystemChange}\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 57,
          "block": "onDateChange={onDateChange}\n        systemId={systemId}\n        onSystemChange={onSystemChange}\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 58,
          "block": "systemId={systemId}\n        onSystemChange={onSystemChange}\n        systems={systems}\n      />\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 58,
          "block": "systemId={systemId}\n        onSystemChange={onSystemChange}\n        systems={systems}\n      />\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 59,
          "block": "onSystemChange={onSystemChange}\n        systems={systems}\n      />\n      <SalesRangesFilters\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 59,
          "block": "onSystemChange={onSystemChange}\n        systems={systems}\n      />\n      <SalesRangesFilters\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 60,
          "block": "systems={systems}\n      />\n      <SalesRangesFilters\n        litersRange={litersRange}\n        onLit..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 60,
          "block": "systems={systems}\n      />\n      <SalesRangesFilters\n        litersRange={litersRange}\n        onLit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 61,
          "block": "/>\n      <SalesRangesFilters\n        litersRange={litersRange}\n        onLitersRangeChange={onLiters..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 61,
          "block": "/>\n      <SalesRangesFilters\n        litersRange={litersRange}\n        onLitersRangeChange={onLiters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesHeader.tsx",
          "startLine": 62,
          "block": "<SalesRangesFilters\n        litersRange={litersRange}\n        onLitersRangeChange={onLitersRangeChan..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 62,
          "block": "<SalesRangesFilters\n        litersRange={litersRange}\n        onLitersRangeChange={onLitersRangeChan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 1,
          "block": "import React, { useCallback } from \"react\";\nimport { Button } from \"@/core/components/ui/primitives/..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 1,
          "block": "import React, { useCallback } from \"react\";\nimport { Button } from \"@/core/components/ui/primitives/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/primitives/button\";\nimport { Plus, Trash } from \"lucide..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 2,
          "block": "import { Button } from \"@/core/components/ui/primitives/button\";\nimport { Plus, Trash } from \"lucide..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 3,
          "block": "import { Plus, Trash } from \"lucide-react\";\nimport { useSalesDialog } from \"../hooks/useSalesDialog\"..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 3,
          "block": "import { Plus, Trash } from \"lucide-react\";\nimport { useSalesDialog } from \"../hooks/useSalesDialog\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 4,
          "block": "import { useSalesDialog } from \"../hooks/useSalesDialog\";\nimport type { Sale, CreateSaleRequest } fr..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 4,
          "block": "import { useSalesDialog } from \"../hooks/useSalesDialog\";\nimport type { Sale, CreateSaleRequest } fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 5,
          "block": "import type { Sale, CreateSaleRequest } from \"../types\";\nimport {\n  AlertDialog,\n  AlertDialogAction..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 5,
          "block": "import type { Sale, CreateSaleRequest } from \"../types\";\nimport {\n  AlertDialog,\n  AlertDialogAction..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 7,
          "block": "AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescriptio..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 29,
          "block": "AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescriptio..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 7,
          "block": "AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescriptio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 8,
          "block": "AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialo..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 30,
          "block": "AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 8,
          "block": "AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 9,
          "block": "AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialo..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 31,
          "block": "AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 9,
          "block": "AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 10,
          "block": "AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialo..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 32,
          "block": "AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 10,
          "block": "AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 11,
          "block": "AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/core..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 11,
          "block": "AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/core..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 12,
          "block": "AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/core/components/ui/primitives/..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 12,
          "block": "AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/core/components/ui/primitives/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 13,
          "block": "AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/core/components/ui/primitives/alert-dialog\";\n\ninter..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 13,
          "block": "AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/core/components/ui/primitives/alert-dialog\";\n\ninter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 14,
          "block": "AlertDialogTitle,\n} from \"@/core/components/ui/primitives/alert-dialog\";\n\ninterface SalesManagerProp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 14,
          "block": "AlertDialogTitle,\n} from \"@/core/components/ui/primitives/alert-dialog\";\n\ninterface SalesManagerProp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 15,
          "block": "} from \"@/core/components/ui/primitives/alert-dialog\";\n\ninterface SalesManagerProps {\n  /**\n   * Cal..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 15,
          "block": "} from \"@/core/components/ui/primitives/alert-dialog\";\n\ninterface SalesManagerProps {\n  /**\n   * Cal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 17,
          "block": "interface SalesManagerProps {\n  /**\n   * Callback when a sale is created\n   */\n  onSaleCreated?: (sa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 17,
          "block": "interface SalesManagerProps {\n  /**\n   * Callback when a sale is created\n   */\n  onSaleCreated?: (sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 26,
          "block": "onSaleUpdated?: (sale: Sale) => void;\n\n  /**\n   * Callback when a sale is deleted\n   * @param id The..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 26,
          "block": "onSaleUpdated?: (sale: Sale) => void;\n\n  /**\n   * Callback when a sale is deleted\n   * @param id The..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 27,
          "block": "/**\n   * Callback when a sale is deleted\n   * @param id The ID of the deleted sale\n   * @param sale ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 27,
          "block": "/**\n   * Callback when a sale is deleted\n   * @param id The ID of the deleted sale\n   * @param sale ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 28,
          "block": "/**\n   * Callback when a sale is deleted\n   * @param id The ID of the deleted sale\n   * @param sale ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 28,
          "block": "/**\n   * Callback when a sale is deleted\n   * @param id The ID of the deleted sale\n   * @param sale ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 29,
          "block": "* Callback when a sale is deleted\n   * @param id The ID of the deleted sale\n   * @param sale The del..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 29,
          "block": "* Callback when a sale is deleted\n   * @param id The ID of the deleted sale\n   * @param sale The del..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 30,
          "block": "* @param id The ID of the deleted sale\n   * @param sale The deleted sale entity (optional)\n   */\n  o..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 30,
          "block": "* @param id The ID of the deleted sale\n   * @param sale The deleted sale entity (optional)\n   */\n  o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 31,
          "block": "* @param sale The deleted sale entity (optional)\n   */\n  onSaleDeleted?: (id: string | number, sale?..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 31,
          "block": "* @param sale The deleted sale entity (optional)\n   */\n  onSaleDeleted?: (id: string | number, sale?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 33,
          "block": "onSaleDeleted?: (id: string | number, sale?: Sale) => void;\n}\n\n/**\n * Sales management component tha..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 33,
          "block": "onSaleDeleted?: (id: string | number, sale?: Sale) => void;\n}\n\n/**\n * Sales management component tha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 35,
          "block": "/**\n * Sales management component that demonstrates using the refactored hooks\n *\n * This component ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 35,
          "block": "/**\n * Sales management component that demonstrates using the refactored hooks\n *\n * This component ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 36,
          "block": "/**\n * Sales management component that demonstrates using the refactored hooks\n *\n * This component ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 36,
          "block": "/**\n * Sales management component that demonstrates using the refactored hooks\n *\n * This component ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 37,
          "block": "* Sales management component that demonstrates using the refactored hooks\n *\n * This component shows..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 37,
          "block": "* Sales management component that demonstrates using the refactored hooks\n *\n * This component shows..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 38,
          "block": "*\n * This component shows how to use the new hooks architecture to manage sales operations\n * with s..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 38,
          "block": "*\n * This component shows how to use the new hooks architecture to manage sales operations\n * with s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 39,
          "block": "* This component shows how to use the new hooks architecture to manage sales operations\n * with sign..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 39,
          "block": "* This component shows how to use the new hooks architecture to manage sales operations\n * with sign..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 40,
          "block": "* with significantly less boilerplate code.\n */\nexport function SalesManager({\n  onSaleCreated,\n  on..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 40,
          "block": "* with significantly less boilerplate code.\n */\nexport function SalesManager({\n  onSaleCreated,\n  on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 42,
          "block": "export function SalesManager({\n  onSaleCreated,\n  onSaleUpdated,\n  onSaleDeleted,\n}: SalesManagerPro..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 42,
          "block": "export function SalesManager({\n  onSaleCreated,\n  onSaleUpdated,\n  onSaleDeleted,\n}: SalesManagerPro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 43,
          "block": "onSaleCreated,\n  onSaleUpdated,\n  onSaleDeleted,\n}: SalesManagerProps) {\n  // Use our refactored hoo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 43,
          "block": "onSaleCreated,\n  onSaleUpdated,\n  onSaleDeleted,\n}: SalesManagerProps) {\n  // Use our refactored hoo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 44,
          "block": "onSaleUpdated,\n  onSaleDeleted,\n}: SalesManagerProps) {\n  // Use our refactored hook with much less ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 44,
          "block": "onSaleUpdated,\n  onSaleDeleted,\n}: SalesManagerProps) {\n  // Use our refactored hook with much less ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 45,
          "block": "onSaleDeleted,\n}: SalesManagerProps) {\n  // Use our refactored hook with much less boilerplate\n  con..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 45,
          "block": "onSaleDeleted,\n}: SalesManagerProps) {\n  // Use our refactored hook with much less boilerplate\n  con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 46,
          "block": "}: SalesManagerProps) {\n  // Use our refactored hook with much less boilerplate\n  const salesDialog ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 46,
          "block": "}: SalesManagerProps) {\n  // Use our refactored hook with much less boilerplate\n  const salesDialog ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 47,
          "block": "// Use our refactored hook with much less boilerplate\n  const salesDialog = useSalesDialog({\n    onC..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 47,
          "block": "// Use our refactored hook with much less boilerplate\n  const salesDialog = useSalesDialog({\n    onC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 48,
          "block": "const salesDialog = useSalesDialog({\n    onCreateSuccess: onSaleCreated,\n    onUpdateSuccess: onSale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 48,
          "block": "const salesDialog = useSalesDialog({\n    onCreateSuccess: onSaleCreated,\n    onUpdateSuccess: onSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 49,
          "block": "onCreateSuccess: onSaleCreated,\n    onUpdateSuccess: onSaleUpdated,\n    onDeleteSuccess: onSaleDelet..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 49,
          "block": "onCreateSuccess: onSaleCreated,\n    onUpdateSuccess: onSaleUpdated,\n    onDeleteSuccess: onSaleDelet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 50,
          "block": "onUpdateSuccess: onSaleUpdated,\n    onDeleteSuccess: onSaleDeleted,\n  });\n\n  // Handler for form sub..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 50,
          "block": "onUpdateSuccess: onSaleUpdated,\n    onDeleteSuccess: onSaleDeleted,\n  });\n\n  // Handler for form sub..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 51,
          "block": "onDeleteSuccess: onSaleDeleted,\n  });\n\n  // Handler for form submission - much simpler with our new ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 51,
          "block": "onDeleteSuccess: onSaleDeleted,\n  });\n\n  // Handler for form submission - much simpler with our new ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 52,
          "block": "});\n\n  // Handler for form submission - much simpler with our new hook\n  const handleSubmit = useCal..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 52,
          "block": "});\n\n  // Handler for form submission - much simpler with our new hook\n  const handleSubmit = useCal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 53,
          "block": "// Handler for form submission - much simpler with our new hook\n  const handleSubmit = useCallback(\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 53,
          "block": "// Handler for form submission - much simpler with our new hook\n  const handleSubmit = useCallback(\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 54,
          "block": "// Handler for form submission - much simpler with our new hook\n  const handleSubmit = useCallback(\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 54,
          "block": "// Handler for form submission - much simpler with our new hook\n  const handleSubmit = useCallback(\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 55,
          "block": "const handleSubmit = useCallback(\n    async (data: CreateSaleRequest) => {\n      try {\n        await..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 55,
          "block": "const handleSubmit = useCallback(\n    async (data: CreateSaleRequest) => {\n      try {\n        await..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 56,
          "block": "async (data: CreateSaleRequest) => {\n      try {\n        await salesDialog.handleSubmit(data);\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 56,
          "block": "async (data: CreateSaleRequest) => {\n      try {\n        await salesDialog.handleSubmit(data);\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 57,
          "block": "try {\n        await salesDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 57,
          "block": "try {\n        await salesDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 58,
          "block": "await salesDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n        console.e..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 58,
          "block": "await salesDialog.handleSubmit(data);\n        return true;\n      } catch (error) {\n        console.e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 59,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting sale form:\", error);\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 59,
          "block": "return true;\n      } catch (error) {\n        console.error(\"Error submitting sale form:\", error);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 60,
          "block": "} catch (error) {\n        console.error(\"Error submitting sale form:\", error);\n        return false;..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 60,
          "block": "} catch (error) {\n        console.error(\"Error submitting sale form:\", error);\n        return false;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 61,
          "block": "console.error(\"Error submitting sale form:\", error);\n        return false;\n      }\n    },\n    [sales..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 61,
          "block": "console.error(\"Error submitting sale form:\", error);\n        return false;\n      }\n    },\n    [sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 67,
          "block": "return (\n    <div className=\"space-y-4\">\n      {/* Add sale button */}\n      <div className=\"flex ju..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 67,
          "block": "return (\n    <div className=\"space-y-4\">\n      {/* Add sale button */}\n      <div className=\"flex ju..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 68,
          "block": "return (\n    <div className=\"space-y-4\">\n      {/* Add sale button */}\n      <div className=\"flex ju..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 68,
          "block": "return (\n    <div className=\"space-y-4\">\n      {/* Add sale button */}\n      <div className=\"flex ju..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 69,
          "block": "<div className=\"space-y-4\">\n      {/* Add sale button */}\n      <div className=\"flex justify-between..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 69,
          "block": "<div className=\"space-y-4\">\n      {/* Add sale button */}\n      <div className=\"flex justify-between..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 70,
          "block": "{/* Add sale button */}\n      <div className=\"flex justify-between items-center\">\n        <h2 classN..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 70,
          "block": "{/* Add sale button */}\n      <div className=\"flex justify-between items-center\">\n        <h2 classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 71,
          "block": "<div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">Sales..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 71,
          "block": "<div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">Sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 72,
          "block": "<h2 className=\"text-2xl font-bold\">Sales</h2>\n        <Button onClick={salesDialog.openCreateDialog}..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 72,
          "block": "<h2 className=\"text-2xl font-bold\">Sales</h2>\n        <Button onClick={salesDialog.openCreateDialog}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 73,
          "block": "<Button onClick={salesDialog.openCreateDialog} className=\"mb-4\">\n          <Plus className=\"mr-2 h-4..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 73,
          "block": "<Button onClick={salesDialog.openCreateDialog} className=\"mb-4\">\n          <Plus className=\"mr-2 h-4..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 75,
          "block": "Add Sale\n        </Button>\n      </div>\n\n      {/* SalesForm dialog would go here - for demonstratio..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 75,
          "block": "Add Sale\n        </Button>\n      </div>\n\n      {/* SalesForm dialog would go here - for demonstratio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 76,
          "block": "</Button>\n      </div>\n\n      {/* SalesForm dialog would go here - for demonstration purposes */}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 76,
          "block": "</Button>\n      </div>\n\n      {/* SalesForm dialog would go here - for demonstration purposes */}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 77,
          "block": "</div>\n\n      {/* SalesForm dialog would go here - for demonstration purposes */}\n      {/* \n      <..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 77,
          "block": "</div>\n\n      {/* SalesForm dialog would go here - for demonstration purposes */}\n      {/* \n      <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 78,
          "block": "{/* SalesForm dialog would go here - for demonstration purposes */}\n      {/* \n      <SalesFormDialo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 78,
          "block": "{/* SalesForm dialog would go here - for demonstration purposes */}\n      {/* \n      <SalesFormDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 79,
          "block": "{/* SalesForm dialog would go here - for demonstration purposes */}\n      {/* \n      <SalesFormDialo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 79,
          "block": "{/* SalesForm dialog would go here - for demonstration purposes */}\n      {/* \n      <SalesFormDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 80,
          "block": "{/* \n      <SalesFormDialog\n        open={salesDialog.isEditDialogOpen}\n        onOpenChange={salesD..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 80,
          "block": "{/* \n      <SalesFormDialog\n        open={salesDialog.isEditDialogOpen}\n        onOpenChange={salesD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 81,
          "block": "<SalesFormDialog\n        open={salesDialog.isEditDialogOpen}\n        onOpenChange={salesDialog.handl..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 81,
          "block": "<SalesFormDialog\n        open={salesDialog.isEditDialogOpen}\n        onOpenChange={salesDialog.handl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 82,
          "block": "open={salesDialog.isEditDialogOpen}\n        onOpenChange={salesDialog.handleEditDialogOpenChange}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 82,
          "block": "open={salesDialog.isEditDialogOpen}\n        onOpenChange={salesDialog.handleEditDialogOpenChange}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 83,
          "block": "onOpenChange={salesDialog.handleEditDialogOpenChange}\n        sale={salesDialog.selectedSale}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 83,
          "block": "onOpenChange={salesDialog.handleEditDialogOpenChange}\n        sale={salesDialog.selectedSale}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 84,
          "block": "sale={salesDialog.selectedSale}\n        onSubmit={handleSubmit}\n        isSubmitting={salesDialog.is..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 84,
          "block": "sale={salesDialog.selectedSale}\n        onSubmit={handleSubmit}\n        isSubmitting={salesDialog.is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 88,
          "block": "*/}\n\n      {/* Delete confirmation dialog */}\n      <AlertDialog\n        open={salesDialog.isDeleteD..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 88,
          "block": "*/}\n\n      {/* Delete confirmation dialog */}\n      <AlertDialog\n        open={salesDialog.isDeleteD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 94,
          "block": ">\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirm D..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 94,
          "block": ">\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirm D..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 95,
          "block": "<AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirm Deletion</A..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 95,
          "block": "<AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirm Deletion</A..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 96,
          "block": "<AlertDialogHeader>\n            <AlertDialogTitle>Confirm Deletion</AlertDialogTitle>\n            <A..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 96,
          "block": "<AlertDialogHeader>\n            <AlertDialogTitle>Confirm Deletion</AlertDialogTitle>\n            <A..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 97,
          "block": "<AlertDialogTitle>Confirm Deletion</AlertDialogTitle>\n            <AlertDialogDescription>\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 97,
          "block": "<AlertDialogTitle>Confirm Deletion</AlertDialogTitle>\n            <AlertDialogDescription>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 98,
          "block": "<AlertDialogDescription>\n              Are you sure you want to delete this sale? This action cannot..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 98,
          "block": "<AlertDialogDescription>\n              Are you sure you want to delete this sale? This action cannot..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 99,
          "block": "Are you sure you want to delete this sale? This action cannot be\n              undone.\n            <..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 99,
          "block": "Are you sure you want to delete this sale? This action cannot be\n              undone.\n            <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 100,
          "block": "undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogF..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 100,
          "block": "undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 101,
          "block": "</AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 101,
          "block": "</AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 102,
          "block": "</AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 102,
          "block": "</AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 103,
          "block": "<AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDial..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 103,
          "block": "<AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDial..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 104,
          "block": "<AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 104,
          "block": "<AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 105,
          "block": "<AlertDialogAction\n              onClick={salesDialog.handleDelete}\n              className=\"bg-dest..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 105,
          "block": "<AlertDialogAction\n              onClick={salesDialog.handleDelete}\n              className=\"bg-dest..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 106,
          "block": "onClick={salesDialog.handleDelete}\n              className=\"bg-destructive text-destructive-foregrou..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 106,
          "block": "onClick={salesDialog.handleDelete}\n              className=\"bg-destructive text-destructive-foregrou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 107,
          "block": "className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n            >\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 107,
          "block": "className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n            >\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 108,
          "block": ">\n              {salesDialog.isSubmitting ? \"Deleting...\" : \"Delete\"}\n            </AlertDialogActio..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 108,
          "block": ">\n              {salesDialog.isSubmitting ? \"Deleting...\" : \"Delete\"}\n            </AlertDialogActio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 109,
          "block": "{salesDialog.isSubmitting ? \"Deleting...\" : \"Delete\"}\n            </AlertDialogAction>\n          </A..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 109,
          "block": "{salesDialog.isSubmitting ? \"Deleting...\" : \"Delete\"}\n            </AlertDialogAction>\n          </A..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesManager.tsx",
          "startLine": 110,
          "block": "</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialo..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\PetrolProviders.tsx",
          "startLine": 221,
          "block": "</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesManager.tsx",
          "startLine": 110,
          "block": "</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\n\ninterface SalesRangesFiltersProps {\n  litersRange: [number, number];\n  o..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\n\ninterface SalesRangesFiltersProps {\n  litersRange: [number, number];\n  o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 2,
          "block": "interface SalesRangesFiltersProps {\n  litersRange: [number, number];\n  onLitersRangeChange: (range: ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 2,
          "block": "interface SalesRangesFiltersProps {\n  litersRange: [number, number];\n  onLitersRangeChange: (range: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 3,
          "block": "interface SalesRangesFiltersProps {\n  litersRange: [number, number];\n  onLitersRangeChange: (range: ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 3,
          "block": "interface SalesRangesFiltersProps {\n  litersRange: [number, number];\n  onLitersRangeChange: (range: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 10,
          "block": "}\n\n// Helper to format number or empty for zero\nconst fieldValue = (v: number) => (v === 0 ? \"\" : v)..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 10,
          "block": "}\n\n// Helper to format number or empty for zero\nconst fieldValue = (v: number) => (v === 0 ? \"\" : v)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 11,
          "block": "// Helper to format number or empty for zero\nconst fieldValue = (v: number) => (v === 0 ? \"\" : v);\n\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 11,
          "block": "// Helper to format number or empty for zero\nconst fieldValue = (v: number) => (v === 0 ? \"\" : v);\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 12,
          "block": "// Helper to format number or empty for zero\nconst fieldValue = (v: number) => (v === 0 ? \"\" : v);\n\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 12,
          "block": "// Helper to format number or empty for zero\nconst fieldValue = (v: number) => (v === 0 ? \"\" : v);\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 13,
          "block": "const fieldValue = (v: number) => (v === 0 ? \"\" : v);\n\nconst handleRangeChange = (\n  idx: number,\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 13,
          "block": "const fieldValue = (v: number) => (v === 0 ? \"\" : v);\n\nconst handleRangeChange = (\n  idx: number,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 15,
          "block": "const handleRangeChange = (\n  idx: number,\n  value: string,\n  range: [number, number],\n  setRange: (..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 15,
          "block": "const handleRangeChange = (\n  idx: number,\n  value: string,\n  range: [number, number],\n  setRange: (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 16,
          "block": "idx: number,\n  value: string,\n  range: [number, number],\n  setRange: (r: [number, number]) => void\n)..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 16,
          "block": "idx: number,\n  value: string,\n  range: [number, number],\n  setRange: (r: [number, number]) => void\n)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 17,
          "block": "value: string,\n  range: [number, number],\n  setRange: (r: [number, number]) => void\n) => {\n  const n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 17,
          "block": "value: string,\n  range: [number, number],\n  setRange: (r: [number, number]) => void\n) => {\n  const n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 18,
          "block": "range: [number, number],\n  setRange: (r: [number, number]) => void\n) => {\n  const newVal = value ===..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 18,
          "block": "range: [number, number],\n  setRange: (r: [number, number]) => void\n) => {\n  const newVal = value ===..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 19,
          "block": "setRange: (r: [number, number]) => void\n) => {\n  const newVal = value === \"\" ? 0 : Number(value);\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 19,
          "block": "setRange: (r: [number, number]) => void\n) => {\n  const newVal = value === \"\" ? 0 : Number(value);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 20,
          "block": ") => {\n  const newVal = value === \"\" ? 0 : Number(value);\n  const updated: [number, number] = [...ra..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 20,
          "block": ") => {\n  const newVal = value === \"\" ? 0 : Number(value);\n  const updated: [number, number] = [...ra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 21,
          "block": "const newVal = value === \"\" ? 0 : Number(value);\n  const updated: [number, number] = [...range] as [..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 21,
          "block": "const newVal = value === \"\" ? 0 : Number(value);\n  const updated: [number, number] = [...range] as [..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 22,
          "block": "const updated: [number, number] = [...range] as [number, number];\n  updated[idx] = newVal;\n  setRang..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 22,
          "block": "const updated: [number, number] = [...range] as [number, number];\n  updated[idx] = newVal;\n  setRang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 27,
          "block": "export function SalesRangesFilters({\n  litersRange,\n  onLitersRangeChange,\n  priceRange,\n  onPriceRa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 27,
          "block": "export function SalesRangesFilters({\n  litersRange,\n  onLitersRangeChange,\n  priceRange,\n  onPriceRa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 30,
          "block": "priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesRangesFilter..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 30,
          "block": "priceRange,\n  onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesRangesFilter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 31,
          "block": "onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesRangesFiltersProps) {\n  //..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 31,
          "block": "onPriceRangeChange,\n  totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesRangesFiltersProps) {\n  //..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 32,
          "block": "totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesRangesFiltersProps) {\n  // Styling:\n  // - Card ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 32,
          "block": "totalSalesRange,\n  onTotalSalesRangeChange,\n}: SalesRangesFiltersProps) {\n  // Styling:\n  // - Card ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 33,
          "block": "onTotalSalesRangeChange,\n}: SalesRangesFiltersProps) {\n  // Styling:\n  // - Card with dark glass eff..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 33,
          "block": "onTotalSalesRangeChange,\n}: SalesRangesFiltersProps) {\n  // Styling:\n  // - Card with dark glass eff..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 34,
          "block": "}: SalesRangesFiltersProps) {\n  // Styling:\n  // - Card with dark glass effect, strong border\n  // -..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 34,
          "block": "}: SalesRangesFiltersProps) {\n  // Styling:\n  // - Card with dark glass effect, strong border\n  // -..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 35,
          "block": "// Styling:\n  // - Card with dark glass effect, strong border\n  // - Uniform label and input layout\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 35,
          "block": "// Styling:\n  // - Card with dark glass effect, strong border\n  // - Uniform label and input layout\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 36,
          "block": "// - Card with dark glass effect, strong border\n  // - Uniform label and input layout\n  // - Min/Max..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 36,
          "block": "// - Card with dark glass effect, strong border\n  // - Uniform label and input layout\n  // - Min/Max..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 37,
          "block": "// - Uniform label and input layout\n  // - Min/Max inside a flex-row that aligns inputs and separate..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 37,
          "block": "// - Uniform label and input layout\n  // - Min/Max inside a flex-row that aligns inputs and separate..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 45,
          "block": "aria-label=\"Sales Range Filters\"\n    >\n      {/* Liters Range */}\n      <div className=\"flex flex-co..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 45,
          "block": "aria-label=\"Sales Range Filters\"\n    >\n      {/* Liters Range */}\n      <div className=\"flex flex-co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 46,
          "block": ">\n      {/* Liters Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label className=\"t..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 46,
          "block": ">\n      {/* Liters Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label className=\"t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 47,
          "block": "{/* Liters Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label className=\"text-xs f..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 47,
          "block": "{/* Liters Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label className=\"text-xs f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 48,
          "block": "<div className=\"flex flex-col gap-3\">\n        <label className=\"text-xs font-semibold text-muted-for..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 48,
          "block": "<div className=\"flex flex-col gap-3\">\n        <label className=\"text-xs font-semibold text-muted-for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 49,
          "block": "<label className=\"text-xs font-semibold text-muted-foreground tracking-wide mb-1\">\n          Liters ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 49,
          "block": "<label className=\"text-xs font-semibold text-muted-foreground tracking-wide mb-1\">\n          Liters ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 50,
          "block": "Liters Range\n        </label>\n        <div className=\"flex gap-2 items-center\">\n          <input\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 50,
          "block": "Liters Range\n        </label>\n        <div className=\"flex gap-2 items-center\">\n          <input\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 51,
          "block": "</label>\n        <div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 94,
          "block": "</label>\n        <div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 51,
          "block": "</label>\n        <div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 94,
          "block": "</label>\n        <div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 137,
          "block": "</label>\n        <div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 52,
          "block": "<div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number\"\n            inp..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 95,
          "block": "<div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number\"\n            inp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 52,
          "block": "<div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number\"\n            inp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 95,
          "block": "<div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number\"\n            inp..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 138,
          "block": "<div className=\"flex gap-2 items-center\">\n          <input\n            type=\"number\"\n            inp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 53,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n     ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 96,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 53,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 96,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 139,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 54,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 54,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 55,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 55,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 56,
          "block": "placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 56,
          "block": "placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 57,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 57,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 58,
          "block": "value={fieldValue(litersRange[0])}\n            min={0}\n            onChange={(e) =>\n              ha..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 58,
          "block": "value={fieldValue(litersRange[0])}\n            min={0}\n            onChange={(e) =>\n              ha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 59,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                0,\n           ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 102,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                0,\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 59,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                0,\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 102,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                0,\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 145,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                0,\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 60,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                0,\n                e.target.value,..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 60,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                0,\n                e.target.value,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 61,
          "block": "handleRangeChange(\n                0,\n                e.target.value,\n                litersRange,\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 61,
          "block": "handleRangeChange(\n                0,\n                e.target.value,\n                litersRange,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 62,
          "block": "0,\n                e.target.value,\n                litersRange,\n                onLitersRangeChange\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 62,
          "block": "0,\n                e.target.value,\n                litersRange,\n                onLitersRangeChange\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 63,
          "block": "e.target.value,\n                litersRange,\n                onLitersRangeChange\n              )\n   ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 82,
          "block": "e.target.value,\n                litersRange,\n                onLitersRangeChange\n              )\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 63,
          "block": "e.target.value,\n                litersRange,\n                onLitersRangeChange\n              )\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 82,
          "block": "e.target.value,\n                litersRange,\n                onLitersRangeChange\n              )\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 65,
          "block": "onLitersRangeChange\n              )\n            }\n          />\n          <span className=\"text-lg te..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 65,
          "block": "onLitersRangeChange\n              )\n            }\n          />\n          <span className=\"text-lg te..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 66,
          "block": ")\n            }\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 109,
          "block": ")\n            }\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 66,
          "block": ")\n            }\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 109,
          "block": ")\n            }\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 152,
          "block": ")\n            }\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 67,
          "block": "}\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n         ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 110,
          "block": "}\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 67,
          "block": "}\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 110,
          "block": "}\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 153,
          "block": "}\n          />\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 68,
          "block": "/>\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n       ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 111,
          "block": "/>\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 68,
          "block": "/>\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 111,
          "block": "/>\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 154,
          "block": "/>\n          <span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 69,
          "block": "<span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n          </span>\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 112,
          "block": "<span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n          </span>\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 69,
          "block": "<span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n          </span>\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 112,
          "block": "<span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n          </span>\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 155,
          "block": "<span className=\"text-lg text-muted-foreground font-medium mx-1\">\n            –\n          </span>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 71,
          "block": "</span>\n          <input\n            type=\"number\"\n            inputMode=\"numeric\"\n            place..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 114,
          "block": "</span>\n          <input\n            type=\"number\"\n            inputMode=\"numeric\"\n            place..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 71,
          "block": "</span>\n          <input\n            type=\"number\"\n            inputMode=\"numeric\"\n            place..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 114,
          "block": "</span>\n          <input\n            type=\"number\"\n            inputMode=\"numeric\"\n            place..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 157,
          "block": "</span>\n          <input\n            type=\"number\"\n            inputMode=\"numeric\"\n            place..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 72,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n     ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 115,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 72,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 115,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 158,
          "block": "<input\n            type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 73,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 73,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 74,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 74,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 75,
          "block": "placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 75,
          "block": "placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 76,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 76,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 77,
          "block": "value={fieldValue(litersRange[1])}\n            min={0}\n            onChange={(e) =>\n              ha..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 77,
          "block": "value={fieldValue(litersRange[1])}\n            min={0}\n            onChange={(e) =>\n              ha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 78,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                1,\n           ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 121,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                1,\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 78,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                1,\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 121,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                1,\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 164,
          "block": "min={0}\n            onChange={(e) =>\n              handleRangeChange(\n                1,\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 79,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                1,\n                e.target.value,..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 79,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                1,\n                e.target.value,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 80,
          "block": "handleRangeChange(\n                1,\n                e.target.value,\n                litersRange,\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 80,
          "block": "handleRangeChange(\n                1,\n                e.target.value,\n                litersRange,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 81,
          "block": "1,\n                e.target.value,\n                litersRange,\n                onLitersRangeChange\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 81,
          "block": "1,\n                e.target.value,\n                litersRange,\n                onLitersRangeChange\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 87,
          "block": "/>\n        </div>\n      </div>\n      {/* Price/Unit Range */}\n      <div className=\"flex flex-col ga..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 87,
          "block": "/>\n        </div>\n      </div>\n      {/* Price/Unit Range */}\n      <div className=\"flex flex-col ga..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 88,
          "block": "</div>\n      </div>\n      {/* Price/Unit Range */}\n      <div className=\"flex flex-col gap-3\">\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 88,
          "block": "</div>\n      </div>\n      {/* Price/Unit Range */}\n      <div className=\"flex flex-col gap-3\">\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 89,
          "block": "</div>\n      {/* Price/Unit Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label cla..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 89,
          "block": "</div>\n      {/* Price/Unit Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 90,
          "block": "{/* Price/Unit Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label className=\"text-..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 90,
          "block": "{/* Price/Unit Range */}\n      <div className=\"flex flex-col gap-3\">\n        <label className=\"text-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 91,
          "block": "<div className=\"flex flex-col gap-3\">\n        <label className=\"text-xs font-semibold text-muted-for..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 91,
          "block": "<div className=\"flex flex-col gap-3\">\n        <label className=\"text-xs font-semibold text-muted-for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 92,
          "block": "<label className=\"text-xs font-semibold text-muted-foreground tracking-wide mb-1\">\n          Price/U..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 92,
          "block": "<label className=\"text-xs font-semibold text-muted-foreground tracking-wide mb-1\">\n          Price/U..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 93,
          "block": "Price/Unit Range <span className=\"text-muted-foreground\">(֏)</span>\n        </label>\n        <div cl..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 93,
          "block": "Price/Unit Range <span className=\"text-muted-foreground\">(֏)</span>\n        </label>\n        <div cl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 97,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 97,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 98,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 98,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 99,
          "block": "placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 99,
          "block": "placeholder=\"Min\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 100,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 100,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 101,
          "block": "value={fieldValue(priceRange[0])}\n            min={0}\n            onChange={(e) =>\n              han..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 101,
          "block": "value={fieldValue(priceRange[0])}\n            min={0}\n            onChange={(e) =>\n              han..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 103,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                0,\n                e.target.value,..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 103,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                0,\n                e.target.value,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 104,
          "block": "handleRangeChange(\n                0,\n                e.target.value,\n                priceRange,\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 104,
          "block": "handleRangeChange(\n                0,\n                e.target.value,\n                priceRange,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 105,
          "block": "0,\n                e.target.value,\n                priceRange,\n                onPriceRangeChange\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 105,
          "block": "0,\n                e.target.value,\n                priceRange,\n                onPriceRangeChange\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 106,
          "block": "e.target.value,\n                priceRange,\n                onPriceRangeChange\n              )\n     ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 125,
          "block": "e.target.value,\n                priceRange,\n                onPriceRangeChange\n              )\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 106,
          "block": "e.target.value,\n                priceRange,\n                onPriceRangeChange\n              )\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 125,
          "block": "e.target.value,\n                priceRange,\n                onPriceRangeChange\n              )\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 108,
          "block": "onPriceRangeChange\n              )\n            }\n          />\n          <span className=\"text-lg tex..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 108,
          "block": "onPriceRangeChange\n              )\n            }\n          />\n          <span className=\"text-lg tex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 116,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 116,
          "block": "type=\"number\"\n            inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 117,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 117,
          "block": "inputMode=\"numeric\"\n            placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 118,
          "block": "placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 118,
          "block": "placeholder=\"Max\"\n            className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border bord..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 119,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 119,
          "block": "className=\"w-full md:w-24 flex-1 h-11 px-3 py-2 rounded-lg border border-input bg-gray-50 text-base ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 120,
          "block": "value={fieldValue(priceRange[1])}\n            min={0}\n            onChange={(e) =>\n              han..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 120,
          "block": "value={fieldValue(priceRange[1])}\n            min={0}\n            onChange={(e) =>\n              han..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 122,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                1,\n                e.target.value,..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 122,
          "block": "onChange={(e) =>\n              handleRangeChange(\n                1,\n                e.target.value,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 123,
          "block": "handleRangeChange(\n                1,\n                e.target.value,\n                priceRange,\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 123,
          "block": "handleRangeChange(\n                1,\n                e.target.value,\n                priceRange,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 124,
          "block": "1,\n                e.target.value,\n                priceRange,\n                onPriceRangeChange\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 124,
          "block": "1,\n                e.target.value,\n                priceRange,\n                onPriceRangeChange\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 150,
          "block": "e.target.value,\n                  totalSalesRange,\n                  onTotalSalesRangeChange\n       ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 169,
          "block": "e.target.value,\n                  totalSalesRange,\n                  onTotalSalesRangeChange\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 151,
          "block": "totalSalesRange,\n                  onTotalSalesRangeChange\n                )\n              }\n       ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesRangesFilters.tsx",
          "startLine": 170,
          "block": "totalSalesRange,\n                  onTotalSalesRangeChange\n                )\n              }\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 1,
          "block": "import { SearchBar } from \"@/core/components/ui/SearchBar\";\nimport React from \"react\";\n\ninterface Sa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 1,
          "block": "import { SearchBar } from \"@/core/components/ui/SearchBar\";\nimport React from \"react\";\n\ninterface Sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 2,
          "block": "import React from \"react\";\n\ninterface SalesSearchBarProps {\n  value: string;\n  onChange: (v: string)..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 2,
          "block": "import React from \"react\";\n\ninterface SalesSearchBarProps {\n  value: string;\n  onChange: (v: string)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 5,
          "block": "value: string;\n  onChange: (v: string) => void;\n}\n\nexport function SalesSearchBar({ value, onChange ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 5,
          "block": "value: string;\n  onChange: (v: string) => void;\n}\n\nexport function SalesSearchBar({ value, onChange ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 6,
          "block": "onChange: (v: string) => void;\n}\n\nexport function SalesSearchBar({ value, onChange }: SalesSearchBar..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 6,
          "block": "onChange: (v: string) => void;\n}\n\nexport function SalesSearchBar({ value, onChange }: SalesSearchBar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 7,
          "block": "}\n\nexport function SalesSearchBar({ value, onChange }: SalesSearchBarProps) {\n  return (\n    <Search..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 7,
          "block": "}\n\nexport function SalesSearchBar({ value, onChange }: SalesSearchBarProps) {\n  return (\n    <Search..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 8,
          "block": "export function SalesSearchBar({ value, onChange }: SalesSearchBarProps) {\n  return (\n    <SearchBar..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 8,
          "block": "export function SalesSearchBar({ value, onChange }: SalesSearchBarProps) {\n  return (\n    <SearchBar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 9,
          "block": "export function SalesSearchBar({ value, onChange }: SalesSearchBarProps) {\n  return (\n    <SearchBar..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 9,
          "block": "export function SalesSearchBar({ value, onChange }: SalesSearchBarProps) {\n  return (\n    <SearchBar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 10,
          "block": "return (\n    <SearchBar\n      value={value}\n      onChange={onChange}\n      placeholder=\"Search sale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 10,
          "block": "return (\n    <SearchBar\n      value={value}\n      onChange={onChange}\n      placeholder=\"Search sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 11,
          "block": "<SearchBar\n      value={value}\n      onChange={onChange}\n      placeholder=\"Search sales by system, ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 11,
          "block": "<SearchBar\n      value={value}\n      onChange={onChange}\n      placeholder=\"Search sales by system, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 12,
          "block": "value={value}\n      onChange={onChange}\n      placeholder=\"Search sales by system, fuel type, or dat..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 12,
          "block": "value={value}\n      onChange={onChange}\n      placeholder=\"Search sales by system, fuel type, or dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 13,
          "block": "onChange={onChange}\n      placeholder=\"Search sales by system, fuel type, or date...\"\n      classNam..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 13,
          "block": "onChange={onChange}\n      placeholder=\"Search sales by system, fuel type, or date...\"\n      classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSearchBar.tsx",
          "startLine": 14,
          "block": "placeholder=\"Search sales by system, fuel type, or date...\"\n      className=\"h-9 w-full\"\n    />\n  );..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSearchBar.tsx",
          "startLine": 14,
          "block": "placeholder=\"Search sales by system, fuel type, or date...\"\n      className=\"h-9 w-full\"\n    />\n  );..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 1,
          "block": "import * as React from \"react\";\nimport { FillingSystemSelect } from \"./FillingSystemSelect\";\n\ninterf..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 1,
          "block": "import * as React from \"react\";\nimport { FillingSystemSelect } from \"./FillingSystemSelect\";\n\ninterf..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 2,
          "block": "import { FillingSystemSelect } from \"./FillingSystemSelect\";\n\ninterface SalesSystemSelectProps {\n  v..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 2,
          "block": "import { FillingSystemSelect } from \"./FillingSystemSelect\";\n\ninterface SalesSystemSelectProps {\n  v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 3,
          "block": "interface SalesSystemSelectProps {\n  value: string;\n  onChange: (id: string) => void;\n  systems: { i..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 3,
          "block": "interface SalesSystemSelectProps {\n  value: string;\n  onChange: (id: string) => void;\n  systems: { i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 4,
          "block": "interface SalesSystemSelectProps {\n  value: string;\n  onChange: (id: string) => void;\n  systems: { i..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 4,
          "block": "interface SalesSystemSelectProps {\n  value: string;\n  onChange: (id: string) => void;\n  systems: { i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 6,
          "block": "onChange: (id: string) => void;\n  systems: { id: string; name: string }[];\n}\n\nexport function SalesS..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 6,
          "block": "onChange: (id: string) => void;\n  systems: { id: string; name: string }[];\n}\n\nexport function SalesS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 14,
          "block": "}: SalesSystemSelectProps) {\n  return (\n    <FillingSystemSelect\n      value={value}\n      onChange=..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 14,
          "block": "}: SalesSystemSelectProps) {\n  return (\n    <FillingSystemSelect\n      value={value}\n      onChange=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 15,
          "block": "return (\n    <FillingSystemSelect\n      value={value}\n      onChange={onChange}\n      systems={syste..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 15,
          "block": "return (\n    <FillingSystemSelect\n      value={value}\n      onChange={onChange}\n      systems={syste..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 16,
          "block": "<FillingSystemSelect\n      value={value}\n      onChange={onChange}\n      systems={systems}\n      pla..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 16,
          "block": "<FillingSystemSelect\n      value={value}\n      onChange={onChange}\n      systems={systems}\n      pla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 17,
          "block": "value={value}\n      onChange={onChange}\n      systems={systems}\n      placeholder=\"All systems\"\n    ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 17,
          "block": "value={value}\n      onChange={onChange}\n      systems={systems}\n      placeholder=\"All systems\"\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesSystemSelect.tsx",
          "startLine": 18,
          "block": "onChange={onChange}\n      systems={systems}\n      placeholder=\"All systems\"\n      className=\"w-full\"..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesSystemSelect.tsx",
          "startLine": 18,
          "block": "onChange={onChange}\n      systems={systems}\n      placeholder=\"All systems\"\n      className=\"w-full\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 1,
          "block": "import React, { useMemo, useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 1,
          "block": "import React, { useMemo, useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { format } from \"date-fns\";\nimport { FileText..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { format } from \"date-fns\";\nimport { FileText..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 3,
          "block": "import { format } from \"date-fns\";\nimport { FileText, Eye } from \"lucide-react\";\nimport {\n  Standard..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 3,
          "block": "import { format } from \"date-fns\";\nimport { FileText, Eye } from \"lucide-react\";\nimport {\n  Standard..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 4,
          "block": "import { FileText, Eye } from \"lucide-react\";\nimport {\n  StandardizedDataTable,\n  createBadgeCell,\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 4,
          "block": "import { FileText, Eye } from \"lucide-react\";\nimport {\n  StandardizedDataTable,\n  createBadgeCell,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 6,
          "block": "StandardizedDataTable,\n  createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n  createNumberCell..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 6,
          "block": "StandardizedDataTable,\n  createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n  createNumberCell..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 7,
          "block": "createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n  createNumberCell,\n} from \"@/shared/compon..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 7,
          "block": "createBadgeCell,\n  createDateCell,\n  createCurrencyCell,\n  createNumberCell,\n} from \"@/shared/compon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 8,
          "block": "createDateCell,\n  createCurrencyCell,\n  createNumberCell,\n} from \"@/shared/components/unified/Standa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 8,
          "block": "createDateCell,\n  createCurrencyCell,\n  createNumberCell,\n} from \"@/shared/components/unified/Standa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 9,
          "block": "createCurrencyCell,\n  createNumberCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 9,
          "block": "createCurrencyCell,\n  createNumberCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 10,
          "block": "createNumberCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { DropdownMenuI..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 10,
          "block": "createNumberCell,\n} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { DropdownMenuI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 11,
          "block": "} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { DropdownMenuItem } from \"@/core..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 11,
          "block": "} from \"@/shared/components/unified/StandardizedDataTable\";\nimport { DropdownMenuItem } from \"@/core..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 12,
          "block": "import { DropdownMenuItem } from \"@/core/components/ui/primitives/dropdown-menu\";\nimport { Sale } fr..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 12,
          "block": "import { DropdownMenuItem } from \"@/core/components/ui/primitives/dropdown-menu\";\nimport { Sale } fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 13,
          "block": "import { Sale } from \"../types\";\n\ninterface SalesTableStandardizedProps {\n  sales: Sale[];\n  isLoadi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 13,
          "block": "import { Sale } from \"../types\";\n\ninterface SalesTableStandardizedProps {\n  sales: Sale[];\n  isLoadi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 14,
          "block": "interface SalesTableStandardizedProps {\n  sales: Sale[];\n  isLoading: boolean;\n  onEdit?: (sale: Sal..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 14,
          "block": "interface SalesTableStandardizedProps {\n  sales: Sale[];\n  isLoading: boolean;\n  onEdit?: (sale: Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 15,
          "block": "interface SalesTableStandardizedProps {\n  sales: Sale[];\n  isLoading: boolean;\n  onEdit?: (sale: Sal..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 15,
          "block": "interface SalesTableStandardizedProps {\n  sales: Sale[];\n  isLoading: boolean;\n  onEdit?: (sale: Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 16,
          "block": "sales: Sale[];\n  isLoading: boolean;\n  onEdit?: (sale: Sale) => void;\n  onDelete?: (id: string) => v..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 16,
          "block": "sales: Sale[];\n  isLoading: boolean;\n  onEdit?: (sale: Sale) => void;\n  onDelete?: (id: string) => v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 17,
          "block": "isLoading: boolean;\n  onEdit?: (sale: Sale) => void;\n  onDelete?: (id: string) => void;\n  onView?: (..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 17,
          "block": "isLoading: boolean;\n  onEdit?: (sale: Sale) => void;\n  onDelete?: (id: string) => void;\n  onView?: (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 18,
          "block": "onEdit?: (sale: Sale) => void;\n  onDelete?: (id: string) => void;\n  onView?: (sale: Sale) => void;\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 18,
          "block": "onEdit?: (sale: Sale) => void;\n  onDelete?: (id: string) => void;\n  onView?: (sale: Sale) => void;\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 19,
          "block": "onDelete?: (id: string) => void;\n  onView?: (sale: Sale) => void;\n  onGenerateReceipt?: (sale: Sale)..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 19,
          "block": "onDelete?: (id: string) => void;\n  onView?: (sale: Sale) => void;\n  onGenerateReceipt?: (sale: Sale)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 20,
          "block": "onView?: (sale: Sale) => void;\n  onGenerateReceipt?: (sale: Sale) => void;\n}\n\nexport function SalesT..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 20,
          "block": "onView?: (sale: Sale) => void;\n  onGenerateReceipt?: (sale: Sale) => void;\n}\n\nexport function SalesT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 28,
          "block": "onDelete,\n  onView,\n  onGenerateReceipt,\n}: SalesTableStandardizedProps) {\n  const { t } = useTransl..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 28,
          "block": "onDelete,\n  onView,\n  onGenerateReceipt,\n}: SalesTableStandardizedProps) {\n  const { t } = useTransl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 29,
          "block": "onView,\n  onGenerateReceipt,\n}: SalesTableStandardizedProps) {\n  const { t } = useTranslation([\"sale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 29,
          "block": "onView,\n  onGenerateReceipt,\n}: SalesTableStandardizedProps) {\n  const { t } = useTranslation([\"sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 30,
          "block": "onGenerateReceipt,\n}: SalesTableStandardizedProps) {\n  const { t } = useTranslation([\"sales\", \"commo..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 30,
          "block": "onGenerateReceipt,\n}: SalesTableStandardizedProps) {\n  const { t } = useTranslation([\"sales\", \"commo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 31,
          "block": "}: SalesTableStandardizedProps) {\n  const { t } = useTranslation([\"sales\", \"common\"]);\n\n  // Custom ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 31,
          "block": "}: SalesTableStandardizedProps) {\n  const { t } = useTranslation([\"sales\", \"common\"]);\n\n  // Custom ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 32,
          "block": "const { t } = useTranslation([\"sales\", \"common\"]);\n\n  // Custom handler to map ID to full sale objec..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 32,
          "block": "const { t } = useTranslation([\"sales\", \"common\"]);\n\n  // Custom handler to map ID to full sale objec..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 33,
          "block": "// Custom handler to map ID to full sale object for edit/view\n  const handleEdit = (id: string) => {..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 33,
          "block": "// Custom handler to map ID to full sale object for edit/view\n  const handleEdit = (id: string) => {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 34,
          "block": "// Custom handler to map ID to full sale object for edit/view\n  const handleEdit = (id: string) => {..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 34,
          "block": "// Custom handler to map ID to full sale object for edit/view\n  const handleEdit = (id: string) => {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 35,
          "block": "const handleEdit = (id: string) => {\n    const sale = sales.find((s) => s.id === id);\n    if (sale &..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 35,
          "block": "const handleEdit = (id: string) => {\n    const sale = sales.find((s) => s.id === id);\n    if (sale &..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 36,
          "block": "const sale = sales.find((s) => s.id === id);\n    if (sale && onEdit) onEdit(sale);\n  };\n\n  const han..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 36,
          "block": "const sale = sales.find((s) => s.id === id);\n    if (sale && onEdit) onEdit(sale);\n  };\n\n  const han..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 37,
          "block": "if (sale && onEdit) onEdit(sale);\n  };\n\n  const handleView = useCallback((id: string) => {\n    const..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 37,
          "block": "if (sale && onEdit) onEdit(sale);\n  };\n\n  const handleView = useCallback((id: string) => {\n    const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 38,
          "block": "};\n\n  const handleView = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id === i..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 38,
          "block": "};\n\n  const handleView = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id === i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 39,
          "block": "const handleView = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id === id);\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 40,
          "block": "const handleView = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id === id);\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 39,
          "block": "const handleView = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id === id);\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 40,
          "block": "const handleView = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id === id);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 41,
          "block": "const sale = sales.find((s) => s.id === id);\n    if (sale && onView) onView(sale);\n  }, [sales, onVi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 41,
          "block": "const sale = sales.find((s) => s.id === id);\n    if (sale && onView) onView(sale);\n  }, [sales, onVi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 42,
          "block": "if (sale && onView) onView(sale);\n  }, [sales, onView]);\n\n  const handleGenerateReceipt = useCallbac..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 42,
          "block": "if (sale && onView) onView(sale);\n  }, [sales, onView]);\n\n  const handleGenerateReceipt = useCallbac..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 43,
          "block": "}, [sales, onView]);\n\n  const handleGenerateReceipt = useCallback((id: string) => {\n    const sale =..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 43,
          "block": "}, [sales, onView]);\n\n  const handleGenerateReceipt = useCallback((id: string) => {\n    const sale =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 44,
          "block": "const handleGenerateReceipt = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id ..."
        },
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 45,
          "block": "const handleGenerateReceipt = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 44,
          "block": "const handleGenerateReceipt = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 45,
          "block": "const handleGenerateReceipt = useCallback((id: string) => {\n    const sale = sales.find((s) => s.id ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 46,
          "block": "const sale = sales.find((s) => s.id === id);\n    if (sale && onGenerateReceipt) onGenerateReceipt(sa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 46,
          "block": "const sale = sales.find((s) => s.id === id);\n    if (sale && onGenerateReceipt) onGenerateReceipt(sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 47,
          "block": "if (sale && onGenerateReceipt) onGenerateReceipt(sale);\n  }, [sales, onGenerateReceipt]);\n\n  // Defi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 47,
          "block": "if (sale && onGenerateReceipt) onGenerateReceipt(sale);\n  }, [sales, onGenerateReceipt]);\n\n  // Defi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 48,
          "block": "}, [sales, onGenerateReceipt]);\n\n  // Define custom actions for the dropdown menu\n  const customActi..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 48,
          "block": "}, [sales, onGenerateReceipt]);\n\n  // Define custom actions for the dropdown menu\n  const customActi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 49,
          "block": "// Define custom actions for the dropdown menu\n  const customActions = useMemo(() => {\n    const act..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 49,
          "block": "// Define custom actions for the dropdown menu\n  const customActions = useMemo(() => {\n    const act..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 50,
          "block": "// Define custom actions for the dropdown menu\n  const customActions = useMemo(() => {\n    const act..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 50,
          "block": "// Define custom actions for the dropdown menu\n  const customActions = useMemo(() => {\n    const act..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 51,
          "block": "const customActions = useMemo(() => {\n    const actions = [];\n\n    if (onView) {\n      actions.push(..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 51,
          "block": "const customActions = useMemo(() => {\n    const actions = [];\n\n    if (onView) {\n      actions.push(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 53,
          "block": "if (onView) {\n      actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem ke..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 53,
          "block": "if (onView) {\n      actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem ke..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 54,
          "block": "if (onView) {\n      actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem ke..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 54,
          "block": "if (onView) {\n      actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem ke..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 55,
          "block": "actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem key=\"view\" onClick={()..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 55,
          "block": "actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem key=\"view\" onClick={()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 56,
          "block": "element: (id: string) => (\n          <DropdownMenuItem key=\"view\" onClick={() => handleView(id)}>\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 56,
          "block": "element: (id: string) => (\n          <DropdownMenuItem key=\"view\" onClick={() => handleView(id)}>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 57,
          "block": "<DropdownMenuItem key=\"view\" onClick={() => handleView(id)}>\n            <Eye className=\"mr-2 h-4 w-..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 57,
          "block": "<DropdownMenuItem key=\"view\" onClick={() => handleView(id)}>\n            <Eye className=\"mr-2 h-4 w-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 58,
          "block": "<Eye className=\"mr-2 h-4 w-4\" />\n            <span>{t(\"common:view\")}</span>\n          </DropdownMen..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 58,
          "block": "<Eye className=\"mr-2 h-4 w-4\" />\n            <span>{t(\"common:view\")}</span>\n          </DropdownMen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 64,
          "block": "if (onGenerateReceipt) {\n      actions.push({\n        element: (id: string) => (\n          <Dropdown..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 64,
          "block": "if (onGenerateReceipt) {\n      actions.push({\n        element: (id: string) => (\n          <Dropdown..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 65,
          "block": "if (onGenerateReceipt) {\n      actions.push({\n        element: (id: string) => (\n          <Dropdown..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 65,
          "block": "if (onGenerateReceipt) {\n      actions.push({\n        element: (id: string) => (\n          <Dropdown..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 66,
          "block": "actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem\n            key=\"recei..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 66,
          "block": "actions.push({\n        element: (id: string) => (\n          <DropdownMenuItem\n            key=\"recei..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 67,
          "block": "element: (id: string) => (\n          <DropdownMenuItem\n            key=\"receipt\"\n            onClick..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 67,
          "block": "element: (id: string) => (\n          <DropdownMenuItem\n            key=\"receipt\"\n            onClick..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 68,
          "block": "<DropdownMenuItem\n            key=\"receipt\"\n            onClick={() => handleGenerateReceipt(id)}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 68,
          "block": "<DropdownMenuItem\n            key=\"receipt\"\n            onClick={() => handleGenerateReceipt(id)}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 69,
          "block": "key=\"receipt\"\n            onClick={() => handleGenerateReceipt(id)}\n          >\n            <FileTex..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 69,
          "block": "key=\"receipt\"\n            onClick={() => handleGenerateReceipt(id)}\n          >\n            <FileTex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 70,
          "block": "onClick={() => handleGenerateReceipt(id)}\n          >\n            <FileText className=\"mr-2 h-4 w-4\"..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 70,
          "block": "onClick={() => handleGenerateReceipt(id)}\n          >\n            <FileText className=\"mr-2 h-4 w-4\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 71,
          "block": ">\n            <FileText className=\"mr-2 h-4 w-4\" />\n            <span>{t(\"sales:generateReceipt\")}</..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 71,
          "block": ">\n            <FileText className=\"mr-2 h-4 w-4\" />\n            <span>{t(\"sales:generateReceipt\")}</..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 72,
          "block": "<FileText className=\"mr-2 h-4 w-4\" />\n            <span>{t(\"sales:generateReceipt\")}</span>\n        ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 72,
          "block": "<FileText className=\"mr-2 h-4 w-4\" />\n            <span>{t(\"sales:generateReceipt\")}</span>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 76,
          "block": "});\n    }\n\n    return actions;\n  }, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 76,
          "block": "});\n    }\n\n    return actions;\n  }, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 78,
          "block": "return actions;\n  }, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt]);\n\n  // Defin..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 78,
          "block": "return actions;\n  }, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt]);\n\n  // Defin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 79,
          "block": "return actions;\n  }, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt]);\n\n  // Defin..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 79,
          "block": "return actions;\n  }, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt]);\n\n  // Defin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 80,
          "block": "}, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt]);\n\n  // Define column structure..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 80,
          "block": "}, [onView, onGenerateReceipt, t, handleView, handleGenerateReceipt]);\n\n  // Define column structure..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 82,
          "block": "// Define column structure\n  const columns = useMemo(\n    () => [\n      {\n        header: t(\"sales:f..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 82,
          "block": "// Define column structure\n  const columns = useMemo(\n    () => [\n      {\n        header: t(\"sales:f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 83,
          "block": "const columns = useMemo(\n    () => [\n      {\n        header: t(\"sales:fields.saleDate\"),\n        acc..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 83,
          "block": "const columns = useMemo(\n    () => [\n      {\n        header: t(\"sales:fields.saleDate\"),\n        acc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 84,
          "block": "() => [\n      {\n        header: t(\"sales:fields.saleDate\"),\n        accessorKey: \"saleDate\" as keyof..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 84,
          "block": "() => [\n      {\n        header: t(\"sales:fields.saleDate\"),\n        accessorKey: \"saleDate\" as keyof..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 85,
          "block": "{\n        header: t(\"sales:fields.saleDate\"),\n        accessorKey: \"saleDate\" as keyof Sale,\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 85,
          "block": "{\n        header: t(\"sales:fields.saleDate\"),\n        accessorKey: \"saleDate\" as keyof Sale,\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 86,
          "block": "header: t(\"sales:fields.saleDate\"),\n        accessorKey: \"saleDate\" as keyof Sale,\n        cell: (va..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 86,
          "block": "header: t(\"sales:fields.saleDate\"),\n        accessorKey: \"saleDate\" as keyof Sale,\n        cell: (va..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 87,
          "block": "accessorKey: \"saleDate\" as keyof Sale,\n        cell: (value: string) => createDateCell(value),\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 87,
          "block": "accessorKey: \"saleDate\" as keyof Sale,\n        cell: (value: string) => createDateCell(value),\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 88,
          "block": "cell: (value: string) => createDateCell(value),\n        enableSorting: true,\n      },\n      {\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 88,
          "block": "cell: (value: string) => createDateCell(value),\n        enableSorting: true,\n      },\n      {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 89,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.fuelType\"),\n        accessorKe..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 89,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.fuelType\"),\n        accessorKe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 90,
          "block": "},\n      {\n        header: t(\"sales:fields.fuelType\"),\n        accessorKey: \"fuelType\" as keyof Sale..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 90,
          "block": "},\n      {\n        header: t(\"sales:fields.fuelType\"),\n        accessorKey: \"fuelType\" as keyof Sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 91,
          "block": "{\n        header: t(\"sales:fields.fuelType\"),\n        accessorKey: \"fuelType\" as keyof Sale,\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 91,
          "block": "{\n        header: t(\"sales:fields.fuelType\"),\n        accessorKey: \"fuelType\" as keyof Sale,\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 92,
          "block": "header: t(\"sales:fields.fuelType\"),\n        accessorKey: \"fuelType\" as keyof Sale,\n        cell: (va..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 92,
          "block": "header: t(\"sales:fields.fuelType\"),\n        accessorKey: \"fuelType\" as keyof Sale,\n        cell: (va..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 93,
          "block": "accessorKey: \"fuelType\" as keyof Sale,\n        cell: (value: string) => t(`sales:fuelTypes.${value}`..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 93,
          "block": "accessorKey: \"fuelType\" as keyof Sale,\n        cell: (value: string) => t(`sales:fuelTypes.${value}`..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 94,
          "block": "cell: (value: string) => t(`sales:fuelTypes.${value}`),\n        enableSorting: true,\n      },\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 94,
          "block": "cell: (value: string) => t(`sales:fuelTypes.${value}`),\n        enableSorting: true,\n      },\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 95,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.quantityLiters\"),\n        acce..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 95,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.quantityLiters\"),\n        acce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 96,
          "block": "},\n      {\n        header: t(\"sales:fields.quantityLiters\"),\n        accessorKey: \"quantityLiters\" a..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 96,
          "block": "},\n      {\n        header: t(\"sales:fields.quantityLiters\"),\n        accessorKey: \"quantityLiters\" a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 97,
          "block": "{\n        header: t(\"sales:fields.quantityLiters\"),\n        accessorKey: \"quantityLiters\" as keyof S..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 97,
          "block": "{\n        header: t(\"sales:fields.quantityLiters\"),\n        accessorKey: \"quantityLiters\" as keyof S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 98,
          "block": "header: t(\"sales:fields.quantityLiters\"),\n        accessorKey: \"quantityLiters\" as keyof Sale,\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 98,
          "block": "header: t(\"sales:fields.quantityLiters\"),\n        accessorKey: \"quantityLiters\" as keyof Sale,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 99,
          "block": "accessorKey: \"quantityLiters\" as keyof Sale,\n        cell: (value: number) => createNumberCell(value..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 99,
          "block": "accessorKey: \"quantityLiters\" as keyof Sale,\n        cell: (value: number) => createNumberCell(value..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 100,
          "block": "cell: (value: number) => createNumberCell(value, 2),\n        enableSorting: true,\n      },\n      {\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 100,
          "block": "cell: (value: number) => createNumberCell(value, 2),\n        enableSorting: true,\n      },\n      {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 101,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.unitPrice\"),\n        accessorK..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 101,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.unitPrice\"),\n        accessorK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 102,
          "block": "},\n      {\n        header: t(\"sales:fields.unitPrice\"),\n        accessorKey: \"unitPrice\" as keyof Sa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 102,
          "block": "},\n      {\n        header: t(\"sales:fields.unitPrice\"),\n        accessorKey: \"unitPrice\" as keyof Sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 103,
          "block": "{\n        header: t(\"sales:fields.unitPrice\"),\n        accessorKey: \"unitPrice\" as keyof Sale,\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 103,
          "block": "{\n        header: t(\"sales:fields.unitPrice\"),\n        accessorKey: \"unitPrice\" as keyof Sale,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 104,
          "block": "header: t(\"sales:fields.unitPrice\"),\n        accessorKey: \"unitPrice\" as keyof Sale,\n        cell: (..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 104,
          "block": "header: t(\"sales:fields.unitPrice\"),\n        accessorKey: \"unitPrice\" as keyof Sale,\n        cell: (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 105,
          "block": "accessorKey: \"unitPrice\" as keyof Sale,\n        cell: (value: number) => createNumberCell(value, 2),..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 105,
          "block": "accessorKey: \"unitPrice\" as keyof Sale,\n        cell: (value: number) => createNumberCell(value, 2),..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 106,
          "block": "cell: (value: number) => createNumberCell(value, 2),\n        enableSorting: true,\n      },\n      {\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 106,
          "block": "cell: (value: number) => createNumberCell(value, 2),\n        enableSorting: true,\n      },\n      {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 107,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.amount\"),\n        accessorKey:..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 107,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.amount\"),\n        accessorKey:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 108,
          "block": "},\n      {\n        header: t(\"sales:fields.amount\"),\n        accessorKey: \"amount\" as keyof Sale,\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 108,
          "block": "},\n      {\n        header: t(\"sales:fields.amount\"),\n        accessorKey: \"amount\" as keyof Sale,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 109,
          "block": "{\n        header: t(\"sales:fields.amount\"),\n        accessorKey: \"amount\" as keyof Sale,\n        cel..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 109,
          "block": "{\n        header: t(\"sales:fields.amount\"),\n        accessorKey: \"amount\" as keyof Sale,\n        cel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 110,
          "block": "header: t(\"sales:fields.amount\"),\n        accessorKey: \"amount\" as keyof Sale,\n        cell: (value:..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 110,
          "block": "header: t(\"sales:fields.amount\"),\n        accessorKey: \"amount\" as keyof Sale,\n        cell: (value:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 111,
          "block": "accessorKey: \"amount\" as keyof Sale,\n        cell: (value: number) => createCurrencyCell(value),\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 111,
          "block": "accessorKey: \"amount\" as keyof Sale,\n        cell: (value: number) => createCurrencyCell(value),\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 112,
          "block": "cell: (value: number) => createCurrencyCell(value),\n        enableSorting: true,\n      },\n      {\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 112,
          "block": "cell: (value: number) => createCurrencyCell(value),\n        enableSorting: true,\n      },\n      {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 113,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.paymentStatus\"),\n        acces..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 113,
          "block": "enableSorting: true,\n      },\n      {\n        header: t(\"sales:fields.paymentStatus\"),\n        acces..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 114,
          "block": "},\n      {\n        header: t(\"sales:fields.paymentStatus\"),\n        accessorKey: \"paymentStatus\" as ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 114,
          "block": "},\n      {\n        header: t(\"sales:fields.paymentStatus\"),\n        accessorKey: \"paymentStatus\" as ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 115,
          "block": "{\n        header: t(\"sales:fields.paymentStatus\"),\n        accessorKey: \"paymentStatus\" as keyof Sal..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 115,
          "block": "{\n        header: t(\"sales:fields.paymentStatus\"),\n        accessorKey: \"paymentStatus\" as keyof Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 116,
          "block": "header: t(\"sales:fields.paymentStatus\"),\n        accessorKey: \"paymentStatus\" as keyof Sale,\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 116,
          "block": "header: t(\"sales:fields.paymentStatus\"),\n        accessorKey: \"paymentStatus\" as keyof Sale,\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 117,
          "block": "accessorKey: \"paymentStatus\" as keyof Sale,\n        cell: (value: string) => {\n          const varia..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 117,
          "block": "accessorKey: \"paymentStatus\" as keyof Sale,\n        cell: (value: string) => {\n          const varia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 118,
          "block": "cell: (value: string) => {\n          const variantMap: Record<string, \"success\" | \"warning\" | \"destr..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 118,
          "block": "cell: (value: string) => {\n          const variantMap: Record<string, \"success\" | \"warning\" | \"destr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 119,
          "block": "const variantMap: Record<string, \"success\" | \"warning\" | \"destructive\" | \"outline\"> = {\n            ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 119,
          "block": "const variantMap: Record<string, \"success\" | \"warning\" | \"destructive\" | \"outline\"> = {\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 120,
          "block": "paid: \"success\",\n            pending: \"warning\",\n            cancelled: \"destructive\",\n            d..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 120,
          "block": "paid: \"success\",\n            pending: \"warning\",\n            cancelled: \"destructive\",\n            d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 121,
          "block": "pending: \"warning\",\n            cancelled: \"destructive\",\n            default: \"outline\",\n          ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 121,
          "block": "pending: \"warning\",\n            cancelled: \"destructive\",\n            default: \"outline\",\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 122,
          "block": "cancelled: \"destructive\",\n            default: \"outline\",\n          };\n\n          const variant = va..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 122,
          "block": "cancelled: \"destructive\",\n            default: \"outline\",\n          };\n\n          const variant = va..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 123,
          "block": "default: \"outline\",\n          };\n\n          const variant = variantMap[value] || variantMap.default;..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 123,
          "block": "default: \"outline\",\n          };\n\n          const variant = variantMap[value] || variantMap.default;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 124,
          "block": "};\n\n          const variant = variantMap[value] || variantMap.default;\n          return createBadgeC..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 124,
          "block": "};\n\n          const variant = variantMap[value] || variantMap.default;\n          return createBadgeC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 125,
          "block": "const variant = variantMap[value] || variantMap.default;\n          return createBadgeCell(t(`sales:p..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 125,
          "block": "const variant = variantMap[value] || variantMap.default;\n          return createBadgeCell(t(`sales:p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 126,
          "block": "const variant = variantMap[value] || variantMap.default;\n          return createBadgeCell(t(`sales:p..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 126,
          "block": "const variant = variantMap[value] || variantMap.default;\n          return createBadgeCell(t(`sales:p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 127,
          "block": "return createBadgeCell(t(`sales:paymentStatuses.${value}`), variant);\n        },\n        enableSorti..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 127,
          "block": "return createBadgeCell(t(`sales:paymentStatuses.${value}`), variant);\n        },\n        enableSorti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 135,
          "block": "return (\n    <StandardizedDataTable\n      title={t(\"sales:salesList\")}\n      columns={columns}\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 135,
          "block": "return (\n    <StandardizedDataTable\n      title={t(\"sales:salesList\")}\n      columns={columns}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 136,
          "block": "<StandardizedDataTable\n      title={t(\"sales:salesList\")}\n      columns={columns}\n      data={sales}..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 136,
          "block": "<StandardizedDataTable\n      title={t(\"sales:salesList\")}\n      columns={columns}\n      data={sales}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 137,
          "block": "title={t(\"sales:salesList\")}\n      columns={columns}\n      data={sales}\n      loading={isLoading}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 137,
          "block": "title={t(\"sales:salesList\")}\n      columns={columns}\n      data={sales}\n      loading={isLoading}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 138,
          "block": "columns={columns}\n      data={sales}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit : u..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 138,
          "block": "columns={columns}\n      data={sales}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit : u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 139,
          "block": "data={sales}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDelete..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 139,
          "block": "data={sales}\n      loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDelete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\SalesTableStandardized.tsx",
          "startLine": 140,
          "block": "loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDelete={onDelete}\n    />\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesTableStandardized.tsx",
          "startLine": 140,
          "block": "loading={isLoading}\n      onEdit={onEdit ? handleEdit : undefined}\n      onDelete={onDelete}\n    />\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 1,
          "block": "import { useState, useEffect } from \"react\";\nimport { StandardDialog } from \"@/core/components/ui/co..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 1,
          "block": "import { useState, useEffect } from \"react\";\nimport { StandardDialog } from \"@/core/components/ui/co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 2,
          "block": "import { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";\nimport { Button } from \"..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 2,
          "block": "import { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";\nimport { Button } from \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 3,
          "block": "import { Button } from \"@/core/components/ui/button\";\n\ninterface ShiftControlProps {\n  onShiftStart:..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 3,
          "block": "import { Button } from \"@/core/components/ui/button\";\n\ninterface ShiftControlProps {\n  onShiftStart:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 4,
          "block": "interface ShiftControlProps {\n  onShiftStart: () => void;\n  onShiftEnd: () => void;\n  isShiftOpen: b..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 4,
          "block": "interface ShiftControlProps {\n  onShiftStart: () => void;\n  onShiftEnd: () => void;\n  isShiftOpen: b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 5,
          "block": "interface ShiftControlProps {\n  onShiftStart: () => void;\n  onShiftEnd: () => void;\n  isShiftOpen: b..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 5,
          "block": "interface ShiftControlProps {\n  onShiftStart: () => void;\n  onShiftEnd: () => void;\n  isShiftOpen: b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 12,
          "block": "onShiftStart,\n  onShiftEnd,\n  isShiftOpen,\n}: ShiftControlProps) {\n  const [isOpen, setIsOpen] = use..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 12,
          "block": "onShiftStart,\n  onShiftEnd,\n  isShiftOpen,\n}: ShiftControlProps) {\n  const [isOpen, setIsOpen] = use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 14,
          "block": "isShiftOpen,\n}: ShiftControlProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Add consol..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 14,
          "block": "isShiftOpen,\n}: ShiftControlProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Add consol..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 15,
          "block": "}: ShiftControlProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Add console log to debu..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 15,
          "block": "}: ShiftControlProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Add console log to debu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 16,
          "block": "const [isOpen, setIsOpen] = useState(false);\n\n  // Add console log to debug component props\n  useEff..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 16,
          "block": "const [isOpen, setIsOpen] = useState(false);\n\n  // Add console log to debug component props\n  useEff..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 17,
          "block": "// Add console log to debug component props\n  useEffect(() => {\n    console.log(\"ShiftControl compon..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 17,
          "block": "// Add console log to debug component props\n  useEffect(() => {\n    console.log(\"ShiftControl compon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 18,
          "block": "// Add console log to debug component props\n  useEffect(() => {\n    console.log(\"ShiftControl compon..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 18,
          "block": "// Add console log to debug component props\n  useEffect(() => {\n    console.log(\"ShiftControl compon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 19,
          "block": "useEffect(() => {\n    console.log(\"ShiftControl component props:\", {\n      isShiftOpen,\n      dialog..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 19,
          "block": "useEffect(() => {\n    console.log(\"ShiftControl component props:\", {\n      isShiftOpen,\n      dialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 20,
          "block": "console.log(\"ShiftControl component props:\", {\n      isShiftOpen,\n      dialogOpen: isOpen,\n    });\n..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 20,
          "block": "console.log(\"ShiftControl component props:\", {\n      isShiftOpen,\n      dialogOpen: isOpen,\n    });\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 24,
          "block": "}, [isShiftOpen, isOpen]);\n\n  return (\n    <div>\n      <Button variant=\"outline\" onClick={() => setI..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 24,
          "block": "}, [isShiftOpen, isOpen]);\n\n  return (\n    <div>\n      <Button variant=\"outline\" onClick={() => setI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 25,
          "block": "return (\n    <div>\n      <Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShift..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 25,
          "block": "return (\n    <div>\n      <Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShift..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 26,
          "block": "return (\n    <div>\n      <Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShift..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 26,
          "block": "return (\n    <div>\n      <Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShift..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 27,
          "block": "<div>\n      <Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShiftOpen ? \"Close..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 27,
          "block": "<div>\n      <Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShiftOpen ? \"Close..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 28,
          "block": "<Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShiftOpen ? \"Close Shift\" : \"O..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 28,
          "block": "<Button variant=\"outline\" onClick={() => setIsOpen(true)}>\n        {isShiftOpen ? \"Close Shift\" : \"O..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 37,
          "block": "<div className=\"flex justify-end space-x-2\">\n            <Button variant=\"secondary\" onClick={() => ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 37,
          "block": "<div className=\"flex justify-end space-x-2\">\n            <Button variant=\"secondary\" onClick={() => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 38,
          "block": "<Button variant=\"secondary\" onClick={() => setIsOpen(false)}>\n              Cancel\n            </But..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 38,
          "block": "<Button variant=\"secondary\" onClick={() => setIsOpen(false)}>\n              Cancel\n            </But..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 39,
          "block": "Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                setI..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 39,
          "block": "Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                setI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 40,
          "block": "</Button>\n            <Button\n              onClick={() => {\n                setIsOpen(false);\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 40,
          "block": "</Button>\n            <Button\n              onClick={() => {\n                setIsOpen(false);\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 41,
          "block": "<Button\n              onClick={() => {\n                setIsOpen(false);\n                if (isShift..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 41,
          "block": "<Button\n              onClick={() => {\n                setIsOpen(false);\n                if (isShift..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 42,
          "block": "onClick={() => {\n                setIsOpen(false);\n                if (isShiftOpen) {\n              ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 42,
          "block": "onClick={() => {\n                setIsOpen(false);\n                if (isShiftOpen) {\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 43,
          "block": "setIsOpen(false);\n                if (isShiftOpen) {\n                  onShiftEnd();\n               ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 43,
          "block": "setIsOpen(false);\n                if (isShiftOpen) {\n                  onShiftEnd();\n               ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 44,
          "block": "if (isShiftOpen) {\n                  onShiftEnd();\n                } else {\n                  onShif..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 44,
          "block": "if (isShiftOpen) {\n                  onShiftEnd();\n                } else {\n                  onShif..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 45,
          "block": "onShiftEnd();\n                } else {\n                  onShiftStart();\n                }\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 45,
          "block": "onShiftEnd();\n                } else {\n                  onShiftStart();\n                }\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 47,
          "block": "onShiftStart();\n                }\n              }}\n            >\n              {isShiftOpen ? \"Close..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 47,
          "block": "onShiftStart();\n                }\n              }}\n            >\n              {isShiftOpen ? \"Close..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 48,
          "block": "}\n              }}\n            >\n              {isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n        ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 48,
          "block": "}\n              }}\n            >\n              {isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 49,
          "block": "}}\n            >\n              {isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n            </Button>\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 49,
          "block": "}}\n            >\n              {isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n            </Button>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 50,
          "block": ">\n              {isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n            </Button>\n          </div>\n..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 50,
          "block": ">\n              {isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n            </Button>\n          </div>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 51,
          "block": "{isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n            </Button>\n          </div>\n        }\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 51,
          "block": "{isShiftOpen ? \"Close Shift\" : \"Open Shift\"}\n            </Button>\n          </div>\n        }\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 54,
          "block": "}\n      >\n        <div className=\"flex flex-col space-y-4\">\n          <p>\n            Are you sure y..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 54,
          "block": "}\n      >\n        <div className=\"flex flex-col space-y-4\">\n          <p>\n            Are you sure y..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 55,
          "block": ">\n        <div className=\"flex flex-col space-y-4\">\n          <p>\n            Are you sure you want ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 55,
          "block": ">\n        <div className=\"flex flex-col space-y-4\">\n          <p>\n            Are you sure you want ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 56,
          "block": "<div className=\"flex flex-col space-y-4\">\n          <p>\n            Are you sure you want to {isShif..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 56,
          "block": "<div className=\"flex flex-col space-y-4\">\n          <p>\n            Are you sure you want to {isShif..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 57,
          "block": "<p>\n            Are you sure you want to {isShiftOpen ? \"close\" : \"open\"} the shift?\n          </p>\n..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 57,
          "block": "<p>\n            Are you sure you want to {isShiftOpen ? \"close\" : \"open\"} the shift?\n          </p>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\ShiftControl.tsx",
          "startLine": 58,
          "block": "Are you sure you want to {isShiftOpen ? \"close\" : \"open\"} the shift?\n          </p>\n        </div>\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\ShiftControl.tsx",
          "startLine": 58,
          "block": "Are you sure you want to {isShiftOpen ? \"close\" : \"open\"} the shift?\n          </p>\n        </div>\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 1,
          "block": "import { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { StandardDialog } from \"..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 1,
          "block": "import { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { StandardDialog } from \"..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 1,
          "block": "import { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { StandardDialog } from \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 2,
          "block": "import { z } from \"zod\";\nimport { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 2,
          "block": "import { z } from \"zod\";\nimport { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 3,
          "block": "import { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";\nimport { Button } from \"..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 3,
          "block": "import { StandardDialog } from \"@/core/components/ui/composed/base-dialog\";\nimport { Button } from \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 4,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { useToast } from \"@/hooks\";\nimport {\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 4,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { useToast } from \"@/hooks\";\nimport {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 5,
          "block": "import { useToast } from \"@/hooks\";\nimport {\n  FormInput,\n  FormSelect,\n} from \"@/core/components/ui..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 5,
          "block": "import { useToast } from \"@/hooks\";\nimport {\n  FormInput,\n  FormSelect,\n} from \"@/core/components/ui..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 7,
          "block": "FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, us..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 7,
          "block": "FormInput,\n  FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, us..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 8,
          "block": "FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHa..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 8,
          "block": "FormSelect,\n} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 9,
          "block": "} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHandler } from..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 9,
          "block": "} from \"@/core/components/ui/composed/form-fields\";\nimport { useZodForm, useFormSubmitHandler } from..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 10,
          "block": "import { useZodForm, useFormSubmitHandler } from \"@/shared/hooks/use-form\";\nimport { FuelTank, FuelT..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 10,
          "block": "import { useZodForm, useFormSubmitHandler } from \"@/shared/hooks/use-form\";\nimport { FuelTank, FuelT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 11,
          "block": "import { FuelTank, FuelTypeCode } from \"@/types\";\n\ninterface TankFormDialogStandardizedProps {\n  ope..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 11,
          "block": "import { FuelTank, FuelTypeCode } from \"@/types\";\n\ninterface TankFormDialogStandardizedProps {\n  ope..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 12,
          "block": "interface TankFormDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 12,
          "block": "interface TankFormDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 13,
          "block": "interface TankFormDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 13,
          "block": "interface TankFormDialogStandardizedProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 14,
          "block": "open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess: () => void;\n  tank?: {\n    id?:..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 14,
          "block": "open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess: () => void;\n  tank?: {\n    id?:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 15,
          "block": "onOpenChange: (open: boolean) => void;\n  onSuccess: () => void;\n  tank?: {\n    id?: string;\n    name..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 15,
          "block": "onOpenChange: (open: boolean) => void;\n  onSuccess: () => void;\n  tank?: {\n    id?: string;\n    name..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 18,
          "block": "id?: string;\n    name?: string;\n    capacity?: number;\n    current_level?: number;\n    fuel_type?: \"..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 18,
          "block": "id?: string;\n    name?: string;\n    capacity?: number;\n    current_level?: number;\n    fuel_type?: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 19,
          "block": "name?: string;\n    capacity?: number;\n    current_level?: number;\n    fuel_type?: \"petrol\" | \"diesel..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 19,
          "block": "name?: string;\n    capacity?: number;\n    current_level?: number;\n    fuel_type?: \"petrol\" | \"diesel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 25,
          "block": "// Define Zod schema for validation\nconst tankSchema = z.object({\n  name: z\n    .string({ required_e..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 25,
          "block": "// Define Zod schema for validation\nconst tankSchema = z.object({\n  name: z\n    .string({ required_e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 26,
          "block": "// Define Zod schema for validation\nconst tankSchema = z.object({\n  name: z\n    .string({ required_e..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 26,
          "block": "// Define Zod schema for validation\nconst tankSchema = z.object({\n  name: z\n    .string({ required_e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 27,
          "block": "const tankSchema = z.object({\n  name: z\n    .string({ required_error: \"Name is required\" })\n    .min..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 27,
          "block": "const tankSchema = z.object({\n  name: z\n    .string({ required_error: \"Name is required\" })\n    .min..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 28,
          "block": "name: z\n    .string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 cha..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 28,
          "block": "name: z\n    .string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 cha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 29,
          "block": ".string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 characters\"),\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 29,
          "block": ".string({ required_error: \"Name is required\" })\n    .min(2, \"Name must be at least 2 characters\"),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 30,
          "block": ".min(2, \"Name must be at least 2 characters\"),\n  fuel_type: z.enum([\"petrol\", \"diesel\", \"cng\"], {\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 30,
          "block": ".min(2, \"Name must be at least 2 characters\"),\n  fuel_type: z.enum([\"petrol\", \"diesel\", \"cng\"], {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 31,
          "block": "fuel_type: z.enum([\"petrol\", \"diesel\", \"cng\"], {\n    required_error: \"Fuel type is required\",\n  }),\n..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 31,
          "block": "fuel_type: z.enum([\"petrol\", \"diesel\", \"cng\"], {\n    required_error: \"Fuel type is required\",\n  }),\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 32,
          "block": "required_error: \"Fuel type is required\",\n  }),\n  capacity: z\n    .number({ required_error: \"Capacity..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 32,
          "block": "required_error: \"Fuel type is required\",\n  }),\n  capacity: z\n    .number({ required_error: \"Capacity..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 33,
          "block": "}),\n  capacity: z\n    .number({ required_error: \"Capacity is required\" })\n    .min(1, \"Capacity must..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 33,
          "block": "}),\n  capacity: z\n    .number({ required_error: \"Capacity is required\" })\n    .min(1, \"Capacity must..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 34,
          "block": "capacity: z\n    .number({ required_error: \"Capacity is required\" })\n    .min(1, \"Capacity must be gr..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 34,
          "block": "capacity: z\n    .number({ required_error: \"Capacity is required\" })\n    .min(1, \"Capacity must be gr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 35,
          "block": ".number({ required_error: \"Capacity is required\" })\n    .min(1, \"Capacity must be greater than 0\"),\n..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 35,
          "block": ".number({ required_error: \"Capacity is required\" })\n    .min(1, \"Capacity must be greater than 0\"),\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 36,
          "block": ".min(1, \"Capacity must be greater than 0\"),\n});\n\n// Type based on schema\ntype TankFormData = z.infer..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 36,
          "block": ".min(1, \"Capacity must be greater than 0\"),\n});\n\n// Type based on schema\ntype TankFormData = z.infer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 38,
          "block": "// Type based on schema\ntype TankFormData = z.infer<typeof tankSchema>;\n\nexport function TankFormDia..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 38,
          "block": "// Type based on schema\ntype TankFormData = z.infer<typeof tankSchema>;\n\nexport function TankFormDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 39,
          "block": "// Type based on schema\ntype TankFormData = z.infer<typeof tankSchema>;\n\nexport function TankFormDia..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 39,
          "block": "// Type based on schema\ntype TankFormData = z.infer<typeof tankSchema>;\n\nexport function TankFormDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 40,
          "block": "type TankFormData = z.infer<typeof tankSchema>;\n\nexport function TankFormDialogStandardized({\n  open..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 40,
          "block": "type TankFormData = z.infer<typeof tankSchema>;\n\nexport function TankFormDialogStandardized({\n  open..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 44,
          "block": "onOpenChange,\n  onSuccess,\n  tank,\n}: TankFormDialogStandardizedProps) {\n  const { toast } = useToas..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 44,
          "block": "onOpenChange,\n  onSuccess,\n  tank,\n}: TankFormDialogStandardizedProps) {\n  const { toast } = useToas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 46,
          "block": "tank,\n}: TankFormDialogStandardizedProps) {\n  const { toast } = useToast();\n\n  // Initialize form wi..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 46,
          "block": "tank,\n}: TankFormDialogStandardizedProps) {\n  const { toast } = useToast();\n\n  // Initialize form wi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 47,
          "block": "}: TankFormDialogStandardizedProps) {\n  const { toast } = useToast();\n\n  // Initialize form with Zod..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 47,
          "block": "}: TankFormDialogStandardizedProps) {\n  const { toast } = useToast();\n\n  // Initialize form with Zod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 48,
          "block": "const { toast } = useToast();\n\n  // Initialize form with Zod validation\n  const form = useZodForm({\n..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 48,
          "block": "const { toast } = useToast();\n\n  // Initialize form with Zod validation\n  const form = useZodForm({\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 49,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: tankSchema,\n    defau..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 49,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: tankSchema,\n    defau..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 50,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: tankSchema,\n    defau..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 50,
          "block": "// Initialize form with Zod validation\n  const form = useZodForm({\n    schema: tankSchema,\n    defau..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 51,
          "block": "const form = useZodForm({\n    schema: tankSchema,\n    defaultValues: {\n      name: tank?.name || \"\",..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 51,
          "block": "const form = useZodForm({\n    schema: tankSchema,\n    defaultValues: {\n      name: tank?.name || \"\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 52,
          "block": "schema: tankSchema,\n    defaultValues: {\n      name: tank?.name || \"\",\n      fuel_type: tank?.fuel_t..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 52,
          "block": "schema: tankSchema,\n    defaultValues: {\n      name: tank?.name || \"\",\n      fuel_type: tank?.fuel_t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 53,
          "block": "defaultValues: {\n      name: tank?.name || \"\",\n      fuel_type: tank?.fuel_type || \"petrol\",\n      c..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 53,
          "block": "defaultValues: {\n      name: tank?.name || \"\",\n      fuel_type: tank?.fuel_type || \"petrol\",\n      c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 54,
          "block": "name: tank?.name || \"\",\n      fuel_type: tank?.fuel_type || \"petrol\",\n      capacity: tank?.capacity..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 54,
          "block": "name: tank?.name || \"\",\n      fuel_type: tank?.fuel_type || \"petrol\",\n      capacity: tank?.capacity..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 58,
          "block": "});\n\n  // Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubm..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 58,
          "block": "});\n\n  // Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 59,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 59,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 60,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 60,
          "block": "// Form submission handler\n  const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 61,
          "block": "const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandler<TankFormData>(form, async ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 61,
          "block": "const { isSubmitting, onSubmit: handleSubmit } =\n    useFormSubmitHandler<TankFormData>(form, async ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 67,
          "block": "capacity: data.capacity,\n          current_level: tank?.current_level || 0,\n        };\n\n        // M..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 73,
          "block": "capacity: data.capacity,\n          current_level: tank?.current_level || 0,\n        };\n\n        // M..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 68,
          "block": "current_level: tank?.current_level || 0,\n        };\n\n        // Mock update/create operations since ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 74,
          "block": "current_level: tank?.current_level || 0,\n        };\n\n        // Mock update/create operations since ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 69,
          "block": "};\n\n        // Mock update/create operations since updateFuelTank is not available\n        toast({\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 75,
          "block": "};\n\n        // Mock update/create operations since updateFuelTank is not available\n        toast({\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 70,
          "block": "// Mock update/create operations since updateFuelTank is not available\n        toast({\n          tit..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 76,
          "block": "// Mock update/create operations since updateFuelTank is not available\n        toast({\n          tit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 71,
          "block": "// Mock update/create operations since updateFuelTank is not available\n        toast({\n          tit..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 77,
          "block": "// Mock update/create operations since updateFuelTank is not available\n        toast({\n          tit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 72,
          "block": "toast({\n          title: \"Success\",\n          description: tank?.id\n            ? \"Tank updated succ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 78,
          "block": "toast({\n          title: \"Success\",\n          description: tank?.id\n            ? \"Tank updated succ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 73,
          "block": "title: \"Success\",\n          description: tank?.id\n            ? \"Tank updated successfully\"\n        ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 79,
          "block": "title: \"Success\",\n          description: tank?.id\n            ? \"Tank updated successfully\"\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 74,
          "block": "description: tank?.id\n            ? \"Tank updated successfully\"\n            : \"Tank created successf..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 80,
          "block": "description: tank?.id\n            ? \"Tank updated successfully\"\n            : \"Tank created successf..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 75,
          "block": "? \"Tank updated successfully\"\n            : \"Tank created successfully\",\n        });\n\n        form.r..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 81,
          "block": "? \"Tank updated successfully\"\n            : \"Tank created successfully\",\n        });\n\n        form.r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 81,
          "block": "return true;\n      } catch (error) {\n        toast({\n          title: \"Error\",\n          description..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 87,
          "block": "return true;\n      } catch (error) {\n        toast({\n          title: \"Error\",\n          description..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 82,
          "block": "} catch (error) {\n        toast({\n          title: \"Error\",\n          description: \"Failed to create..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 88,
          "block": "} catch (error) {\n        toast({\n          title: \"Error\",\n          description: \"Failed to create..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 83,
          "block": "toast({\n          title: \"Error\",\n          description: \"Failed to create/update tank\",\n          v..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 89,
          "block": "toast({\n          title: \"Error\",\n          description: \"Failed to create/update tank\",\n          v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 84,
          "block": "title: \"Error\",\n          description: \"Failed to create/update tank\",\n          variant: \"destructi..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 90,
          "block": "title: \"Error\",\n          description: \"Failed to create/update tank\",\n          variant: \"destructi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 85,
          "block": "description: \"Failed to create/update tank\",\n          variant: \"destructive\",\n        });\n        r..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 91,
          "block": "description: \"Failed to create/update tank\",\n          variant: \"destructive\",\n        });\n        r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 97,
          "block": "variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 142,
          "block": "variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 103,
          "block": "variant=\"outline\"\n        onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 98,
          "block": "onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      >\n        Cancel\n      </B..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 143,
          "block": "onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      >\n        Cancel\n      </B..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 104,
          "block": "onClick={() => onOpenChange(false)}\n        disabled={isSubmitting}\n      >\n        Cancel\n      </B..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 99,
          "block": "disabled={isSubmitting}\n      >\n        Cancel\n      </Button>\n      <Button type=\"submit\" disabled=..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 105,
          "block": "disabled={isSubmitting}\n      >\n        Cancel\n      </Button>\n      <Button type=\"submit\" disabled=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 100,
          "block": ">\n        Cancel\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"tank-form..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 106,
          "block": ">\n        Cancel\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"tank-form..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 101,
          "block": "Cancel\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"tank-form\">\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 107,
          "block": "Cancel\n      </Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"tank-form\">\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 102,
          "block": "</Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"tank-form\">\n        {isSubmittin..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 108,
          "block": "</Button>\n      <Button type=\"submit\" disabled={isSubmitting} form=\"tank-form\">\n        {isSubmittin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 103,
          "block": "<Button type=\"submit\" disabled={isSubmitting} form=\"tank-form\">\n        {isSubmitting ? \"Saving...\" ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 109,
          "block": "<Button type=\"submit\" disabled={isSubmitting} form=\"tank-form\">\n        {isSubmitting ? \"Saving...\" ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 117,
          "block": ">\n      <form id=\"tank-form\" onSubmit={handleSubmit} className=\"space-y-4\">\n        <FormInput\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 123,
          "block": ">\n      <form id=\"tank-form\" onSubmit={handleSubmit} className=\"space-y-4\">\n        <FormInput\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 118,
          "block": "<form id=\"tank-form\" onSubmit={handleSubmit} className=\"space-y-4\">\n        <FormInput\n          nam..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 124,
          "block": "<form id=\"tank-form\" onSubmit={handleSubmit} className=\"space-y-4\">\n        <FormInput\n          nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 119,
          "block": "<FormInput\n          name=\"name\"\n          label=\"Tank Name\"\n          form={form}\n          placeho..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 125,
          "block": "<FormInput\n          name=\"name\"\n          label=\"Tank Name\"\n          form={form}\n          placeho..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 127,
          "block": "<FormSelect\n          name=\"fuel_type\"\n          label=\"Fuel Type\"\n          form={form}\n          o..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 132,
          "block": "<FormSelect\n          name=\"fuel_type\"\n          label=\"Fuel Type\"\n          form={form}\n          o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 128,
          "block": "name=\"fuel_type\"\n          label=\"Fuel Type\"\n          form={form}\n          options={[\n            ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 133,
          "block": "name=\"fuel_type\"\n          label=\"Fuel Type\"\n          form={form}\n          options={[\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 129,
          "block": "label=\"Fuel Type\"\n          form={form}\n          options={[\n            { value: \"petrol\", label: \"..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 134,
          "block": "label=\"Fuel Type\"\n          form={form}\n          options={[\n            { value: \"petrol\", label: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 130,
          "block": "form={form}\n          options={[\n            { value: \"petrol\", label: \"Petrol\" },\n            { val..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 135,
          "block": "form={form}\n          options={[\n            { value: \"petrol\", label: \"Petrol\" },\n            { val..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 131,
          "block": "options={[\n            { value: \"petrol\", label: \"Petrol\" },\n            { value: \"diesel\", label: \"..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 136,
          "block": "options={[\n            { value: \"petrol\", label: \"Petrol\" },\n            { value: \"diesel\", label: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 132,
          "block": "{ value: \"petrol\", label: \"Petrol\" },\n            { value: \"diesel\", label: \"Diesel\" },\n            ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 137,
          "block": "{ value: \"petrol\", label: \"Petrol\" },\n            { value: \"diesel\", label: \"Diesel\" },\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 133,
          "block": "{ value: \"diesel\", label: \"Diesel\" },\n            { value: \"cng\", label: \"CNG\" },\n          ]}\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 138,
          "block": "{ value: \"diesel\", label: \"Diesel\" },\n            { value: \"cng\", label: \"CNG\" },\n          ]}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 139,
          "block": "<FormInput\n          name=\"capacity\"\n          label=\"Capacity (Liters)\"\n          form={form}\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 144,
          "block": "<FormInput\n          name=\"capacity\"\n          label=\"Capacity (Liters)\"\n          form={form}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 140,
          "block": "name=\"capacity\"\n          label=\"Capacity (Liters)\"\n          form={form}\n          placeholder=\"Ent..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 145,
          "block": "name=\"capacity\"\n          label=\"Capacity (Liters)\"\n          form={form}\n          placeholder=\"Ent..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TankFormDialogStandardized.tsx",
          "startLine": 141,
          "block": "label=\"Capacity (Liters)\"\n          form={form}\n          placeholder=\"Enter capacity\"\n          typ..."
        },
        {
          "file": "src\\features\\sales\\components\\TankFormDialogStandardized.tsx",
          "startLine": 146,
          "block": "label=\"Capacity (Liters)\"\n          form={form}\n          placeholder=\"Enter capacity\"\n          typ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"..."
        },
        {
          "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 24,
          "block": "import { Textarea } from \"@/core/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  Sele..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 20,
          "block": "import { Textarea } from \"@/core/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  Sele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 83,
          "block": "// Filter categories based on transaction type\n  const filteredCategories = categories.filter(\n    (..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 84,
          "block": "// Filter categories based on transaction type\n  const filteredCategories = categories.filter(\n    (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 162,
          "block": "<FormField\n              control={form.control}\n              name=\"amount\"\n              render={({..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 134,
          "block": "<FormField\n              control={form.control}\n              name=\"amount\"\n              render={({..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 168,
          "block": "<FormControl>\n                    <Input\n                      type=\"number\"\n                      s..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 140,
          "block": "<FormControl>\n                    <Input\n                      type=\"number\"\n                      s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 169,
          "block": "<Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      p..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 141,
          "block": "<Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 170,
          "block": "type=\"number\"\n                      step=\"0.01\"\n                      placeholder=\"0.00\"\n           ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 142,
          "block": "type=\"number\"\n                      step=\"0.01\"\n                      placeholder=\"0.00\"\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 171,
          "block": "step=\"0.01\"\n                      placeholder=\"0.00\"\n                      {...field}\n              ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 143,
          "block": "step=\"0.01\"\n                      placeholder=\"0.00\"\n                      {...field}\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 173,
          "block": "{...field}\n                    />\n                  </FormControl>\n                  <FormMessage />..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 243,
          "block": "{...field}\n                    />\n                  </FormControl>\n                  <FormMessage />..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 284,
          "block": "{...field}\n                    />\n                  </FormControl>\n                  <FormMessage />..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 305,
          "block": "{...field}\n                    />\n                  </FormControl>\n                  <FormMessage />..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 174,
          "block": "/>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n  ..."
        },
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 244,
          "block": "/>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n  ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 285,
          "block": "/>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n  ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 306,
          "block": "/>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 181,
          "block": "<FormField\n              control={form.control}\n              name=\"category\"\n              render={..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 160,
          "block": "<FormField\n              control={form.control}\n              name=\"category\"\n              render={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 205,
          "block": "</SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Sel..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 187,
          "block": "</SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Sel..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 262,
          "block": "</SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Sel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 206,
          "block": "))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 188,
          "block": "))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 263,
          "block": "))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\components\\TransactionDialogStandardized.tsx",
          "startLine": 214,
          "block": "<FormField\n              control={form.control}\n              name=\"date\"\n              render={({ f..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 119,
          "block": "<FormField\n              control={form.control}\n              name=\"date\"\n              render={({ f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 77,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: QUERY_KEYS.transactions });\n     ..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 90,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: QUERY_KEYS.transactions });\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 78,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.transactions });\n      queryClient.invalidateQu..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 91,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.transactions });\n      queryClient.invalidateQu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 79,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.financeOverview });\n      queryClient.invalidat..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 92,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.financeOverview });\n      queryClient.invalidat..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 106,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.financeOverview });\n      queryClient.invalidat..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 119,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.financeOverview });\n      queryClient.invalidat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 104,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: QUERY_KEYS.expenses });\n      que..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 117,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: QUERY_KEYS.expenses });\n      que..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 105,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.expenses });\n      queryClient.invalidateQuerie..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useFinance.ts",
          "startLine": 118,
          "block": "queryClient.invalidateQueries({ queryKey: QUERY_KEYS.expenses });\n      queryClient.invalidateQuerie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 1,
          "block": "import { useState, useCallback } from \"react\";\nimport { useToast } from \"@/hooks\";\nimport { useQuery..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 1,
          "block": "import { useState, useCallback } from \"react\";\nimport { useToast } from \"@/hooks\";\nimport { useQuery..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 2,
          "block": "import { useToast } from \"@/hooks\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport {..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 2,
          "block": "import { useToast } from \"@/hooks\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 3,
          "block": "import { useQueryClient } from \"@tanstack/react-query\";\nimport { Sale } from \"@/types\";\nimport { cre..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 3,
          "block": "import { useQueryClient } from \"@tanstack/react-query\";\nimport { Sale } from \"@/types\";\nimport { cre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 4,
          "block": "import { Sale } from \"@/types\";\nimport { createSale, updateSale, deleteSale } from \"@/features/sales..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 4,
          "block": "import { Sale } from \"@/types\";\nimport { createSale, updateSale, deleteSale } from \"@/features/sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 5,
          "block": "import { createSale, updateSale, deleteSale } from \"@/features/sales/services\";\nimport type { Create..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 5,
          "block": "import { createSale, updateSale, deleteSale } from \"@/features/sales/services\";\nimport type { Create..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 6,
          "block": "import type { CreateSaleRequest, UpdateSaleRequest } from \"@/features/sales/types\";\n\ninterface UseSa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 6,
          "block": "import type { CreateSaleRequest, UpdateSaleRequest } from \"@/features/sales/types\";\n\ninterface UseSa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 7,
          "block": "interface UseSalesDialogOptions {\n  onCreateSuccess?: (sale: Sale) => void;\n  onUpdateSuccess?: (sal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 7,
          "block": "interface UseSalesDialogOptions {\n  onCreateSuccess?: (sale: Sale) => void;\n  onUpdateSuccess?: (sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 8,
          "block": "interface UseSalesDialogOptions {\n  onCreateSuccess?: (sale: Sale) => void;\n  onUpdateSuccess?: (sal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 8,
          "block": "interface UseSalesDialogOptions {\n  onCreateSuccess?: (sale: Sale) => void;\n  onUpdateSuccess?: (sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 9,
          "block": "onCreateSuccess?: (sale: Sale) => void;\n  onUpdateSuccess?: (sale: Sale) => void;\n  onDeleteSuccess?..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 9,
          "block": "onCreateSuccess?: (sale: Sale) => void;\n  onUpdateSuccess?: (sale: Sale) => void;\n  onDeleteSuccess?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 10,
          "block": "onUpdateSuccess?: (sale: Sale) => void;\n  onDeleteSuccess?: (id: string) => void;\n}\n\nexport function..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 10,
          "block": "onUpdateSuccess?: (sale: Sale) => void;\n  onDeleteSuccess?: (id: string) => void;\n}\n\nexport function..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 14,
          "block": "export function useSalesDialog({\n  onCreateSuccess,\n  onUpdateSuccess,\n  onDeleteSuccess,\n}: UseSale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 14,
          "block": "export function useSalesDialog({\n  onCreateSuccess,\n  onUpdateSuccess,\n  onDeleteSuccess,\n}: UseSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 15,
          "block": "onCreateSuccess,\n  onUpdateSuccess,\n  onDeleteSuccess,\n}: UseSalesDialogOptions = {}) {\n  // Dialog ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 15,
          "block": "onCreateSuccess,\n  onUpdateSuccess,\n  onDeleteSuccess,\n}: UseSalesDialogOptions = {}) {\n  // Dialog ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 16,
          "block": "onUpdateSuccess,\n  onDeleteSuccess,\n}: UseSalesDialogOptions = {}) {\n  // Dialog state\n  const [isEd..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 16,
          "block": "onUpdateSuccess,\n  onDeleteSuccess,\n}: UseSalesDialogOptions = {}) {\n  // Dialog state\n  const [isEd..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 17,
          "block": "onDeleteSuccess,\n}: UseSalesDialogOptions = {}) {\n  // Dialog state\n  const [isEditDialogOpen, setIs..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 17,
          "block": "onDeleteSuccess,\n}: UseSalesDialogOptions = {}) {\n  // Dialog state\n  const [isEditDialogOpen, setIs..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 18,
          "block": "}: UseSalesDialogOptions = {}) {\n  // Dialog state\n  const [isEditDialogOpen, setIsEditDialogOpen] =..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 18,
          "block": "}: UseSalesDialogOptions = {}) {\n  // Dialog state\n  const [isEditDialogOpen, setIsEditDialogOpen] =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 19,
          "block": "// Dialog state\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDelete..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 19,
          "block": "// Dialog state\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDelete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 20,
          "block": "const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsD..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 20,
          "block": "const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 21,
          "block": "const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [selectedSale, setSelec..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 21,
          "block": "const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [selectedSale, setSelec..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 22,
          "block": "const [selectedSale, setSelectedSale] = useState<Sale | null>(null);\n  const [isSubmitting, setIsSub..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 22,
          "block": "const [selectedSale, setSelectedSale] = useState<Sale | null>(null);\n  const [isSubmitting, setIsSub..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 23,
          "block": "const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { toast } = useToast();\n  const qu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 23,
          "block": "const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { toast } = useToast();\n  const qu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 24,
          "block": "const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Reset selected sale when..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 24,
          "block": "const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Reset selected sale when..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 25,
          "block": "const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Reset selected sale when..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 25,
          "block": "const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Reset selected sale when..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 26,
          "block": "const queryClient = useQueryClient();\n\n  // Reset selected sale when edit dialog closes\n  const hand..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 26,
          "block": "const queryClient = useQueryClient();\n\n  // Reset selected sale when edit dialog closes\n  const hand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 27,
          "block": "// Reset selected sale when edit dialog closes\n  const handleEditDialogOpenChange = useCallback((ope..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 27,
          "block": "// Reset selected sale when edit dialog closes\n  const handleEditDialogOpenChange = useCallback((ope..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 28,
          "block": "// Reset selected sale when edit dialog closes\n  const handleEditDialogOpenChange = useCallback((ope..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 28,
          "block": "// Reset selected sale when edit dialog closes\n  const handleEditDialogOpenChange = useCallback((ope..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 29,
          "block": "const handleEditDialogOpenChange = useCallback((open: boolean) => {\n    setIsEditDialogOpen(open);\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 29,
          "block": "const handleEditDialogOpenChange = useCallback((open: boolean) => {\n    setIsEditDialogOpen(open);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 34,
          "block": "}, []);\n\n  // Open dialog for creating a new sale\n  const openCreateDialog = useCallback(() => {\n   ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 34,
          "block": "}, []);\n\n  // Open dialog for creating a new sale\n  const openCreateDialog = useCallback(() => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 35,
          "block": "// Open dialog for creating a new sale\n  const openCreateDialog = useCallback(() => {\n    setSelecte..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 35,
          "block": "// Open dialog for creating a new sale\n  const openCreateDialog = useCallback(() => {\n    setSelecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 36,
          "block": "// Open dialog for creating a new sale\n  const openCreateDialog = useCallback(() => {\n    setSelecte..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 36,
          "block": "// Open dialog for creating a new sale\n  const openCreateDialog = useCallback(() => {\n    setSelecte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 37,
          "block": "const openCreateDialog = useCallback(() => {\n    setSelectedSale(null);\n    setIsEditDialogOpen(true..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 37,
          "block": "const openCreateDialog = useCallback(() => {\n    setSelectedSale(null);\n    setIsEditDialogOpen(true..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 38,
          "block": "setSelectedSale(null);\n    setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for editing an exi..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 38,
          "block": "setSelectedSale(null);\n    setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for editing an exi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 39,
          "block": "setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for editing an existing sale\n  const openEdit..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 39,
          "block": "setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for editing an existing sale\n  const openEdit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 40,
          "block": "}, []);\n\n  // Open dialog for editing an existing sale\n  const openEditDialog = useCallback((sale: S..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 40,
          "block": "}, []);\n\n  // Open dialog for editing an existing sale\n  const openEditDialog = useCallback((sale: S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 41,
          "block": "// Open dialog for editing an existing sale\n  const openEditDialog = useCallback((sale: Sale) => {\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 41,
          "block": "// Open dialog for editing an existing sale\n  const openEditDialog = useCallback((sale: Sale) => {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 42,
          "block": "// Open dialog for editing an existing sale\n  const openEditDialog = useCallback((sale: Sale) => {\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 42,
          "block": "// Open dialog for editing an existing sale\n  const openEditDialog = useCallback((sale: Sale) => {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 43,
          "block": "const openEditDialog = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n    setIsEditDialogO..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 43,
          "block": "const openEditDialog = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n    setIsEditDialogO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 44,
          "block": "setSelectedSale(sale);\n    setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for confirming del..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 44,
          "block": "setSelectedSale(sale);\n    setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for confirming del..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 45,
          "block": "setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for confirming deletion\n  const openDeleteDia..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 45,
          "block": "setIsEditDialogOpen(true);\n  }, []);\n\n  // Open dialog for confirming deletion\n  const openDeleteDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 46,
          "block": "}, []);\n\n  // Open dialog for confirming deletion\n  const openDeleteDialog = useCallback((sale: Sale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 46,
          "block": "}, []);\n\n  // Open dialog for confirming deletion\n  const openDeleteDialog = useCallback((sale: Sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 47,
          "block": "// Open dialog for confirming deletion\n  const openDeleteDialog = useCallback((sale: Sale) => {\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 47,
          "block": "// Open dialog for confirming deletion\n  const openDeleteDialog = useCallback((sale: Sale) => {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 48,
          "block": "// Open dialog for confirming deletion\n  const openDeleteDialog = useCallback((sale: Sale) => {\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 48,
          "block": "// Open dialog for confirming deletion\n  const openDeleteDialog = useCallback((sale: Sale) => {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 49,
          "block": "const openDeleteDialog = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n    setIsDeleteDia..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 49,
          "block": "const openDeleteDialog = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n    setIsDeleteDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 50,
          "block": "setSelectedSale(sale);\n    setIsDeleteDialogOpen(true);\n  }, []);\n\n  // Handle form submission (crea..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 50,
          "block": "setSelectedSale(sale);\n    setIsDeleteDialogOpen(true);\n  }, []);\n\n  // Handle form submission (crea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 51,
          "block": "setIsDeleteDialogOpen(true);\n  }, []);\n\n  // Handle form submission (create or update)\n  const handl..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 51,
          "block": "setIsDeleteDialogOpen(true);\n  }, []);\n\n  // Handle form submission (create or update)\n  const handl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 52,
          "block": "}, []);\n\n  // Handle form submission (create or update)\n  const handleSubmit = useCallback(\n    asyn..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 52,
          "block": "}, []);\n\n  // Handle form submission (create or update)\n  const handleSubmit = useCallback(\n    asyn..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 53,
          "block": "// Handle form submission (create or update)\n  const handleSubmit = useCallback(\n    async (data: Cr..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 54,
          "block": "// Handle form submission (create or update)\n  const handleSubmit = useCallback(\n    async (data: Cr..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 53,
          "block": "// Handle form submission (create or update)\n  const handleSubmit = useCallback(\n    async (data: Cr..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 54,
          "block": "// Handle form submission (create or update)\n  const handleSubmit = useCallback(\n    async (data: Cr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 55,
          "block": "const handleSubmit = useCallback(\n    async (data: CreateSaleRequest) => {\n      setIsSubmitting(tru..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 55,
          "block": "const handleSubmit = useCallback(\n    async (data: CreateSaleRequest) => {\n      setIsSubmitting(tru..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 63,
          "block": "const updatedSale = await updateSale(selectedSale.id, updateData);\n\n          queryClient.invalidate..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 79,
          "block": "const updatedSale = await updateSale(selectedSale.id, updateData);\n\n          queryClient.invalidate..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 64,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 78,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 80,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 105,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 65,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 79,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 81,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 106,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n          queryClient.invalidateQueries({ qu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 66,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n          queryClient.invalidateQueries..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 80,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n          queryClient.invalidateQueries..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 82,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n          queryClient.invalidateQueries..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 107,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n          queryClient.invalidateQueries..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 67,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n          toast({\n            title: ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 83,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n          toast({\n            title: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 68,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale updated successfully and tank l..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 69,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale updated successfully and tank l..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 84,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale updated successfully and tank l..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 85,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale updated successfully and tank l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 70,
          "block": "title: \"Success\",\n            description: \"Sale updated successfully and tank level adjusted\",\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 86,
          "block": "title: \"Success\",\n            description: \"Sale updated successfully and tank level adjusted\",\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 71,
          "block": "description: \"Sale updated successfully and tank level adjusted\",\n          });\n\n          onUpdateS..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 87,
          "block": "description: \"Sale updated successfully and tank level adjusted\",\n          });\n\n          onUpdateS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 73,
          "block": "onUpdateSuccess?.(updatedSale);\n        } else {\n          // Create new sale\n          const newSal..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 74,
          "block": "onUpdateSuccess?.(updatedSale);\n        } else {\n          // Create new sale\n          const newSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 81,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n          toast({\n            title: ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 108,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n          toast({\n            title: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 82,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale created successfully and tank l..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 83,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale created successfully and tank l..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 109,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale created successfully and tank l..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 110,
          "block": "toast({\n            title: \"Success\",\n            description: \"Sale created successfully and tank l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 84,
          "block": "title: \"Success\",\n            description: \"Sale created successfully and tank level updated\",\n     ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 111,
          "block": "title: \"Success\",\n            description: \"Sale created successfully and tank level updated\",\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 85,
          "block": "description: \"Sale created successfully and tank level updated\",\n          });\n\n          onCreateSu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 112,
          "block": "description: \"Sale created successfully and tank level updated\",\n          });\n\n          onCreateSu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 88,
          "block": "onCreateSuccess?.(newSale);\n        }\n\n        setIsEditDialogOpen(false);\n      } catch (error: unk..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 115,
          "block": "onCreateSuccess?.(newSale);\n        }\n\n        setIsEditDialogOpen(false);\n      } catch (error: unk..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 89,
          "block": "}\n\n        setIsEditDialogOpen(false);\n      } catch (error: unknown) {\n        console.error(\"Error..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 116,
          "block": "}\n\n        setIsEditDialogOpen(false);\n      } catch (error: unknown) {\n        console.error(\"Error..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 90,
          "block": "setIsEditDialogOpen(false);\n      } catch (error: unknown) {\n        console.error(\"Error submitting..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 117,
          "block": "setIsEditDialogOpen(false);\n      } catch (error: unknown) {\n        console.error(\"Error submitting..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 91,
          "block": "setIsEditDialogOpen(false);\n      } catch (error: unknown) {\n        console.error(\"Error submitting..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 118,
          "block": "setIsEditDialogOpen(false);\n      } catch (error: unknown) {\n        console.error(\"Error submitting..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 92,
          "block": "} catch (error: unknown) {\n        console.error(\"Error submitting sale:\", error);\n        const err..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 119,
          "block": "} catch (error: unknown) {\n        console.error(\"Error submitting sale:\", error);\n        const err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 93,
          "block": "console.error(\"Error submitting sale:\", error);\n        const errorMessage = error instanceof Error ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 120,
          "block": "console.error(\"Error submitting sale:\", error);\n        const errorMessage = error instanceof Error ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 94,
          "block": "const errorMessage = error instanceof Error ? error.message : \"Failed to save sale\";\n        toast({..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 121,
          "block": "const errorMessage = error instanceof Error ? error.message : \"Failed to save sale\";\n        toast({..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 95,
          "block": "toast({\n          title: \"Error\",\n          description: errorMessage,\n          variant: \"destructi..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 122,
          "block": "toast({\n          title: \"Error\",\n          description: errorMessage,\n          variant: \"destructi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 96,
          "block": "title: \"Error\",\n          description: errorMessage,\n          variant: \"destructive\",\n        });\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 123,
          "block": "title: \"Error\",\n          description: errorMessage,\n          variant: \"destructive\",\n        });\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 97,
          "block": "description: errorMessage,\n          variant: \"destructive\",\n        });\n      } finally {\n        s..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 124,
          "block": "description: errorMessage,\n          variant: \"destructive\",\n        });\n      } finally {\n        s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 100,
          "block": "} finally {\n        setIsSubmitting(false);\n      }\n    },\n    [selectedSale, queryClient, toast, on..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 127,
          "block": "} finally {\n        setIsSubmitting(false);\n      }\n    },\n    [selectedSale, queryClient, toast, on..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 101,
          "block": "setIsSubmitting(false);\n      }\n    },\n    [selectedSale, queryClient, toast, onUpdateSuccess, onCre..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 128,
          "block": "setIsSubmitting(false);\n      }\n    },\n    [selectedSale, queryClient, toast, onUpdateSuccess, onCre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 103,
          "block": "},\n    [selectedSale, queryClient, toast, onUpdateSuccess, onCreateSuccess]\n  );\n\n  // Handle delete..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 130,
          "block": "},\n    [selectedSale, queryClient, toast, onUpdateSuccess, onCreateSuccess]\n  );\n\n  // Handle delete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 104,
          "block": "[selectedSale, queryClient, toast, onUpdateSuccess, onCreateSuccess]\n  );\n\n  // Handle delete confir..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 131,
          "block": "[selectedSale, queryClient, toast, onUpdateSuccess, onCreateSuccess]\n  );\n\n  // Handle delete confir..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 105,
          "block": ");\n\n  // Handle delete confirmation\n  const handleDelete = useCallback(async () => {\n    if (!select..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 132,
          "block": ");\n\n  // Handle delete confirmation\n  const handleDelete = useCallback(async () => {\n    if (!select..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 106,
          "block": "// Handle delete confirmation\n  const handleDelete = useCallback(async () => {\n    if (!selectedSale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 133,
          "block": "// Handle delete confirmation\n  const handleDelete = useCallback(async () => {\n    if (!selectedSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 107,
          "block": "// Handle delete confirmation\n  const handleDelete = useCallback(async () => {\n    if (!selectedSale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 134,
          "block": "// Handle delete confirmation\n  const handleDelete = useCallback(async () => {\n    if (!selectedSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 108,
          "block": "const handleDelete = useCallback(async () => {\n    if (!selectedSale?.id) return;\n\n    setIsSubmitti..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 135,
          "block": "const handleDelete = useCallback(async () => {\n    if (!selectedSale?.id) return;\n\n    setIsSubmitti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 112,
          "block": "try {\n      await deleteSale(selectedSale.id);\n\n      queryClient.invalidateQueries({ queryKey: [\"sa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 139,
          "block": "try {\n      await deleteSale(selectedSale.id);\n\n      queryClient.invalidateQueries({ queryKey: [\"sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 113,
          "block": "try {\n      await deleteSale(selectedSale.id);\n\n      queryClient.invalidateQueries({ queryKey: [\"sa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 140,
          "block": "try {\n      await deleteSale(selectedSale.id);\n\n      queryClient.invalidateQueries({ queryKey: [\"sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 114,
          "block": "await deleteSale(selectedSale.id);\n\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n  ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 141,
          "block": "await deleteSale(selectedSale.id);\n\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 115,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 142,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 116,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 33,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 143,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 33,
          "block": "queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.invalidateQueries({ queryK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 117,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n\n      toast({\n        title: \"Success\"..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 34,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n\n      toast({\n        title: \"Success\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 144,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n\n      toast({\n        title: \"Success\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 34,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n\n      toast({\n        title: \"Success\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 118,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 119,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 35,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 145,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 146,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 35,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 120,
          "block": "title: \"Success\",\n        description: \"Sale deleted successfully and tank level restored\",\n      })..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 147,
          "block": "title: \"Success\",\n        description: \"Sale deleted successfully and tank level restored\",\n      })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 121,
          "block": "description: \"Sale deleted successfully and tank level restored\",\n      });\n\n      onDeleteSuccess?...."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 148,
          "block": "description: \"Sale deleted successfully and tank level restored\",\n      });\n\n      onDeleteSuccess?...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 122,
          "block": "});\n\n      onDeleteSuccess?.(selectedSale.id);\n      setIsDeleteDialogOpen(false);\n    } catch (erro..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 149,
          "block": "});\n\n      onDeleteSuccess?.(selectedSale.id);\n      setIsDeleteDialogOpen(false);\n    } catch (erro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 123,
          "block": "onDeleteSuccess?.(selectedSale.id);\n      setIsDeleteDialogOpen(false);\n    } catch (error: unknown)..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 150,
          "block": "onDeleteSuccess?.(selectedSale.id);\n      setIsDeleteDialogOpen(false);\n    } catch (error: unknown)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 124,
          "block": "onDeleteSuccess?.(selectedSale.id);\n      setIsDeleteDialogOpen(false);\n    } catch (error: unknown)..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 151,
          "block": "onDeleteSuccess?.(selectedSale.id);\n      setIsDeleteDialogOpen(false);\n    } catch (error: unknown)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 125,
          "block": "setIsDeleteDialogOpen(false);\n    } catch (error: unknown) {\n      console.error(\"Error deleting sal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 152,
          "block": "setIsDeleteDialogOpen(false);\n    } catch (error: unknown) {\n      console.error(\"Error deleting sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 126,
          "block": "} catch (error: unknown) {\n      console.error(\"Error deleting sale:\", error);\n      const errorMess..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 153,
          "block": "} catch (error: unknown) {\n      console.error(\"Error deleting sale:\", error);\n      const errorMess..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 127,
          "block": "console.error(\"Error deleting sale:\", error);\n      const errorMessage = error instanceof Error ? er..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 154,
          "block": "console.error(\"Error deleting sale:\", error);\n      const errorMessage = error instanceof Error ? er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 128,
          "block": "const errorMessage = error instanceof Error ? error.message : \"Failed to delete sale\";\n      toast({..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 155,
          "block": "const errorMessage = error instanceof Error ? error.message : \"Failed to delete sale\";\n      toast({..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 129,
          "block": "toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 156,
          "block": "toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 283,
          "block": "toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 353,
          "block": "toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 427,
          "block": "toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 467,
          "block": "toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 130,
          "block": "title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } f..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 157,
          "block": "title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } f..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 284,
          "block": "title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } f..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 354,
          "block": "title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 131,
          "block": "description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubm..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useTankDialog.ts",
          "startLine": 107,
          "block": "description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubm..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 158,
          "block": "description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 133,
          "block": "});\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [selectedSale, queryClient, toast, onDe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 160,
          "block": "});\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [selectedSale, queryClient, toast, onDe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 134,
          "block": "} finally {\n      setIsSubmitting(false);\n    }\n  }, [selectedSale, queryClient, toast, onDeleteSucc..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 161,
          "block": "} finally {\n      setIsSubmitting(false);\n    }\n  }, [selectedSale, queryClient, toast, onDeleteSucc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 137,
          "block": "}, [selectedSale, queryClient, toast, onDeleteSuccess]);\n\n  return {\n    // Dialog state\n    isEditD..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 164,
          "block": "}, [selectedSale, queryClient, toast, onDeleteSuccess]);\n\n  return {\n    // Dialog state\n    isEditD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 140,
          "block": "// Dialog state\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDele..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 167,
          "block": "// Dialog state\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 141,
          "block": "isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    se..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 168,
          "block": "isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 142,
          "block": "setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    selectedSale,\n    isSubm..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 169,
          "block": "setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    selectedSale,\n    isSubm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 148,
          "block": "// Dialog actions\n    handleEditDialogOpenChange,\n    openCreateDialog,\n    openEditDialog,\n    open..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 175,
          "block": "// Dialog actions\n    handleEditDialogOpenChange,\n    openCreateDialog,\n    openEditDialog,\n    open..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesDialog.ts",
          "startLine": 149,
          "block": "handleEditDialogOpenChange,\n    openCreateDialog,\n    openEditDialog,\n    openDeleteDialog,\n    hand..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 176,
          "block": "handleEditDialogOpenChange,\n    openCreateDialog,\n    openEditDialog,\n    openDeleteDialog,\n    hand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 1,
          "block": "import { useState, useCallback, useMemo } from \"react\";\nimport { useSearchParams } from \"react-route..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 1,
          "block": "import { useState, useCallback, useMemo } from \"react\";\nimport { useSearchParams } from \"react-route..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 2,
          "block": "import { useSearchParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 2,
          "block": "import { useSearchParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { FuelTypeCode, PaymentStatus } from \"@/types..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { FuelTypeCode, PaymentStatus } from \"@/types..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 4,
          "block": "import { FuelTypeCode, PaymentStatus } from \"@/types\";\nimport { SalesFilters } from \"../types\";\n\nint..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 4,
          "block": "import { FuelTypeCode, PaymentStatus } from \"@/types\";\nimport { SalesFilters } from \"../types\";\n\nint..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 5,
          "block": "import { SalesFilters } from \"../types\";\n\ninterface UseSalesFiltersProps {\n  defaultFilters?: Partia..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 5,
          "block": "import { SalesFilters } from \"../types\";\n\ninterface UseSalesFiltersProps {\n  defaultFilters?: Partia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 7,
          "block": "interface UseSalesFiltersProps {\n  defaultFilters?: Partial<SalesFilters>;\n}\n\nexport function useSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 7,
          "block": "interface UseSalesFiltersProps {\n  defaultFilters?: Partial<SalesFilters>;\n}\n\nexport function useSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 10,
          "block": "export function useSalesFilters({\n  defaultFilters = {},\n}: UseSalesFiltersProps = {}) {\n  const { t..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 10,
          "block": "export function useSalesFilters({\n  defaultFilters = {},\n}: UseSalesFiltersProps = {}) {\n  const { t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 11,
          "block": "export function useSalesFilters({\n  defaultFilters = {},\n}: UseSalesFiltersProps = {}) {\n  const { t..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 11,
          "block": "export function useSalesFilters({\n  defaultFilters = {},\n}: UseSalesFiltersProps = {}) {\n  const { t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 12,
          "block": "defaultFilters = {},\n}: UseSalesFiltersProps = {}) {\n  const { t } = useTranslation([\"common\", \"sale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 12,
          "block": "defaultFilters = {},\n}: UseSalesFiltersProps = {}) {\n  const { t } = useTranslation([\"common\", \"sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 13,
          "block": "}: UseSalesFiltersProps = {}) {\n  const { t } = useTranslation([\"common\", \"sales\"]);\n  const [search..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 13,
          "block": "}: UseSalesFiltersProps = {}) {\n  const { t } = useTranslation([\"common\", \"sales\"]);\n  const [search..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 14,
          "block": "const { t } = useTranslation([\"common\", \"sales\"]);\n  const [searchParams, setSearchParams] = useSear..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 14,
          "block": "const { t } = useTranslation([\"common\", \"sales\"]);\n  const [searchParams, setSearchParams] = useSear..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 15,
          "block": "const [searchParams, setSearchParams] = useSearchParams();\n\n  // Initialize filters from URL params ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 15,
          "block": "const [searchParams, setSearchParams] = useSearchParams();\n\n  // Initialize filters from URL params ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 16,
          "block": "// Initialize filters from URL params or defaults\n  const initialFilters: SalesFilters = useMemo(() ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 16,
          "block": "// Initialize filters from URL params or defaults\n  const initialFilters: SalesFilters = useMemo(() ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 17,
          "block": "// Initialize filters from URL params or defaults\n  const initialFilters: SalesFilters = useMemo(() ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 17,
          "block": "// Initialize filters from URL params or defaults\n  const initialFilters: SalesFilters = useMemo(() ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 18,
          "block": "const initialFilters: SalesFilters = useMemo(() => {\n    const searchTerm =\n      searchParams.get(\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 18,
          "block": "const initialFilters: SalesFilters = useMemo(() => {\n    const searchTerm =\n      searchParams.get(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 19,
          "block": "const searchTerm =\n      searchParams.get(\"search\") || defaultFilters.searchTerm || \"\";\n    const fu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 19,
          "block": "const searchTerm =\n      searchParams.get(\"search\") || defaultFilters.searchTerm || \"\";\n    const fu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 20,
          "block": "searchParams.get(\"search\") || defaultFilters.searchTerm || \"\";\n    const fuelType = (searchParams.ge..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 20,
          "block": "searchParams.get(\"search\") || defaultFilters.searchTerm || \"\";\n    const fuelType = (searchParams.ge..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 21,
          "block": "const fuelType = (searchParams.get(\"fuelType\") ||\n      defaultFilters.fuelType ||\n      \"all\") as F..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 21,
          "block": "const fuelType = (searchParams.get(\"fuelType\") ||\n      defaultFilters.fuelType ||\n      \"all\") as F..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 22,
          "block": "defaultFilters.fuelType ||\n      \"all\") as FuelTypeCode | \"all\";\n    const paymentStatus = (searchPa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 22,
          "block": "defaultFilters.fuelType ||\n      \"all\") as FuelTypeCode | \"all\";\n    const paymentStatus = (searchPa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 23,
          "block": "\"all\") as FuelTypeCode | \"all\";\n    const paymentStatus = (searchParams.get(\"paymentStatus\") ||\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 23,
          "block": "\"all\") as FuelTypeCode | \"all\";\n    const paymentStatus = (searchParams.get(\"paymentStatus\") ||\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 24,
          "block": "const paymentStatus = (searchParams.get(\"paymentStatus\") ||\n      defaultFilters.paymentStatus ||\n  ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 24,
          "block": "const paymentStatus = (searchParams.get(\"paymentStatus\") ||\n      defaultFilters.paymentStatus ||\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 25,
          "block": "defaultFilters.paymentStatus ||\n      \"all\") as PaymentStatus | \"all\";\n    const fillingSystem =\n   ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 25,
          "block": "defaultFilters.paymentStatus ||\n      \"all\") as PaymentStatus | \"all\";\n    const fillingSystem =\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 26,
          "block": "\"all\") as PaymentStatus | \"all\";\n    const fillingSystem =\n      searchParams.get(\"fillingSystem\") |..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 26,
          "block": "\"all\") as PaymentStatus | \"all\";\n    const fillingSystem =\n      searchParams.get(\"fillingSystem\") |..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 27,
          "block": "const fillingSystem =\n      searchParams.get(\"fillingSystem\") ||\n      defaultFilters.fillingSystem ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 27,
          "block": "const fillingSystem =\n      searchParams.get(\"fillingSystem\") ||\n      defaultFilters.fillingSystem ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 28,
          "block": "searchParams.get(\"fillingSystem\") ||\n      defaultFilters.fillingSystem ||\n      \"all\";\n\n    // Hand..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 28,
          "block": "searchParams.get(\"fillingSystem\") ||\n      defaultFilters.fillingSystem ||\n      \"all\";\n\n    // Hand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 29,
          "block": "defaultFilters.fillingSystem ||\n      \"all\";\n\n    // Handle date range\n    let dateRange: SalesFilte..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 29,
          "block": "defaultFilters.fillingSystem ||\n      \"all\";\n\n    // Handle date range\n    let dateRange: SalesFilte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 30,
          "block": "\"all\";\n\n    // Handle date range\n    let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 30,
          "block": "\"all\";\n\n    // Handle date range\n    let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 31,
          "block": "// Handle date range\n    let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const startDate =..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 32,
          "block": "// Handle date range\n    let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const startDate =..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 31,
          "block": "// Handle date range\n    let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const startDate =..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 32,
          "block": "// Handle date range\n    let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const startDate =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 33,
          "block": "let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const startDate = searchParams.get(\"startD..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 33,
          "block": "let dateRange: SalesFilters[\"dateRange\"] = undefined;\n    const startDate = searchParams.get(\"startD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 34,
          "block": "const startDate = searchParams.get(\"startDate\");\n    const endDate = searchParams.get(\"endDate\");\n\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 34,
          "block": "const startDate = searchParams.get(\"startDate\");\n    const endDate = searchParams.get(\"endDate\");\n\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 35,
          "block": "const endDate = searchParams.get(\"endDate\");\n\n    if (startDate) {\n      dateRange = {\n        from:..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 35,
          "block": "const endDate = searchParams.get(\"endDate\");\n\n    if (startDate) {\n      dateRange = {\n        from:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 36,
          "block": "if (startDate) {\n      dateRange = {\n        from: new Date(startDate),\n        to: endDate ? new Da..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 36,
          "block": "if (startDate) {\n      dateRange = {\n        from: new Date(startDate),\n        to: endDate ? new Da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 37,
          "block": "if (startDate) {\n      dateRange = {\n        from: new Date(startDate),\n        to: endDate ? new Da..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 37,
          "block": "if (startDate) {\n      dateRange = {\n        from: new Date(startDate),\n        to: endDate ? new Da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 38,
          "block": "dateRange = {\n        from: new Date(startDate),\n        to: endDate ? new Date(endDate) : undefined..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 38,
          "block": "dateRange = {\n        from: new Date(startDate),\n        to: endDate ? new Date(endDate) : undefined..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 39,
          "block": "from: new Date(startDate),\n        to: endDate ? new Date(endDate) : undefined,\n      };\n    } else ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 39,
          "block": "from: new Date(startDate),\n        to: endDate ? new Date(endDate) : undefined,\n      };\n    } else ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 40,
          "block": "to: endDate ? new Date(endDate) : undefined,\n      };\n    } else if (defaultFilters.dateRange) {\n   ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 40,
          "block": "to: endDate ? new Date(endDate) : undefined,\n      };\n    } else if (defaultFilters.dateRange) {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 42,
          "block": "} else if (defaultFilters.dateRange) {\n      dateRange = defaultFilters.dateRange;\n    }\n\n    // Han..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 42,
          "block": "} else if (defaultFilters.dateRange) {\n      dateRange = defaultFilters.dateRange;\n    }\n\n    // Han..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 43,
          "block": "dateRange = defaultFilters.dateRange;\n    }\n\n    // Handle min/max quantity\n    const minQuantity = ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 43,
          "block": "dateRange = defaultFilters.dateRange;\n    }\n\n    // Handle min/max quantity\n    const minQuantity = ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 44,
          "block": "}\n\n    // Handle min/max quantity\n    const minQuantity = searchParams.get(\"minQuantity\")\n      ? Nu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 44,
          "block": "}\n\n    // Handle min/max quantity\n    const minQuantity = searchParams.get(\"minQuantity\")\n      ? Nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 45,
          "block": "// Handle min/max quantity\n    const minQuantity = searchParams.get(\"minQuantity\")\n      ? Number(se..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 46,
          "block": "// Handle min/max quantity\n    const minQuantity = searchParams.get(\"minQuantity\")\n      ? Number(se..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 45,
          "block": "// Handle min/max quantity\n    const minQuantity = searchParams.get(\"minQuantity\")\n      ? Number(se..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 46,
          "block": "// Handle min/max quantity\n    const minQuantity = searchParams.get(\"minQuantity\")\n      ? Number(se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 47,
          "block": "const minQuantity = searchParams.get(\"minQuantity\")\n      ? Number(searchParams.get(\"minQuantity\"))\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 47,
          "block": "const minQuantity = searchParams.get(\"minQuantity\")\n      ? Number(searchParams.get(\"minQuantity\"))\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 48,
          "block": "? Number(searchParams.get(\"minQuantity\"))\n      : defaultFilters.minQuantity;\n\n    const maxQuantity..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 48,
          "block": "? Number(searchParams.get(\"minQuantity\"))\n      : defaultFilters.minQuantity;\n\n    const maxQuantity..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 49,
          "block": ": defaultFilters.minQuantity;\n\n    const maxQuantity = searchParams.get(\"maxQuantity\")\n      ? Numbe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 49,
          "block": ": defaultFilters.minQuantity;\n\n    const maxQuantity = searchParams.get(\"maxQuantity\")\n      ? Numbe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 50,
          "block": "const maxQuantity = searchParams.get(\"maxQuantity\")\n      ? Number(searchParams.get(\"maxQuantity\"))\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 50,
          "block": "const maxQuantity = searchParams.get(\"maxQuantity\")\n      ? Number(searchParams.get(\"maxQuantity\"))\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 51,
          "block": "const maxQuantity = searchParams.get(\"maxQuantity\")\n      ? Number(searchParams.get(\"maxQuantity\"))\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 51,
          "block": "const maxQuantity = searchParams.get(\"maxQuantity\")\n      ? Number(searchParams.get(\"maxQuantity\"))\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 52,
          "block": "? Number(searchParams.get(\"maxQuantity\"))\n      : defaultFilters.maxQuantity;\n\n    // Handle min/max..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 52,
          "block": "? Number(searchParams.get(\"maxQuantity\"))\n      : defaultFilters.maxQuantity;\n\n    // Handle min/max..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 53,
          "block": ": defaultFilters.maxQuantity;\n\n    // Handle min/max amount\n    const minAmount = searchParams.get(\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 53,
          "block": ": defaultFilters.maxQuantity;\n\n    // Handle min/max amount\n    const minAmount = searchParams.get(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 54,
          "block": "// Handle min/max amount\n    const minAmount = searchParams.get(\"minAmount\")\n      ? Number(searchPa..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 55,
          "block": "// Handle min/max amount\n    const minAmount = searchParams.get(\"minAmount\")\n      ? Number(searchPa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 54,
          "block": "// Handle min/max amount\n    const minAmount = searchParams.get(\"minAmount\")\n      ? Number(searchPa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 55,
          "block": "// Handle min/max amount\n    const minAmount = searchParams.get(\"minAmount\")\n      ? Number(searchPa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 56,
          "block": "const minAmount = searchParams.get(\"minAmount\")\n      ? Number(searchParams.get(\"minAmount\"))\n      ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 56,
          "block": "const minAmount = searchParams.get(\"minAmount\")\n      ? Number(searchParams.get(\"minAmount\"))\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 57,
          "block": "? Number(searchParams.get(\"minAmount\"))\n      : defaultFilters.minAmount;\n\n    const maxAmount = sea..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 57,
          "block": "? Number(searchParams.get(\"minAmount\"))\n      : defaultFilters.minAmount;\n\n    const maxAmount = sea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 58,
          "block": ": defaultFilters.minAmount;\n\n    const maxAmount = searchParams.get(\"maxAmount\")\n      ? Number(sear..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 58,
          "block": ": defaultFilters.minAmount;\n\n    const maxAmount = searchParams.get(\"maxAmount\")\n      ? Number(sear..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 59,
          "block": "const maxAmount = searchParams.get(\"maxAmount\")\n      ? Number(searchParams.get(\"maxAmount\"))\n      ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 59,
          "block": "const maxAmount = searchParams.get(\"maxAmount\")\n      ? Number(searchParams.get(\"maxAmount\"))\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 60,
          "block": "const maxAmount = searchParams.get(\"maxAmount\")\n      ? Number(searchParams.get(\"maxAmount\"))\n      ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 60,
          "block": "const maxAmount = searchParams.get(\"maxAmount\")\n      ? Number(searchParams.get(\"maxAmount\"))\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 61,
          "block": "? Number(searchParams.get(\"maxAmount\"))\n      : defaultFilters.maxAmount;\n\n    return {\n      search..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 61,
          "block": "? Number(searchParams.get(\"maxAmount\"))\n      : defaultFilters.maxAmount;\n\n    return {\n      search..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 73,
          "block": "maxAmount,\n    };\n  }, [searchParams, defaultFilters]);\n\n  const [filters, setFilters] = useState<Sa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 73,
          "block": "maxAmount,\n    };\n  }, [searchParams, defaultFilters]);\n\n  const [filters, setFilters] = useState<Sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 74,
          "block": "};\n  }, [searchParams, defaultFilters]);\n\n  const [filters, setFilters] = useState<SalesFilters>(ini..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 74,
          "block": "};\n  }, [searchParams, defaultFilters]);\n\n  const [filters, setFilters] = useState<SalesFilters>(ini..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 75,
          "block": "}, [searchParams, defaultFilters]);\n\n  const [filters, setFilters] = useState<SalesFilters>(initialF..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 75,
          "block": "}, [searchParams, defaultFilters]);\n\n  const [filters, setFilters] = useState<SalesFilters>(initialF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 76,
          "block": "const [filters, setFilters] = useState<SalesFilters>(initialFilters);\n\n  // Sync filters with URL pa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 76,
          "block": "const [filters, setFilters] = useState<SalesFilters>(initialFilters);\n\n  // Sync filters with URL pa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 77,
          "block": "const [filters, setFilters] = useState<SalesFilters>(initialFilters);\n\n  // Sync filters with URL pa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 77,
          "block": "const [filters, setFilters] = useState<SalesFilters>(initialFilters);\n\n  // Sync filters with URL pa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 78,
          "block": "// Sync filters with URL params\n  const updateFilters = useCallback(\n    (newFilters: Partial<SalesF..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 78,
          "block": "// Sync filters with URL params\n  const updateFilters = useCallback(\n    (newFilters: Partial<SalesF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 79,
          "block": "// Sync filters with URL params\n  const updateFilters = useCallback(\n    (newFilters: Partial<SalesF..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 79,
          "block": "// Sync filters with URL params\n  const updateFilters = useCallback(\n    (newFilters: Partial<SalesF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 80,
          "block": "const updateFilters = useCallback(\n    (newFilters: Partial<SalesFilters>) => {\n      const updatedF..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 80,
          "block": "const updateFilters = useCallback(\n    (newFilters: Partial<SalesFilters>) => {\n      const updatedF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 81,
          "block": "(newFilters: Partial<SalesFilters>) => {\n      const updatedFilters = { ...filters, ...newFilters };..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 81,
          "block": "(newFilters: Partial<SalesFilters>) => {\n      const updatedFilters = { ...filters, ...newFilters };..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 82,
          "block": "const updatedFilters = { ...filters, ...newFilters };\n      setFilters(updatedFilters);\n\n      // Up..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 82,
          "block": "const updatedFilters = { ...filters, ...newFilters };\n      setFilters(updatedFilters);\n\n      // Up..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 84,
          "block": "// Update URL params\n      const params = new URLSearchParams();\n\n      if (updatedFilters.searchTer..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 84,
          "block": "// Update URL params\n      const params = new URLSearchParams();\n\n      if (updatedFilters.searchTer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 85,
          "block": "// Update URL params\n      const params = new URLSearchParams();\n\n      if (updatedFilters.searchTer..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 85,
          "block": "// Update URL params\n      const params = new URLSearchParams();\n\n      if (updatedFilters.searchTer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 86,
          "block": "const params = new URLSearchParams();\n\n      if (updatedFilters.searchTerm)\n        params.set(\"sear..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 86,
          "block": "const params = new URLSearchParams();\n\n      if (updatedFilters.searchTerm)\n        params.set(\"sear..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 87,
          "block": "if (updatedFilters.searchTerm)\n        params.set(\"search\", updatedFilters.searchTerm);\n      if (up..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 87,
          "block": "if (updatedFilters.searchTerm)\n        params.set(\"search\", updatedFilters.searchTerm);\n      if (up..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 88,
          "block": "if (updatedFilters.searchTerm)\n        params.set(\"search\", updatedFilters.searchTerm);\n      if (up..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 88,
          "block": "if (updatedFilters.searchTerm)\n        params.set(\"search\", updatedFilters.searchTerm);\n      if (up..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 89,
          "block": "params.set(\"search\", updatedFilters.searchTerm);\n      if (updatedFilters.fuelType && updatedFilters..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 89,
          "block": "params.set(\"search\", updatedFilters.searchTerm);\n      if (updatedFilters.fuelType && updatedFilters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 90,
          "block": "if (updatedFilters.fuelType && updatedFilters.fuelType !== \"all\") {\n        params.set(\"fuelType\", u..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 90,
          "block": "if (updatedFilters.fuelType && updatedFilters.fuelType !== \"all\") {\n        params.set(\"fuelType\", u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 91,
          "block": "params.set(\"fuelType\", updatedFilters.fuelType);\n      }\n      if (\n        updatedFilters.paymentSt..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 91,
          "block": "params.set(\"fuelType\", updatedFilters.fuelType);\n      }\n      if (\n        updatedFilters.paymentSt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 92,
          "block": "}\n      if (\n        updatedFilters.paymentStatus &&\n        updatedFilters.paymentStatus !== \"all\"\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 92,
          "block": "}\n      if (\n        updatedFilters.paymentStatus &&\n        updatedFilters.paymentStatus !== \"all\"\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 93,
          "block": "if (\n        updatedFilters.paymentStatus &&\n        updatedFilters.paymentStatus !== \"all\"\n      ) ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 93,
          "block": "if (\n        updatedFilters.paymentStatus &&\n        updatedFilters.paymentStatus !== \"all\"\n      ) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 94,
          "block": "updatedFilters.paymentStatus &&\n        updatedFilters.paymentStatus !== \"all\"\n      ) {\n        par..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 94,
          "block": "updatedFilters.paymentStatus &&\n        updatedFilters.paymentStatus !== \"all\"\n      ) {\n        par..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 95,
          "block": "updatedFilters.paymentStatus !== \"all\"\n      ) {\n        params.set(\"paymentStatus\", updatedFilters...."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 95,
          "block": "updatedFilters.paymentStatus !== \"all\"\n      ) {\n        params.set(\"paymentStatus\", updatedFilters...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 96,
          "block": ") {\n        params.set(\"paymentStatus\", updatedFilters.paymentStatus);\n      }\n      if (\n        up..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 96,
          "block": ") {\n        params.set(\"paymentStatus\", updatedFilters.paymentStatus);\n      }\n      if (\n        up..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 97,
          "block": "params.set(\"paymentStatus\", updatedFilters.paymentStatus);\n      }\n      if (\n        updatedFilters..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 97,
          "block": "params.set(\"paymentStatus\", updatedFilters.paymentStatus);\n      }\n      if (\n        updatedFilters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 98,
          "block": "}\n      if (\n        updatedFilters.fillingSystem &&\n        updatedFilters.fillingSystem !== \"all\"\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 98,
          "block": "}\n      if (\n        updatedFilters.fillingSystem &&\n        updatedFilters.fillingSystem !== \"all\"\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 99,
          "block": "if (\n        updatedFilters.fillingSystem &&\n        updatedFilters.fillingSystem !== \"all\"\n      ) ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 99,
          "block": "if (\n        updatedFilters.fillingSystem &&\n        updatedFilters.fillingSystem !== \"all\"\n      ) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 100,
          "block": "updatedFilters.fillingSystem &&\n        updatedFilters.fillingSystem !== \"all\"\n      ) {\n        par..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 100,
          "block": "updatedFilters.fillingSystem &&\n        updatedFilters.fillingSystem !== \"all\"\n      ) {\n        par..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 101,
          "block": "updatedFilters.fillingSystem !== \"all\"\n      ) {\n        params.set(\"fillingSystem\", updatedFilters...."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 101,
          "block": "updatedFilters.fillingSystem !== \"all\"\n      ) {\n        params.set(\"fillingSystem\", updatedFilters...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 102,
          "block": ") {\n        params.set(\"fillingSystem\", updatedFilters.fillingSystem);\n      }\n\n      // Handle date..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 102,
          "block": ") {\n        params.set(\"fillingSystem\", updatedFilters.fillingSystem);\n      }\n\n      // Handle date..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 103,
          "block": "params.set(\"fillingSystem\", updatedFilters.fillingSystem);\n      }\n\n      // Handle date range\n     ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 103,
          "block": "params.set(\"fillingSystem\", updatedFilters.fillingSystem);\n      }\n\n      // Handle date range\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 105,
          "block": "// Handle date range\n      if (updatedFilters.dateRange?.from) {\n        params.set(\n          \"star..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 105,
          "block": "// Handle date range\n      if (updatedFilters.dateRange?.from) {\n        params.set(\n          \"star..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 106,
          "block": "// Handle date range\n      if (updatedFilters.dateRange?.from) {\n        params.set(\n          \"star..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 106,
          "block": "// Handle date range\n      if (updatedFilters.dateRange?.from) {\n        params.set(\n          \"star..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 107,
          "block": "if (updatedFilters.dateRange?.from) {\n        params.set(\n          \"startDate\",\n          updatedFi..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 107,
          "block": "if (updatedFilters.dateRange?.from) {\n        params.set(\n          \"startDate\",\n          updatedFi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 108,
          "block": "params.set(\n          \"startDate\",\n          updatedFilters.dateRange.from.toISOString().split(\"T\")[..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 108,
          "block": "params.set(\n          \"startDate\",\n          updatedFilters.dateRange.from.toISOString().split(\"T\")[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 109,
          "block": "\"startDate\",\n          updatedFilters.dateRange.from.toISOString().split(\"T\")[0]\n        );\n\n       ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 109,
          "block": "\"startDate\",\n          updatedFilters.dateRange.from.toISOString().split(\"T\")[0]\n        );\n\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 110,
          "block": "updatedFilters.dateRange.from.toISOString().split(\"T\")[0]\n        );\n\n        if (updatedFilters.dat..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 110,
          "block": "updatedFilters.dateRange.from.toISOString().split(\"T\")[0]\n        );\n\n        if (updatedFilters.dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 112,
          "block": "if (updatedFilters.dateRange.to) {\n          params.set(\n            \"endDate\",\n            updatedF..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 112,
          "block": "if (updatedFilters.dateRange.to) {\n          params.set(\n            \"endDate\",\n            updatedF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 113,
          "block": "if (updatedFilters.dateRange.to) {\n          params.set(\n            \"endDate\",\n            updatedF..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 113,
          "block": "if (updatedFilters.dateRange.to) {\n          params.set(\n            \"endDate\",\n            updatedF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 114,
          "block": "params.set(\n            \"endDate\",\n            updatedFilters.dateRange.to.toISOString().split(\"T\")[..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 114,
          "block": "params.set(\n            \"endDate\",\n            updatedFilters.dateRange.to.toISOString().split(\"T\")[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 115,
          "block": "\"endDate\",\n            updatedFilters.dateRange.to.toISOString().split(\"T\")[0]\n          );\n        ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 115,
          "block": "\"endDate\",\n            updatedFilters.dateRange.to.toISOString().split(\"T\")[0]\n          );\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 119,
          "block": "}\n\n      // Handle min/max quantity\n      if (updatedFilters.minQuantity)\n        params.set(\"minQua..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 119,
          "block": "}\n\n      // Handle min/max quantity\n      if (updatedFilters.minQuantity)\n        params.set(\"minQua..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 120,
          "block": "// Handle min/max quantity\n      if (updatedFilters.minQuantity)\n        params.set(\"minQuantity\", u..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 120,
          "block": "// Handle min/max quantity\n      if (updatedFilters.minQuantity)\n        params.set(\"minQuantity\", u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 121,
          "block": "// Handle min/max quantity\n      if (updatedFilters.minQuantity)\n        params.set(\"minQuantity\", u..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 121,
          "block": "// Handle min/max quantity\n      if (updatedFilters.minQuantity)\n        params.set(\"minQuantity\", u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 122,
          "block": "if (updatedFilters.minQuantity)\n        params.set(\"minQuantity\", updatedFilters.minQuantity.toStrin..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 122,
          "block": "if (updatedFilters.minQuantity)\n        params.set(\"minQuantity\", updatedFilters.minQuantity.toStrin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 123,
          "block": "params.set(\"minQuantity\", updatedFilters.minQuantity.toString());\n      if (updatedFilters.maxQuanti..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 123,
          "block": "params.set(\"minQuantity\", updatedFilters.minQuantity.toString());\n      if (updatedFilters.maxQuanti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 124,
          "block": "if (updatedFilters.maxQuantity)\n        params.set(\"maxQuantity\", updatedFilters.maxQuantity.toStrin..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 124,
          "block": "if (updatedFilters.maxQuantity)\n        params.set(\"maxQuantity\", updatedFilters.maxQuantity.toStrin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 125,
          "block": "params.set(\"maxQuantity\", updatedFilters.maxQuantity.toString());\n\n      // Handle min/max amount\n  ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 125,
          "block": "params.set(\"maxQuantity\", updatedFilters.maxQuantity.toString());\n\n      // Handle min/max amount\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 126,
          "block": "// Handle min/max amount\n      if (updatedFilters.minAmount)\n        params.set(\"minAmount\", updated..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 126,
          "block": "// Handle min/max amount\n      if (updatedFilters.minAmount)\n        params.set(\"minAmount\", updated..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 127,
          "block": "// Handle min/max amount\n      if (updatedFilters.minAmount)\n        params.set(\"minAmount\", updated..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 127,
          "block": "// Handle min/max amount\n      if (updatedFilters.minAmount)\n        params.set(\"minAmount\", updated..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 128,
          "block": "if (updatedFilters.minAmount)\n        params.set(\"minAmount\", updatedFilters.minAmount.toString());\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 128,
          "block": "if (updatedFilters.minAmount)\n        params.set(\"minAmount\", updatedFilters.minAmount.toString());\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 129,
          "block": "params.set(\"minAmount\", updatedFilters.minAmount.toString());\n      if (updatedFilters.maxAmount)\n  ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 129,
          "block": "params.set(\"minAmount\", updatedFilters.minAmount.toString());\n      if (updatedFilters.maxAmount)\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 130,
          "block": "if (updatedFilters.maxAmount)\n        params.set(\"maxAmount\", updatedFilters.maxAmount.toString());\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 130,
          "block": "if (updatedFilters.maxAmount)\n        params.set(\"maxAmount\", updatedFilters.maxAmount.toString());\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 131,
          "block": "params.set(\"maxAmount\", updatedFilters.maxAmount.toString());\n\n      setSearchParams(params);\n    },..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 131,
          "block": "params.set(\"maxAmount\", updatedFilters.maxAmount.toString());\n\n      setSearchParams(params);\n    },..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 135,
          "block": "[filters, setSearchParams]\n  );\n\n  const resetFilters = useCallback(() => {\n    setFilters(defaultFi..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 135,
          "block": "[filters, setSearchParams]\n  );\n\n  const resetFilters = useCallback(() => {\n    setFilters(defaultFi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 136,
          "block": ");\n\n  const resetFilters = useCallback(() => {\n    setFilters(defaultFilters as SalesFilters);\n    s..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 136,
          "block": ");\n\n  const resetFilters = useCallback(() => {\n    setFilters(defaultFilters as SalesFilters);\n    s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 137,
          "block": "const resetFilters = useCallback(() => {\n    setFilters(defaultFilters as SalesFilters);\n    setSear..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 138,
          "block": "const resetFilters = useCallback(() => {\n    setFilters(defaultFilters as SalesFilters);\n    setSear..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 137,
          "block": "const resetFilters = useCallback(() => {\n    setFilters(defaultFilters as SalesFilters);\n    setSear..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 138,
          "block": "const resetFilters = useCallback(() => {\n    setFilters(defaultFilters as SalesFilters);\n    setSear..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 139,
          "block": "setFilters(defaultFilters as SalesFilters);\n    setSearchParams(new URLSearchParams());\n  }, [defaul..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 139,
          "block": "setFilters(defaultFilters as SalesFilters);\n    setSearchParams(new URLSearchParams());\n  }, [defaul..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 140,
          "block": "setSearchParams(new URLSearchParams());\n  }, [defaultFilters, setSearchParams]);\n\n  // Predefined fi..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 140,
          "block": "setSearchParams(new URLSearchParams());\n  }, [defaultFilters, setSearchParams]);\n\n  // Predefined fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 141,
          "block": "}, [defaultFilters, setSearchParams]);\n\n  // Predefined filter options\n  const filterOptions = useMe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 141,
          "block": "}, [defaultFilters, setSearchParams]);\n\n  // Predefined filter options\n  const filterOptions = useMe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 143,
          "block": "// Predefined filter options\n  const filterOptions = useMemo(() => {\n    return {\n      fuelTypes: [..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 143,
          "block": "// Predefined filter options\n  const filterOptions = useMemo(() => {\n    return {\n      fuelTypes: [..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 144,
          "block": "const filterOptions = useMemo(() => {\n    return {\n      fuelTypes: [\n        { value: \"all\", label:..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 144,
          "block": "const filterOptions = useMemo(() => {\n    return {\n      fuelTypes: [\n        { value: \"all\", label:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 145,
          "block": "return {\n      fuelTypes: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"dies..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 145,
          "block": "return {\n      fuelTypes: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"dies..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 146,
          "block": "fuelTypes: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"diesel\", label: t(\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 146,
          "block": "fuelTypes: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"diesel\", label: t(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 147,
          "block": "{ value: \"all\", label: t(\"common:all\") },\n        { value: \"diesel\", label: t(\"sales:fuelTypes.diese..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 147,
          "block": "{ value: \"all\", label: t(\"common:all\") },\n        { value: \"diesel\", label: t(\"sales:fuelTypes.diese..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 148,
          "block": "{ value: \"diesel\", label: t(\"sales:fuelTypes.diesel\") },\n        { value: \"gas\", label: t(\"sales:fue..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 148,
          "block": "{ value: \"diesel\", label: t(\"sales:fuelTypes.diesel\") },\n        { value: \"gas\", label: t(\"sales:fue..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 149,
          "block": "{ value: \"gas\", label: t(\"sales:fuelTypes.gas\") },\n        { value: \"petrol_regular\", label: t(\"sale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 149,
          "block": "{ value: \"gas\", label: t(\"sales:fuelTypes.gas\") },\n        { value: \"petrol_regular\", label: t(\"sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 150,
          "block": "{ value: \"petrol_regular\", label: t(\"sales:fuelTypes.petrol_regular\") },\n        { value: \"petrol_pr..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 150,
          "block": "{ value: \"petrol_regular\", label: t(\"sales:fuelTypes.petrol_regular\") },\n        { value: \"petrol_pr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 151,
          "block": "{ value: \"petrol_premium\", label: t(\"sales:fuelTypes.petrol_premium\") },\n      ],\n      paymentStatu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 151,
          "block": "{ value: \"petrol_premium\", label: t(\"sales:fuelTypes.petrol_premium\") },\n      ],\n      paymentStatu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 152,
          "block": "],\n      paymentStatuses: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"pend..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 152,
          "block": "],\n      paymentStatuses: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"pend..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 153,
          "block": "paymentStatuses: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"pending\", lab..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 153,
          "block": "paymentStatuses: [\n        { value: \"all\", label: t(\"common:all\") },\n        { value: \"pending\", lab..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 154,
          "block": "{ value: \"all\", label: t(\"common:all\") },\n        { value: \"pending\", label: t(\"sales:paymentStatuse..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 154,
          "block": "{ value: \"all\", label: t(\"common:all\") },\n        { value: \"pending\", label: t(\"sales:paymentStatuse..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 155,
          "block": "{ value: \"pending\", label: t(\"sales:paymentStatuses.pending\") },\n        { value: \"completed\", label..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 155,
          "block": "{ value: \"pending\", label: t(\"sales:paymentStatuses.pending\") },\n        { value: \"completed\", label..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 156,
          "block": "{ value: \"completed\", label: t(\"sales:paymentStatuses.completed\") },\n        { value: \"cancelled\", l..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 156,
          "block": "{ value: \"completed\", label: t(\"sales:paymentStatuses.completed\") },\n        { value: \"cancelled\", l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 157,
          "block": "{ value: \"cancelled\", label: t(\"sales:paymentStatuses.cancelled\") },\n        { value: \"paid\", label:..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 157,
          "block": "{ value: \"cancelled\", label: t(\"sales:paymentStatuses.cancelled\") },\n        { value: \"paid\", label:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 158,
          "block": "{ value: \"paid\", label: t(\"sales:paymentStatuses.paid\") },\n        { value: \"failed\", label: t(\"sale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 158,
          "block": "{ value: \"paid\", label: t(\"sales:paymentStatuses.paid\") },\n        { value: \"failed\", label: t(\"sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesFilters.ts",
          "startLine": 159,
          "block": "{ value: \"failed\", label: t(\"sales:paymentStatuses.failed\") },\n        { value: \"refunded\", label: t..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesFilters.ts",
          "startLine": 159,
          "block": "{ value: \"failed\", label: t(\"sales:paymentStatuses.failed\") },\n        { value: \"refunded\", label: t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 1,
          "block": "import { useState, useCallback, useEffect } from \"react\";\nimport { useMutation, useQueryClient } fro..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 1,
          "block": "import { useState, useCallback, useEffect } from \"react\";\nimport { useMutation, useQueryClient } fro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 2,
          "block": "import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { salesApi, Sale } from ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 2,
          "block": "import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { salesApi, Sale } from ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 3,
          "block": "import { salesApi, Sale } from \"@/core/api\";\nimport { useToast } from \"@/hooks\";\n\n// Define the upda..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 3,
          "block": "import { salesApi, Sale } from \"@/core/api\";\nimport { useToast } from \"@/hooks\";\n\n// Define the upda..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 4,
          "block": "import { useToast } from \"@/hooks\";\n\n// Define the update request interface based on the Sale type\ni..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 4,
          "block": "import { useToast } from \"@/hooks\";\n\n// Define the update request interface based on the Sale type\ni..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 5,
          "block": "// Define the update request interface based on the Sale type\ninterface UpdateSaleRequest {\n  fillin..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 5,
          "block": "// Define the update request interface based on the Sale type\ninterface UpdateSaleRequest {\n  fillin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 6,
          "block": "// Define the update request interface based on the Sale type\ninterface UpdateSaleRequest {\n  fillin..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 6,
          "block": "// Define the update request interface based on the Sale type\ninterface UpdateSaleRequest {\n  fillin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 7,
          "block": "interface UpdateSaleRequest {\n  filling_system_id?: string;\n  fuel_type_id?: string;\n  quantity?: nu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 7,
          "block": "interface UpdateSaleRequest {\n  filling_system_id?: string;\n  fuel_type_id?: string;\n  quantity?: nu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 8,
          "block": "filling_system_id?: string;\n  fuel_type_id?: string;\n  quantity?: number;\n  price_per_liter?: number..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 8,
          "block": "filling_system_id?: string;\n  fuel_type_id?: string;\n  quantity?: number;\n  price_per_liter?: number..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 9,
          "block": "fuel_type_id?: string;\n  quantity?: number;\n  price_per_liter?: number;\n  total_price?: number;\n  pa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 9,
          "block": "fuel_type_id?: string;\n  quantity?: number;\n  price_per_liter?: number;\n  total_price?: number;\n  pa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 10,
          "block": "quantity?: number;\n  price_per_liter?: number;\n  total_price?: number;\n  payment_method?: string;\n  ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 10,
          "block": "quantity?: number;\n  price_per_liter?: number;\n  total_price?: number;\n  payment_method?: string;\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 11,
          "block": "price_per_liter?: number;\n  total_price?: number;\n  payment_method?: string;\n  employee_id?: string;..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 11,
          "block": "price_per_liter?: number;\n  total_price?: number;\n  payment_method?: string;\n  employee_id?: string;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 12,
          "block": "total_price?: number;\n  payment_method?: string;\n  employee_id?: string;\n  shift_id?: string;\n  comm..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 12,
          "block": "total_price?: number;\n  payment_method?: string;\n  employee_id?: string;\n  shift_id?: string;\n  comm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 17,
          "block": "}\n\nexport function useSalesMutations() {\n  // State declarations\n  const [selectedSale, setSelectedS..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 17,
          "block": "}\n\nexport function useSalesMutations() {\n  // State declarations\n  const [selectedSale, setSelectedS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 18,
          "block": "export function useSalesMutations() {\n  // State declarations\n  const [selectedSale, setSelectedSale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 18,
          "block": "export function useSalesMutations() {\n  // State declarations\n  const [selectedSale, setSelectedSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 19,
          "block": "export function useSalesMutations() {\n  // State declarations\n  const [selectedSale, setSelectedSale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 19,
          "block": "export function useSalesMutations() {\n  // State declarations\n  const [selectedSale, setSelectedSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 20,
          "block": "// State declarations\n  const [selectedSale, setSelectedSale] = useState<Sale | null>(null);\n  const..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 20,
          "block": "// State declarations\n  const [selectedSale, setSelectedSale] = useState<Sale | null>(null);\n  const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 21,
          "block": "const [selectedSale, setSelectedSale] = useState<Sale | null>(null);\n  const [isEditDialogOpen, setI..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 21,
          "block": "const [selectedSale, setSelectedSale] = useState<Sale | null>(null);\n  const [isEditDialogOpen, setI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 22,
          "block": "const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsD..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 22,
          "block": "const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 23,
          "block": "const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [saleToDelete, setSaleT..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 23,
          "block": "const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [saleToDelete, setSaleT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 24,
          "block": "const [saleToDelete, setSaleToDelete] = useState<string | null>(null);\n\n  const queryClient = useQue..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 24,
          "block": "const [saleToDelete, setSaleToDelete] = useState<string | null>(null);\n\n  const queryClient = useQue..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 26,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Define mutations\n  const..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 26,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Define mutations\n  const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 27,
          "block": "const { toast } = useToast();\n\n  // Define mutations\n  const deleteMutation = useMutation({\n    muta..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 27,
          "block": "const { toast } = useToast();\n\n  // Define mutations\n  const deleteMutation = useMutation({\n    muta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 28,
          "block": "// Define mutations\n  const deleteMutation = useMutation({\n    mutationFn: salesApi.deleteSale,\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 28,
          "block": "// Define mutations\n  const deleteMutation = useMutation({\n    mutationFn: salesApi.deleteSale,\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 29,
          "block": "// Define mutations\n  const deleteMutation = useMutation({\n    mutationFn: salesApi.deleteSale,\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 29,
          "block": "// Define mutations\n  const deleteMutation = useMutation({\n    mutationFn: salesApi.deleteSale,\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 30,
          "block": "const deleteMutation = useMutation({\n    mutationFn: salesApi.deleteSale,\n    onSuccess: () => {\n   ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 30,
          "block": "const deleteMutation = useMutation({\n    mutationFn: salesApi.deleteSale,\n    onSuccess: () => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 31,
          "block": "mutationFn: salesApi.deleteSale,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 31,
          "block": "mutationFn: salesApi.deleteSale,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 32,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.i..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 32,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 36,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 36,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale deleted successfully and tank level res..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 37,
          "block": "title: \"Success\",\n        description: \"Sale deleted successfully and tank level restored\",\n      })..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 37,
          "block": "title: \"Success\",\n        description: \"Sale deleted successfully and tank level restored\",\n      })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 38,
          "block": "description: \"Sale deleted successfully and tank level restored\",\n      });\n      setIsDeleteDialogO..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 38,
          "block": "description: \"Sale deleted successfully and tank level restored\",\n      });\n      setIsDeleteDialogO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 39,
          "block": "});\n      setIsDeleteDialogOpen(false);\n      setSaleToDelete(null);\n    },\n    onError: (error) => ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 39,
          "block": "});\n      setIsDeleteDialogOpen(false);\n      setSaleToDelete(null);\n    },\n    onError: (error) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 40,
          "block": "setIsDeleteDialogOpen(false);\n      setSaleToDelete(null);\n    },\n    onError: (error) => {\n      co..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 40,
          "block": "setIsDeleteDialogOpen(false);\n      setSaleToDelete(null);\n    },\n    onError: (error) => {\n      co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 41,
          "block": "setSaleToDelete(null);\n    },\n    onError: (error) => {\n      console.error(\"Delete error:\", error);..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 41,
          "block": "setSaleToDelete(null);\n    },\n    onError: (error) => {\n      console.error(\"Delete error:\", error);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 42,
          "block": "},\n    onError: (error) => {\n      console.error(\"Delete error:\", error);\n      toast({\n        titl..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 42,
          "block": "},\n    onError: (error) => {\n      console.error(\"Delete error:\", error);\n      toast({\n        titl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 43,
          "block": "onError: (error) => {\n      console.error(\"Delete error:\", error);\n      toast({\n        title: \"Err..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 43,
          "block": "onError: (error) => {\n      console.error(\"Delete error:\", error);\n      toast({\n        title: \"Err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 44,
          "block": "console.error(\"Delete error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"F..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 44,
          "block": "console.error(\"Delete error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"F..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 45,
          "block": "toast({\n        title: \"Error\",\n        description: \"Failed to delete sale\",\n        variant: \"dest..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 45,
          "block": "toast({\n        title: \"Error\",\n        description: \"Failed to delete sale\",\n        variant: \"dest..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 46,
          "block": "title: \"Error\",\n        description: \"Failed to delete sale\",\n        variant: \"destructive\",\n      ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 46,
          "block": "title: \"Error\",\n        description: \"Failed to delete sale\",\n        variant: \"destructive\",\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 49,
          "block": "});\n    },\n  });\n  const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updat..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 49,
          "block": "});\n    },\n  });\n  const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 50,
          "block": "},\n  });\n  const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updates: Upda..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 50,
          "block": "},\n  });\n  const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updates: Upda..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 51,
          "block": "});\n  const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updates: UpdateSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 51,
          "block": "});\n  const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updates: UpdateSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 52,
          "block": "const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updates: UpdateSaleReque..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 52,
          "block": "const updateMutation = useMutation({\n    mutationFn: (params: { id: string; updates: UpdateSaleReque..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 53,
          "block": "mutationFn: (params: { id: string; updates: UpdateSaleRequest }) =>\n      salesApi.updateSale(params..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 53,
          "block": "mutationFn: (params: { id: string; updates: UpdateSaleRequest }) =>\n      salesApi.updateSale(params..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 54,
          "block": "salesApi.updateSale(params.id, params.updates),\n    onSuccess: () => {\n      queryClient.invalidateQ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 54,
          "block": "salesApi.updateSale(params.id, params.updates),\n    onSuccess: () => {\n      queryClient.invalidateQ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 55,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.i..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 25,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.i..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 55,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.i..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 25,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sales\"] });\n      queryClient.i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 58,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n      toast({\n        title: \"Success..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 58,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n      toast({\n        title: \"Success..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 59,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale updated successfully and tank level adj..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 59,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale updated successfully and tank level adj..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 60,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale updated successfully and tank level adj..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 60,
          "block": "toast({\n        title: \"Success\",\n        description: \"Sale updated successfully and tank level adj..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 61,
          "block": "title: \"Success\",\n        description: \"Sale updated successfully and tank level adjusted\",\n      })..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 61,
          "block": "title: \"Success\",\n        description: \"Sale updated successfully and tank level adjusted\",\n      })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 62,
          "block": "description: \"Sale updated successfully and tank level adjusted\",\n      });\n      setIsEditDialogOpe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 62,
          "block": "description: \"Sale updated successfully and tank level adjusted\",\n      });\n      setIsEditDialogOpe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 64,
          "block": "setIsEditDialogOpen(false);\n      setSelectedSale(null);\n    },\n    onError: (error) => {\n      cons..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 64,
          "block": "setIsEditDialogOpen(false);\n      setSelectedSale(null);\n    },\n    onError: (error) => {\n      cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 65,
          "block": "setSelectedSale(null);\n    },\n    onError: (error) => {\n      console.error(\"Update error:\", error);..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 65,
          "block": "setSelectedSale(null);\n    },\n    onError: (error) => {\n      console.error(\"Update error:\", error);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 66,
          "block": "},\n    onError: (error) => {\n      console.error(\"Update error:\", error);\n      toast({\n        titl..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 66,
          "block": "},\n    onError: (error) => {\n      console.error(\"Update error:\", error);\n      toast({\n        titl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 67,
          "block": "onError: (error) => {\n      console.error(\"Update error:\", error);\n      toast({\n        title: \"Err..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 67,
          "block": "onError: (error) => {\n      console.error(\"Update error:\", error);\n      toast({\n        title: \"Err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 68,
          "block": "console.error(\"Update error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"F..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 68,
          "block": "console.error(\"Update error:\", error);\n      toast({\n        title: \"Error\",\n        description: \"F..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 69,
          "block": "toast({\n        title: \"Error\",\n        description: \"Failed to update sale\",\n        variant: \"dest..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 69,
          "block": "toast({\n        title: \"Error\",\n        description: \"Failed to update sale\",\n        variant: \"dest..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 70,
          "block": "title: \"Error\",\n        description: \"Failed to update sale\",\n        variant: \"destructive\",\n      ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 70,
          "block": "title: \"Error\",\n        description: \"Failed to update sale\",\n        variant: \"destructive\",\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 76,
          "block": "// Effect to reset state when dialogs close\n  useEffect(() => {\n    if (!isEditDialogOpen) {\n      /..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 76,
          "block": "// Effect to reset state when dialogs close\n  useEffect(() => {\n    if (!isEditDialogOpen) {\n      /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 77,
          "block": "// Effect to reset state when dialogs close\n  useEffect(() => {\n    if (!isEditDialogOpen) {\n      /..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 77,
          "block": "// Effect to reset state when dialogs close\n  useEffect(() => {\n    if (!isEditDialogOpen) {\n      /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 78,
          "block": "useEffect(() => {\n    if (!isEditDialogOpen) {\n      // Only reset selected sale when edit dialog cl..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 78,
          "block": "useEffect(() => {\n    if (!isEditDialogOpen) {\n      // Only reset selected sale when edit dialog cl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 79,
          "block": "if (!isEditDialogOpen) {\n      // Only reset selected sale when edit dialog closes\n      setSelected..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 79,
          "block": "if (!isEditDialogOpen) {\n      // Only reset selected sale when edit dialog closes\n      setSelected..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 80,
          "block": "// Only reset selected sale when edit dialog closes\n      setSelectedSale(null);\n    }\n  }, [isEditD..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 80,
          "block": "// Only reset selected sale when edit dialog closes\n      setSelectedSale(null);\n    }\n  }, [isEditD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 83,
          "block": "}, [isEditDialogOpen]);\n\n  useEffect(() => {\n    if (!isDeleteDialogOpen) {\n      // Only reset sale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 83,
          "block": "}, [isEditDialogOpen]);\n\n  useEffect(() => {\n    if (!isDeleteDialogOpen) {\n      // Only reset sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 84,
          "block": "useEffect(() => {\n    if (!isDeleteDialogOpen) {\n      // Only reset sale to delete when delete dial..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 84,
          "block": "useEffect(() => {\n    if (!isDeleteDialogOpen) {\n      // Only reset sale to delete when delete dial..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 85,
          "block": "useEffect(() => {\n    if (!isDeleteDialogOpen) {\n      // Only reset sale to delete when delete dial..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 85,
          "block": "useEffect(() => {\n    if (!isDeleteDialogOpen) {\n      // Only reset sale to delete when delete dial..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 86,
          "block": "if (!isDeleteDialogOpen) {\n      // Only reset sale to delete when delete dialog closes\n      setSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 86,
          "block": "if (!isDeleteDialogOpen) {\n      // Only reset sale to delete when delete dialog closes\n      setSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 87,
          "block": "// Only reset sale to delete when delete dialog closes\n      setSaleToDelete(null);\n    }\n  }, [isDe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 87,
          "block": "// Only reset sale to delete when delete dialog closes\n      setSaleToDelete(null);\n    }\n  }, [isDe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 89,
          "block": "}\n  }, [isDeleteDialogOpen]);\n\n  // Handler functions\n  const handleEdit = useCallback((sale: Sale) ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 89,
          "block": "}\n  }, [isDeleteDialogOpen]);\n\n  // Handler functions\n  const handleEdit = useCallback((sale: Sale) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 90,
          "block": "}, [isDeleteDialogOpen]);\n\n  // Handler functions\n  const handleEdit = useCallback((sale: Sale) => {..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 90,
          "block": "}, [isDeleteDialogOpen]);\n\n  // Handler functions\n  const handleEdit = useCallback((sale: Sale) => {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 91,
          "block": "// Handler functions\n  const handleEdit = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 91,
          "block": "// Handler functions\n  const handleEdit = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 92,
          "block": "// Handler functions\n  const handleEdit = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 92,
          "block": "// Handler functions\n  const handleEdit = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 93,
          "block": "const handleEdit = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n    setIsEditDialogOpen(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 93,
          "block": "const handleEdit = useCallback((sale: Sale) => {\n    setSelectedSale(sale);\n    setIsEditDialogOpen(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 94,
          "block": "setSelectedSale(sale);\n    setIsEditDialogOpen(true);\n  }, []);\n\n  const handleDelete = useCallback(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 94,
          "block": "setSelectedSale(sale);\n    setIsEditDialogOpen(true);\n  }, []);\n\n  const handleDelete = useCallback(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 95,
          "block": "setIsEditDialogOpen(true);\n  }, []);\n\n  const handleDelete = useCallback((id: string) => {\n    setSa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 95,
          "block": "setIsEditDialogOpen(true);\n  }, []);\n\n  const handleDelete = useCallback((id: string) => {\n    setSa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 96,
          "block": "}, []);\n\n  const handleDelete = useCallback((id: string) => {\n    setSaleToDelete(id);\n    setIsDele..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 96,
          "block": "}, []);\n\n  const handleDelete = useCallback((id: string) => {\n    setSaleToDelete(id);\n    setIsDele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 97,
          "block": "const handleDelete = useCallback((id: string) => {\n    setSaleToDelete(id);\n    setIsDeleteDialogOpe..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 98,
          "block": "const handleDelete = useCallback((id: string) => {\n    setSaleToDelete(id);\n    setIsDeleteDialogOpe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 97,
          "block": "const handleDelete = useCallback((id: string) => {\n    setSaleToDelete(id);\n    setIsDeleteDialogOpe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 98,
          "block": "const handleDelete = useCallback((id: string) => {\n    setSaleToDelete(id);\n    setIsDeleteDialogOpe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 99,
          "block": "setSaleToDelete(id);\n    setIsDeleteDialogOpen(true);\n  }, []);\n\n  const confirmDelete = useCallback..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 99,
          "block": "setSaleToDelete(id);\n    setIsDeleteDialogOpen(true);\n  }, []);\n\n  const confirmDelete = useCallback..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 100,
          "block": "setIsDeleteDialogOpen(true);\n  }, []);\n\n  const confirmDelete = useCallback(() => {\n    if (saleToDe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 100,
          "block": "setIsDeleteDialogOpen(true);\n  }, []);\n\n  const confirmDelete = useCallback(() => {\n    if (saleToDe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 101,
          "block": "}, []);\n\n  const confirmDelete = useCallback(() => {\n    if (saleToDelete) {\n      deleteMutation.mu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 101,
          "block": "}, []);\n\n  const confirmDelete = useCallback(() => {\n    if (saleToDelete) {\n      deleteMutation.mu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 102,
          "block": "const confirmDelete = useCallback(() => {\n    if (saleToDelete) {\n      deleteMutation.mutate(saleTo..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 102,
          "block": "const confirmDelete = useCallback(() => {\n    if (saleToDelete) {\n      deleteMutation.mutate(saleTo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 103,
          "block": "const confirmDelete = useCallback(() => {\n    if (saleToDelete) {\n      deleteMutation.mutate(saleTo..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 103,
          "block": "const confirmDelete = useCallback(() => {\n    if (saleToDelete) {\n      deleteMutation.mutate(saleTo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 104,
          "block": "if (saleToDelete) {\n      deleteMutation.mutate(saleToDelete);\n    }\n  }, [saleToDelete, deleteMutat..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 104,
          "block": "if (saleToDelete) {\n      deleteMutation.mutate(saleToDelete);\n    }\n  }, [saleToDelete, deleteMutat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 110,
          "block": "selectedSale,\n    setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialog..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 46,
          "block": "selectedSale,\n    setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialog..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 110,
          "block": "selectedSale,\n    setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialog..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 46,
          "block": "selectedSale,\n    setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 111,
          "block": "setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDel..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 47,
          "block": "setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDel..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 111,
          "block": "setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDel..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 47,
          "block": "setSelectedSale,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 112,
          "block": "isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    sa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 112,
          "block": "isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 113,
          "block": "setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    saleToDelete,\n    setSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 113,
          "block": "setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    saleToDelete,\n    setSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 114,
          "block": "isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    saleToDelete,\n    setSaleToDelete,\n    deleteMuta..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 114,
          "block": "isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    saleToDelete,\n    setSaleToDelete,\n    deleteMuta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesMutations.ts",
          "startLine": 115,
          "block": "setIsDeleteDialogOpen,\n    saleToDelete,\n    setSaleToDelete,\n    deleteMutation,\n    updateMutation..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesMutations.ts",
          "startLine": 115,
          "block": "setIsDeleteDialogOpen,\n    saleToDelete,\n    setSaleToDelete,\n    deleteMutation,\n    updateMutation..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 1,
          "block": "import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 1,
          "block": "import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { toast } from..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 6,
          "block": "UpdateSaleRequest,\n  SalesFilters,\n  SalesExportOptions,\n} from \"../types\";\nimport { getSales, getSa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 6,
          "block": "UpdateSaleRequest,\n  SalesFilters,\n  SalesExportOptions,\n} from \"../types\";\nimport { getSales, getSa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 7,
          "block": "SalesFilters,\n  SalesExportOptions,\n} from \"../types\";\nimport { getSales, getSaleById, createSale, u..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 7,
          "block": "SalesFilters,\n  SalesExportOptions,\n} from \"../types\";\nimport { getSales, getSaleById, createSale, u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 8,
          "block": "SalesExportOptions,\n} from \"../types\";\nimport { getSales, getSaleById, createSale, updateSale, delet..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 8,
          "block": "SalesExportOptions,\n} from \"../types\";\nimport { getSales, getSaleById, createSale, updateSale, delet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 9,
          "block": "} from \"../types\";\nimport { getSales, getSaleById, createSale, updateSale, deleteSale } from \"../ser..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 9,
          "block": "} from \"../types\";\nimport { getSales, getSaleById, createSale, updateSale, deleteSale } from \"../ser..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 10,
          "block": "import { getSales, getSaleById, createSale, updateSale, deleteSale } from \"../services\";\n\n// Adapter..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 10,
          "block": "import { getSales, getSaleById, createSale, updateSale, deleteSale } from \"../services\";\n\n// Adapter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 11,
          "block": "// Adapter functions to transform between feature types and centralized service types\nconst adaptCre..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 11,
          "block": "// Adapter functions to transform between feature types and centralized service types\nconst adaptCre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 12,
          "block": "// Adapter functions to transform between feature types and centralized service types\nconst adaptCre..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 12,
          "block": "// Adapter functions to transform between feature types and centralized service types\nconst adaptCre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 13,
          "block": "const adaptCreateSaleRequest = (request: CreateSaleRequest) => ({\n  customer_name: request.customerN..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 13,
          "block": "const adaptCreateSaleRequest = (request: CreateSaleRequest) => ({\n  customer_name: request.customerN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 14,
          "block": "customer_name: request.customerName,\n  fuel_type: request.fuelType,\n  quantity: request.quantityLite..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 26,
          "block": "customer_name: request.customerName,\n  fuel_type: request.fuelType,\n  quantity: request.quantityLite..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 14,
          "block": "customer_name: request.customerName,\n  fuel_type: request.fuelType,\n  quantity: request.quantityLite..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 26,
          "block": "customer_name: request.customerName,\n  fuel_type: request.fuelType,\n  quantity: request.quantityLite..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 15,
          "block": "fuel_type: request.fuelType,\n  quantity: request.quantityLiters,\n  price_per_liter: request.unitPric..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 27,
          "block": "fuel_type: request.fuelType,\n  quantity: request.quantityLiters,\n  price_per_liter: request.unitPric..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 15,
          "block": "fuel_type: request.fuelType,\n  quantity: request.quantityLiters,\n  price_per_liter: request.unitPric..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 27,
          "block": "fuel_type: request.fuelType,\n  quantity: request.quantityLiters,\n  price_per_liter: request.unitPric..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 16,
          "block": "quantity: request.quantityLiters,\n  price_per_liter: request.unitPrice,\n  total_amount: request.amou..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 28,
          "block": "quantity: request.quantityLiters,\n  price_per_liter: request.unitPrice,\n  total_amount: request.amou..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 16,
          "block": "quantity: request.quantityLiters,\n  price_per_liter: request.unitPrice,\n  total_amount: request.amou..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 28,
          "block": "quantity: request.quantityLiters,\n  price_per_liter: request.unitPrice,\n  total_amount: request.amou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 17,
          "block": "price_per_liter: request.unitPrice,\n  total_amount: request.amount,\n  sale_date: request.saleDate in..."
        },
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 29,
          "block": "price_per_liter: request.unitPrice,\n  total_amount: request.amount,\n  sale_date: request.saleDate in..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 17,
          "block": "price_per_liter: request.unitPrice,\n  total_amount: request.amount,\n  sale_date: request.saleDate in..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 29,
          "block": "price_per_liter: request.unitPrice,\n  total_amount: request.amount,\n  sale_date: request.saleDate in..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 18,
          "block": "total_amount: request.amount,\n  sale_date: request.saleDate instanceof Date ? request.saleDate.toISO..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 18,
          "block": "total_amount: request.amount,\n  sale_date: request.saleDate instanceof Date ? request.saleDate.toISO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 19,
          "block": "sale_date: request.saleDate instanceof Date ? request.saleDate.toISOString() : request.saleDate,\n  f..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 19,
          "block": "sale_date: request.saleDate instanceof Date ? request.saleDate.toISOString() : request.saleDate,\n  f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 20,
          "block": "filling_system_id: request.fillingSystemId,\n  payment_method: request.paymentMethod as \"cash\" | \"car..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 20,
          "block": "filling_system_id: request.fillingSystemId,\n  payment_method: request.paymentMethod as \"cash\" | \"car..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 21,
          "block": "payment_method: request.paymentMethod as \"cash\" | \"card\" | \"credit\",\n  status: \"active\" as const,\n})..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 21,
          "block": "payment_method: request.paymentMethod as \"cash\" | \"card\" | \"credit\",\n  status: \"active\" as const,\n})..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 22,
          "block": "status: \"active\" as const,\n});\n\nconst adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 22,
          "block": "status: \"active\" as const,\n});\n\nconst adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 23,
          "block": "});\n\nconst adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  customer_name: request.cust..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 23,
          "block": "});\n\nconst adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  customer_name: request.cust..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 24,
          "block": "const adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  customer_name: request.customerN..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 24,
          "block": "const adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  customer_name: request.customerN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 25,
          "block": "const adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  customer_name: request.customerN..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 25,
          "block": "const adaptUpdateSaleRequest = (request: UpdateSaleRequest) => ({\n  customer_name: request.customerN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 30,
          "block": "total_amount: request.amount,\n  sale_date: request.saleDate instanceof Date ? request.saleDate.toISO..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 30,
          "block": "total_amount: request.amount,\n  sale_date: request.saleDate instanceof Date ? request.saleDate.toISO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 31,
          "block": "sale_date: request.saleDate instanceof Date ? request.saleDate.toISOString() : request.saleDate,\n  f..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 31,
          "block": "sale_date: request.saleDate instanceof Date ? request.saleDate.toISOString() : request.saleDate,\n  f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 32,
          "block": "filling_system_id: request.fillingSystemId,\n  payment_method: request.paymentMethod as \"cash\" | \"car..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 32,
          "block": "filling_system_id: request.fillingSystemId,\n  payment_method: request.paymentMethod as \"cash\" | \"car..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 33,
          "block": "payment_method: request.paymentMethod as \"cash\" | \"card\" | \"credit\",\n});\n\nexport const salesKeys = {..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 33,
          "block": "payment_method: request.paymentMethod as \"cash\" | \"card\" | \"credit\",\n});\n\nexport const salesKeys = {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 34,
          "block": "});\n\nexport const salesKeys = {\n  all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"]..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 34,
          "block": "});\n\nexport const salesKeys = {\n  all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"]..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 35,
          "block": "export const salesKeys = {\n  all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"] as c..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 35,
          "block": "export const salesKeys = {\n  all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"] as c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 36,
          "block": "export const salesKeys = {\n  all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"] as c..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 36,
          "block": "export const salesKeys = {\n  all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"] as c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 37,
          "block": "all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"] as const,\n  list: (filters: Sales..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 37,
          "block": "all: [\"sales\"] as const,\n  lists: () => [...salesKeys.all, \"list\"] as const,\n  list: (filters: Sales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 38,
          "block": "lists: () => [...salesKeys.all, \"list\"] as const,\n  list: (filters: SalesFilters) => [...salesKeys.l..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 38,
          "block": "lists: () => [...salesKeys.all, \"list\"] as const,\n  list: (filters: SalesFilters) => [...salesKeys.l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 39,
          "block": "list: (filters: SalesFilters) => [...salesKeys.lists(), filters] as const,\n  details: () => [...sale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 39,
          "block": "list: (filters: SalesFilters) => [...salesKeys.lists(), filters] as const,\n  details: () => [...sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 40,
          "block": "details: () => [...salesKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...salesKeys.detail..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 40,
          "block": "details: () => [...salesKeys.all, \"detail\"] as const,\n  detail: (id: string) => [...salesKeys.detail..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 41,
          "block": "detail: (id: string) => [...salesKeys.details(), id] as const,\n};\n\nexport function useSalesQuery(fil..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 41,
          "block": "detail: (id: string) => [...salesKeys.details(), id] as const,\n};\n\nexport function useSalesQuery(fil..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 42,
          "block": "};\n\nexport function useSalesQuery(filters?: SalesFilters) {\n  return useQuery({\n    queryKey: salesK..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 42,
          "block": "};\n\nexport function useSalesQuery(filters?: SalesFilters) {\n  return useQuery({\n    queryKey: salesK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 50,
          "block": "}\n\nexport function useSaleQuery(id: string) {\n  return useQuery({\n    queryKey: salesKeys.detail(id)..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 50,
          "block": "}\n\nexport function useSaleQuery(id: string) {\n  return useQuery({\n    queryKey: salesKeys.detail(id)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 51,
          "block": "export function useSaleQuery(id: string) {\n  return useQuery({\n    queryKey: salesKeys.detail(id),\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 51,
          "block": "export function useSaleQuery(id: string) {\n  return useQuery({\n    queryKey: salesKeys.detail(id),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 52,
          "block": "export function useSaleQuery(id: string) {\n  return useQuery({\n    queryKey: salesKeys.detail(id),\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 52,
          "block": "export function useSaleQuery(id: string) {\n  return useQuery({\n    queryKey: salesKeys.detail(id),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 53,
          "block": "return useQuery({\n    queryKey: salesKeys.detail(id),\n    queryFn: () => getSaleById(id),\n    enable..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 53,
          "block": "return useQuery({\n    queryKey: salesKeys.detail(id),\n    queryFn: () => getSaleById(id),\n    enable..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 54,
          "block": "queryKey: salesKeys.detail(id),\n    queryFn: () => getSaleById(id),\n    enabled: !!id,\n    staleTime..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 54,
          "block": "queryKey: salesKeys.detail(id),\n    queryFn: () => getSaleById(id),\n    enabled: !!id,\n    staleTime..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 55,
          "block": "queryFn: () => getSaleById(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 55,
          "block": "queryFn: () => getSaleById(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 60,
          "block": "export function useSalesMutations() {\n  const queryClient = useQueryClient();\n\n  const createSaleMut..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 60,
          "block": "export function useSalesMutations() {\n  const queryClient = useQueryClient();\n\n  const createSaleMut..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 67,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 81,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 68,
          "block": "queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast.success(\"Sale created su..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 82,
          "block": "queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast.success(\"Sale created su..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 69,
          "block": "toast.success(\"Sale created successfully\");\n    },\n    onError: () => {\n      toast.error(\"Failed to..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 83,
          "block": "toast.success(\"Sale created successfully\");\n    },\n    onError: () => {\n      toast.error(\"Failed to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 79,
          "block": "onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: salesKeys.lists() });..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 107,
          "block": "onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: salesKeys.lists() });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 80,
          "block": "queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      queryClient.invalidateQueries(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 108,
          "block": "queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      queryClient.invalidateQueries(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 81,
          "block": "queryClient.invalidateQueries({\n        queryKey: salesKeys.detail(variables.id),\n      });\n      to..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 109,
          "block": "queryClient.invalidateQueries({\n        queryKey: salesKeys.detail(variables.id),\n      });\n      to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 82,
          "block": "queryKey: salesKeys.detail(variables.id),\n      });\n      toast.success(\"Sale updated successfully\")..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 110,
          "block": "queryKey: salesKeys.detail(variables.id),\n      });\n      toast.success(\"Sale updated successfully\")..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 83,
          "block": "});\n      toast.success(\"Sale updated successfully\");\n    },\n    onError: () => {\n      toast.error(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 111,
          "block": "});\n      toast.success(\"Sale updated successfully\");\n    },\n    onError: () => {\n      toast.error(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 84,
          "block": "toast.success(\"Sale updated successfully\");\n    },\n    onError: () => {\n      toast.error(\"Failed to..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 112,
          "block": "toast.success(\"Sale updated successfully\");\n    },\n    onError: () => {\n      toast.error(\"Failed to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 89,
          "block": "});\n\n  const deleteSaleMutation = useMutation({\n    mutationFn: (id: string) => deleteSale(id),\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 117,
          "block": "});\n\n  const deleteSaleMutation = useMutation({\n    mutationFn: (id: string) => deleteSale(id),\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 90,
          "block": "const deleteSaleMutation = useMutation({\n    mutationFn: (id: string) => deleteSale(id),\n    onSucce..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 118,
          "block": "const deleteSaleMutation = useMutation({\n    mutationFn: (id: string) => deleteSale(id),\n    onSucce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 91,
          "block": "const deleteSaleMutation = useMutation({\n    mutationFn: (id: string) => deleteSale(id),\n    onSucce..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 119,
          "block": "const deleteSaleMutation = useMutation({\n    mutationFn: (id: string) => deleteSale(id),\n    onSucce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 92,
          "block": "mutationFn: (id: string) => deleteSale(id),\n    onSuccess: () => {\n      queryClient.invalidateQueri..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 120,
          "block": "mutationFn: (id: string) => deleteSale(id),\n    onSuccess: () => {\n      queryClient.invalidateQueri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 93,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 121,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 94,
          "block": "queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast.success(\"Sale deleted su..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 122,
          "block": "queryClient.invalidateQueries({ queryKey: salesKeys.lists() });\n      toast.success(\"Sale deleted su..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 95,
          "block": "toast.success(\"Sale deleted successfully\");\n    },\n    onError: () => {\n      toast.error(\"Failed to..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 123,
          "block": "toast.success(\"Sale deleted successfully\");\n    },\n    onError: () => {\n      toast.error(\"Failed to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 99,
          "block": "},\n  });\n\n  const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 127,
          "block": "},\n  });\n\n  const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 100,
          "block": "});\n\n  const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) => {\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 128,
          "block": "});\n\n  const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) => {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 101,
          "block": "const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) => {\n      t..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 129,
          "block": "const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) => {\n      t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 102,
          "block": "const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) => {\n      t..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 130,
          "block": "const exportSalesMutation = useMutation({\n    mutationFn: (options: SalesExportOptions) => {\n      t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 103,
          "block": "mutationFn: (options: SalesExportOptions) => {\n      throw new Error(\"Export functionality not yet i..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 131,
          "block": "mutationFn: (options: SalesExportOptions) => {\n      throw new Error(\"Export functionality not yet i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 104,
          "block": "throw new Error(\"Export functionality not yet implemented in centralized service\");\n    },\n    onSuc..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 132,
          "block": "throw new Error(\"Export functionality not yet implemented in centralized service\");\n    },\n    onSuc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 105,
          "block": "},\n    onSuccess: () => {\n      toast.success(\"Sales data exported successfully\");\n    },\n    onErro..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 133,
          "block": "},\n    onSuccess: () => {\n      toast.success(\"Sales data exported successfully\");\n    },\n    onErro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 106,
          "block": "onSuccess: () => {\n      toast.success(\"Sales data exported successfully\");\n    },\n    onError: () =..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 134,
          "block": "onSuccess: () => {\n      toast.success(\"Sales data exported successfully\");\n    },\n    onError: () =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 107,
          "block": "toast.success(\"Sales data exported successfully\");\n    },\n    onError: () => {\n      toast.error(\"Fa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 135,
          "block": "toast.success(\"Sales data exported successfully\");\n    },\n    onError: () => {\n      toast.error(\"Fa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 113,
          "block": "return {\n    createSale: createSaleMutation,\n    updateSale: updateSaleMutation,\n    deleteSale: del..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 141,
          "block": "return {\n    createSale: createSaleMutation,\n    updateSale: updateSaleMutation,\n    deleteSale: del..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 114,
          "block": "return {\n    createSale: createSaleMutation,\n    updateSale: updateSaleMutation,\n    deleteSale: del..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 142,
          "block": "return {\n    createSale: createSaleMutation,\n    updateSale: updateSaleMutation,\n    deleteSale: del..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 115,
          "block": "createSale: createSaleMutation,\n    updateSale: updateSaleMutation,\n    deleteSale: deleteSaleMutati..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 143,
          "block": "createSale: createSaleMutation,\n    updateSale: updateSaleMutation,\n    deleteSale: deleteSaleMutati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 116,
          "block": "updateSale: updateSaleMutation,\n    deleteSale: deleteSaleMutation,\n    exportSales: exportSalesMuta..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 144,
          "block": "updateSale: updateSaleMutation,\n    deleteSale: deleteSaleMutation,\n    exportSales: exportSalesMuta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 121,
          "block": "export function useExportSales() {\n  const { exportSales } = useSalesMutations();\n\n  const exportSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 149,
          "block": "export function useExportSales() {\n  const { exportSales } = useSalesMutations();\n\n  const exportSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 122,
          "block": "export function useExportSales() {\n  const { exportSales } = useSalesMutations();\n\n  const exportSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 150,
          "block": "export function useExportSales() {\n  const { exportSales } = useSalesMutations();\n\n  const exportSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 123,
          "block": "const { exportSales } = useSalesMutations();\n\n  const exportSalesData = async (options: SalesExportO..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 151,
          "block": "const { exportSales } = useSalesMutations();\n\n  const exportSalesData = async (options: SalesExportO..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 124,
          "block": "const exportSalesData = async (options: SalesExportOptions) => {\n    try {\n      const data = await ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 152,
          "block": "const exportSalesData = async (options: SalesExportOptions) => {\n    try {\n      const data = await ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 125,
          "block": "const exportSalesData = async (options: SalesExportOptions) => {\n    try {\n      const data = await ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 153,
          "block": "const exportSalesData = async (options: SalesExportOptions) => {\n    try {\n      const data = await ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 126,
          "block": "try {\n      const data = await exportSales.mutateAsync(options);\n\n      // Handle CSV data\n      if ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 154,
          "block": "try {\n      const data = await exportSales.mutateAsync(options);\n\n      // Handle CSV data\n      if ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 127,
          "block": "const data = await exportSales.mutateAsync(options);\n\n      // Handle CSV data\n      if (options.for..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 155,
          "block": "const data = await exportSales.mutateAsync(options);\n\n      // Handle CSV data\n      if (options.for..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 128,
          "block": "// Handle CSV data\n      if (options.format === \"csv\" || !options.format) {\n        const blob = new..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 156,
          "block": "// Handle CSV data\n      if (options.format === \"csv\" || !options.format) {\n        const blob = new..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 129,
          "block": "// Handle CSV data\n      if (options.format === \"csv\" || !options.format) {\n        const blob = new..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 157,
          "block": "// Handle CSV data\n      if (options.format === \"csv\" || !options.format) {\n        const blob = new..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 130,
          "block": "if (options.format === \"csv\" || !options.format) {\n        const blob = new Blob([data as string], {..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 158,
          "block": "if (options.format === \"csv\" || !options.format) {\n        const blob = new Blob([data as string], {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 131,
          "block": "const blob = new Blob([data as string], { type: \"text/csv\" });\n        const url = URL.createObjectU..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 159,
          "block": "const blob = new Blob([data as string], { type: \"text/csv\" });\n        const url = URL.createObjectU..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 132,
          "block": "const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 160,
          "block": "const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 133,
          "block": "const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `sales-export-${ne..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 161,
          "block": "const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `sales-export-${ne..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 134,
          "block": "a.href = url;\n        a.download = `sales-export-${new Date().toISOString().split(\"T\")[0]}.csv`;\n   ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 162,
          "block": "a.href = url;\n        a.download = `sales-export-${new Date().toISOString().split(\"T\")[0]}.csv`;\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 135,
          "block": "a.download = `sales-export-${new Date().toISOString().split(\"T\")[0]}.csv`;\n        document.body.app..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 163,
          "block": "a.download = `sales-export-${new Date().toISOString().split(\"T\")[0]}.csv`;\n        document.body.app..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 136,
          "block": "document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.r..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 164,
          "block": "document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 137,
          "block": "a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } cat..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 165,
          "block": "a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } cat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 138,
          "block": "document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 166,
          "block": "document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 139,
          "block": "URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error(\"Error in export functio..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 167,
          "block": "URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error(\"Error in export functio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\useSalesQuery.ts",
          "startLine": 152,
          "block": "export default function useSales() {\n  return {\n    useSalesQuery,\n    useSaleQuery,\n    useSalesMut..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesQuery.ts",
          "startLine": 180,
          "block": "export default function useSales() {\n  return {\n    useSalesQuery,\n    useSaleQuery,\n    useSalesMut..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 204,
          "block": "updated_at: \"2023-01-10\",\n      };\n\n      // Use shared mutation test utility\n      const { renderTe..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 242,
          "block": "updated_at: \"2023-01-10\",\n      };\n\n      // Use shared mutation test utility\n      const { renderTe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 300,
          "block": "it(\"should invalidate queries after successful mutations\", async () => {\n      // Use shared mutatio..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useFinance.test.ts",
          "startLine": 301,
          "block": "it(\"should invalidate queries after successful mutations\", async () => {\n      // Use shared mutatio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 1,
          "block": "import { renderHook, waitFor } from \"@testing-library/react\";\nimport { vi, describe, it, expect, bef..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 1,
          "block": "import { renderHook, waitFor } from \"@testing-library/react\";\nimport { vi, describe, it, expect, bef..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 2,
          "block": "import { vi, describe, it, expect, beforeEach } from \"vitest\";\nimport {\n  useSalesQuery,\n  useSaleQu..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 2,
          "block": "import { vi, describe, it, expect, beforeEach } from \"vitest\";\nimport {\n  useSalesQuery,\n  useSaleQu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 4,
          "block": "useSalesQuery,\n  useSaleQuery,\n  useSalesMutations,\n} from \"../useSalesQuery\";\nimport { setupHookTes..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 4,
          "block": "useSalesQuery,\n  useSaleQuery,\n  useSalesMutations,\n} from \"../useSalesQuery\";\nimport { setupHookTes..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 5,
          "block": "useSaleQuery,\n  useSalesMutations,\n} from \"../useSalesQuery\";\nimport { setupHookTest, setupMutationT..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 5,
          "block": "useSaleQuery,\n  useSalesMutations,\n} from \"../useSalesQuery\";\nimport { setupHookTest, setupMutationT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 6,
          "block": "useSalesMutations,\n} from \"../useSalesQuery\";\nimport { setupHookTest, setupMutationTest } from \"@/te..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 6,
          "block": "useSalesMutations,\n} from \"../useSalesQuery\";\nimport { setupHookTest, setupMutationTest } from \"@/te..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 7,
          "block": "} from \"../useSalesQuery\";\nimport { setupHookTest, setupMutationTest } from \"@/test/utils/test-setup..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 7,
          "block": "} from \"../useSalesQuery\";\nimport { setupHookTest, setupMutationTest } from \"@/test/utils/test-setup..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 8,
          "block": "import { setupHookTest, setupMutationTest } from \"@/test/utils/test-setup\";\nimport * as salesService..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 8,
          "block": "import { setupHookTest, setupMutationTest } from \"@/test/utils/test-setup\";\nimport * as salesService..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 9,
          "block": "import * as salesService from \"../../services/sales\";\nimport { FuelTypeCode } from \"@/types\";\nimport..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 9,
          "block": "import * as salesService from \"../../services/sales\";\nimport { FuelTypeCode } from \"@/types\";\nimport..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 10,
          "block": "import { FuelTypeCode } from \"@/types\";\nimport { CreateSaleRequest, UpdateSaleRequest } from \"../../..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 10,
          "block": "import { FuelTypeCode } from \"@/types\";\nimport { CreateSaleRequest, UpdateSaleRequest } from \"../../..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 11,
          "block": "import { CreateSaleRequest, UpdateSaleRequest } from \"../../types\";\n\n// Mock the sales service\nvi.mo..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 11,
          "block": "import { CreateSaleRequest, UpdateSaleRequest } from \"../../types\";\n\n// Mock the sales service\nvi.mo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 12,
          "block": "// Mock the sales service\nvi.mock(\"../../services/sales\", () => ({\n  fetchSales: vi.fn(),\n  fetchSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 12,
          "block": "// Mock the sales service\nvi.mock(\"../../services/sales\", () => ({\n  fetchSales: vi.fn(),\n  fetchSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 13,
          "block": "// Mock the sales service\nvi.mock(\"../../services/sales\", () => ({\n  fetchSales: vi.fn(),\n  fetchSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 13,
          "block": "// Mock the sales service\nvi.mock(\"../../services/sales\", () => ({\n  fetchSales: vi.fn(),\n  fetchSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 14,
          "block": "vi.mock(\"../../services/sales\", () => ({\n  fetchSales: vi.fn(),\n  fetchSale: vi.fn(),\n  createSale: ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 14,
          "block": "vi.mock(\"../../services/sales\", () => ({\n  fetchSales: vi.fn(),\n  fetchSale: vi.fn(),\n  createSale: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 15,
          "block": "fetchSales: vi.fn(),\n  fetchSale: vi.fn(),\n  createSale: vi.fn(),\n  updateSale: vi.fn(),\n  deleteSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 15,
          "block": "fetchSales: vi.fn(),\n  fetchSale: vi.fn(),\n  createSale: vi.fn(),\n  updateSale: vi.fn(),\n  deleteSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 16,
          "block": "fetchSale: vi.fn(),\n  createSale: vi.fn(),\n  updateSale: vi.fn(),\n  deleteSale: vi.fn(),\n  exportSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 16,
          "block": "fetchSale: vi.fn(),\n  createSale: vi.fn(),\n  updateSale: vi.fn(),\n  deleteSale: vi.fn(),\n  exportSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 33,
          "block": "vi.clearAllMocks();\n  });\n\n  it(\"should fetch sales data\", async () => {\n    const mockSales = [{ id..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 33,
          "block": "vi.clearAllMocks();\n  });\n\n  it(\"should fetch sales data\", async () => {\n    const mockSales = [{ id..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 35,
          "block": "it(\"should fetch sales data\", async () => {\n    const mockSales = [{ id: \"1\", amount: 100 }];\n\n    /..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 35,
          "block": "it(\"should fetch sales data\", async () => {\n    const mockSales = [{ id: \"1\", amount: 100 }];\n\n    /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 36,
          "block": "it(\"should fetch sales data\", async () => {\n    const mockSales = [{ id: \"1\", amount: 100 }];\n\n    /..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 36,
          "block": "it(\"should fetch sales data\", async () => {\n    const mockSales = [{ id: \"1\", amount: 100 }];\n\n    /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 37,
          "block": "const mockSales = [{ id: \"1\", amount: 100 }];\n\n    // Use shared test utility\n    const { renderTest..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 56,
          "block": "const mockSales = [{ id: \"1\", amount: 100 }];\n\n    // Use shared test utility\n    const { renderTest..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 37,
          "block": "const mockSales = [{ id: \"1\", amount: 100 }];\n\n    // Use shared test utility\n    const { renderTest..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 56,
          "block": "const mockSales = [{ id: \"1\", amount: 100 }];\n\n    // Use shared test utility\n    const { renderTest..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 38,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 57,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 38,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 57,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 39,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 39,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 40,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSales);\n\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 40,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSales);\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 41,
          "block": "mockFetch.mockResolvedValue(mockSales);\n\n    const { result } = renderTestHook(() => useSalesQuery()..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 41,
          "block": "mockFetch.mockResolvedValue(mockSales);\n\n    const { result } = renderTestHook(() => useSalesQuery()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 42,
          "block": "const { result } = renderTestHook(() => useSalesQuery());\n\n    expect(result.current.isLoading).toBe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 42,
          "block": "const { result } = renderTestHook(() => useSalesQuery());\n\n    expect(result.current.isLoading).toBe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 43,
          "block": "const { result } = renderTestHook(() => useSalesQuery());\n\n    expect(result.current.isLoading).toBe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 43,
          "block": "const { result } = renderTestHook(() => useSalesQuery());\n\n    expect(result.current.isLoading).toBe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 44,
          "block": "expect(result.current.isLoading).toBe(true);\n\n    await waitFor(() => {\n      expect(result.current...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 44,
          "block": "expect(result.current.isLoading).toBe(true);\n\n    await waitFor(() => {\n      expect(result.current...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 45,
          "block": "expect(result.current.isLoading).toBe(true);\n\n    await waitFor(() => {\n      expect(result.current...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 45,
          "block": "expect(result.current.isLoading).toBe(true);\n\n    await waitFor(() => {\n      expect(result.current...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 47,
          "block": "await waitFor(() => {\n      expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result...."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 69,
          "block": "await waitFor(() => {\n      expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 47,
          "block": "await waitFor(() => {\n      expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 69,
          "block": "await waitFor(() => {\n      expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 48,
          "block": "expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result.current.data).toEqual(mockSa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 48,
          "block": "expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result.current.data).toEqual(mockSa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 49,
          "block": "});\n\n    expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveB..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 49,
          "block": "});\n\n    expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveB..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 50,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 50,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 51,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 51,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 52,
          "block": "expect(salesService.fetchSales).toHaveBeenCalledTimes(1);\n  });\n\n  it(\"should fetch sales data with ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 52,
          "block": "expect(salesService.fetchSales).toHaveBeenCalledTimes(1);\n  });\n\n  it(\"should fetch sales data with ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 53,
          "block": "});\n\n  it(\"should fetch sales data with filters\", async () => {\n    const mockSales = [{ id: \"1\", am..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 53,
          "block": "});\n\n  it(\"should fetch sales data with filters\", async () => {\n    const mockSales = [{ id: \"1\", am..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 54,
          "block": "it(\"should fetch sales data with filters\", async () => {\n    const mockSales = [{ id: \"1\", amount: 1..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 54,
          "block": "it(\"should fetch sales data with filters\", async () => {\n    const mockSales = [{ id: \"1\", amount: 1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 55,
          "block": "it(\"should fetch sales data with filters\", async () => {\n    const mockSales = [{ id: \"1\", amount: 1..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 55,
          "block": "it(\"should fetch sales data with filters\", async () => {\n    const mockSales = [{ id: \"1\", amount: 1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 58,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 58,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 59,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSales);\n\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 59,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSales);\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 60,
          "block": "mockFetch.mockResolvedValue(mockSales);\n\n    const filters = {\n      dateRange: { from: new Date(\"20..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 60,
          "block": "mockFetch.mockResolvedValue(mockSales);\n\n    const filters = {\n      dateRange: { from: new Date(\"20..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 61,
          "block": "const filters = {\n      dateRange: { from: new Date(\"2023-01-01\") },\n      fuelType: \"diesel\" as Fue..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 62,
          "block": "const filters = {\n      dateRange: { from: new Date(\"2023-01-01\") },\n      fuelType: \"diesel\" as Fue..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 61,
          "block": "const filters = {\n      dateRange: { from: new Date(\"2023-01-01\") },\n      fuelType: \"diesel\" as Fue..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 62,
          "block": "const filters = {\n      dateRange: { from: new Date(\"2023-01-01\") },\n      fuelType: \"diesel\" as Fue..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 63,
          "block": "dateRange: { from: new Date(\"2023-01-01\") },\n      fuelType: \"diesel\" as FuelTypeCode,\n    };\n\n    c..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 63,
          "block": "dateRange: { from: new Date(\"2023-01-01\") },\n      fuelType: \"diesel\" as FuelTypeCode,\n    };\n\n    c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 64,
          "block": "fuelType: \"diesel\" as FuelTypeCode,\n    };\n\n    const { result } = renderTestHook(() => useSalesQuer..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 64,
          "block": "fuelType: \"diesel\" as FuelTypeCode,\n    };\n\n    const { result } = renderTestHook(() => useSalesQuer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 66,
          "block": "const { result } = renderTestHook(() => useSalesQuery(filters));\n\n    await waitFor(() => {\n      ex..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 66,
          "block": "const { result } = renderTestHook(() => useSalesQuery(filters));\n\n    await waitFor(() => {\n      ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 67,
          "block": "const { result } = renderTestHook(() => useSalesQuery(filters));\n\n    await waitFor(() => {\n      ex..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 67,
          "block": "const { result } = renderTestHook(() => useSalesQuery(filters));\n\n    await waitFor(() => {\n      ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 70,
          "block": "expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result.current.data).toEqual(mockSa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 70,
          "block": "expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result.current.data).toEqual(mockSa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 71,
          "block": "});\n\n    expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveB..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 71,
          "block": "});\n\n    expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveB..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 72,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 73,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 72,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 73,
          "block": "expect(result.current.data).toEqual(mockSales);\n    expect(salesService.fetchSales).toHaveBeenCalled..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 74,
          "block": "expect(salesService.fetchSales).toHaveBeenCalledWith(filters);\n  });\n});\n\ndescribe(\"useSaleQuery\", (..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 74,
          "block": "expect(salesService.fetchSales).toHaveBeenCalledWith(filters);\n  });\n});\n\ndescribe(\"useSaleQuery\", (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 79,
          "block": "beforeEach(() => {\n    vi.clearAllMocks();\n  });\n\n  it(\"should fetch a single sale by ID\", async () ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 79,
          "block": "beforeEach(() => {\n    vi.clearAllMocks();\n  });\n\n  it(\"should fetch a single sale by ID\", async () ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 80,
          "block": "vi.clearAllMocks();\n  });\n\n  it(\"should fetch a single sale by ID\", async () => {\n    const mockSale..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 80,
          "block": "vi.clearAllMocks();\n  });\n\n  it(\"should fetch a single sale by ID\", async () => {\n    const mockSale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 81,
          "block": "});\n\n  it(\"should fetch a single sale by ID\", async () => {\n    const mockSale = { id: \"1\", amount: ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 81,
          "block": "});\n\n  it(\"should fetch a single sale by ID\", async () => {\n    const mockSale = { id: \"1\", amount: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 82,
          "block": "it(\"should fetch a single sale by ID\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 82,
          "block": "it(\"should fetch a single sale by ID\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 83,
          "block": "it(\"should fetch a single sale by ID\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 83,
          "block": "it(\"should fetch a single sale by ID\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 84,
          "block": "const mockSale = { id: \"1\", amount: 100 };\n\n    // Use shared test utility\n    const { renderTestHoo..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 84,
          "block": "const mockSale = { id: \"1\", amount: 100 };\n\n    // Use shared test utility\n    const { renderTestHoo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 85,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 85,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 86,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 86,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 87,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSale);\n\n ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 87,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSale);\n\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 88,
          "block": "mockFetch.mockResolvedValue(mockSale);\n\n    const { result } = renderTestHook(() => useSaleQuery(\"1\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 88,
          "block": "mockFetch.mockResolvedValue(mockSale);\n\n    const { result } = renderTestHook(() => useSaleQuery(\"1\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 89,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"1\"));\n\n    await waitFor(() => {\n      expect(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 89,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"1\"));\n\n    await waitFor(() => {\n      expect(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 90,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"1\"));\n\n    await waitFor(() => {\n      expect(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 90,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"1\"));\n\n    await waitFor(() => {\n      expect(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 92,
          "block": "await waitFor(() => {\n      expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 92,
          "block": "await waitFor(() => {\n      expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 93,
          "block": "expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result.current.data).toEqual(mockSa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 93,
          "block": "expect(result.current.isSuccess).toBe(true);\n    });\n\n    expect(result.current.data).toEqual(mockSa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 94,
          "block": "});\n\n    expect(result.current.data).toEqual(mockSale);\n    expect(salesService.fetchSale).toHaveBee..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 94,
          "block": "});\n\n    expect(result.current.data).toEqual(mockSale);\n    expect(salesService.fetchSale).toHaveBee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 95,
          "block": "expect(result.current.data).toEqual(mockSale);\n    expect(salesService.fetchSale).toHaveBeenCalledWi..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 95,
          "block": "expect(result.current.data).toEqual(mockSale);\n    expect(salesService.fetchSale).toHaveBeenCalledWi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 96,
          "block": "expect(result.current.data).toEqual(mockSale);\n    expect(salesService.fetchSale).toHaveBeenCalledWi..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 96,
          "block": "expect(result.current.data).toEqual(mockSale);\n    expect(salesService.fetchSale).toHaveBeenCalledWi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 97,
          "block": "expect(salesService.fetchSale).toHaveBeenCalledWith(\"1\");\n  });\n\n  it(\"should not fetch when ID is e..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 97,
          "block": "expect(salesService.fetchSale).toHaveBeenCalledWith(\"1\");\n  });\n\n  it(\"should not fetch when ID is e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 98,
          "block": "});\n\n  it(\"should not fetch when ID is empty\", async () => {\n    // Use shared test utility\n    cons..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 98,
          "block": "});\n\n  it(\"should not fetch when ID is empty\", async () => {\n    // Use shared test utility\n    cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 99,
          "block": "it(\"should not fetch when ID is empty\", async () => {\n    // Use shared test utility\n    const { ren..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 99,
          "block": "it(\"should not fetch when ID is empty\", async () => {\n    // Use shared test utility\n    const { ren..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 100,
          "block": "it(\"should not fetch when ID is empty\", async () => {\n    // Use shared test utility\n    const { ren..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 100,
          "block": "it(\"should not fetch when ID is empty\", async () => {\n    // Use shared test utility\n    const { ren..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 101,
          "block": "// Use shared test utility\n    const { renderTestHook } = setupHookTest();\n\n    const { result } = r..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 101,
          "block": "// Use shared test utility\n    const { renderTestHook } = setupHookTest();\n\n    const { result } = r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 102,
          "block": "const { renderTestHook } = setupHookTest();\n\n    const { result } = renderTestHook(() => useSaleQuer..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 102,
          "block": "const { renderTestHook } = setupHookTest();\n\n    const { result } = renderTestHook(() => useSaleQuer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 103,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"\"));\n\n    expect(result.current.isLoading).toB..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 103,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"\"));\n\n    expect(result.current.isLoading).toB..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 104,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"\"));\n\n    expect(result.current.isLoading).toB..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 104,
          "block": "const { result } = renderTestHook(() => useSaleQuery(\"\"));\n\n    expect(result.current.isLoading).toB..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 105,
          "block": "expect(result.current.isLoading).toBe(false);\n    expect(salesService.fetchSale).not.toHaveBeenCalle..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 106,
          "block": "expect(result.current.isLoading).toBe(false);\n    expect(salesService.fetchSale).not.toHaveBeenCalle..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 105,
          "block": "expect(result.current.isLoading).toBe(false);\n    expect(salesService.fetchSale).not.toHaveBeenCalle..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 106,
          "block": "expect(result.current.isLoading).toBe(false);\n    expect(salesService.fetchSale).not.toHaveBeenCalle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 107,
          "block": "expect(salesService.fetchSale).not.toHaveBeenCalled();\n  });\n});\n\ndescribe(\"useSalesMutations\", () =..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 107,
          "block": "expect(salesService.fetchSale).not.toHaveBeenCalled();\n  });\n});\n\ndescribe(\"useSalesMutations\", () =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 113,
          "block": "vi.clearAllMocks();\n  });\n\n  it(\"should create a sale\", async () => {\n    const mockSale = { id: \"1\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 113,
          "block": "vi.clearAllMocks();\n  });\n\n  it(\"should create a sale\", async () => {\n    const mockSale = { id: \"1\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 115,
          "block": "it(\"should create a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n\n    // Use ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 115,
          "block": "it(\"should create a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n\n    // Use ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 116,
          "block": "it(\"should create a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n\n    // Use ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 116,
          "block": "it(\"should create a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 100 };\n\n    // Use ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 117,
          "block": "const mockSale = { id: \"1\", amount: 100 };\n\n    // Use shared mutation test utility\n    const { rend..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 117,
          "block": "const mockSale = { id: \"1\", amount: 100 };\n\n    // Use shared mutation test utility\n    const { rend..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 118,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 145,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 118,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 145,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 119,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 146,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 119,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 146,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 120,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n    mockMutate.mockResolvedValue(mockSal..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 147,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n    mockMutate.mockResolvedValue(mockSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 120,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n    mockMutate.mockResolvedValue(mockSal..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 147,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n    mockMutate.mockResolvedValue(mockSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 121,
          "block": "mockMutate.mockResolvedValue(mockSale);\n\n    const { result } = renderTestHook(() => useSalesMutatio..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 121,
          "block": "mockMutate.mockResolvedValue(mockSale);\n\n    const { result } = renderTestHook(() => useSalesMutatio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 122,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const newSale: CreateSaleRequest ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 122,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const newSale: CreateSaleRequest ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 123,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const newSale: CreateSaleRequest ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 123,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const newSale: CreateSaleRequest ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 124,
          "block": "const newSale: CreateSaleRequest = { \n      amount: 100, \n      quantityLiters: 10,\n      unitPrice:..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 124,
          "block": "const newSale: CreateSaleRequest = { \n      amount: 100, \n      quantityLiters: 10,\n      unitPrice:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 125,
          "block": "const newSale: CreateSaleRequest = { \n      amount: 100, \n      quantityLiters: 10,\n      unitPrice:..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 125,
          "block": "const newSale: CreateSaleRequest = { \n      amount: 100, \n      quantityLiters: 10,\n      unitPrice:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 126,
          "block": "amount: 100, \n      quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 126,
          "block": "amount: 100, \n      quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 127,
          "block": "quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"di..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 192,
          "block": "quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"di..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 127,
          "block": "quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"di..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 192,
          "block": "quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 128,
          "block": "unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 193,
          "block": "unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 128,
          "block": "unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 193,
          "block": "unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 129,
          "block": "saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      payme..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 129,
          "block": "saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      payme..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 130,
          "block": "fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    };\n    result...."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 130,
          "block": "fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    };\n    result...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 131,
          "block": "paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    };\n    result.current.createSale.mutate(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 131,
          "block": "paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    };\n    result.current.createSale.mutate(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 132,
          "block": "paymentStatus: \"completed\"\n    };\n    result.current.createSale.mutate(newSale);\n\n    await waitFor(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 132,
          "block": "paymentStatus: \"completed\"\n    };\n    result.current.createSale.mutate(newSale);\n\n    await waitFor(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 133,
          "block": "};\n    result.current.createSale.mutate(newSale);\n\n    await waitFor(() => {\n      expect(result.cur..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 133,
          "block": "};\n    result.current.createSale.mutate(newSale);\n\n    await waitFor(() => {\n      expect(result.cur..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 134,
          "block": "result.current.createSale.mutate(newSale);\n\n    await waitFor(() => {\n      expect(result.current.cr..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 134,
          "block": "result.current.createSale.mutate(newSale);\n\n    await waitFor(() => {\n      expect(result.current.cr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 136,
          "block": "await waitFor(() => {\n      expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    exp..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 136,
          "block": "await waitFor(() => {\n      expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    exp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 137,
          "block": "expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    expect(salesService.createSale)..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 137,
          "block": "expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    expect(salesService.createSale)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 139,
          "block": "expect(salesService.createSale).toHaveBeenCalledWith(newSale);\n  });\n\n  it(\"should update a sale\", a..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 139,
          "block": "expect(salesService.createSale).toHaveBeenCalledWith(newSale);\n  });\n\n  it(\"should update a sale\", a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 140,
          "block": "expect(salesService.createSale).toHaveBeenCalledWith(newSale);\n  });\n\n  it(\"should update a sale\", a..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 140,
          "block": "expect(salesService.createSale).toHaveBeenCalledWith(newSale);\n  });\n\n  it(\"should update a sale\", a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 142,
          "block": "it(\"should update a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 200 };\n\n    // Use ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 142,
          "block": "it(\"should update a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 200 };\n\n    // Use ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 143,
          "block": "it(\"should update a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 200 };\n\n    // Use ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 143,
          "block": "it(\"should update a sale\", async () => {\n    const mockSale = { id: \"1\", amount: 200 };\n\n    // Use ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 144,
          "block": "const mockSale = { id: \"1\", amount: 200 };\n\n    // Use shared mutation test utility\n    const { rend..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 144,
          "block": "const mockSale = { id: \"1\", amount: 200 };\n\n    // Use shared mutation test utility\n    const { rend..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 148,
          "block": "mockMutate.mockResolvedValue(mockSale);\n\n    const { result } = renderTestHook(() => useSalesMutatio..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 148,
          "block": "mockMutate.mockResolvedValue(mockSale);\n\n    const { result } = renderTestHook(() => useSalesMutatio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 149,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const updateData: UpdateSaleReque..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 150,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const updateData: UpdateSaleReque..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 149,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const updateData: UpdateSaleReque..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 150,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    const updateData: UpdateSaleReque..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 151,
          "block": "const updateData: UpdateSaleRequest = { id: \"1\", amount: 200 };\n    result.current.updateSale.mutate..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 151,
          "block": "const updateData: UpdateSaleRequest = { id: \"1\", amount: 200 };\n    result.current.updateSale.mutate..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 152,
          "block": "const updateData: UpdateSaleRequest = { id: \"1\", amount: 200 };\n    result.current.updateSale.mutate..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 152,
          "block": "const updateData: UpdateSaleRequest = { id: \"1\", amount: 200 };\n    result.current.updateSale.mutate..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 153,
          "block": "result.current.updateSale.mutate({ id: \"1\", data: updateData });\n\n    await waitFor(() => {\n      ex..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 153,
          "block": "result.current.updateSale.mutate({ id: \"1\", data: updateData });\n\n    await waitFor(() => {\n      ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 155,
          "block": "await waitFor(() => {\n      expect(result.current.updateSale.isSuccess).toBe(true);\n    });\n\n    exp..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 155,
          "block": "await waitFor(() => {\n      expect(result.current.updateSale.isSuccess).toBe(true);\n    });\n\n    exp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 156,
          "block": "expect(result.current.updateSale.isSuccess).toBe(true);\n    });\n\n    expect(salesService.updateSale)..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 156,
          "block": "expect(result.current.updateSale.isSuccess).toBe(true);\n    });\n\n    expect(salesService.updateSale)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 158,
          "block": "expect(salesService.updateSale).toHaveBeenCalledWith(\"1\", updateData);\n  });\n\n  it(\"should delete a ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 158,
          "block": "expect(salesService.updateSale).toHaveBeenCalledWith(\"1\", updateData);\n  });\n\n  it(\"should delete a ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 159,
          "block": "expect(salesService.updateSale).toHaveBeenCalledWith(\"1\", updateData);\n  });\n\n  it(\"should delete a ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 159,
          "block": "expect(salesService.updateSale).toHaveBeenCalledWith(\"1\", updateData);\n  });\n\n  it(\"should delete a ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 160,
          "block": "});\n\n  it(\"should delete a sale\", async () => {\n    const mockResponse = { message: \"Sale deleted\" }..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 160,
          "block": "});\n\n  it(\"should delete a sale\", async () => {\n    const mockResponse = { message: \"Sale deleted\" }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 161,
          "block": "it(\"should delete a sale\", async () => {\n    const mockResponse = { message: \"Sale deleted\" };\n\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 161,
          "block": "it(\"should delete a sale\", async () => {\n    const mockResponse = { message: \"Sale deleted\" };\n\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 162,
          "block": "it(\"should delete a sale\", async () => {\n    const mockResponse = { message: \"Sale deleted\" };\n\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 162,
          "block": "it(\"should delete a sale\", async () => {\n    const mockResponse = { message: \"Sale deleted\" };\n\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 163,
          "block": "const mockResponse = { message: \"Sale deleted\" };\n\n    // Use shared mutation test utility\n    const..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 163,
          "block": "const mockResponse = { message: \"Sale deleted\" };\n\n    // Use shared mutation test utility\n    const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 164,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 164,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 165,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 165,
          "block": "// Use shared mutation test utility\n    const { renderTestHook, mockMutate } = setupMutationTest();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 166,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n    mockMutate.mockResolvedValue(mockRes..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 166,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n    mockMutate.mockResolvedValue(mockRes..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 167,
          "block": "mockMutate.mockResolvedValue(mockResponse);\n\n    const { result } = renderTestHook(() => useSalesMut..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 167,
          "block": "mockMutate.mockResolvedValue(mockResponse);\n\n    const { result } = renderTestHook(() => useSalesMut..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 168,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    result.current.deleteSale.mutate(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 168,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    result.current.deleteSale.mutate(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 169,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    result.current.deleteSale.mutate(..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 169,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    result.current.deleteSale.mutate(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 170,
          "block": "result.current.deleteSale.mutate(\"1\");\n\n    await waitFor(() => {\n      expect(result.current.delete..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 170,
          "block": "result.current.deleteSale.mutate(\"1\");\n\n    await waitFor(() => {\n      expect(result.current.delete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 171,
          "block": "result.current.deleteSale.mutate(\"1\");\n\n    await waitFor(() => {\n      expect(result.current.delete..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 171,
          "block": "result.current.deleteSale.mutate(\"1\");\n\n    await waitFor(() => {\n      expect(result.current.delete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 173,
          "block": "await waitFor(() => {\n      expect(result.current.deleteSale.isSuccess).toBe(true);\n    });\n\n    exp..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 173,
          "block": "await waitFor(() => {\n      expect(result.current.deleteSale.isSuccess).toBe(true);\n    });\n\n    exp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 174,
          "block": "expect(result.current.deleteSale.isSuccess).toBe(true);\n    });\n\n    expect(salesService.deleteSale)..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 174,
          "block": "expect(result.current.deleteSale.isSuccess).toBe(true);\n    });\n\n    expect(salesService.deleteSale)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 176,
          "block": "expect(salesService.deleteSale).toHaveBeenCalledWith(\"1\");\n  });\n\n  it(\"should invalidate queries af..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 176,
          "block": "expect(salesService.deleteSale).toHaveBeenCalledWith(\"1\");\n  });\n\n  it(\"should invalidate queries af..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 177,
          "block": "expect(salesService.deleteSale).toHaveBeenCalledWith(\"1\");\n  });\n\n  it(\"should invalidate queries af..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 177,
          "block": "expect(salesService.deleteSale).toHaveBeenCalledWith(\"1\");\n  });\n\n  it(\"should invalidate queries af..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 178,
          "block": "});\n\n  it(\"should invalidate queries after mutation success\", async () => {\n    // Use shared mutati..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 178,
          "block": "});\n\n  it(\"should invalidate queries after mutation success\", async () => {\n    // Use shared mutati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 179,
          "block": "it(\"should invalidate queries after mutation success\", async () => {\n    // Use shared mutation test..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 180,
          "block": "it(\"should invalidate queries after mutation success\", async () => {\n    // Use shared mutation test..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 179,
          "block": "it(\"should invalidate queries after mutation success\", async () => {\n    // Use shared mutation test..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 180,
          "block": "it(\"should invalidate queries after mutation success\", async () => {\n    // Use shared mutation test..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 181,
          "block": "// Use shared mutation test utility with queryClient access\n    const { queryClient, renderTestHook,..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 181,
          "block": "// Use shared mutation test utility with queryClient access\n    const { queryClient, renderTestHook,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 182,
          "block": "const { queryClient, renderTestHook, mockMutate } = setupMutationTest();\n    const spyInvalidateQuer..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 182,
          "block": "const { queryClient, renderTestHook, mockMutate } = setupMutationTest();\n    const spyInvalidateQuer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 183,
          "block": "const spyInvalidateQueries = vi.spyOn(queryClient, \"invalidateQueries\");\n\n    mockMutate.mockResolve..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 183,
          "block": "const spyInvalidateQueries = vi.spyOn(queryClient, \"invalidateQueries\");\n\n    mockMutate.mockResolve..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 184,
          "block": "mockMutate.mockResolvedValue({ id: \"1\", amount: 100 });\n\n    const { result } = renderTestHook(() =>..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 184,
          "block": "mockMutate.mockResolvedValue({ id: \"1\", amount: 100 });\n\n    const { result } = renderTestHook(() =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 185,
          "block": "mockMutate.mockResolvedValue({ id: \"1\", amount: 100 });\n\n    const { result } = renderTestHook(() =>..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 185,
          "block": "mockMutate.mockResolvedValue({ id: \"1\", amount: 100 });\n\n    const { result } = renderTestHook(() =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 186,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    // Test create mutation invalidat..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 186,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    // Test create mutation invalidat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 187,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    // Test create mutation invalidat..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 187,
          "block": "const { result } = renderTestHook(() => useSalesMutations());\n\n    // Test create mutation invalidat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 188,
          "block": "// Test create mutation invalidation\n    result.current.createSale.mutate({ \n      amount: 100,\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 188,
          "block": "// Test create mutation invalidation\n    result.current.createSale.mutate({ \n      amount: 100,\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 189,
          "block": "// Test create mutation invalidation\n    result.current.createSale.mutate({ \n      amount: 100,\n    ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 189,
          "block": "// Test create mutation invalidation\n    result.current.createSale.mutate({ \n      amount: 100,\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 190,
          "block": "result.current.createSale.mutate({ \n      amount: 100,\n      quantityLiters: 10,\n      unitPrice: 10..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 190,
          "block": "result.current.createSale.mutate({ \n      amount: 100,\n      quantityLiters: 10,\n      unitPrice: 10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 191,
          "block": "amount: 100,\n      quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 191,
          "block": "amount: 100,\n      quantityLiters: 10,\n      unitPrice: 10,\n      saleDate: new Date(\"2024-01-01\"),\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 194,
          "block": "saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      payme..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 194,
          "block": "saleDate: new Date(\"2024-01-01\"),\n      fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      payme..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 195,
          "block": "fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    } satisfies Cr..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 195,
          "block": "fuelType: \"diesel\",\n      paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    } satisfies Cr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 196,
          "block": "paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    } satisfies CreateSaleRequest);\n\n    awa..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 196,
          "block": "paymentMethod: \"cash\",\n      paymentStatus: \"completed\"\n    } satisfies CreateSaleRequest);\n\n    awa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 197,
          "block": "paymentStatus: \"completed\"\n    } satisfies CreateSaleRequest);\n\n    await waitFor(() => {\n      expe..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 197,
          "block": "paymentStatus: \"completed\"\n    } satisfies CreateSaleRequest);\n\n    await waitFor(() => {\n      expe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 198,
          "block": "} satisfies CreateSaleRequest);\n\n    await waitFor(() => {\n      expect(result.current.createSale.is..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 198,
          "block": "} satisfies CreateSaleRequest);\n\n    await waitFor(() => {\n      expect(result.current.createSale.is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 200,
          "block": "await waitFor(() => {\n      expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    // ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 200,
          "block": "await waitFor(() => {\n      expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    // ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 201,
          "block": "expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    // Should invalidate sales quer..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 201,
          "block": "expect(result.current.createSale.isSuccess).toBe(true);\n    });\n\n    // Should invalidate sales quer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 202,
          "block": "});\n\n    // Should invalidate sales queries\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 202,
          "block": "});\n\n    // Should invalidate sales queries\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 203,
          "block": "// Should invalidate sales queries\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"sales\"]);..."
        },
        {
          "file": "src\\features\\finance\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 204,
          "block": "// Should invalidate sales queries\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"sales\"]);..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 203,
          "block": "// Should invalidate sales queries\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"sales\"]);..."
        },
        {
          "file": "src\\features\\sales\\hooks\\__tests__\\useSalesQuery.test.ts",
          "startLine": 204,
          "block": "// Should invalidate sales queries\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"sales\"]);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseCreate.tsx",
          "startLine": 7,
          "block": "// Import components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nimport { Button ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 6,
          "block": "// Import components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nimport { Button ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 6,
          "block": "// Import components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nimport { Button ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseCreate.tsx",
          "startLine": 86,
          "block": "},\n    onError: (error: unknown) => {\n      console.error(\"Create error:\", error);\n      toast({\n   ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 37,
          "block": "},\n    onError: (error: unknown) => {\n      console.error(\"Create error:\", error);\n      toast({\n   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 37,
          "block": "},\n    onError: (error: unknown) => {\n      console.error(\"Create error:\", error);\n      toast({\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseCreate.tsx",
          "startLine": 148,
          "block": "actions={\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={hand..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 66,
          "block": "actions={\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={hand..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 80,
          "block": "actions={\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={hand..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseCreate.tsx",
          "startLine": 149,
          "block": "<div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={handleCancel}>\n         ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 67,
          "block": "<div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={handleCancel}>\n         ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 81,
          "block": "<div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={handleCancel}>\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseCreate.tsx",
          "startLine": 150,
          "block": "<Button variant=\"outline\" onClick={handleCancel}>\n              <IconArrowLeft className=\"mr-2 h-4 w..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 68,
          "block": "<Button variant=\"outline\" onClick={handleCancel}>\n              <IconArrowLeft className=\"mr-2 h-4 w..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 82,
          "block": "<Button variant=\"outline\" onClick={handleCancel}>\n              <IconArrowLeft className=\"mr-2 h-4 w..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseCreate.tsx",
          "startLine": 151,
          "block": "<IconArrowLeft className=\"mr-2 h-4 w-4\" />\n              {t(\"common.back\")}\n            </Button>\n  ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 69,
          "block": "<IconArrowLeft className=\"mr-2 h-4 w-4\" />\n              {t(\"common.back\")}\n            </Button>\n  ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 83,
          "block": "<IconArrowLeft className=\"mr-2 h-4 w-4\" />\n              {t(\"common.back\")}\n            </Button>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 212,
          "block": "\"Select status\"\n                          )}\n                        />\n                      </Sele..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 274,
          "block": "\"Select status\"\n                          )}\n                        />\n                      </Sele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 283,
          "block": ")}\n                      {...field}\n                    />\n                  </FormControl>\n        ..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpenseForm.tsx",
          "startLine": 304,
          "block": ")}\n                      {...field}\n                    />\n                  </FormControl>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 355,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {quickStats.map((st..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 318,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {quickStats.map((st..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 272,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {quickStats.map((st..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 388,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {quickStats.map((st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 356,
          "block": "{quickStats.map((stat, index) => (\n            <StatsCard\n              key={index}\n              ti..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 319,
          "block": "{quickStats.map((stat, index) => (\n            <StatsCard\n              key={index}\n              ti..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 273,
          "block": "{quickStats.map((stat, index) => (\n            <StatsCard\n              key={index}\n              ti..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 389,
          "block": "{quickStats.map((stat, index) => (\n            <StatsCard\n              key={index}\n              ti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 357,
          "block": "<StatsCard\n              key={index}\n              title={stat.title}\n              value={stat.valu..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 320,
          "block": "<StatsCard\n              key={index}\n              title={stat.title}\n              value={stat.valu..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 270,
          "block": "<StatsCard\n              key={index}\n              title={stat.title}\n              value={stat.valu..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 408,
          "block": "<StatsCard\n              key={index}\n              title={stat.title}\n              value={stat.valu..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 274,
          "block": "<StatsCard\n              key={index}\n              title={stat.title}\n              value={stat.valu..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 390,
          "block": "<StatsCard\n              key={index}\n              title={stat.title}\n              value={stat.valu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 358,
          "block": "key={index}\n              title={stat.title}\n              value={stat.value}\n              icon={st..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 321,
          "block": "key={index}\n              title={stat.title}\n              value={stat.value}\n              icon={st..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 271,
          "block": "key={index}\n              title={stat.title}\n              value={stat.value}\n              icon={st..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 409,
          "block": "key={index}\n              title={stat.title}\n              value={stat.value}\n              icon={st..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 275,
          "block": "key={index}\n              title={stat.title}\n              value={stat.value}\n              icon={st..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 391,
          "block": "key={index}\n              title={stat.title}\n              value={stat.value}\n              icon={st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 359,
          "block": "title={stat.title}\n              value={stat.value}\n              icon={stat.icon}\n              col..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 322,
          "block": "title={stat.title}\n              value={stat.value}\n              icon={stat.icon}\n              col..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 272,
          "block": "title={stat.title}\n              value={stat.value}\n              icon={stat.icon}\n              col..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 410,
          "block": "title={stat.title}\n              value={stat.value}\n              icon={stat.icon}\n              col..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 276,
          "block": "title={stat.title}\n              value={stat.value}\n              icon={stat.icon}\n              col..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 392,
          "block": "title={stat.title}\n              value={stat.value}\n              icon={stat.icon}\n              col..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 360,
          "block": "value={stat.value}\n              icon={stat.icon}\n              color={stat.color}\n              des..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 323,
          "block": "value={stat.value}\n              icon={stat.icon}\n              color={stat.color}\n              des..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 273,
          "block": "value={stat.value}\n              icon={stat.icon}\n              color={stat.color}\n              des..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 411,
          "block": "value={stat.value}\n              icon={stat.icon}\n              color={stat.color}\n              des..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 277,
          "block": "value={stat.value}\n              icon={stat.icon}\n              color={stat.color}\n              des..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 393,
          "block": "value={stat.value}\n              icon={stat.icon}\n              color={stat.color}\n              des..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 361,
          "block": "icon={stat.icon}\n              color={stat.color}\n              description={stat.description}\n     ..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 324,
          "block": "icon={stat.icon}\n              color={stat.color}\n              description={stat.description}\n     ..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 274,
          "block": "icon={stat.icon}\n              color={stat.color}\n              description={stat.description}\n     ..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 412,
          "block": "icon={stat.icon}\n              color={stat.color}\n              description={stat.description}\n     ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 278,
          "block": "icon={stat.icon}\n              color={stat.color}\n              description={stat.description}\n     ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 394,
          "block": "icon={stat.icon}\n              color={stat.color}\n              description={stat.description}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 362,
          "block": "color={stat.color}\n              description={stat.description}\n            />\n          ))}\n       ..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 325,
          "block": "color={stat.color}\n              description={stat.description}\n            />\n          ))}\n       ..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 275,
          "block": "color={stat.color}\n              description={stat.description}\n            />\n          ))}\n       ..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 413,
          "block": "color={stat.color}\n              description={stat.description}\n            />\n          ))}\n       ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 279,
          "block": "color={stat.color}\n              description={stat.description}\n            />\n          ))}\n       ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 395,
          "block": "color={stat.color}\n              description={stat.description}\n            />\n          ))}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 508,
          "block": "</h4>\n            {loading ? (\n              <div className=\"text-center py-8 text-muted-foreground\"..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 591,
          "block": "</h4>\n            {loading ? (\n              <div className=\"text-center py-8 text-muted-foreground\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 694,
          "block": "/>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm f..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 709,
          "block": "/>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm f..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 755,
          "block": "/>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 726,
          "block": "</select>\n                </div>\n\n                <div>\n                  <label className=\"block te..."
        },
        {
          "file": "src\\features\\finance\\pages\\ExpensesPage.tsx",
          "startLine": 770,
          "block": "</select>\n                </div>\n\n                <div>\n                  <label className=\"block te..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 10,
          "block": "CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 11,
          "block": "CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 11,
          "block": "CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 11,
          "block": "CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@..."
        },
        {
          "file": "src\\shared\\components\\dev\\DevToolsMenu.tsx",
          "startLine": 7,
          "block": "CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 36,
          "block": "const { data: salesData } = useQuery({\n    queryKey: [\"sales-count\"],\n    queryFn: salesApi.getSales..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 37,
          "block": "const { data: salesData } = useQuery({\n    queryKey: [\"sales-count\"],\n    queryFn: salesApi.getSales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 41,
          "block": "const { data: expensesData } = useQuery({\n    queryKey: [\"expenses-count\"],\n    queryFn: expensesApi..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 42,
          "block": "const { data: expensesData } = useQuery({\n    queryKey: [\"expenses-count\"],\n    queryFn: expensesApi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 46,
          "block": "const { data: financeOverview } = useQuery({\n    queryKey: [\"finance-overview\"],\n    queryFn: financ..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 47,
          "block": "const { data: financeOverview } = useQuery({\n    queryKey: [\"finance-overview\"],\n    queryFn: financ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 90,
          "block": "</p>\n          </CardContent>\n          <CardFooter>\n            <Button\n              variant=\"ghos..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 124,
          "block": "</p>\n          </CardContent>\n          <CardFooter>\n            <Button\n              variant=\"ghos..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 199,
          "block": "</p>\n          </CardContent>\n          <CardFooter>\n            <Button\n              variant=\"ghos..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 91,
          "block": "</CardContent>\n          <CardFooter>\n            <Button\n              variant=\"ghost\"\n            ..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 125,
          "block": "</CardContent>\n          <CardFooter>\n            <Button\n              variant=\"ghost\"\n            ..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 200,
          "block": "</CardContent>\n          <CardFooter>\n            <Button\n              variant=\"ghost\"\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 97,
          "block": ">\n              {t(\"common.manage\")}\n              <ArrowRight className=\"h-4 w-4\" />\n            </..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 131,
          "block": ">\n              {t(\"common.manage\")}\n              <ArrowRight className=\"h-4 w-4\" />\n            </..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 98,
          "block": "{t(\"common.manage\")}\n              <ArrowRight className=\"h-4 w-4\" />\n            </Button>\n        ..."
        },
        {
          "file": "src\\features\\finance\\pages\\FinanceDashboard.tsx",
          "startLine": 132,
          "block": "{t(\"common.manage\")}\n              <ArrowRight className=\"h-4 w-4\" />\n            </Button>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 27,
          "block": "id: string;\n  title: string;\n  description: string;\n  path: string;\n  icon: React.ComponentType<any>..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 24,
          "block": "id: string;\n  title: string;\n  description: string;\n  path: string;\n  icon: React.ComponentType<any>..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 28,
          "block": "id: string;\n  title: string;\n  description: string;\n  path: string;\n  icon: React.ComponentType<any>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 28,
          "block": "title: string;\n  description: string;\n  path: string;\n  icon: React.ComponentType<any>;\n  category?:..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 25,
          "block": "title: string;\n  description: string;\n  path: string;\n  icon: React.ComponentType<any>;\n  category?:..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 29,
          "block": "title: string;\n  description: string;\n  path: string;\n  icon: React.ComponentType<any>;\n  category?:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 29,
          "block": "description: string;\n  path: string;\n  icon: React.ComponentType<any>;\n  category?: string;\n  badge?..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 26,
          "block": "description: string;\n  path: string;\n  icon: React.ComponentType<any>;\n  category?: string;\n  badge?..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 30,
          "block": "description: string;\n  path: string;\n  icon: React.ComponentType<any>;\n  category?: string;\n  badge?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 31,
          "block": "icon: React.ComponentType<any>;\n  category?: string;\n  badge?: string;\n  stats?: {\n    count: string..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 28,
          "block": "icon: React.ComponentType<any>;\n  category?: string;\n  badge?: string;\n  stats?: {\n    count: string..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 32,
          "block": "icon: React.ComponentType<any>;\n  category?: string;\n  badge?: string;\n  stats?: {\n    count: string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 55,
          "block": "color: 'border-green-500/30',\n    bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',\n..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 197,
          "block": "color: 'border-green-500/30',\n    bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 56,
          "block": "bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',\n    iconGradient: 'from-green-500/..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 198,
          "block": "bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',\n    iconGradient: 'from-green-500/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 69,
          "block": "color: 'border-emerald-500/30',\n    bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 70,
          "block": "color: 'border-emerald-500/30',\n    bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 298,
          "block": "color: 'border-emerald-500/30',\n    bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 70,
          "block": "bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500/10',\n    iconGradient: 'from-emeral..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 71,
          "block": "bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500/10',\n    iconGradient: 'from-emeral..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 299,
          "block": "bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500/10',\n    iconGradient: 'from-emeral..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 83,
          "block": "color: 'border-blue-500/30',\n    bgGradient: 'bg-gradient-to-br from-blue-500/5 to-blue-500/10',\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 56,
          "block": "color: 'border-blue-500/30',\n    bgGradient: 'bg-gradient-to-br from-blue-500/5 to-blue-500/10',\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 99,
          "block": "color: 'border-red-500/30',\n    bgGradient: 'bg-gradient-to-br from-red-500/5 to-red-500/10',\n    ic..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 183,
          "block": "color: 'border-red-500/30',\n    bgGradient: 'bg-gradient-to-br from-red-500/5 to-red-500/10',\n    ic..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 100,
          "block": "bgGradient: 'bg-gradient-to-br from-red-500/5 to-red-500/10',\n    iconGradient: 'from-red-500/80 to-..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 184,
          "block": "bgGradient: 'bg-gradient-to-br from-red-500/5 to-red-500/10',\n    iconGradient: 'from-red-500/80 to-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 113,
          "block": "color: 'border-purple-500/30',\n    bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/10..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 84,
          "block": "color: 'border-purple-500/30',\n    bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 114,
          "block": "bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/10',\n    iconGradient: 'from-purple-5..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 85,
          "block": "bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/10',\n    iconGradient: 'from-purple-5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 126,
          "block": "color: 'border-orange-500/30',\n    bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/10..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 97,
          "block": "color: 'border-orange-500/30',\n    bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 127,
          "block": "bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/10',\n    iconGradient: 'from-orange-5..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 98,
          "block": "bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/10',\n    iconGradient: 'from-orange-5..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 142,
          "block": "color: 'border-indigo-500/30',\n    bgGradient: 'bg-gradient-to-br from-indigo-500/5 to-indigo-500/10..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 154,
          "block": "color: 'border-indigo-500/30',\n    bgGradient: 'bg-gradient-to-br from-indigo-500/5 to-indigo-500/10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 156,
          "block": "color: 'border-cyan-500/30',\n    bgGradient: 'bg-gradient-to-br from-cyan-500/5 to-cyan-500/10',\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 127,
          "block": "color: 'border-cyan-500/30',\n    bgGradient: 'bg-gradient-to-br from-cyan-500/5 to-cyan-500/10',\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 157,
          "block": "bgGradient: 'bg-gradient-to-br from-cyan-500/5 to-cyan-500/10',\n    iconGradient: 'from-cyan-500/80 ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 128,
          "block": "bgGradient: 'bg-gradient-to-br from-cyan-500/5 to-cyan-500/10',\n    iconGradient: 'from-cyan-500/80 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 169,
          "block": "color: 'border-teal-500/30',\n    bgGradient: 'bg-gradient-to-br from-teal-500/5 to-teal-500/10',\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 140,
          "block": "color: 'border-teal-500/30',\n    bgGradient: 'bg-gradient-to-br from-teal-500/5 to-teal-500/10',\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 185,
          "block": "color: 'border-amber-500/30',\n    bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',\n..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 170,
          "block": "color: 'border-amber-500/30',\n    bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 186,
          "block": "bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',\n    iconGradient: 'from-amber-500/..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 171,
          "block": "bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',\n    iconGradient: 'from-amber-500/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 198,
          "block": "color: 'border-slate-500/30',\n    bgGradient: 'bg-gradient-to-br from-slate-500/5 to-slate-500/10',\n..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 211,
          "block": "color: 'border-slate-500/30',\n    bgGradient: 'bg-gradient-to-br from-slate-500/5 to-slate-500/10',\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 212,
          "block": "color: 'border-violet-500/30',\n    bgGradient: 'bg-gradient-to-br from-violet-500/5 to-violet-500/10..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 227,
          "block": "color: 'border-violet-500/30',\n    bgGradient: 'bg-gradient-to-br from-violet-500/5 to-violet-500/10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 228,
          "block": "color: 'border-gray-500/30',\n    bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 284,
          "block": "color: 'border-gray-500/30',\n    bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 229,
          "block": "bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\n    iconGradient: 'from-gray-500/80 ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 285,
          "block": "bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\n    iconGradient: 'from-gray-500/80 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 271,
          "block": "const category = module.category || 'Other';\n    if (!acc[category]) {\n      acc[category] = [];\n   ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 225,
          "block": "const category = module.category || 'Other';\n    if (!acc[category]) {\n      acc[category] = [];\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 341,
          "block": "const category = module.category || 'Other';\n    if (!acc[category]) {\n      acc[category] = [];\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 272,
          "block": "if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(module);\n    return acc..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 226,
          "block": "if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(module);\n    return acc..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 342,
          "block": "if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(module);\n    return acc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 314,
          "block": "breadcrumbItems={breadcrumbItems}\n    >\n      {/* Quick Stats Overview */}\n      <div className=\"mb-..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 268,
          "block": "breadcrumbItems={breadcrumbItems}\n    >\n      {/* Quick Stats Overview */}\n      <div className=\"mb-..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 384,
          "block": "breadcrumbItems={breadcrumbItems}\n    >\n      {/* Quick Stats Overview */}\n      <div className=\"mb-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 315,
          "block": ">\n      {/* Quick Stats Overview */}\n      <div className=\"mb-8\">\n        <div className=\"grid grid-..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 269,
          "block": ">\n      {/* Quick Stats Overview */}\n      <div className=\"mb-8\">\n        <div className=\"grid grid-..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 385,
          "block": ">\n      {/* Quick Stats Overview */}\n      <div className=\"mb-8\">\n        <div className=\"grid grid-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 316,
          "block": "{/* Quick Stats Overview */}\n      <div className=\"mb-8\">\n        <div className=\"grid grid-cols-1 m..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 270,
          "block": "{/* Quick Stats Overview */}\n      <div className=\"mb-8\">\n        <div className=\"grid grid-cols-1 m..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 386,
          "block": "{/* Quick Stats Overview */}\n      <div className=\"mb-8\">\n        <div className=\"grid grid-cols-1 m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 317,
          "block": "<div className=\"mb-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\"..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 271,
          "block": "<div className=\"mb-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\"..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 387,
          "block": "<div className=\"mb-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 333,
          "block": "<div className=\"space-y-8\">\n        {Object.entries(groupedModules).map(([category, modules]) => (\n ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 287,
          "block": "<div className=\"space-y-8\">\n        {Object.entries(groupedModules).map(([category, modules]) => (\n ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 403,
          "block": "<div className=\"space-y-8\">\n        {Object.entries(groupedModules).map(([category, modules]) => (\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 334,
          "block": "{Object.entries(groupedModules).map(([category, modules]) => (\n          <div key={category}>\n      ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 288,
          "block": "{Object.entries(groupedModules).map(([category, modules]) => (\n          <div key={category}>\n      ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 404,
          "block": "{Object.entries(groupedModules).map(([category, modules]) => (\n          <div key={category}>\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 335,
          "block": "<div key={category}>\n            <div className=\"mb-6\">\n              <h2 className=\"text-xl font-se..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 289,
          "block": "<div key={category}>\n            <div className=\"mb-6\">\n              <h2 className=\"text-xl font-se..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 405,
          "block": "<div key={category}>\n            <div className=\"mb-6\">\n              <h2 className=\"text-xl font-se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 341,
          "block": "</div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 295,
          "block": "</div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 411,
          "block": "</div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 342,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {modules.map((m..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 296,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {modules.map((m..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 412,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {modules.map((m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 343,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {modules.map((m..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 297,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {modules.map((m..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 413,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {modules.map((m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 344,
          "block": "{modules.map((module) => (\n                <ModuleCard\n                  key={module.id}\n           ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 298,
          "block": "{modules.map((module) => (\n                <ModuleCard\n                  key={module.id}\n           ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 414,
          "block": "{modules.map((module) => (\n                <ModuleCard\n                  key={module.id}\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 345,
          "block": "<ModuleCard\n                  key={module.id}\n                  id={module.id}\n                  tit..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 299,
          "block": "<ModuleCard\n                  key={module.id}\n                  id={module.id}\n                  tit..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 415,
          "block": "<ModuleCard\n                  key={module.id}\n                  id={module.id}\n                  tit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 346,
          "block": "key={module.id}\n                  id={module.id}\n                  title={module.title}\n            ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 300,
          "block": "key={module.id}\n                  id={module.id}\n                  title={module.title}\n            ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 416,
          "block": "key={module.id}\n                  id={module.id}\n                  title={module.title}\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 347,
          "block": "id={module.id}\n                  title={module.title}\n                  description={module.descript..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 301,
          "block": "id={module.id}\n                  title={module.title}\n                  description={module.descript..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 417,
          "block": "id={module.id}\n                  title={module.title}\n                  description={module.descript..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 348,
          "block": "title={module.title}\n                  description={module.description}\n                  path={modu..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 302,
          "block": "title={module.title}\n                  description={module.description}\n                  path={modu..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 418,
          "block": "title={module.title}\n                  description={module.description}\n                  path={modu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 349,
          "block": "description={module.description}\n                  path={module.path}\n                  icon={module..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 303,
          "block": "description={module.description}\n                  path={module.path}\n                  icon={module..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 419,
          "block": "description={module.description}\n                  path={module.path}\n                  icon={module..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 350,
          "block": "path={module.path}\n                  icon={module.icon}\n                  badge={module.badge}\n     ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 304,
          "block": "path={module.path}\n                  icon={module.icon}\n                  badge={module.badge}\n     ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 420,
          "block": "path={module.path}\n                  icon={module.icon}\n                  badge={module.badge}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 351,
          "block": "icon={module.icon}\n                  badge={module.badge}\n                  stats={module.stats}\n   ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 305,
          "block": "icon={module.icon}\n                  badge={module.badge}\n                  stats={module.stats}\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 421,
          "block": "icon={module.icon}\n                  badge={module.badge}\n                  stats={module.stats}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 352,
          "block": "badge={module.badge}\n                  stats={module.stats}\n                  color={module.color}\n ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 306,
          "block": "badge={module.badge}\n                  stats={module.stats}\n                  color={module.color}\n ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 422,
          "block": "badge={module.badge}\n                  stats={module.stats}\n                  color={module.color}\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 353,
          "block": "stats={module.stats}\n                  color={module.color}\n                  bgGradient={module.bgG..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 307,
          "block": "stats={module.stats}\n                  color={module.color}\n                  bgGradient={module.bgG..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 423,
          "block": "stats={module.stats}\n                  color={module.color}\n                  bgGradient={module.bgG..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 354,
          "block": "color={module.color}\n                  bgGradient={module.bgGradient}\n                  iconGradient..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 308,
          "block": "color={module.color}\n                  bgGradient={module.bgGradient}\n                  iconGradient..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 424,
          "block": "color={module.color}\n                  bgGradient={module.bgGradient}\n                  iconGradient..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 355,
          "block": "bgGradient={module.bgGradient}\n                  iconGradient={module.iconGradient}\n                ..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 309,
          "block": "bgGradient={module.bgGradient}\n                  iconGradient={module.iconGradient}\n                ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 425,
          "block": "bgGradient={module.bgGradient}\n                  iconGradient={module.iconGradient}\n                ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 356,
          "block": "iconGradient={module.iconGradient}\n                  textColor={module.textColor}\n                />..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 310,
          "block": "iconGradient={module.iconGradient}\n                  textColor={module.textColor}\n                />..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 426,
          "block": "iconGradient={module.iconGradient}\n                  textColor={module.textColor}\n                />..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\FinancePage.tsx",
          "startLine": 357,
          "block": "textColor={module.textColor}\n                />\n              ))}\n            </div>\n          </div..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 311,
          "block": "textColor={module.textColor}\n                />\n              ))}\n            </div>\n          </div..."
        },
        {
          "file": "src\\features\\settings\\pages\\SettingsPage.tsx",
          "startLine": 427,
          "block": "textColor={module.textColor}\n                />\n              ))}\n            </div>\n          </div..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 177,
          "block": "const totalRevenue = revenueStreams.reduce((sum, stream) => sum + stream.amount, 0);\n  const totalTr..."
        },
        {
          "file": "src\\features\\finance\\pages\\RevenuePage.tsx",
          "startLine": 178,
          "block": "const totalRevenue = revenueStreams.reduce((sum, stream) => sum + stream.amount, 0);\n  const totalTr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation }..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 1,
          "block": "import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 2,
          "block": "import { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimpo..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 2,
          "block": "import { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimpo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { useMutation, useQueryClient } from \"@tansta..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { useMutation, useQueryClient } from \"@tansta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 4,
          "block": "import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { IconSend, IconArrowLef..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 4,
          "block": "import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { IconSend, IconArrowLef..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 5,
          "block": "import { IconSend, IconArrowLeft } from \"@tabler/icons-react\";\n\n// Import components\nimport { PageHe..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 5,
          "block": "import { IconSend, IconArrowLeft } from \"@tabler/icons-react\";\n\n// Import components\nimport { PageHe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 7,
          "block": "// Import components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nimport { Button ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 7,
          "block": "// Import components\nimport { PageHeader } from \"@/core/components/ui/page-header\";\nimport { Button ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 8,
          "block": "import { PageHeader } from \"@/core/components/ui/page-header\";\nimport { Button } from \"@/core/compon..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 8,
          "block": "import { PageHeader } from \"@/core/components/ui/page-header\";\nimport { Button } from \"@/core/compon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 9,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Card, CardContent } from \"@/core/comp..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 9,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Card, CardContent } from \"@/core/comp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 15,
          "block": "export default function SalesCreate() {\n  const { t } = useTranslation();\n  const navigate = useNavi..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 15,
          "block": "export default function SalesCreate() {\n  const { t } = useTranslation();\n  const navigate = useNavi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 16,
          "block": "export default function SalesCreate() {\n  const { t } = useTranslation();\n  const navigate = useNavi..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 16,
          "block": "export default function SalesCreate() {\n  const { t } = useTranslation();\n  const navigate = useNavi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 17,
          "block": "const { t } = useTranslation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClie..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 17,
          "block": "const { t } = useTranslation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 18,
          "block": "const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const { toast } = useToast..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 18,
          "block": "const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const { toast } = useToast..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 19,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Add create sale mutation..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 19,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Add create sale mutation..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 20,
          "block": "const { toast } = useToast();\n\n  // Add create sale mutation\n  const createSaleMutation = useMutatio..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 20,
          "block": "const { toast } = useToast();\n\n  // Add create sale mutation\n  const createSaleMutation = useMutatio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 21,
          "block": "// Add create sale mutation\n  const createSaleMutation = useMutation({\n    mutationFn: createSale,\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 21,
          "block": "// Add create sale mutation\n  const createSaleMutation = useMutation({\n    mutationFn: createSale,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 22,
          "block": "// Add create sale mutation\n  const createSaleMutation = useMutation({\n    mutationFn: createSale,\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 22,
          "block": "// Add create sale mutation\n  const createSaleMutation = useMutation({\n    mutationFn: createSale,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 23,
          "block": "const createSaleMutation = useMutation({\n    mutationFn: createSale,\n    onSuccess: () => {\n      qu..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 23,
          "block": "const createSaleMutation = useMutation({\n    mutationFn: createSale,\n    onSuccess: () => {\n      qu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 24,
          "block": "mutationFn: createSale,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sal..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 24,
          "block": "mutationFn: createSale,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 27,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n      queryClient.invalidateQueries({ q..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 27,
          "block": "queryClient.invalidateQueries({ queryKey: [\"fuel-tanks\"] });\n      queryClient.invalidateQueries({ q..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 28,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n      toast({\n        title: t(\"commo..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 28,
          "block": "queryClient.invalidateQueries({ queryKey: [\"latest-sale\"] });\n\n      toast({\n        title: t(\"commo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 31,
          "block": "title: t(\"common.success\"),\n        description: t(\"sales.createSuccess\"),\n      });\n\n      // Navig..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 31,
          "block": "title: t(\"common.success\"),\n        description: t(\"sales.createSuccess\"),\n      });\n\n      // Navig..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 32,
          "block": "description: t(\"sales.createSuccess\"),\n      });\n\n      // Navigate back to the sales page\n      nav..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 32,
          "block": "description: t(\"sales.createSuccess\"),\n      });\n\n      // Navigate back to the sales page\n      nav..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 34,
          "block": "// Navigate back to the sales page\n      navigate(\"/sales\");\n    },\n    onError: (error: unknown) =>..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 34,
          "block": "// Navigate back to the sales page\n      navigate(\"/sales\");\n    },\n    onError: (error: unknown) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 35,
          "block": "// Navigate back to the sales page\n      navigate(\"/sales\");\n    },\n    onError: (error: unknown) =>..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 35,
          "block": "// Navigate back to the sales page\n      navigate(\"/sales\");\n    },\n    onError: (error: unknown) =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 36,
          "block": "navigate(\"/sales\");\n    },\n    onError: (error: unknown) => {\n      console.error(\"Create error:\", e..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 36,
          "block": "navigate(\"/sales\");\n    },\n    onError: (error: unknown) => {\n      console.error(\"Create error:\", e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 38,
          "block": "onError: (error: unknown) => {\n      console.error(\"Create error:\", error);\n      toast({\n        ti..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 38,
          "block": "onError: (error: unknown) => {\n      console.error(\"Create error:\", error);\n      toast({\n        ti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 39,
          "block": "console.error(\"Create error:\", error);\n      toast({\n        title: t(\"common.error\"),\n        descr..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 39,
          "block": "console.error(\"Create error:\", error);\n      toast({\n        title: t(\"common.error\"),\n        descr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 40,
          "block": "toast({\n        title: t(\"common.error\"),\n        description: error instanceof Error ? error.messag..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 40,
          "block": "toast({\n        title: t(\"common.error\"),\n        description: error instanceof Error ? error.messag..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 41,
          "block": "title: t(\"common.error\"),\n        description: error instanceof Error ? error.message : t(\"sales.cre..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 41,
          "block": "title: t(\"common.error\"),\n        description: error instanceof Error ? error.message : t(\"sales.cre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 42,
          "block": "description: error instanceof Error ? error.message : t(\"sales.createError\"),\n        variant: \"dest..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 42,
          "block": "description: error instanceof Error ? error.message : t(\"sales.createError\"),\n        variant: \"dest..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 51,
          "block": "return true; // Indicate submission was successful\n    } catch (error) {\n      // Error is already h..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 65,
          "block": "return true; // Indicate submission was successful\n    } catch (error) {\n      // Error is already h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 52,
          "block": "} catch (error) {\n      // Error is already handled by createSaleMutation.onError\n      return false..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 66,
          "block": "} catch (error) {\n      // Error is already handled by createSaleMutation.onError\n      return false..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 53,
          "block": "// Error is already handled by createSaleMutation.onError\n      return false; // Indicate submission..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 67,
          "block": "// Error is already handled by createSaleMutation.onError\n      return false; // Indicate submission..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 61,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title={t(\"s..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 75,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title={t(\"s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 62,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title={t(\"s..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 76,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title={t(\"s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 63,
          "block": "<div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title={t(\"sales.newSale\"..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 77,
          "block": "<div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title={t(\"sales.newSale\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 64,
          "block": "<PageHeader\n        title={t(\"sales.newSale\")}\n        actions={\n          <div className=\"flex gap-..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 78,
          "block": "<PageHeader\n        title={t(\"sales.newSale\")}\n        actions={\n          <div className=\"flex gap-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 65,
          "block": "title={t(\"sales.newSale\")}\n        actions={\n          <div className=\"flex gap-2\">\n            <But..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 79,
          "block": "title={t(\"sales.newSale\")}\n        actions={\n          <div className=\"flex gap-2\">\n            <But..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 75,
          "block": "<ShiftControl\n        onShiftStart={() => {}}\n        onShiftEnd={() => {}}\n        isShiftOpen={fal..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 89,
          "block": "<ShiftControl\n        onShiftStart={() => {}}\n        onShiftEnd={() => {}}\n        isShiftOpen={fal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 76,
          "block": "<ShiftControl\n        onShiftStart={() => {}}\n        onShiftEnd={() => {}}\n        isShiftOpen={fal..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 90,
          "block": "<ShiftControl\n        onShiftStart={() => {}}\n        onShiftEnd={() => {}}\n        isShiftOpen={fal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 78,
          "block": "onShiftEnd={() => {}}\n        isShiftOpen={false}\n      />\n\n      <Card className=\"max-w-3xl mx-auto..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 92,
          "block": "onShiftEnd={() => {}}\n        isShiftOpen={false}\n      />\n\n      <Card className=\"max-w-3xl mx-auto..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 79,
          "block": "isShiftOpen={false}\n      />\n\n      <Card className=\"max-w-3xl mx-auto\">\n        <CardContent classN..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 93,
          "block": "isShiftOpen={false}\n      />\n\n      <Card className=\"max-w-3xl mx-auto\">\n        <CardContent classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 80,
          "block": "/>\n\n      <Card className=\"max-w-3xl mx-auto\">\n        <CardContent className=\"pt-6\">\n          <Sal..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 94,
          "block": "/>\n\n      <Card className=\"max-w-3xl mx-auto\">\n        <CardContent className=\"pt-6\">\n          <Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 81,
          "block": "<Card className=\"max-w-3xl mx-auto\">\n        <CardContent className=\"pt-6\">\n          <SalesFormStan..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 95,
          "block": "<Card className=\"max-w-3xl mx-auto\">\n        <CardContent className=\"pt-6\">\n          <SalesFormStan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 82,
          "block": "<Card className=\"max-w-3xl mx-auto\">\n        <CardContent className=\"pt-6\">\n          <SalesFormStan..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 96,
          "block": "<Card className=\"max-w-3xl mx-auto\">\n        <CardContent className=\"pt-6\">\n          <SalesFormStan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 83,
          "block": "<CardContent className=\"pt-6\">\n          <SalesFormStandardized onSubmit={handleSubmit} />\n        <..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 97,
          "block": "<CardContent className=\"pt-6\">\n          <SalesFormStandardized onSubmit={handleSubmit} />\n        <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesCreate.tsx",
          "startLine": 84,
          "block": "<SalesFormStandardized onSubmit={handleSubmit} />\n        </CardContent>\n      </Card>\n    </div>\n  ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesCreate.tsx",
          "startLine": 98,
          "block": "<SalesFormStandardized onSubmit={handleSubmit} />\n        </CardContent>\n      </Card>\n    </div>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 29,
          "block": "} from 'lucide-react';\r\nimport { Badge } from '../../../core/components/ui/primitives/badge';\r\nimpor..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 43,
          "block": "} from 'lucide-react';\r\nimport { Badge } from '../../../core/components/ui/primitives/badge';\r\nimpor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 30,
          "block": "import { Badge } from '../../../core/components/ui/primitives/badge';\r\nimport { Card } from '../../...."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 44,
          "block": "import { Badge } from '../../../core/components/ui/primitives/badge';\r\nimport { Card } from '../../...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 31,
          "block": "import { Card } from '../../../core/components/ui/card';\r\nimport { Button } from '../../../core/comp..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 45,
          "block": "import { Card } from '../../../core/components/ui/card';\r\nimport { Button } from '../../../core/comp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 166,
          "block": "const queryClient = useQueryClient();\r\n  const { toast } = useToast();\r\n\r\n  // Queries\r\n  const { da..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 156,
          "block": "const queryClient = useQueryClient();\r\n  const { toast } = useToast();\r\n\r\n  // Queries\r\n  const { da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 310,
          "block": "};\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateSt..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 335,
          "block": "};\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateSt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 320,
          "block": "if (metricsError) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <Card className=\"p-8 text-ce..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 343,
          "block": "if (metricsError) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <Card className=\"p-8 text-ce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 321,
          "block": "if (metricsError) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <Card className=\"p-8 text-ce..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 344,
          "block": "if (metricsError) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <Card className=\"p-8 text-ce..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 322,
          "block": "return (\r\n      <div className=\"p-6\">\r\n        <Card className=\"p-8 text-center\">\r\n          <AlertC..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 345,
          "block": "return (\r\n      <div className=\"p-6\">\r\n        <Card className=\"p-8 text-center\">\r\n          <AlertC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 331,
          "block": "</p>\r\n          <Button onClick={handleRefresh} className=\"mx-auto\">\r\n            <RefreshCw classNa..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 354,
          "block": "</p>\r\n          <Button onClick={handleRefresh} className=\"mx-auto\">\r\n            <RefreshCw classNa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 332,
          "block": "<Button onClick={handleRefresh} className=\"mx-auto\">\r\n            <RefreshCw className=\"h-4 w-4 mr-2..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 355,
          "block": "<Button onClick={handleRefresh} className=\"mx-auto\">\r\n            <RefreshCw className=\"h-4 w-4 mr-2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 333,
          "block": "<RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            Retry\r\n          </Button>\r\n        </Card>\r\n   ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 356,
          "block": "<RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            Retry\r\n          </Button>\r\n        </Card>\r\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 543,
          "block": "<Badge variant={getStatusColor(sale.status) as any} className=\"capitalize\">\r\n                       ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 544,
          "block": "<Badge variant={getStatusColor(sale.status) as any} className=\"capitalize\">\r\n                       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 592,
          "block": "initial={{ opacity: 0, scale: 0.95 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n         ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 657,
          "block": "initial={{ opacity: 0, scale: 0.95 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 593,
          "block": "animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.95 }}\r\n            ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 658,
          "block": "animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.95 }}\r\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 594,
          "block": "exit={{ opacity: 0, scale: 0.95 }}\r\n                transition={{ delay: index * 0.05 }}\r\n          ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 659,
          "block": "exit={{ opacity: 0, scale: 0.95 }}\r\n                transition={{ delay: index * 0.05 }}\r\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 613,
          "block": "</div>\r\n                    <Button variant=\"ghost\" size=\"sm\">\r\n                      <MoreVertical ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 671,
          "block": "</div>\r\n                    <Button variant=\"ghost\" size=\"sm\">\r\n                      <MoreVertical ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 614,
          "block": "<Button variant=\"ghost\" size=\"sm\">\r\n                      <MoreVertical className=\"h-4 w-4\" />\r\n    ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 672,
          "block": "<Button variant=\"ghost\" size=\"sm\">\r\n                      <MoreVertical className=\"h-4 w-4\" />\r\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 643,
          "block": "</div>\r\n                  </div>\r\n                </Card>\r\n              </motion.div>\r\n            ..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 708,
          "block": "</div>\r\n                  </div>\r\n                </Card>\r\n              </motion.div>\r\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 644,
          "block": "</div>\r\n                </Card>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePr..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesDashboard.tsx",
          "startLine": 709,
          "block": "</div>\r\n                </Card>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 1,
          "block": "import React, { useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nim..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 1,
          "block": "import React, { useState, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 2,
          "block": "import { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimpo..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 2,
          "block": "import { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimpo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { IconCurrencyDollar, IconPlus } from \"@table..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 3,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { IconCurrencyDollar, IconPlus } from \"@table..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 4,
          "block": "import { IconCurrencyDollar, IconPlus } from \"@tabler/icons-react\";\n\n// Import our custom UI compone..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 4,
          "block": "import { IconCurrencyDollar, IconPlus } from \"@tabler/icons-react\";\n\n// Import our custom UI compone..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 11,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { MetricCard } fr..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 11,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { MetricCard } fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 12,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { MetricCard } from \"@/core/comp..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 12,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { MetricCard } from \"@/core/comp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 13,
          "block": "CardTitle,\n} from \"@/core/components/ui/card\";\nimport { MetricCard } from \"@/core/components/ui/card..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 13,
          "block": "CardTitle,\n} from \"@/core/components/ui/card\";\nimport { MetricCard } from \"@/core/components/ui/card..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 14,
          "block": "} from \"@/core/components/ui/card\";\nimport { MetricCard } from \"@/core/components/ui/cards/metric-ca..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 14,
          "block": "} from \"@/core/components/ui/card\";\nimport { MetricCard } from \"@/core/components/ui/cards/metric-ca..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 15,
          "block": "import { MetricCard } from \"@/core/components/ui/cards/metric-card\";\n\n// Import existing sales hooks..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 15,
          "block": "import { MetricCard } from \"@/core/components/ui/cards/metric-card\";\n\n// Import existing sales hooks..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 17,
          "block": "// Import existing sales hooks and components\nimport {\n  useSalesFilters,\n  useSalesMutations,\n  Sal..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 17,
          "block": "// Import existing sales hooks and components\nimport {\n  useSalesFilters,\n  useSalesMutations,\n  Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 20,
          "block": "useSalesMutations,\n  SalesDialogsStandardized,\n  ShiftControl,\n  SalesTable,\n} from \"@/features/sale..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 20,
          "block": "useSalesMutations,\n  SalesDialogsStandardized,\n  ShiftControl,\n  SalesTable,\n} from \"@/features/sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 23,
          "block": "SalesTable,\n} from \"@/features/sales\";\n\n// Import necessary services\nimport { useMutation, useQueryC..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 23,
          "block": "SalesTable,\n} from \"@/features/sales\";\n\n// Import necessary services\nimport { useMutation, useQueryC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 24,
          "block": "} from \"@/features/sales\";\n\n// Import necessary services\nimport { useMutation, useQueryClient } from..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 24,
          "block": "} from \"@/features/sales\";\n\n// Import necessary services\nimport { useMutation, useQueryClient } from..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 25,
          "block": "// Import necessary services\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nim..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 25,
          "block": "// Import necessary services\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 26,
          "block": "// Import necessary services\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nim..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 26,
          "block": "// Import necessary services\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 27,
          "block": "import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { createSale } from \"@/f..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 27,
          "block": "import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { createSale } from \"@/f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 28,
          "block": "import { createSale } from \"@/features/sales/services\";\nimport { useToast } from \"@/hooks\";\nimport {..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 28,
          "block": "import { createSale } from \"@/features/sales/services\";\nimport { useToast } from \"@/hooks\";\nimport {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 29,
          "block": "import { useToast } from \"@/hooks\";\nimport { useShift } from \"@/features/shifts/hooks/useShift\";\nimp..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 29,
          "block": "import { useToast } from \"@/hooks\";\nimport { useShift } from \"@/features/shifts/hooks/useShift\";\nimp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 30,
          "block": "import { useShift } from \"@/features/shifts/hooks/useShift\";\nimport { Sale } from \"@/types\";\nimport ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 30,
          "block": "import { useShift } from \"@/features/shifts/hooks/useShift\";\nimport { Sale } from \"@/types\";\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 31,
          "block": "import { Sale } from \"@/types\";\nimport { SalesFilters } from \"@/features/sales/types\";\n\nexport defau..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 31,
          "block": "import { Sale } from \"@/types\";\nimport { SalesFilters } from \"@/features/sales/types\";\n\nexport defau..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 32,
          "block": "import { SalesFilters } from \"@/features/sales/types\";\n\nexport default function SalesNew() {\n  const..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 32,
          "block": "import { SalesFilters } from \"@/features/sales/types\";\n\nexport default function SalesNew() {\n  const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 33,
          "block": "export default function SalesNew() {\n  const { t } = useTranslation();\n  const navigate = useNavigat..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 33,
          "block": "export default function SalesNew() {\n  const { t } = useTranslation();\n  const navigate = useNavigat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 34,
          "block": "export default function SalesNew() {\n  const { t } = useTranslation();\n  const navigate = useNavigat..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 34,
          "block": "export default function SalesNew() {\n  const { t } = useTranslation();\n  const navigate = useNavigat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 35,
          "block": "const { t } = useTranslation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClie..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 35,
          "block": "const { t } = useTranslation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 36,
          "block": "const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const { toast } = useToast..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 36,
          "block": "const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const { toast } = useToast..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 37,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n  const { activeShift, beginSh..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 37,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n  const { activeShift, beginSh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 38,
          "block": "const { toast } = useToast();\n  const { activeShift, beginShift, endShift } = useShift();\n\n  // Get ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 38,
          "block": "const { toast } = useToast();\n  const { activeShift, beginShift, endShift } = useShift();\n\n  // Get ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 39,
          "block": "const { activeShift, beginShift, endShift } = useShift();\n\n  // Get sales data and filters from exis..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 39,
          "block": "const { activeShift, beginShift, endShift } = useShift();\n\n  // Get sales data and filters from exis..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 40,
          "block": "// Get sales data and filters from existing hooks\n  const { systems, filteredSales, isLoading, refet..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 40,
          "block": "// Get sales data and filters from existing hooks\n  const { systems, filteredSales, isLoading, refet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 41,
          "block": "// Get sales data and filters from existing hooks\n  const { systems, filteredSales, isLoading, refet..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 41,
          "block": "// Get sales data and filters from existing hooks\n  const { systems, filteredSales, isLoading, refet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 42,
          "block": "const { systems, filteredSales, isLoading, refetchSales } = useSalesFilters();\n\n  // Mutations & mod..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 42,
          "block": "const { systems, filteredSales, isLoading, refetchSales } = useSalesFilters();\n\n  // Mutations & mod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 44,
          "block": "// Mutations & modals from existing hook\n  const {\n    selectedSale,\n    setSelectedSale,\n    isEdit..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 44,
          "block": "// Mutations & modals from existing hook\n  const {\n    selectedSale,\n    setSelectedSale,\n    isEdit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 48,
          "block": "isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    ha..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 48,
          "block": "isEditDialogOpen,\n    setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    ha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 49,
          "block": "setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    handleEdit,\n    handleDe..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 49,
          "block": "setIsEditDialogOpen,\n    isDeleteDialogOpen,\n    setIsDeleteDialogOpen,\n    handleEdit,\n    handleDe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 55,
          "block": "updateMutation,\n    deleteMutation,\n  } = useSalesMutations();\n\n  // Define handlers for shift opera..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 55,
          "block": "updateMutation,\n    deleteMutation,\n  } = useSalesMutations();\n\n  // Define handlers for shift opera..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 56,
          "block": "deleteMutation,\n  } = useSalesMutations();\n\n  // Define handlers for shift operations\n  const handle..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 56,
          "block": "deleteMutation,\n  } = useSalesMutations();\n\n  // Define handlers for shift operations\n  const handle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 57,
          "block": "} = useSalesMutations();\n\n  // Define handlers for shift operations\n  const handleShiftStart = () =>..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 57,
          "block": "} = useSalesMutations();\n\n  // Define handlers for shift operations\n  const handleShiftStart = () =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 58,
          "block": "// Define handlers for shift operations\n  const handleShiftStart = () => {\n    navigate(\"/finance/sh..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 59,
          "block": "// Define handlers for shift operations\n  const handleShiftStart = () => {\n    navigate(\"/finance/sh..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 58,
          "block": "// Define handlers for shift operations\n  const handleShiftStart = () => {\n    navigate(\"/finance/sh..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 59,
          "block": "// Define handlers for shift operations\n  const handleShiftStart = () => {\n    navigate(\"/finance/sh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 60,
          "block": "const handleShiftStart = () => {\n    navigate(\"/finance/shifts/open\");\n  };\n\n  const handleShiftEnd ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 60,
          "block": "const handleShiftStart = () => {\n    navigate(\"/finance/shifts/open\");\n  };\n\n  const handleShiftEnd ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 61,
          "block": "navigate(\"/finance/shifts/open\");\n  };\n\n  const handleShiftEnd = () => {\n    navigate(\"/finance/shif..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 61,
          "block": "navigate(\"/finance/shifts/open\");\n  };\n\n  const handleShiftEnd = () => {\n    navigate(\"/finance/shif..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 64,
          "block": "const handleShiftEnd = () => {\n    navigate(\"/finance/shifts/close\");\n  };\n\n  // Remove create sale ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 64,
          "block": "const handleShiftEnd = () => {\n    navigate(\"/finance/shifts/close\");\n  };\n\n  // Remove create sale ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 65,
          "block": "navigate(\"/finance/shifts/close\");\n  };\n\n  // Remove create sale mutation and use navigation instead..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 65,
          "block": "navigate(\"/finance/shifts/close\");\n  };\n\n  // Remove create sale mutation and use navigation instead..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 66,
          "block": "};\n\n  // Remove create sale mutation and use navigation instead\n  const handleCreateSale = () => {\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 66,
          "block": "};\n\n  // Remove create sale mutation and use navigation instead\n  const handleCreateSale = () => {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 67,
          "block": "// Remove create sale mutation and use navigation instead\n  const handleCreateSale = () => {\n    nav..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 68,
          "block": "// Remove create sale mutation and use navigation instead\n  const handleCreateSale = () => {\n    nav..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 67,
          "block": "// Remove create sale mutation and use navigation instead\n  const handleCreateSale = () => {\n    nav..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 68,
          "block": "// Remove create sale mutation and use navigation instead\n  const handleCreateSale = () => {\n    nav..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 70,
          "block": "navigate(\"/sales/create\");\n  };\n\n  // Calculate summary metrics\n  const totalSalesAmount = filteredS..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 70,
          "block": "navigate(\"/sales/create\");\n  };\n\n  // Calculate summary metrics\n  const totalSalesAmount = filteredS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 71,
          "block": "};\n\n  // Calculate summary metrics\n  const totalSalesAmount = filteredSales.reduce(\n    (sum: number..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 71,
          "block": "};\n\n  // Calculate summary metrics\n  const totalSalesAmount = filteredSales.reduce(\n    (sum: number..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 72,
          "block": "// Calculate summary metrics\n  const totalSalesAmount = filteredSales.reduce(\n    (sum: number, sale..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 72,
          "block": "// Calculate summary metrics\n  const totalSalesAmount = filteredSales.reduce(\n    (sum: number, sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 73,
          "block": "// Calculate summary metrics\n  const totalSalesAmount = filteredSales.reduce(\n    (sum: number, sale..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 73,
          "block": "// Calculate summary metrics\n  const totalSalesAmount = filteredSales.reduce(\n    (sum: number, sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 74,
          "block": "const totalSalesAmount = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.total_sa..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 74,
          "block": "const totalSalesAmount = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.total_sa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 75,
          "block": "(sum: number, sale: Sale) => sum + (sale.total_sales || 0),\n    0\n  );\n\n  const totalLiters = filter..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 75,
          "block": "(sum: number, sale: Sale) => sum + (sale.total_sales || 0),\n    0\n  );\n\n  const totalLiters = filter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 76,
          "block": "0\n  );\n\n  const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.qua..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 76,
          "block": "0\n  );\n\n  const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.qua..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 77,
          "block": ");\n\n  const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.quantit..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 77,
          "block": ");\n\n  const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.quantit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 78,
          "block": "const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.quantity || 0..."
        },
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 79,
          "block": "const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.quantity || 0..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 78,
          "block": "const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.quantity || 0..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 79,
          "block": "const totalLiters = filteredSales.reduce(\n    (sum: number, sale: Sale) => sum + (sale.quantity || 0..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 80,
          "block": "(sum: number, sale: Sale) => sum + (sale.quantity || 0),\n    0\n  );\n\n  const averagePrice = totalLit..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 80,
          "block": "(sum: number, sale: Sale) => sum + (sale.quantity || 0),\n    0\n  );\n\n  const averagePrice = totalLit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 82,
          "block": ");\n\n  const averagePrice = totalLiters > 0 ? totalSalesAmount / totalLiters : 0;\n\n  // Format curren..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 82,
          "block": ");\n\n  const averagePrice = totalLiters > 0 ? totalSalesAmount / totalLiters : 0;\n\n  // Format curren..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 83,
          "block": "const averagePrice = totalLiters > 0 ? totalSalesAmount / totalLiters : 0;\n\n  // Format currency val..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 83,
          "block": "const averagePrice = totalLiters > 0 ? totalSalesAmount / totalLiters : 0;\n\n  // Format currency val..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 84,
          "block": "const averagePrice = totalLiters > 0 ? totalSalesAmount / totalLiters : 0;\n\n  // Format currency val..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 84,
          "block": "const averagePrice = totalLiters > 0 ? totalSalesAmount / totalLiters : 0;\n\n  // Format currency val..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 85,
          "block": "// Format currency values\n  const formatCurrency = (value: number | undefined | null) => {\n    if (v..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 85,
          "block": "// Format currency values\n  const formatCurrency = (value: number | undefined | null) => {\n    if (v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 86,
          "block": "// Format currency values\n  const formatCurrency = (value: number | undefined | null) => {\n    if (v..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 86,
          "block": "// Format currency values\n  const formatCurrency = (value: number | undefined | null) => {\n    if (v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 87,
          "block": "const formatCurrency = (value: number | undefined | null) => {\n    if (value === undefined || value ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 87,
          "block": "const formatCurrency = (value: number | undefined | null) => {\n    if (value === undefined || value ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 88,
          "block": "if (value === undefined || value === null) return \"0 ֏\";\n    return `${value.toLocaleString()} ֏`;\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 88,
          "block": "if (value === undefined || value === null) return \"0 ֏\";\n    return `${value.toLocaleString()} ֏`;\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 89,
          "block": "return `${value.toLocaleString()} ֏`;\n  };\n\n  // Handle view sale details (edit only existing sales)..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 89,
          "block": "return `${value.toLocaleString()} ֏`;\n  };\n\n  // Handle view sale details (edit only existing sales)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 90,
          "block": "};\n\n  // Handle view sale details (edit only existing sales)\n  const handleViewSale = (sale: Sale) =..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 90,
          "block": "};\n\n  // Handle view sale details (edit only existing sales)\n  const handleViewSale = (sale: Sale) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 91,
          "block": "// Handle view sale details (edit only existing sales)\n  const handleViewSale = (sale: Sale) => {\n  ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 91,
          "block": "// Handle view sale details (edit only existing sales)\n  const handleViewSale = (sale: Sale) => {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 92,
          "block": "// Handle view sale details (edit only existing sales)\n  const handleViewSale = (sale: Sale) => {\n  ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 92,
          "block": "// Handle view sale details (edit only existing sales)\n  const handleViewSale = (sale: Sale) => {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 93,
          "block": "const handleViewSale = (sale: Sale) => {\n    // If creating a new sale, navigate to the create page\n..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 93,
          "block": "const handleViewSale = (sale: Sale) => {\n    // If creating a new sale, navigate to the create page\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 94,
          "block": "// If creating a new sale, navigate to the create page\n    if (!sale.id) {\n      navigate(\"/sales/cr..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 94,
          "block": "// If creating a new sale, navigate to the create page\n    if (!sale.id) {\n      navigate(\"/sales/cr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 95,
          "block": "if (!sale.id) {\n      navigate(\"/sales/create\");\n    } else {\n      // For existing sales, open the ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 95,
          "block": "if (!sale.id) {\n      navigate(\"/sales/create\");\n    } else {\n      // For existing sales, open the ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 96,
          "block": "navigate(\"/sales/create\");\n    } else {\n      // For existing sales, open the edit dialog\n      setS..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 96,
          "block": "navigate(\"/sales/create\");\n    } else {\n      // For existing sales, open the edit dialog\n      setS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 97,
          "block": "} else {\n      // For existing sales, open the edit dialog\n      setSelectedSale(sale);\n      setIsE..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 97,
          "block": "} else {\n      // For existing sales, open the edit dialog\n      setSelectedSale(sale);\n      setIsE..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 98,
          "block": "// For existing sales, open the edit dialog\n      setSelectedSale(sale);\n      setIsEditDialogOpen(t..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 98,
          "block": "// For existing sales, open the edit dialog\n      setSelectedSale(sale);\n      setIsEditDialogOpen(t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 102,
          "block": "};\n\n  // Extract unique fuel types for filtering\n  const fuelTypeCategories = useMemo(() => {\n    co..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 102,
          "block": "};\n\n  // Extract unique fuel types for filtering\n  const fuelTypeCategories = useMemo(() => {\n    co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 103,
          "block": "// Extract unique fuel types for filtering\n  const fuelTypeCategories = useMemo(() => {\n    const un..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 103,
          "block": "// Extract unique fuel types for filtering\n  const fuelTypeCategories = useMemo(() => {\n    const un..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 104,
          "block": "// Extract unique fuel types for filtering\n  const fuelTypeCategories = useMemo(() => {\n    const un..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 104,
          "block": "// Extract unique fuel types for filtering\n  const fuelTypeCategories = useMemo(() => {\n    const un..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 105,
          "block": "const fuelTypeCategories = useMemo(() => {\n    const uniqueFuelTypes = Array.from(\n      new Set(fil..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 105,
          "block": "const fuelTypeCategories = useMemo(() => {\n    const uniqueFuelTypes = Array.from(\n      new Set(fil..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 106,
          "block": "const uniqueFuelTypes = Array.from(\n      new Set(filteredSales.map((sale) => sale.fuel_type))\n    )..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 106,
          "block": "const uniqueFuelTypes = Array.from(\n      new Set(filteredSales.map((sale) => sale.fuel_type))\n    )..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 112,
          "block": "return uniqueFuelTypes.map((type) => ({\n      id: type,\n      name: type,\n    }));\n  }, [filteredSal..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 112,
          "block": "return uniqueFuelTypes.map((type) => ({\n      id: type,\n      name: type,\n    }));\n  }, [filteredSal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 115,
          "block": "}));\n  }, [filteredSales]);\n\n  // Handle filters change\n  const handleFiltersChange = (filters: Sale..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 115,
          "block": "}));\n  }, [filteredSales]);\n\n  // Handle filters change\n  const handleFiltersChange = (filters: Sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 116,
          "block": "}, [filteredSales]);\n\n  // Handle filters change\n  const handleFiltersChange = (filters: SalesFilter..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 116,
          "block": "}, [filteredSales]);\n\n  // Handle filters change\n  const handleFiltersChange = (filters: SalesFilter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 117,
          "block": "// Handle filters change\n  const handleFiltersChange = (filters: SalesFilters) => {\n    // Handle fi..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 117,
          "block": "// Handle filters change\n  const handleFiltersChange = (filters: SalesFilters) => {\n    // Handle fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 118,
          "block": "// Handle filters change\n  const handleFiltersChange = (filters: SalesFilters) => {\n    // Handle fi..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 118,
          "block": "// Handle filters change\n  const handleFiltersChange = (filters: SalesFilters) => {\n    // Handle fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 119,
          "block": "const handleFiltersChange = (filters: SalesFilters) => {\n    // Handle filter changes here\n    conso..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 119,
          "block": "const handleFiltersChange = (filters: SalesFilters) => {\n    // Handle filter changes here\n    conso..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 121,
          "block": "console.log(\"Filters changed:\", filters);\n  };\n\n  return (\n    <div className=\"container mx-auto p-4..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 121,
          "block": "console.log(\"Filters changed:\", filters);\n  };\n\n  return (\n    <div className=\"container mx-auto p-4..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 123,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title=\"Sale..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 123,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title=\"Sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 124,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title=\"Sale..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 124,
          "block": "return (\n    <div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title=\"Sale..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 125,
          "block": "<div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title=\"Sales Management\"..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 125,
          "block": "<div className=\"container mx-auto p-4 space-y-6\">\n      <PageHeader\n        title=\"Sales Management\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 126,
          "block": "<PageHeader\n        title=\"Sales Management\"\n        icon={<IconCurrencyDollar />}\n        actions={..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 126,
          "block": "<PageHeader\n        title=\"Sales Management\"\n        icon={<IconCurrencyDollar />}\n        actions={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 127,
          "block": "title=\"Sales Management\"\n        icon={<IconCurrencyDollar />}\n        actions={\n          <CreateBu..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 127,
          "block": "title=\"Sales Management\"\n        icon={<IconCurrencyDollar />}\n        actions={\n          <CreateBu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 128,
          "block": "icon={<IconCurrencyDollar />}\n        actions={\n          <CreateButton onClick={handleCreateSale}>\n..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 128,
          "block": "icon={<IconCurrencyDollar />}\n        actions={\n          <CreateButton onClick={handleCreateSale}>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 129,
          "block": "actions={\n          <CreateButton onClick={handleCreateSale}>\n            <IconPlus className=\"mr-2 ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 129,
          "block": "actions={\n          <CreateButton onClick={handleCreateSale}>\n            <IconPlus className=\"mr-2 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 130,
          "block": "<CreateButton onClick={handleCreateSale}>\n            <IconPlus className=\"mr-2 h-4 w-4\" />\n        ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 130,
          "block": "<CreateButton onClick={handleCreateSale}>\n            <IconPlus className=\"mr-2 h-4 w-4\" />\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 131,
          "block": "<IconPlus className=\"mr-2 h-4 w-4\" />\n            Add Sale\n          </CreateButton>\n        }\n     ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 131,
          "block": "<IconPlus className=\"mr-2 h-4 w-4\" />\n            Add Sale\n          </CreateButton>\n        }\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 135,
          "block": "/>\n\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        <MetricCard\n          titl..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 135,
          "block": "/>\n\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        <MetricCard\n          titl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 136,
          "block": "<div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        <MetricCard\n          title=\"Total S..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 136,
          "block": "<div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        <MetricCard\n          title=\"Total S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 137,
          "block": "<div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        <MetricCard\n          title=\"Total S..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 137,
          "block": "<div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        <MetricCard\n          title=\"Total S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 138,
          "block": "<MetricCard\n          title=\"Total Sales\"\n          value={formatCurrency(totalSalesAmount)}\n       ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 138,
          "block": "<MetricCard\n          title=\"Total Sales\"\n          value={formatCurrency(totalSalesAmount)}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 139,
          "block": "title=\"Total Sales\"\n          value={formatCurrency(totalSalesAmount)}\n          icon={<IconCurrency..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 139,
          "block": "title=\"Total Sales\"\n          value={formatCurrency(totalSalesAmount)}\n          icon={<IconCurrency..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 140,
          "block": "value={formatCurrency(totalSalesAmount)}\n          icon={<IconCurrencyDollar className=\"h-6 w-6\" />}..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 140,
          "block": "value={formatCurrency(totalSalesAmount)}\n          icon={<IconCurrencyDollar className=\"h-6 w-6\" />}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 141,
          "block": "icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n          className=\"bg-primary/10\"\n        />\n   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 141,
          "block": "icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n          className=\"bg-primary/10\"\n        />\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 142,
          "block": "className=\"bg-primary/10\"\n        />\n        <MetricCard\n          title=\"Total Liters\"\n          va..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 142,
          "block": "className=\"bg-primary/10\"\n        />\n        <MetricCard\n          title=\"Total Liters\"\n          va..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 143,
          "block": "/>\n        <MetricCard\n          title=\"Total Liters\"\n          value={`${Math.round(totalLiters).to..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 143,
          "block": "/>\n        <MetricCard\n          title=\"Total Liters\"\n          value={`${Math.round(totalLiters).to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 144,
          "block": "<MetricCard\n          title=\"Total Liters\"\n          value={`${Math.round(totalLiters).toLocaleStrin..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 144,
          "block": "<MetricCard\n          title=\"Total Liters\"\n          value={`${Math.round(totalLiters).toLocaleStrin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 145,
          "block": "title=\"Total Liters\"\n          value={`${Math.round(totalLiters).toLocaleString()} L`}\n          ico..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 145,
          "block": "title=\"Total Liters\"\n          value={`${Math.round(totalLiters).toLocaleString()} L`}\n          ico..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 146,
          "block": "value={`${Math.round(totalLiters).toLocaleString()} L`}\n          icon={<IconCurrencyDollar classNam..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 146,
          "block": "value={`${Math.round(totalLiters).toLocaleString()} L`}\n          icon={<IconCurrencyDollar classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 147,
          "block": "icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n          className=\"bg-success/10\"\n        />\n   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 147,
          "block": "icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n          className=\"bg-success/10\"\n        />\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 148,
          "block": "className=\"bg-success/10\"\n        />\n        <MetricCard\n          title=\"Average Price\"\n          v..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 148,
          "block": "className=\"bg-success/10\"\n        />\n        <MetricCard\n          title=\"Average Price\"\n          v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 149,
          "block": "/>\n        <MetricCard\n          title=\"Average Price\"\n          value={formatCurrency(averagePrice)..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 149,
          "block": "/>\n        <MetricCard\n          title=\"Average Price\"\n          value={formatCurrency(averagePrice)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 150,
          "block": "<MetricCard\n          title=\"Average Price\"\n          value={formatCurrency(averagePrice)}\n         ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 150,
          "block": "<MetricCard\n          title=\"Average Price\"\n          value={formatCurrency(averagePrice)}\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 151,
          "block": "title=\"Average Price\"\n          value={formatCurrency(averagePrice)}\n          icon={<IconCurrencyDo..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 151,
          "block": "title=\"Average Price\"\n          value={formatCurrency(averagePrice)}\n          icon={<IconCurrencyDo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 152,
          "block": "value={formatCurrency(averagePrice)}\n          icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 152,
          "block": "value={formatCurrency(averagePrice)}\n          icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 153,
          "block": "icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n          className=\"bg-warning/10\"\n        />\n   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 153,
          "block": "icon={<IconCurrencyDollar className=\"h-6 w-6\" />}\n          className=\"bg-warning/10\"\n        />\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 156,
          "block": "</div>\n\n      <ShiftControl\n        onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftE..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 156,
          "block": "</div>\n\n      <ShiftControl\n        onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftE..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 157,
          "block": "<ShiftControl\n        onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftEnd}\n        is..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 157,
          "block": "<ShiftControl\n        onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftEnd}\n        is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 158,
          "block": "<ShiftControl\n        onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftEnd}\n        is..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 158,
          "block": "<ShiftControl\n        onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftEnd}\n        is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 159,
          "block": "onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftEnd}\n        isShiftOpen={!!activeShi..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 159,
          "block": "onShiftStart={handleShiftStart}\n        onShiftEnd={handleShiftEnd}\n        isShiftOpen={!!activeShi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 164,
          "block": "<Card>\n        <CardHeader>\n          <CardTitle>Sales Records</CardTitle>\n        </CardHeader>\n   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 164,
          "block": "<Card>\n        <CardHeader>\n          <CardTitle>Sales Records</CardTitle>\n        </CardHeader>\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 165,
          "block": "<CardHeader>\n          <CardTitle>Sales Records</CardTitle>\n        </CardHeader>\n        <CardConte..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 165,
          "block": "<CardHeader>\n          <CardTitle>Sales Records</CardTitle>\n        </CardHeader>\n        <CardConte..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 166,
          "block": "<CardTitle>Sales Records</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <SalesTab..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 166,
          "block": "<CardTitle>Sales Records</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <SalesTab..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 167,
          "block": "</CardHeader>\n        <CardContent>\n          <SalesTable\n            sales={filteredSales}\n        ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 167,
          "block": "</CardHeader>\n        <CardContent>\n          <SalesTable\n            sales={filteredSales}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 168,
          "block": "<CardContent>\n          <SalesTable\n            sales={filteredSales}\n            isLoading={isLoadi..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 168,
          "block": "<CardContent>\n          <SalesTable\n            sales={filteredSales}\n            isLoading={isLoadi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 169,
          "block": "<SalesTable\n            sales={filteredSales}\n            isLoading={isLoading}\n            onEdit={..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 169,
          "block": "<SalesTable\n            sales={filteredSales}\n            isLoading={isLoading}\n            onEdit={..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 170,
          "block": "sales={filteredSales}\n            isLoading={isLoading}\n            onEdit={(id) => {\n              ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 170,
          "block": "sales={filteredSales}\n            isLoading={isLoading}\n            onEdit={(id) => {\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 171,
          "block": "isLoading={isLoading}\n            onEdit={(id) => {\n              const sale = filteredSales.find((s..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 171,
          "block": "isLoading={isLoading}\n            onEdit={(id) => {\n              const sale = filteredSales.find((s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 172,
          "block": "onEdit={(id) => {\n              const sale = filteredSales.find((s) => s.id === id);\n              i..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 172,
          "block": "onEdit={(id) => {\n              const sale = filteredSales.find((s) => s.id === id);\n              i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 173,
          "block": "const sale = filteredSales.find((s) => s.id === id);\n              if (sale) handleEdit(sale);\n     ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 173,
          "block": "const sale = filteredSales.find((s) => s.id === id);\n              if (sale) handleEdit(sale);\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 174,
          "block": "if (sale) handleEdit(sale);\n            }}\n            onDelete={handleDelete}\n            onView={h..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 174,
          "block": "if (sale) handleEdit(sale);\n            }}\n            onDelete={handleDelete}\n            onView={h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 175,
          "block": "}}\n            onDelete={handleDelete}\n            onView={handleViewSale}\n            systems={syst..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 175,
          "block": "}}\n            onDelete={handleDelete}\n            onView={handleViewSale}\n            systems={syst..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 176,
          "block": "onDelete={handleDelete}\n            onView={handleViewSale}\n            systems={systems}\n          ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 176,
          "block": "onDelete={handleDelete}\n            onView={handleViewSale}\n            systems={systems}\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 177,
          "block": "onView={handleViewSale}\n            systems={systems}\n            fuelTypes={fuelTypeCategories}\n   ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 177,
          "block": "onView={handleViewSale}\n            systems={systems}\n            fuelTypes={fuelTypeCategories}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 178,
          "block": "systems={systems}\n            fuelTypes={fuelTypeCategories}\n            onFiltersChange={handleFilt..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 178,
          "block": "systems={systems}\n            fuelTypes={fuelTypeCategories}\n            onFiltersChange={handleFilt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 179,
          "block": "fuelTypes={fuelTypeCategories}\n            onFiltersChange={handleFiltersChange}\n          />\n      ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 179,
          "block": "fuelTypes={fuelTypeCategories}\n            onFiltersChange={handleFiltersChange}\n          />\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 181,
          "block": "/>\n        </CardContent>\n      </Card>\n\n      {/* Dialogs for editing/deleting sales (not creating)..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 181,
          "block": "/>\n        </CardContent>\n      </Card>\n\n      {/* Dialogs for editing/deleting sales (not creating)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 182,
          "block": "</CardContent>\n      </Card>\n\n      {/* Dialogs for editing/deleting sales (not creating) */}\n      ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 182,
          "block": "</CardContent>\n      </Card>\n\n      {/* Dialogs for editing/deleting sales (not creating) */}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 183,
          "block": "</Card>\n\n      {/* Dialogs for editing/deleting sales (not creating) */}\n      <SalesDialogsStandard..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 183,
          "block": "</Card>\n\n      {/* Dialogs for editing/deleting sales (not creating) */}\n      <SalesDialogsStandard..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 184,
          "block": "{/* Dialogs for editing/deleting sales (not creating) */}\n      <SalesDialogsStandardized\n        se..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 184,
          "block": "{/* Dialogs for editing/deleting sales (not creating) */}\n      <SalesDialogsStandardized\n        se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 185,
          "block": "{/* Dialogs for editing/deleting sales (not creating) */}\n      <SalesDialogsStandardized\n        se..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 185,
          "block": "{/* Dialogs for editing/deleting sales (not creating) */}\n      <SalesDialogsStandardized\n        se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 186,
          "block": "<SalesDialogsStandardized\n        selectedSale={selectedSale}\n        isEditDialogOpen={isEditDialog..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 186,
          "block": "<SalesDialogsStandardized\n        selectedSale={selectedSale}\n        isEditDialogOpen={isEditDialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\pages\\SalesNew.tsx",
          "startLine": 187,
          "block": "selectedSale={selectedSale}\n        isEditDialogOpen={isEditDialogOpen}\n        setIsEditDialogOpen=..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesNew.tsx",
          "startLine": 187,
          "block": "selectedSale={selectedSale}\n        isEditDialogOpen={isEditDialogOpen}\n        setIsEditDialogOpen=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 46,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching expenses:\", response.error);\r\n      throw..."
        },
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 47,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching expenses:\", response.error);\r\n      throw..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 49,
          "block": "throw new Error(response.error.message);\r\n    }\r\n\r\n    return response.data || [];\r\n  } catch (err) ..."
        },
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 81,
          "block": "throw new Error(response.error.message);\r\n    }\r\n\r\n    return response.data || [];\r\n  } catch (err) ..."
        },
        {
          "file": "src\\features\\finance\\services\\transactions.ts",
          "startLine": 15,
          "block": "throw new Error(response.error.message);\r\n    }\r\n\r\n    return response.data || [];\r\n  } catch (err) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 62,
          "block": "if (response.error) {\r\n      console.error(`Error fetching expense with ID ${id}:`, response.error);..."
        },
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 63,
          "block": "if (response.error) {\r\n      console.error(`Error fetching expense with ID ${id}:`, response.error);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 65,
          "block": "throw new Error(response.error.message);\r\n    }\r\n\r\n    return response.data || null;\r\n  } catch (err..."
        },
        {
          "file": "src\\features\\finance\\services\\transactions.ts",
          "startLine": 36,
          "block": "throw new Error(response.error.message);\r\n    }\r\n\r\n    return response.data || null;\r\n  } catch (err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 78,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching expense categories:\", response.error);\r\n ..."
        },
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 79,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching expense categories:\", response.error);\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 107,
          "block": "if (response.error) {\r\n      console.error(\"Error creating expense:\", response.error);\r\n      throw ..."
        },
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 108,
          "block": "if (response.error) {\r\n      console.error(\"Error creating expense:\", response.error);\r\n      throw ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 138,
          "block": "if (response.error) {\r\n      console.error(`Error updating expense with ID ${id}:`, response.error);..."
        },
        {
          "file": "src\\features\\finance\\services\\expenses.ts",
          "startLine": 139,
          "block": "if (response.error) {\r\n      console.error(`Error updating expense with ID ${id}:`, response.error);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 12,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching profit/loss summary:\", response.error);\r\n..."
        },
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 13,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching profit/loss summary:\", response.error);\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 28,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching revenue data:\", response.error);\r\n      t..."
        },
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 29,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching revenue data:\", response.error);\r\n      t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 31,
          "block": "throw new Error(response.error.message);\r\n    }\r\n\r\n    return response.data || { total: 0, breakdown..."
        },
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 47,
          "block": "throw new Error(response.error.message);\r\n    }\r\n\r\n    return response.data || { total: 0, breakdown..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 44,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching expenses data:\", response.error);\r\n      ..."
        },
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 45,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching expenses data:\", response.error);\r\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 60,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching financial dashboard:\", response.error);\r\n..."
        },
        {
          "file": "src\\features\\finance\\services\\financials.ts",
          "startLine": 61,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching financial dashboard:\", response.error);\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 127,
          "block": "throw new Error(response.error.message);\n  }\n\n  if (!response.data) {\n    throw new Error(\"No data r..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 162,
          "block": "throw new Error(response.error.message);\n  }\n\n  if (!response.data) {\n    throw new Error(\"No data r..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 195,
          "block": "throw new Error(response.error.message);\n  }\n\n  if (!response.data) {\n    throw new Error(\"No data r..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 236,
          "block": "throw new Error(response.error.message);\n  }\n\n  if (!response.data) {\n    throw new Error(\"No data r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 130,
          "block": "if (!response.data) {\n    throw new Error(\"No data returned from API\");\n  }\n\n  return adaptTransacti..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 165,
          "block": "if (!response.data) {\n    throw new Error(\"No data returned from API\");\n  }\n\n  return adaptTransacti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 131,
          "block": "throw new Error(\"No data returned from API\");\n  }\n\n  return adaptTransactionFromApi(response.data);\n..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 166,
          "block": "throw new Error(\"No data returned from API\");\n  }\n\n  return adaptTransactionFromApi(response.data);\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 198,
          "block": "if (!response.data) {\n    throw new Error(\"No data returned from API\");\n  }\n\n  return adaptExpenseFr..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 239,
          "block": "if (!response.data) {\n    throw new Error(\"No data returned from API\");\n  }\n\n  return adaptExpenseFr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 266,
          "block": "if (response.error) {\n      console.warn('Profit & Loss Edge Function returned error:', response.err..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 267,
          "block": "if (response.error) {\n      console.warn('Profit & Loss Edge Function returned error:', response.err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 271,
          "block": "if (!response.data) {\n      console.warn('Profit & Loss Edge Function returned no data');\n      retu..."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 272,
          "block": "if (!response.data) {\n      console.warn('Profit & Loss Edge Function returned no data');\n      retu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 319,
          "block": "if (response.error) {\n      console.warn('Finance Overview Edge Function returned error:', response...."
        },
        {
          "file": "src\\features\\finance\\services\\index.ts",
          "startLine": 320,
          "block": "if (response.error) {\n      console.warn('Finance Overview Edge Function returned error:', response...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 9,
          "block": "import { logger } from \"@/core/utils/logger\";\r\nimport { createApiError } from \"@/core/utils/error-ha..."
        },
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 10,
          "block": "import { logger } from \"@/core/utils/logger\";\r\nimport { createApiError } from \"@/core/utils/error-ha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 80,
          "block": "if (response.error) {\r\n      console.error(\"Error calculating profit and loss:\", response.error);\r\n ..."
        },
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 81,
          "block": "if (response.error) {\r\n      console.error(\"Error calculating profit and loss:\", response.error);\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 121,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching profit-loss summary:\", response.error);\r\n..."
        },
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 122,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching profit-loss summary:\", response.error);\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 177,
          "block": "if (response.error) {\r\n      console.error(\"Error generating profit-loss record:\", response.error);\r..."
        },
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 178,
          "block": "if (response.error) {\r\n      console.error(\"Error generating profit-loss record:\", response.error);\r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 326,
          "block": "const response = await profitLossApi.getProfitLossSummary({\r\n      start_date: startDate,\r\n      end..."
        },
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 327,
          "block": "const response = await profitLossApi.getProfitLossSummary({\r\n      start_date: startDate,\r\n      end..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 331,
          "block": "if (!response.success) {\r\n      logger.warn(\"Failed to fetch profit/loss summary, using default\");\r\n..."
        },
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 332,
          "block": "if (!response.success) {\r\n      logger.warn(\"Failed to fetch profit/loss summary, using default\");\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 354,
          "block": "if (!response.success) {\r\n      logger.warn(\"Failed to fetch profit/loss data array, returning empty..."
        },
        {
          "file": "src\\features\\finance\\services\\profit-loss.ts",
          "startLine": 355,
          "block": "if (!response.success) {\r\n      logger.warn(\"Failed to fetch profit/loss data array, returning empty..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\transactions.ts",
          "startLine": 12,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching transactions:\", response.error);\r\n      t..."
        },
        {
          "file": "src\\features\\finance\\services\\transactions.ts",
          "startLine": 13,
          "block": "if (response.error) {\r\n      console.error(\"Error fetching transactions:\", response.error);\r\n      t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\services\\transactions.ts",
          "startLine": 69,
          "block": "if (response.error) {\r\n      console.error(\"Error creating transaction:\", response.error);\r\n      th..."
        },
        {
          "file": "src\\features\\finance\\services\\transactions.ts",
          "startLine": 70,
          "block": "if (response.error) {\r\n      console.error(\"Error creating transaction:\", response.error);\r\n      th..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\finance.types.ts",
          "startLine": 58,
          "block": "payment_status?: PaymentStatus;\n  date_from?: string;\n  date_to?: string;\n  min_amount?: number;\n  m..."
        },
        {
          "file": "src\\features\\finance\\types\\finance.types.ts",
          "startLine": 68,
          "block": "payment_status?: PaymentStatus;\n  date_from?: string;\n  date_to?: string;\n  min_amount?: number;\n  m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\finance.types.ts",
          "startLine": 59,
          "block": "date_from?: string;\n  date_to?: string;\n  min_amount?: number;\n  max_amount?: number;\n  employee_id?..."
        },
        {
          "file": "src\\features\\finance\\types\\finance.types.ts",
          "startLine": 69,
          "block": "date_from?: string;\n  date_to?: string;\n  min_amount?: number;\n  max_amount?: number;\n  employee_id?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 3,
          "block": "// Main Sale interface\nexport interface Sale {\n  id: string;\n  amount: number;\n  quantityLiters: num..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 25,
          "block": "// Main Sale interface\nexport interface Sale {\n  id: string;\n  amount: number;\n  quantityLiters: num..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 14,
          "block": "paymentStatus: PaymentStatus;\n  notes?: string;\n  createdAt: Date;\n  updatedAt: Date | null;\n  filli..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 36,
          "block": "paymentStatus: PaymentStatus;\n  notes?: string;\n  createdAt: Date;\n  updatedAt: Date | null;\n  filli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 15,
          "block": "notes?: string;\n  createdAt: Date;\n  updatedAt: Date | null;\n  fillingSystemId?: string;\n  fillingSy..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 37,
          "block": "notes?: string;\n  createdAt: Date;\n  updatedAt: Date | null;\n  fillingSystemId?: string;\n  fillingSy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 16,
          "block": "createdAt: Date;\n  updatedAt: Date | null;\n  fillingSystemId?: string;\n  fillingSystemName?: string;..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 38,
          "block": "createdAt: Date;\n  updatedAt: Date | null;\n  fillingSystemId?: string;\n  fillingSystemName?: string;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 17,
          "block": "updatedAt: Date | null;\n  fillingSystemId?: string;\n  fillingSystemName?: string;\n  meterStart?: num..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 39,
          "block": "updatedAt: Date | null;\n  fillingSystemId?: string;\n  fillingSystemName?: string;\n  meterStart?: num..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 18,
          "block": "fillingSystemId?: string;\n  fillingSystemName?: string;\n  meterStart?: number;\n  meterEnd?: number;\n..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 40,
          "block": "fillingSystemId?: string;\n  fillingSystemName?: string;\n  meterStart?: number;\n  meterEnd?: number;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 24,
          "block": "// Create Sale request\nexport interface CreateSaleRequest {\n  amount: number;\n  quantityLiters: numb..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 46,
          "block": "// Create Sale request\nexport interface CreateSaleRequest {\n  amount: number;\n  quantityLiters: numb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 25,
          "block": "// Create Sale request\nexport interface CreateSaleRequest {\n  amount: number;\n  quantityLiters: numb..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 47,
          "block": "// Create Sale request\nexport interface CreateSaleRequest {\n  amount: number;\n  quantityLiters: numb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 26,
          "block": "export interface CreateSaleRequest {\n  amount: number;\n  quantityLiters: number;\n  unitPrice: number..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 48,
          "block": "export interface CreateSaleRequest {\n  amount: number;\n  quantityLiters: number;\n  unitPrice: number..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 27,
          "block": "amount: number;\n  quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date | string;\n  fuelType..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 8,
          "block": "amount: number;\n  quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date | string;\n  fuelType..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 49,
          "block": "amount: number;\n  quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date | string;\n  fuelType..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 28,
          "block": "quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  ..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 9,
          "block": "quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  ..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 50,
          "block": "quantityLiters: number;\n  unitPrice: number;\n  saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 29,
          "block": "unitPrice: number;\n  saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  c..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 10,
          "block": "unitPrice: number;\n  saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  c..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 51,
          "block": "unitPrice: number;\n  saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 30,
          "block": "saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 11,
          "block": "saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 52,
          "block": "saleDate: Date | string;\n  fuelType: FuelTypeCode;\n  vehiclePlate?: string;\n  customerName?: string;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 40,
          "block": "shiftId?: string;\n}\n\n// Update Sale request\nexport interface UpdateSaleRequest extends Partial<Creat..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 63,
          "block": "shiftId?: string;\n}\n\n// Update Sale request\nexport interface UpdateSaleRequest extends Partial<Creat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 41,
          "block": "}\n\n// Update Sale request\nexport interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  ..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 64,
          "block": "}\n\n// Update Sale request\nexport interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 42,
          "block": "// Update Sale request\nexport interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  id:..."
        },
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 43,
          "block": "// Update Sale request\nexport interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  id:..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 65,
          "block": "// Update Sale request\nexport interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  id:..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 66,
          "block": "// Update Sale request\nexport interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  id:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 44,
          "block": "export interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  id: string;\n}\n\n// Sales fi..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 67,
          "block": "export interface UpdateSaleRequest extends Partial<CreateSaleRequest> {\n  id: string;\n}\n\n// Sales fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 48,
          "block": "// Sales filter options\nexport interface SalesFilters {\n  searchTerm?: string;\n  dateRange?: {\n    f..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 71,
          "block": "// Sales filter options\nexport interface SalesFilters {\n  searchTerm?: string;\n  dateRange?: {\n    f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 49,
          "block": "export interface SalesFilters {\n  searchTerm?: string;\n  dateRange?: {\n    from: Date;\n    to?: Date..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 72,
          "block": "export interface SalesFilters {\n  searchTerm?: string;\n  dateRange?: {\n    from: Date;\n    to?: Date..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 52,
          "block": "from: Date;\n    to?: Date;\n  };\n  fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus |..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 75,
          "block": "from: Date;\n    to?: Date;\n  };\n  fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus |..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 53,
          "block": "to?: Date;\n  };\n  fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus | \"all\";\n  fillin..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 76,
          "block": "to?: Date;\n  };\n  fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus | \"all\";\n  fillin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 54,
          "block": "};\n  fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus | \"all\";\n  fillingSystem?: str..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 77,
          "block": "};\n  fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus | \"all\";\n  fillingSystem?: str..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 55,
          "block": "fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus | \"all\";\n  fillingSystem?: string |..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 78,
          "block": "fuelType?: FuelTypeCode | \"all\";\n  paymentStatus?: PaymentStatus | \"all\";\n  fillingSystem?: string |..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 56,
          "block": "paymentStatus?: PaymentStatus | \"all\";\n  fillingSystem?: string | \"all\";\n  minAmount?: number;\n  max..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 79,
          "block": "paymentStatus?: PaymentStatus | \"all\";\n  fillingSystem?: string | \"all\";\n  minAmount?: number;\n  max..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 57,
          "block": "fillingSystem?: string | \"all\";\n  minAmount?: number;\n  maxAmount?: number;\n  minQuantity?: number;\n..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 80,
          "block": "fillingSystem?: string | \"all\";\n  minAmount?: number;\n  maxAmount?: number;\n  minQuantity?: number;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 63,
          "block": "// Sales statistics summary\nexport interface SalesSummary {\n  totalSales: number;\n  totalQuantity: n..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 86,
          "block": "// Sales statistics summary\nexport interface SalesSummary {\n  totalSales: number;\n  totalQuantity: n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 64,
          "block": "// Sales statistics summary\nexport interface SalesSummary {\n  totalSales: number;\n  totalQuantity: n..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 87,
          "block": "// Sales statistics summary\nexport interface SalesSummary {\n  totalSales: number;\n  totalQuantity: n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 65,
          "block": "export interface SalesSummary {\n  totalSales: number;\n  totalQuantity: number;\n  averagePrice: numbe..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 88,
          "block": "export interface SalesSummary {\n  totalSales: number;\n  totalQuantity: number;\n  averagePrice: numbe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 66,
          "block": "totalSales: number;\n  totalQuantity: number;\n  averagePrice: number;\n  salesCount: number;\n  byFuelT..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 89,
          "block": "totalSales: number;\n  totalQuantity: number;\n  averagePrice: number;\n  salesCount: number;\n  byFuelT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 67,
          "block": "totalQuantity: number;\n  averagePrice: number;\n  salesCount: number;\n  byFuelType?: Record<\n    Fuel..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 90,
          "block": "totalQuantity: number;\n  averagePrice: number;\n  salesCount: number;\n  byFuelType?: Record<\n    Fuel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 87,
          "block": "// Export options\nexport interface SalesExportOptions {\n  startDate: string;\n  endDate: string;\n  fo..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 110,
          "block": "// Export options\nexport interface SalesExportOptions {\n  startDate: string;\n  endDate: string;\n  fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 88,
          "block": "export interface SalesExportOptions {\n  startDate: string;\n  endDate: string;\n  format: \"csv\" | \"pdf..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 111,
          "block": "export interface SalesExportOptions {\n  startDate: string;\n  endDate: string;\n  format: \"csv\" | \"pdf..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 89,
          "block": "startDate: string;\n  endDate: string;\n  format: \"csv\" | \"pdf\" | \"excel\";\n  includeDetails?: boolean;..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 112,
          "block": "startDate: string;\n  endDate: string;\n  format: \"csv\" | \"pdf\" | \"excel\";\n  includeDetails?: boolean;..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\finance\\types\\index.ts",
          "startLine": 95,
          "block": "// Export response\nexport interface SalesExportResponse {\n  url?: string;\n  data?: string;\n  filenam..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 118,
          "block": "// Export response\nexport interface SalesExportResponse {\n  url?: string;\n  data?: string;\n  filenam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\data-table\\FuelSuppliesDataTable.tsx",
          "startLine": 25,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSepara..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangePicker.tsx",
          "startLine": 19,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSepara..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 62,
          "block": "DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSepara..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\data-table\\FuelSuppliesDataTable.tsx",
          "startLine": 26,
          "block": "DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n} from \"@/c..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangePicker.tsx",
          "startLine": 20,
          "block": "DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n} from \"@/c..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 63,
          "block": "DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n} from \"@/c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemCard.tsx",
          "startLine": 20,
          "block": "const handleEdit = (system: FillingSystem) => {\r\n    setFillingSystem(system);\r\n    setIsEditing(tru..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemCard.tsx",
          "startLine": 21,
          "block": "const handleEdit = (system: FillingSystem) => {\r\n    setFillingSystem(system);\r\n    setIsEditing(tru..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemCard.tsx",
          "startLine": 25,
          "block": "const handleDelete = (system: FillingSystem) => {\r\n    setFillingSystem(system);\r\n    setIsDeleting(..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemCard.tsx",
          "startLine": 26,
          "block": "const handleDelete = (system: FillingSystem) => {\r\n    setFillingSystem(system);\r\n    setIsDeleting(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FillingSystemFormStandardized.tsx",
          "startLine": 118,
          "block": "<StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      descri..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\ConfirmDialog.tsx",
          "startLine": 141,
          "block": "<StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      descri..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\DeleteConfirmDialog.tsx",
          "startLine": 126,
          "block": "<StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      descri..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\FormDialog.tsx",
          "startLine": 144,
          "block": "<StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      descri..."
        },
        {
          "file": "src\\shared\\components\\dialogs\\ConfirmationDialogStandardized.tsx",
          "startLine": 56,
          "block": "<StandardDialog\n      open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      descri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\AdvancedSearchInput.tsx",
          "startLine": 39,
          "block": "const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.v..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\AdvancedSearchInput.tsx",
          "startLine": 40,
          "block": "const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangeFilter.tsx",
          "startLine": 11,
          "block": "interface DateRangeFilterProps {\n  date: Date | undefined;\n  onDateChange: (date: Date | undefined) ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangeFilter.tsx",
          "startLine": 12,
          "block": "interface DateRangeFilterProps {\n  date: Date | undefined;\n  onDateChange: (date: Date | undefined) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangePicker.tsx",
          "startLine": 3,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Calendar } from \"@/core/components/ui..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\DeliveryDateProvider.tsx",
          "startLine": 10,
          "block": "import { Button } from \"@/core/components/ui/button\";\nimport { Calendar } from \"@/core/components/ui..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangePicker.tsx",
          "startLine": 99,
          "block": "const clearDateRange = () => {\n    onDateRangeChange([undefined, undefined]);\n    setIsCalendarOpen(..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\DateRangePicker.tsx",
          "startLine": 100,
          "block": "const clearDateRange = () => {\n    onDateRangeChange([undefined, undefined]);\n    setIsCalendarOpen(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\FilterBar.tsx",
          "startLine": 15,
          "block": "CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Separator }..."
        },
        {
          "file": "src\\shared\\components\\shared\\PaymentMethodFormStandardized.tsx",
          "startLine": 6,
          "block": "CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Separator }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\FilterBar.tsx",
          "startLine": 41,
          "block": "Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/core/components/ui/acc..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 37,
          "block": "Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/core/components/ui/acc..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 54,
          "block": "Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/core/components/ui/acc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\FilterBar.tsx",
          "startLine": 42,
          "block": "AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/core/components/ui/accordion\";\nimpo..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 38,
          "block": "AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/core/components/ui/accordion\";\nimpo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\ProviderFilter.tsx",
          "startLine": 29,
          "block": "// Ensure providers is always defined and an array\n  const providersList = React.useMemo(() => {\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\ProviderFilter.tsx",
          "startLine": 30,
          "block": "// Ensure providers is always defined and an array\n  const providersList = React.useMemo(() => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\filters\\RangeSliderFilter.tsx",
          "startLine": 175,
          "block": "}\n            }}\n            className=\"h-8 bg-50/20 border-50/20 hover:bg-80/20 focus:border-50/20 ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\filters\\RangeSliderFilter.tsx",
          "startLine": 189,
          "block": "}\n            }}\n            className=\"h-8 bg-50/20 border-50/20 hover:bg-80/20 focus:border-50/20 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\form\\DeliveryDateProvider.tsx",
          "startLine": 27,
          "block": "interface DeliveryDateProviderProps {\n  control: Control<FieldValues>;\n  providers?: PetrolProvider[..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\DeliveryDateProvider.tsx",
          "startLine": 28,
          "block": "interface DeliveryDateProviderProps {\n  control: Control<FieldValues>;\n  providers?: PetrolProvider[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\form\\DeliveryDateProvider.tsx",
          "startLine": 102,
          "block": "</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\TankEmployee.tsx",
          "startLine": 44,
          "block": "</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\TankEmployee.tsx",
          "startLine": 70,
          "block": "</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\form\\DeliveryDateProvider.tsx",
          "startLine": 103,
          "block": "))}\n              </SelectContent>\n            </Select>\n            <FormMessage />\n          </For..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\TankEmployee.tsx",
          "startLine": 45,
          "block": "))}\n              </SelectContent>\n            </Select>\n            <FormMessage />\n          </For..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\TankEmployee.tsx",
          "startLine": 71,
          "block": "))}\n              </SelectContent>\n            </Select>\n            <FormMessage />\n          </For..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\form\\QuantityAndPrice.tsx",
          "startLine": 49,
          "block": "const currentLevel = Number(selectedTank.current_level) || 0;\n    const capacity = Number(selectedTa..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\QuantityAndPrice.tsx",
          "startLine": 50,
          "block": "const currentLevel = Number(selectedTank.current_level) || 0;\n    const capacity = Number(selectedTa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\form\\QuantityAndPrice.tsx",
          "startLine": 67,
          "block": "// Explanatory string\n    const statusStr = isOverCapacity\n      ? `Warning: Over capacity by ${over..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\form\\QuantityAndPrice.tsx",
          "startLine": 68,
          "block": "// Explanatory string\n    const statusStr = isOverCapacity\n      ? `Warning: Over capacity by ${over..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 6,
          "block": "TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/core/components/ui/primitives/table\";\nimport { Badge..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSupplyList.tsx",
          "startLine": 6,
          "block": "TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/core/components/ui/primitives/table\";\nimport { Badge..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 29,
          "block": "</TableRow>\n      </TableHeader>\n      <TableBody>\n        {sales.map((sale) => (\n          <TableRo..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesTable.tsx",
          "startLine": 45,
          "block": "</TableRow>\n      </TableHeader>\n      <TableBody>\n        {sales.map((sale) => (\n          <TableRo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 30,
          "block": "</TableHeader>\n      <TableBody>\n        {sales.map((sale) => (\n          <TableRow key={sale.id}>\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesTable.tsx",
          "startLine": 46,
          "block": "</TableHeader>\n      <TableBody>\n        {sales.map((sale) => (\n          <TableRow key={sale.id}>\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 31,
          "block": "<TableBody>\n        {sales.map((sale) => (\n          <TableRow key={sale.id}>\n            <TableCell..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesTable.tsx",
          "startLine": 47,
          "block": "<TableBody>\n        {sales.map((sale) => (\n          <TableRow key={sale.id}>\n            <TableCell..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 32,
          "block": "{sales.map((sale) => (\n          <TableRow key={sale.id}>\n            <TableCell>\n              {new..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesTable.tsx",
          "startLine": 48,
          "block": "{sales.map((sale) => (\n          <TableRow key={sale.id}>\n            <TableCell>\n              {new..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 33,
          "block": "<TableRow key={sale.id}>\n            <TableCell>\n              {new Date(sale.sale_date).toLocaleDat..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesTable.tsx",
          "startLine": 49,
          "block": "<TableRow key={sale.id}>\n            <TableCell>\n              {new Date(sale.sale_date).toLocaleDat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 34,
          "block": "<TableCell>\n              {new Date(sale.sale_date).toLocaleDateString()}\n            </TableCell>\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesTable.tsx",
          "startLine": 50,
          "block": "<TableCell>\n              {new Date(sale.sale_date).toLocaleDateString()}\n            </TableCell>\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSaleList.tsx",
          "startLine": 35,
          "block": "{new Date(sale.sale_date).toLocaleDateString()}\n            </TableCell>\n            <TableCell>{sal..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesTable.tsx",
          "startLine": 51,
          "block": "{new Date(sale.sale_date).toLocaleDateString()}\n            </TableCell>\n            <TableCell>{sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFilter.tsx",
          "startLine": 15,
          "block": "interface FuelTank {\n  id: string;\n  name: string;\n  fuel_type?: string | { code?: string; name?: st..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 16,
          "block": "interface FuelTank {\n  id: string;\n  name: string;\n  fuel_type?: string | { code?: string; name?: st..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 19,
          "block": "interface FuelTank {\n  id: string;\n  name: string;\n  fuel_type?: string | { code?: string; name?: st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFilter.tsx",
          "startLine": 16,
          "block": "interface FuelTank {\n  id: string;\n  name: string;\n  fuel_type?: string | { code?: string; name?: st..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 17,
          "block": "interface FuelTank {\n  id: string;\n  name: string;\n  fuel_type?: string | { code?: string; name?: st..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 20,
          "block": "interface FuelTank {\n  id: string;\n  name: string;\n  fuel_type?: string | { code?: string; name?: st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFilter.tsx",
          "startLine": 21,
          "block": "interface FuelSalesFilterProps {\n  filters: FuelSaleFilters;\n  onFiltersChange: (filters: FuelSaleFi..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFilter.tsx",
          "startLine": 22,
          "block": "interface FuelSalesFilterProps {\n  filters: FuelSaleFilters;\n  onFiltersChange: (filters: FuelSaleFi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFilter.tsx",
          "startLine": 43,
          "block": "const { data: tanks = [] } = useQuery<FuelTank[]>({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: fetch..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 89,
          "block": "const { data: tanks = [] } = useQuery<FuelTank[]>({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: fetch..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 90,
          "block": "const { data: tanks = [] } = useQuery<FuelTank[]>({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: fetch..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 55,
          "block": "const { data: tanks = [] } = useQuery<FuelTank[]>({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: fetch..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 56,
          "block": "const { data: tanks = [] } = useQuery<FuelTank[]>({\n    queryKey: [\"fuel-tanks\"],\n    queryFn: fetch..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 53,
          "block": "async function fetchFuelTanks(): Promise<FuelTank[]> {\n  const response = await tanksApi.getTanks();..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 25,
          "block": "async function fetchFuelTanks(): Promise<FuelTank[]> {\n  const response = await tanksApi.getTanks();..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesFormStandardized.tsx",
          "startLine": 54,
          "block": "async function fetchFuelTanks(): Promise<FuelTank[]> {\n  const response = await tanksApi.getTanks();..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 26,
          "block": "async function fetchFuelTanks(): Promise<FuelTank[]> {\n  const response = await tanksApi.getTanks();..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 69,
          "block": "const handleAddSale = useCallback(() => {\n    setEditingSale(undefined);\n    onAddDialogOpenChange(t..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSalesManagerStandardized.tsx",
          "startLine": 70,
          "block": "const handleAddSale = useCallback(() => {\n    setEditingSale(undefined);\n    onAddDialogOpenChange(t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelSuppliesManagerStandardized.tsx",
          "startLine": 37,
          "block": "// Mock handlers for table actions\r\n  const handleEdit = (supply: FuelSupply) => {\r\n    console.log(..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\FuelSuppliesManagerStandardized.tsx",
          "startLine": 38,
          "block": "// Mock handlers for table actions\r\n  const handleEdit = (supply: FuelSupply) => {\r\n    console.log(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\FuelTankCard.tsx",
          "startLine": 4,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Progress } from..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 4,
          "block": "CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Progress } from..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 18,
          "block": "export function KpiCardGrid({ summary, isLoading }: KpiCardGridProps) {\n  const { t } = useTranslati..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 19,
          "block": "export function KpiCardGrid({ summary, isLoading }: KpiCardGridProps) {\n  const { t } = useTranslati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 70,
          "block": "</CardHeader>\n          <CardContent>\n            <motion.div\n              initial={{ opacity: 0, s..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 91,
          "block": "</CardHeader>\n          <CardContent>\n            <motion.div\n              initial={{ opacity: 0, s..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 112,
          "block": "</CardHeader>\n          <CardContent>\n            <motion.div\n              initial={{ opacity: 0, s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 71,
          "block": "<CardContent>\n            <motion.div\n              initial={{ opacity: 0, scale: 0.5 }}\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 92,
          "block": "<CardContent>\n            <motion.div\n              initial={{ opacity: 0, scale: 0.5 }}\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 113,
          "block": "<CardContent>\n            <motion.div\n              initial={{ opacity: 0, scale: 0.5 }}\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 72,
          "block": "<motion.div\n              initial={{ opacity: 0, scale: 0.5 }}\n              animate={{ opacity: 1, ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 93,
          "block": "<motion.div\n              initial={{ opacity: 0, scale: 0.5 }}\n              animate={{ opacity: 1, ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 114,
          "block": "<motion.div\n              initial={{ opacity: 0, scale: 0.5 }}\n              animate={{ opacity: 1, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 73,
          "block": "initial={{ opacity: 0, scale: 0.5 }}\n              animate={{ opacity: 1, scale: 1 }}\n              ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 94,
          "block": "initial={{ opacity: 0, scale: 0.5 }}\n              animate={{ opacity: 1, scale: 1 }}\n              ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 115,
          "block": "initial={{ opacity: 0, scale: 0.5 }}\n              animate={{ opacity: 1, scale: 1 }}\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 82,
          "block": "</motion.div>\n\n      <motion.div variants={item}>\n        <Card>\n          <CardHeader className=\"fl..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 103,
          "block": "</motion.div>\n\n      <motion.div variants={item}>\n        <Card>\n          <CardHeader className=\"fl..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 124,
          "block": "</motion.div>\n\n      <motion.div variants={item}>\n        <Card>\n          <CardHeader className=\"fl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 83,
          "block": "<motion.div variants={item}>\n        <Card>\n          <CardHeader className=\"flex flex-row items-cen..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 104,
          "block": "<motion.div variants={item}>\n        <Card>\n          <CardHeader className=\"flex flex-row items-cen..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\KpiCardGrid.tsx",
          "startLine": 125,
          "block": "<motion.div variants={item}>\n        <Card>\n          <CardHeader className=\"flex flex-row items-cen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\ProviderDialogStandardized.tsx",
          "startLine": 24,
          "block": "const providerSchema = z.object({\r\n  name: z.string().min(1, 'Name is required'),\r\n  contact: z.stri..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\ProviderDialogStandardized.tsx",
          "startLine": 25,
          "block": "const providerSchema = z.object({\r\n  name: z.string().min(1, 'Name is required'),\r\n  contact: z.stri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\ProviderDialogStandardized.tsx",
          "startLine": 96,
          "block": "</FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\ProviderDialogStandardized.tsx",
          "startLine": 110,
          "block": "</FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 17,
          "block": "const summary = useMemo(() => {\n    const totalQuantity = sales.reduce((sum, sale) => sum + sale.qua..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSalesSummary.tsx",
          "startLine": 18,
          "block": "const summary = useMemo(() => {\n    const totalQuantity = sales.reduce((sum, sale) => sum + sale.qua..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 93,
          "block": "// Helper function to format numbers\nconst formatNumber = (num: number): string => {\n  return num.to..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 94,
          "block": "// Helper function to format numbers\nconst formatNumber = (num: number): string => {\n  return num.to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 212,
          "block": "// Filter supplies by time period, date range, and fuel type\n  const filteredSupplies = useMemo(() =..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
          "startLine": 213,
          "block": "// Filter supplies by time period, date range, and fuel type\n  const filteredSupplies = useMemo(() =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 45,
          "block": "return (\n    <>\n      <Button\n        onClick={() => setIsDialogOpen(true)}\n        className={class..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 48,
          "block": "return (\n    <>\n      <Button\n        onClick={() => setIsDialogOpen(true)}\n        className={class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 46,
          "block": "<>\n      <Button\n        onClick={() => setIsDialogOpen(true)}\n        className={className}\n       ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 49,
          "block": "<>\n      <Button\n        onClick={() => setIsDialogOpen(true)}\n        className={className}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 47,
          "block": "<Button\n        onClick={() => setIsDialogOpen(true)}\n        className={className}\n        variant=..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 50,
          "block": "<Button\n        onClick={() => setIsDialogOpen(true)}\n        className={className}\n        variant=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 48,
          "block": "onClick={() => setIsDialogOpen(true)}\n        className={className}\n        variant={variant}\n      ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 51,
          "block": "onClick={() => setIsDialogOpen(true)}\n        className={className}\n        variant={variant}\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 49,
          "block": "className={className}\n        variant={variant}\n        size={size}\n      >\n        {showIcon && <Pl..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 52,
          "block": "className={className}\n        variant={variant}\n        size={size}\n      >\n        {showIcon && <Pl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 50,
          "block": "variant={variant}\n        size={size}\n      >\n        {showIcon && <Plus className=\"h-4 w-4 mr-2\" />..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 53,
          "block": "variant={variant}\n        size={size}\n      >\n        {showIcon && <Plus className=\"h-4 w-4 mr-2\" />..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 51,
          "block": "size={size}\n      >\n        {showIcon && <Plus className=\"h-4 w-4 mr-2\" />}\n        {buttonText}\n   ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 54,
          "block": "size={size}\n      >\n        {showIcon && <Plus className=\"h-4 w-4 mr-2\" />}\n        {buttonText}\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 53,
          "block": "{showIcon && <Plus className=\"h-4 w-4 mr-2\" />}\n        {buttonText}\n      </Button>\n\n      <TankFor..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 56,
          "block": "{showIcon && <Plus className=\"h-4 w-4 mr-2\" />}\n        {buttonText}\n      </Button>\n\n      <TankFor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 56,
          "block": "<TankFormDialog\n        open={isDialogOpen}\n        onOpenChange={setIsDialogOpen}\n        fuelTypes..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 59,
          "block": "<TankFormDialog\n        open={isDialogOpen}\n        onOpenChange={setIsDialogOpen}\n        fuelTypes..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 57,
          "block": "<TankFormDialog\n        open={isDialogOpen}\n        onOpenChange={setIsDialogOpen}\n        fuelTypes..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 60,
          "block": "<TankFormDialog\n        open={isDialogOpen}\n        onOpenChange={setIsDialogOpen}\n        fuelTypes..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 58,
          "block": "open={isDialogOpen}\n        onOpenChange={setIsDialogOpen}\n        fuelTypes={fuelTypes}\n        onS..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 61,
          "block": "open={isDialogOpen}\n        onOpenChange={setIsDialogOpen}\n        fuelTypes={fuelTypes}\n        onS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankController.tsx",
          "startLine": 59,
          "block": "onOpenChange={setIsDialogOpen}\n        fuelTypes={fuelTypes}\n        onSuccess={onSuccess}\n      />\n..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesController.tsx",
          "startLine": 62,
          "block": "onOpenChange={setIsDialogOpen}\n        fuelTypes={fuelTypes}\n        onSuccess={onSuccess}\n      />\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 148,
          "block": "</FormControl>\n                <FormMessage className=\"text-xs\" />\n              </FormItem>\n       ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 294,
          "block": "</FormControl>\n                <FormMessage className=\"text-xs\" />\n              </FormItem>\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 205,
          "block": "</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 233,
          "block": "</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 206,
          "block": "<FormControl>\n                    <div className=\"relative\">\n                      <Input \n         ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 234,
          "block": "<FormControl>\n                    <div className=\"relative\">\n                      <Input \n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 207,
          "block": "<div className=\"relative\">\n                      <Input \n                        type=\"number\" \n    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 235,
          "block": "<div className=\"relative\">\n                      <Input \n                        type=\"number\" \n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 208,
          "block": "<Input \n                        type=\"number\" \n                        min=\"0\" \n                    ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 236,
          "block": "<Input \n                        type=\"number\" \n                        min=\"0\" \n                    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 209,
          "block": "type=\"number\" \n                        min=\"0\" \n                        step=\"0.01\" \n               ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 237,
          "block": "type=\"number\" \n                        min=\"0\" \n                        step=\"0.01\" \n               ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 215,
          "block": "/>\n                      <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-s..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 243,
          "block": "/>\n                      <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 216,
          "block": "<span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-sm text-gray-500 dark:text..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 244,
          "block": "<span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-sm text-gray-500 dark:text..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 217,
          "block": "L\n                      </span>\n                    </div>\n                  </FormControl>\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 245,
          "block": "L\n                      </span>\n                    </div>\n                  </FormControl>\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 218,
          "block": "</span>\n                    </div>\n                  </FormControl>\n                  <FormMessage c..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 246,
          "block": "</span>\n                    </div>\n                  </FormControl>\n                  <FormMessage c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 219,
          "block": "</div>\n                  </FormControl>\n                  <FormMessage className=\"text-xs\" />\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 247,
          "block": "</div>\n                  </FormControl>\n                  <FormMessage className=\"text-xs\" />\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 220,
          "block": "</FormControl>\n                  <FormMessage className=\"text-xs\" />\n                </FormItem>\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankFormDialog.tsx",
          "startLine": 248,
          "block": "</FormControl>\n                  <FormMessage className=\"text-xs\" />\n                </FormItem>\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankManager.tsx",
          "startLine": 13,
          "block": "export function TankManager({ onRenderAction }: TankManagerProps) {\n  const { t } = useTranslation()..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankManager.tsx",
          "startLine": 14,
          "block": "export function TankManager({ onRenderAction }: TankManagerProps) {\n  const { t } = useTranslation()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\components\\TankManager.tsx",
          "startLine": 28,
          "block": "// Memoize the refetch callback\n  const handleRefetch = useCallback(() => {\n    refetch();\n  }, [ref..."
        },
        {
          "file": "src\\features\\fuel-management\\components\\TankManager.tsx",
          "startLine": 29,
          "block": "// Memoize the refetch callback\n  const handleRefetch = useCallback(() => {\n    refetch();\n  }, [ref..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 21,
          "block": "return response.data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 31,
          "block": "return response.data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 50,
          "block": "return response.data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 60,
          "block": "return response.data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 51,
          "block": "},\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"supplies\"] });\n    },\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 61,
          "block": "},\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"supplies\"] });\n    },\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 79,
          "block": "return response.data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuel.ts",
          "startLine": 89,
          "block": "return response.data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 95,
          "block": "onSuccess: () => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 138,
          "block": "onSuccess: () => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 96,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelPrice..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 139,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelPrice..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 97,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelPrices] });\n      queryClient.invalidateQu..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 140,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelPrices] });\n      queryClient.invalidateQu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 98,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.currentPrices] });\n      queryClient.invalidat..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 124,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.currentPrices] });\n      queryClient.invalidat..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelPrices.ts",
          "startLine": 141,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.currentPrices] });\n      queryClient.invalidat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 94,
          "block": "onSuccess: () => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryK..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 141,
          "block": "onSuccess: () => {\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryK..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 95,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelSales..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 142,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelSales..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 96,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelSales] });\n      queryClient.invalidateQue..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 143,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelSales] });\n      queryClient.invalidateQue..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 97,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelSalesCount] });\n      queryClient.invalida..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 125,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelSalesCount] });\n      queryClient.invalida..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 144,
          "block": "queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.fuelSalesCount] });\n      queryClient.invalida..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 98,
          "block": "queryClient.invalidateQueries({\n        queryKey: [QUERY_KEYS.fuelSalesSummary],\n      });\n    },\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 126,
          "block": "queryClient.invalidateQueries({\n        queryKey: [QUERY_KEYS.fuelSalesSummary],\n      });\n    },\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSales.ts",
          "startLine": 145,
          "block": "queryClient.invalidateQueries({\n        queryKey: [QUERY_KEYS.fuelSalesSummary],\n      });\n    },\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 6,
          "block": "// Mock the API service\nvi.mock(\"../services\", () => ({\n  fuelSuppliesService: {\n    getFuelSupplies..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 6,
          "block": "// Mock the API service\nvi.mock(\"../services\", () => ({\n  fuelSuppliesService: {\n    getFuelSupplies..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 17,
          "block": "const mockSupplies = [\n  {\n    id: \"1\",\n    delivery_date: \"2023-01-01\",\n    provider_id: \"provider1..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 14,
          "block": "const mockSupplies = [\n  {\n    id: \"1\",\n    delivery_date: \"2023-01-01\",\n    provider_id: \"provider1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 19,
          "block": "id: \"1\",\n    delivery_date: \"2023-01-01\",\n    provider_id: \"provider1\",\n    tank_id: \"tank1\",\n    qu..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 16,
          "block": "id: \"1\",\n    delivery_date: \"2023-01-01\",\n    provider_id: \"provider1\",\n    tank_id: \"tank1\",\n    qu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 20,
          "block": "delivery_date: \"2023-01-01\",\n    provider_id: \"provider1\",\n    tank_id: \"tank1\",\n    quantity_liters..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 17,
          "block": "delivery_date: \"2023-01-01\",\n    provider_id: \"provider1\",\n    tank_id: \"tank1\",\n    quantity_liters..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 21,
          "block": "provider_id: \"provider1\",\n    tank_id: \"tank1\",\n    quantity_liters: 1000,\n    price_per_liter: 500,..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 18,
          "block": "provider_id: \"provider1\",\n    tank_id: \"tank1\",\n    quantity_liters: 1000,\n    price_per_liter: 500,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 27,
          "block": "shift_id: \"shift1\",\n    payment_method: \"cash\",\n    payment_status: \"paid\",\n    created_at: \"2023-01..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 24,
          "block": "shift_id: \"shift1\",\n    payment_method: \"cash\",\n    payment_status: \"paid\",\n    created_at: \"2023-01..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 39,
          "block": "it(\"should fetch fuel supplies\", async () => {\n    // Use shared test utility\n    const { renderTest..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 40,
          "block": "it(\"should fetch fuel supplies\", async () => {\n    // Use shared test utility\n    const { renderTest..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 58,
          "block": "const newSupply = {\n      delivery_date: \"2023-01-02\",\n      provider_id: \"provider1\",\n      tank_id..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 175,
          "block": "const newSupply = {\n      delivery_date: \"2023-01-02\",\n      provider_id: \"provider1\",\n      tank_id..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 59,
          "block": "delivery_date: \"2023-01-02\",\n      provider_id: \"provider1\",\n      tank_id: \"tank1\",\n      quantity_..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 176,
          "block": "delivery_date: \"2023-01-02\",\n      provider_id: \"provider1\",\n      tank_id: \"tank1\",\n      quantity_..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 60,
          "block": "provider_id: \"provider1\",\n      tank_id: \"tank1\",\n      quantity_liters: 2000,\n      price_per_liter..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 177,
          "block": "provider_id: \"provider1\",\n      tank_id: \"tank1\",\n      quantity_liters: 2000,\n      price_per_liter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 61,
          "block": "tank_id: \"tank1\",\n      quantity_liters: 2000,\n      price_per_liter: 500,\n      total_cost: 1000000..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 178,
          "block": "tank_id: \"tank1\",\n      quantity_liters: 2000,\n      price_per_liter: 500,\n      total_cost: 1000000..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 62,
          "block": "quantity_liters: 2000,\n      price_per_liter: 500,\n      total_cost: 1000000,\n      comments: \"New s..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 179,
          "block": "quantity_liters: 2000,\n      price_per_liter: 500,\n      total_cost: 1000000,\n      comments: \"New s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 63,
          "block": "price_per_liter: 500,\n      total_cost: 1000000,\n      comments: \"New supply\",\n      shift_id: \"shif..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 180,
          "block": "price_per_liter: 500,\n      total_cost: 1000000,\n      comments: \"New supply\",\n      shift_id: \"shif..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 64,
          "block": "total_cost: 1000000,\n      comments: \"New supply\",\n      shift_id: \"shift1\",\n      payment_method: \"..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 181,
          "block": "total_cost: 1000000,\n      comments: \"New supply\",\n      shift_id: \"shift1\",\n      payment_method: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 65,
          "block": "comments: \"New supply\",\n      shift_id: \"shift1\",\n      payment_method: \"cash\",\n      payment_status..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 182,
          "block": "comments: \"New supply\",\n      shift_id: \"shift1\",\n      payment_method: \"cash\",\n      payment_status..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 81,
          "block": "const { result } = renderTestHook(() => useFuelSupplies());\n\n    result.current.createSupply.mutate(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 194,
          "block": "const { result } = renderTestHook(() => useFuelSupplies());\n\n    result.current.createSupply.mutate(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 82,
          "block": "const { result } = renderTestHook(() => useFuelSupplies());\n\n    result.current.createSupply.mutate(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 195,
          "block": "const { result } = renderTestHook(() => useFuelSupplies());\n\n    result.current.createSupply.mutate(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 83,
          "block": "result.current.createSupply.mutate(newSupply);\n\n    await waitFor(() => {\n      expect(result.curren..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 196,
          "block": "result.current.createSupply.mutate(newSupply);\n\n    await waitFor(() => {\n      expect(result.curren..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 84,
          "block": "result.current.createSupply.mutate(newSupply);\n\n    await waitFor(() => {\n      expect(result.curren..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 197,
          "block": "result.current.createSupply.mutate(newSupply);\n\n    await waitFor(() => {\n      expect(result.curren..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 169,
          "block": "it(\"should invalidate queries after successful mutations\", async () => {\n    // Use shared mutation ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 170,
          "block": "it(\"should invalidate queries after successful mutations\", async () => {\n    // Use shared mutation ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 202,
          "block": "// Should invalidate fuelSupplies query\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"fuel..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.test.ts",
          "startLine": 203,
          "block": "// Should invalidate fuelSupplies query\n    expect(spyInvalidateQueries).toHaveBeenCalledWith([\"fuel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.ts",
          "startLine": 19,
          "block": "const supplies = useQuery({\n    queryKey: [\"fuel-supplies\", filters],\n    queryFn: () => fuelSupplie..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.ts",
          "startLine": 20,
          "block": "const supplies = useQuery({\n    queryKey: [\"fuel-supplies\", filters],\n    queryFn: () => fuelSupplie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.ts",
          "startLine": 28,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"fuel-supplies\"] });\n    },\n  })..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.ts",
          "startLine": 36,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"fuel-supplies\"] });\n    },\n  })..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSupplies.ts",
          "startLine": 43,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"fuel-supplies\"] });\n    },\n  })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 71,
          "block": "// Use shared test utility\n    const { renderTestHook } = setupHookTest();\n\n    const { result } = r..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 86,
          "block": "// Use shared test utility\n    const { renderTestHook } = setupHookTest();\n\n    const { result } = r..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 111,
          "block": "// Use shared test utility\n    const { renderTestHook } = setupHookTest();\n\n    const { result } = r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 75,
          "block": "expect(result.current.filters).toEqual({\n      searchTerm: \"\",\n      providerId: \"all\",\n      tankId..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 127,
          "block": "expect(result.current.filters).toEqual({\n      searchTerm: \"\",\n      providerId: \"all\",\n      tankId..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 76,
          "block": "expect(result.current.filters).toEqual({\n      searchTerm: \"\",\n      providerId: \"all\",\n      tankId..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 128,
          "block": "expect(result.current.filters).toEqual({\n      searchTerm: \"\",\n      providerId: \"all\",\n      tankId..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 77,
          "block": "searchTerm: \"\",\n      providerId: \"all\",\n      tankId: \"all\",\n      fuelType: \"all\",\n      paymentSt..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 129,
          "block": "searchTerm: \"\",\n      providerId: \"all\",\n      tankId: \"all\",\n      fuelType: \"all\",\n      paymentSt..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 48,
          "block": "searchTerm: \"\",\n      providerId: \"all\",\n      tankId: \"all\",\n      fuelType: \"all\",\n      paymentSt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 87,
          "block": "const { renderTestHook } = setupHookTest();\n\n    const { result } = renderTestHook(() => useFuelSupp..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 112,
          "block": "const { renderTestHook } = setupHookTest();\n\n    const { result } = renderTestHook(() => useFuelSupp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 136,
          "block": "it(\"should filter supplies by search term\", async () => {\n    // Use shared test utility\n    const {..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 137,
          "block": "it(\"should filter supplies by search term\", async () => {\n    // Use shared test utility\n    const {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 138,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 157,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 176,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 195,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 214,
          "block": "// Use shared test utility\n    const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 139,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSupplies)..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 158,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSupplies)..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 177,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSupplies)..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 196,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSupplies)..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 215,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n    mockFetch.mockResolvedValue(mockSupplies)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 140,
          "block": "mockFetch.mockResolvedValue(mockSupplies);\n\n    const { result } = renderTestHook(() => useFuelSuppl..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 159,
          "block": "mockFetch.mockResolvedValue(mockSupplies);\n\n    const { result } = renderTestHook(() => useFuelSuppl..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 178,
          "block": "mockFetch.mockResolvedValue(mockSupplies);\n\n    const { result } = renderTestHook(() => useFuelSuppl..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 197,
          "block": "mockFetch.mockResolvedValue(mockSupplies);\n\n    const { result } = renderTestHook(() => useFuelSuppl..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 216,
          "block": "mockFetch.mockResolvedValue(mockSupplies);\n\n    const { result } = renderTestHook(() => useFuelSuppl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 141,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 160,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 179,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 198,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 217,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 142,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 161,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 180,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 199,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 218,
          "block": "const { result } = renderTestHook(() => useFuelSuppliesFilters());\n\n    await waitFor(() => {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 144,
          "block": "await waitFor(() => {\n      expect(result.current.supplies).toHaveLength(2);\n    });\n\n    act(() => ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 163,
          "block": "await waitFor(() => {\n      expect(result.current.supplies).toHaveLength(2);\n    });\n\n    act(() => ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 182,
          "block": "await waitFor(() => {\n      expect(result.current.supplies).toHaveLength(2);\n    });\n\n    act(() => ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 201,
          "block": "await waitFor(() => {\n      expect(result.current.supplies).toHaveLength(2);\n    });\n\n    act(() => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 150,
          "block": "});\n\n    expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filtered..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 188,
          "block": "});\n\n    expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filtered..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 151,
          "block": "expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filteredSupplies[..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 189,
          "block": "expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filteredSupplies[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 155,
          "block": "it(\"should filter supplies by provider\", async () => {\n    // Use shared test utility\n    const { re..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 156,
          "block": "it(\"should filter supplies by provider\", async () => {\n    // Use shared test utility\n    const { re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 169,
          "block": "});\n\n    expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filtered..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 207,
          "block": "});\n\n    expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filtered..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 170,
          "block": "expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filteredSupplies[..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 208,
          "block": "expect(result.current.filteredSupplies).toHaveLength(1);\n    expect(result.current.filteredSupplies[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 174,
          "block": "it(\"should filter supplies by fuel type\", async () => {\n    // Use shared test utility\n    const { r..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 175,
          "block": "it(\"should filter supplies by fuel type\", async () => {\n    // Use shared test utility\n    const { r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 193,
          "block": "it(\"should filter supplies by payment status\", async () => {\n    // Use shared test utility\n    cons..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 194,
          "block": "it(\"should filter supplies by payment status\", async () => {\n    // Use shared test utility\n    cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 212,
          "block": "it(\"should generate filter options from supplies data\", async () => {\n    // Use shared test utility..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.test.ts",
          "startLine": 213,
          "block": "it(\"should generate filter options from supplies data\", async () => {\n    // Use shared test utility..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 71,
          "block": "// Provider filter\n      const matchesProvider =\n        filters.providerId === \"all\" ||\n        sup..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 72,
          "block": "// Provider filter\n      const matchesProvider =\n        filters.providerId === \"all\" ||\n        sup..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 86,
          "block": "// Payment status filter\n      const matchesPaymentStatus =\n        filters.paymentStatus === \"all\" ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 87,
          "block": "// Payment status filter\n      const matchesPaymentStatus =\n        filters.paymentStatus === \"all\" ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 115,
          "block": "supplies.forEach((supply) => {\n      if (supply.provider_id && supply.provider?.name) {\n        prov..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 116,
          "block": "supplies.forEach((supply) => {\n      if (supply.provider_id && supply.provider?.name) {\n        prov..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 131,
          "block": "if (supply.payment_status) {\n        paymentStatuses.set(supply.payment_status, supply.payment_statu..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelSuppliesFilters.ts",
          "startLine": 132,
          "block": "if (supply.payment_status) {\n        paymentStatuses.set(supply.payment_status, supply.payment_statu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 11,
          "block": "// Mock the useToast hook\nvi.mock(\"@/shared/hooks/ui\", () => ({\n  useToast: () => ({\n    success: vi..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 9,
          "block": "// Mock the useToast hook\nvi.mock(\"@/shared/hooks/ui\", () => ({\n  useToast: () => ({\n    success: vi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 12,
          "block": "// Mock the useToast hook\nvi.mock(\"@/shared/hooks/ui\", () => ({\n  useToast: () => ({\n    success: vi..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 10,
          "block": "// Mock the useToast hook\nvi.mock(\"@/shared/hooks/ui\", () => ({\n  useToast: () => ({\n    success: vi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 13,
          "block": "vi.mock(\"@/shared/hooks/ui\", () => ({\n  useToast: () => ({\n    success: vi.fn(),\n    error: vi.fn(),..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 11,
          "block": "vi.mock(\"@/shared/hooks/ui\", () => ({\n  useToast: () => ({\n    success: vi.fn(),\n    error: vi.fn(),..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 14,
          "block": "useToast: () => ({\n    success: vi.fn(),\n    error: vi.fn(),\n    warning: vi.fn(),\n    info: vi.fn()..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 12,
          "block": "useToast: () => ({\n    success: vi.fn(),\n    error: vi.fn(),\n    warning: vi.fn(),\n    info: vi.fn()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 22,
          "block": "// Mock API calls\nconst mockFetchTankData = vi.fn();\nconst mockUpdateTankLevel = vi.fn();\nconst mock..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 23,
          "block": "// Mock API calls\nconst mockFetchTankData = vi.fn();\nconst mockUpdateTankLevel = vi.fn();\nconst mock..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 74,
          "block": "const { result } = renderHook(() =>\n      useFuelTankMonitor({\n        tankId: \"tank123\",\n      })\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 103,
          "block": "const { result } = renderHook(() =>\n      useFuelTankMonitor({\n        tankId: \"tank123\",\n      })\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 229,
          "block": "const { result } = renderHook(() =>\n      useFuelTankMonitor({\n        tankId: \"tank123\",\n      })\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 82,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 83,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 108,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 109,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 138,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 139,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 160,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 161,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 195,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 196,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 234,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 235,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 324,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 325,
          "block": "// Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 94,
          "block": "global.fetch = vi.fn().mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({\n        ....."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 120,
          "block": "global.fetch = vi.fn().mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({\n        ....."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 149,
          "block": "global.fetch = vi.fn().mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({\n        ....."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 95,
          "block": "ok: true,\n      json: async () => ({\n        ...mockTankData,\n        capacity: 1000,\n        curren..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 121,
          "block": "ok: true,\n      json: async () => ({\n        ...mockTankData,\n        capacity: 1000,\n        curren..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 96,
          "block": "json: async () => ({\n        ...mockTankData,\n        capacity: 1000,\n        currentLevel: 250, // ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 122,
          "block": "json: async () => ({\n        ...mockTankData,\n        capacity: 1000,\n        currentLevel: 250, // ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 107,
          "block": ");\n\n    // Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).to..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 137,
          "block": ");\n\n    // Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).to..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 194,
          "block": ");\n\n    // Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).to..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 233,
          "block": ");\n\n    // Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).to..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 323,
          "block": ");\n\n    // Wait for data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 165,
          "block": "// Should detect critical level\n    expect(result.current.isLow).toBe(true);\n    expect(result.curre..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 166,
          "block": "// Should detect critical level\n    expect(result.current.isLow).toBe(true);\n    expect(result.curre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 172,
          "block": "// Mock implementation for this test\n    global.fetch = vi\n      .fn()\n      .mockResolvedValueOnce(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 214,
          "block": "// Mock implementation for this test\n    global.fetch = vi\n      .fn()\n      .mockResolvedValueOnce(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 250,
          "block": "// Mock implementation for this test\n    global.fetch = vi\n      .fn()\n      .mockResolvedValueOnce(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 292,
          "block": "// Mock implementation for this test\n    global.fetch = vi\n      .fn()\n      .mockResolvedValueOnce(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 173,
          "block": "global.fetch = vi\n      .fn()\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async (..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 215,
          "block": "global.fetch = vi\n      .fn()\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async (..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 251,
          "block": "global.fetch = vi\n      .fn()\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 174,
          "block": ".fn()\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async () => mockTankData,\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 216,
          "block": ".fn()\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async () => mockTankData,\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 252,
          "block": ".fn()\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async () => mockTankData,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 175,
          "block": ".mockResolvedValueOnce({\n        ok: true,\n        json: async () => mockTankData,\n      })\n      .m..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 217,
          "block": ".mockResolvedValueOnce({\n        ok: true,\n        json: async () => mockTankData,\n      })\n      .m..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 253,
          "block": ".mockResolvedValueOnce({\n        ok: true,\n        json: async () => mockTankData,\n      })\n      .m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 176,
          "block": "ok: true,\n        json: async () => mockTankData,\n      })\n      .mockResolvedValueOnce({\n        ok..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 218,
          "block": "ok: true,\n        json: async () => mockTankData,\n      })\n      .mockResolvedValueOnce({\n        ok..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 254,
          "block": "ok: true,\n        json: async () => mockTankData,\n      })\n      .mockResolvedValueOnce({\n        ok..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 177,
          "block": "json: async () => mockTankData,\n      })\n      .mockResolvedValueOnce({\n        ok: true,\n        js..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 219,
          "block": "json: async () => mockTankData,\n      })\n      .mockResolvedValueOnce({\n        ok: true,\n        js..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 255,
          "block": "json: async () => mockTankData,\n      })\n      .mockResolvedValueOnce({\n        ok: true,\n        js..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 178,
          "block": "})\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({\n          ...mockTa..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 220,
          "block": "})\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({\n          ...mockTa..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 256,
          "block": "})\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({\n          ...mockTa..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 302,
          "block": "})\n      .mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({\n          ...mockTa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 239,
          "block": "// Update tank level\n    await act(async () => {\n      await result.current.updateLevel(7500);\n    }..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 240,
          "block": "// Update tank level\n    await act(async () => {\n      await result.current.updateLevel(7500);\n    }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 271,
          "block": "// Wait for initial data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).to..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 272,
          "block": "// Wait for initial data to load\n    await waitFor(() => {\n      expect(result.current.isLoading).to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 295,
          "block": ".mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({\n          ...mockTankData,\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.test.tsx",
          "startLine": 303,
          "block": ".mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({\n          ...mockTankData,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 35,
          "block": "// Mock functions for tank operations\nconst fetchTankData = async (tankId: string): Promise<FuelTank..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 36,
          "block": "// Mock functions for tank operations\nconst fetchTankData = async (tankId: string): Promise<FuelTank..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 60,
          "block": "// Return updated data\n  return {\n    id: tankId,\n    name: `Tank ${tankId.substring(0, 2).toUpperCa..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 77,
          "block": "// Return updated data\n  return {\n    id: tankId,\n    name: `Tank ${tankId.substring(0, 2).toUpperCa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 61,
          "block": "// Return updated data\n  return {\n    id: tankId,\n    name: `Tank ${tankId.substring(0, 2).toUpperCa..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 78,
          "block": "// Return updated data\n  return {\n    id: tankId,\n    name: `Tank ${tankId.substring(0, 2).toUpperCa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 104,
          "block": "/**\n   * Polling interval in milliseconds (how often to check the tank level)\n   */\n  pollingInterva..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 105,
          "block": "/**\n   * Polling interval in milliseconds (how often to check the tank level)\n   */\n  pollingInterva..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 124,
          "block": "/**\n   * Callback when tank level becomes critical\n   */\n  onCriticalLevel?: (tank: FuelTank) => voi..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 125,
          "block": "/**\n   * Callback when tank level becomes critical\n   */\n  onCriticalLevel?: (tank: FuelTank) => voi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 170,
          "block": "// Calculate level percentage\n  const getLevelPercentage = useCallback((tank: FuelTank): number => {..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 171,
          "block": "// Calculate level percentage\n  const getLevelPercentage = useCallback((tank: FuelTank): number => {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 185,
          "block": "success({\n        title: \"Refilling Started\",\n        description: `Tank ${updatedTank.name} is now ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 186,
          "block": "success({\n        title: \"Refilling Started\",\n        description: `Tank ${updatedTank.name} is now ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 212,
          "block": "// Fetch tank data\n  const fetchTank = useCallback(async () => {\n    setIsLoading(true);\n    setErro..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 213,
          "block": "// Fetch tank data\n  const fetchTank = useCallback(async () => {\n    setIsLoading(true);\n    setErro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 224,
          "block": "if (data.status === TankStatus.REFILLING) {\n        setIsRefilling(true);\n      } else {\n        set..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 225,
          "block": "if (data.status === TankStatus.REFILLING) {\n        setIsRefilling(true);\n      } else {\n        set..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 288,
          "block": "// Update tank level manually\n  const updateLevel = useCallback(\n    async (newLevel: number) => {\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 289,
          "block": "// Update tank level manually\n  const updateLevel = useCallback(\n    async (newLevel: number) => {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 296,
          "block": "// Validate input\n        if (newLevel < 0 || newLevel > tank.capacity) {\n          throw new Error(..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 297,
          "block": "// Validate input\n        if (newLevel < 0 || newLevel > tank.capacity) {\n          throw new Error(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 304,
          "block": "success({\n          title: \"Tank Updated\",\n          description: `Tank ${updatedTank.name} level up..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useFuelTankMonitor.ts",
          "startLine": 305,
          "block": "success({\n          title: \"Tank Updated\",\n          description: `Tank ${updatedTank.name} level up..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 1,
          "block": "import { useCallback } from \"react\";\nimport { useEntityDialog } from \"@/shared/hooks/base\";\nimport {..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 1,
          "block": "import { useCallback } from \"react\";\nimport { useEntityDialog } from \"@/shared/hooks/base\";\nimport {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 2,
          "block": "import { useEntityDialog } from \"@/shared/hooks/base\";\nimport { useToast } from \"@/core/hooks/useToa..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 2,
          "block": "import { useEntityDialog } from \"@/shared/hooks/base\";\nimport { useToast } from \"@/core/hooks/useToa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 3,
          "block": "import { useToast } from \"@/core/hooks/useToast\";\nimport { useQueryClient } from \"@tanstack/react-qu..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 3,
          "block": "import { useToast } from \"@/core/hooks/useToast\";\nimport { useQueryClient } from \"@tanstack/react-qu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 4,
          "block": "import { useQueryClient } from \"@tanstack/react-query\";\n\n// Define inventory item type\nexport interf..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 4,
          "block": "import { useQueryClient } from \"@tanstack/react-query\";\n\n// Define inventory item type\nexport interf..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 6,
          "block": "// Define inventory item type\nexport interface InventoryItem {\n  id: string;\n  name: string;\n  quant..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 6,
          "block": "// Define inventory item type\nexport interface InventoryItem {\n  id: string;\n  name: string;\n  quant..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 7,
          "block": "export interface InventoryItem {\n  id: string;\n  name: string;\n  quantity: number;\n  minStockLevel: ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 7,
          "block": "export interface InventoryItem {\n  id: string;\n  name: string;\n  quantity: number;\n  minStockLevel: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 9,
          "block": "name: string;\n  quantity: number;\n  minStockLevel: number;\n  lastRestocked: string;\n  category: stri..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 9,
          "block": "name: string;\n  quantity: number;\n  minStockLevel: number;\n  lastRestocked: string;\n  category: stri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 10,
          "block": "quantity: number;\n  minStockLevel: number;\n  lastRestocked: string;\n  category: string;\n  location: ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 10,
          "block": "quantity: number;\n  minStockLevel: number;\n  lastRestocked: string;\n  category: string;\n  location: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 14,
          "block": "location: string;\n}\n\n// Define form data for creating/updating inventory items\nexport interface Inve..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 14,
          "block": "location: string;\n}\n\n// Define form data for creating/updating inventory items\nexport interface Inve..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 15,
          "block": "}\n\n// Define form data for creating/updating inventory items\nexport interface InventoryItemFormData ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 15,
          "block": "}\n\n// Define form data for creating/updating inventory items\nexport interface InventoryItemFormData ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 16,
          "block": "// Define form data for creating/updating inventory items\nexport interface InventoryItemFormData {\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 16,
          "block": "// Define form data for creating/updating inventory items\nexport interface InventoryItemFormData {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 17,
          "block": "// Define form data for creating/updating inventory items\nexport interface InventoryItemFormData {\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 17,
          "block": "// Define form data for creating/updating inventory items\nexport interface InventoryItemFormData {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 18,
          "block": "export interface InventoryItemFormData {\n  name: string;\n  quantity: number;\n  minStockLevel: number..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 18,
          "block": "export interface InventoryItemFormData {\n  name: string;\n  quantity: number;\n  minStockLevel: number..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 22,
          "block": "category: string;\n  location: string;\n}\n\n// Mock service functions (replace with actual implementati..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 22,
          "block": "category: string;\n  location: string;\n}\n\n// Mock service functions (replace with actual implementati..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 23,
          "block": "location: string;\n}\n\n// Mock service functions (replace with actual implementations)\nconst createInv..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 23,
          "block": "location: string;\n}\n\n// Mock service functions (replace with actual implementations)\nconst createInv..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 24,
          "block": "}\n\n// Mock service functions (replace with actual implementations)\nconst createInventoryItem = async..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 24,
          "block": "}\n\n// Mock service functions (replace with actual implementations)\nconst createInventoryItem = async..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 25,
          "block": "// Mock service functions (replace with actual implementations)\nconst createInventoryItem = async (\n..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 25,
          "block": "// Mock service functions (replace with actual implementations)\nconst createInventoryItem = async (\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 26,
          "block": "// Mock service functions (replace with actual implementations)\nconst createInventoryItem = async (\n..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 26,
          "block": "// Mock service functions (replace with actual implementations)\nconst createInventoryItem = async (\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 27,
          "block": "const createInventoryItem = async (\n  data: InventoryItemFormData\n): Promise<InventoryItem> => {\n  /..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 27,
          "block": "const createInventoryItem = async (\n  data: InventoryItemFormData\n): Promise<InventoryItem> => {\n  /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 28,
          "block": "data: InventoryItemFormData\n): Promise<InventoryItem> => {\n  // Simulate API call\n  return {\n    id:..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 28,
          "block": "data: InventoryItemFormData\n): Promise<InventoryItem> => {\n  // Simulate API call\n  return {\n    id:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 29,
          "block": "): Promise<InventoryItem> => {\n  // Simulate API call\n  return {\n    id: Math.random().toString(36)...."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 29,
          "block": "): Promise<InventoryItem> => {\n  // Simulate API call\n  return {\n    id: Math.random().toString(36)...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 30,
          "block": "// Simulate API call\n  return {\n    id: Math.random().toString(36).substring(2, 9),\n    ...data,\n   ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 30,
          "block": "// Simulate API call\n  return {\n    id: Math.random().toString(36).substring(2, 9),\n    ...data,\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 31,
          "block": "return {\n    id: Math.random().toString(36).substring(2, 9),\n    ...data,\n    lastRestocked: new Dat..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 31,
          "block": "return {\n    id: Math.random().toString(36).substring(2, 9),\n    ...data,\n    lastRestocked: new Dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 32,
          "block": "id: Math.random().toString(36).substring(2, 9),\n    ...data,\n    lastRestocked: new Date().toISOStri..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 32,
          "block": "id: Math.random().toString(36).substring(2, 9),\n    ...data,\n    lastRestocked: new Date().toISOStri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 37,
          "block": "const updateInventoryItem = async (\n  id: string,\n  data: InventoryItemFormData\n): Promise<Inventory..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 37,
          "block": "const updateInventoryItem = async (\n  id: string,\n  data: InventoryItemFormData\n): Promise<Inventory..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 38,
          "block": "const updateInventoryItem = async (\n  id: string,\n  data: InventoryItemFormData\n): Promise<Inventory..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 38,
          "block": "const updateInventoryItem = async (\n  id: string,\n  data: InventoryItemFormData\n): Promise<Inventory..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 39,
          "block": "id: string,\n  data: InventoryItemFormData\n): Promise<InventoryItem> => {\n  // Simulate API call\n  re..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 39,
          "block": "id: string,\n  data: InventoryItemFormData\n): Promise<InventoryItem> => {\n  // Simulate API call\n  re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 46,
          "block": "lastRestocked: new Date().toISOString(),\n  };\n};\n\nconst deleteInventoryItem = async (id: string): Pr..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 46,
          "block": "lastRestocked: new Date().toISOString(),\n  };\n};\n\nconst deleteInventoryItem = async (id: string): Pr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 48,
          "block": "};\n\nconst deleteInventoryItem = async (id: string): Promise<void> => {\n  // Simulate API call\n  awai..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 48,
          "block": "};\n\nconst deleteInventoryItem = async (id: string): Promise<void> => {\n  // Simulate API call\n  awai..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 49,
          "block": "const deleteInventoryItem = async (id: string): Promise<void> => {\n  // Simulate API call\n  await ne..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 49,
          "block": "const deleteInventoryItem = async (id: string): Promise<void> => {\n  // Simulate API call\n  await ne..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 50,
          "block": "const deleteInventoryItem = async (id: string): Promise<void> => {\n  // Simulate API call\n  await ne..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 50,
          "block": "const deleteInventoryItem = async (id: string): Promise<void> => {\n  // Simulate API call\n  await ne..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 57,
          "block": "* Options for the inventory dialog hook\n */\nexport interface UseInventoryDialogOptions {\n  /**\n   * ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 57,
          "block": "* Options for the inventory dialog hook\n */\nexport interface UseInventoryDialogOptions {\n  /**\n   * ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 58,
          "block": "*/\nexport interface UseInventoryDialogOptions {\n  /**\n   * Callback when an inventory item is succes..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 58,
          "block": "*/\nexport interface UseInventoryDialogOptions {\n  /**\n   * Callback when an inventory item is succes..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 59,
          "block": "export interface UseInventoryDialogOptions {\n  /**\n   * Callback when an inventory item is successfu..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 59,
          "block": "export interface UseInventoryDialogOptions {\n  /**\n   * Callback when an inventory item is successfu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 60,
          "block": "/**\n   * Callback when an inventory item is successfully created\n   */\n  onCreateSuccess?: (item: In..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 60,
          "block": "/**\n   * Callback when an inventory item is successfully created\n   */\n  onCreateSuccess?: (item: In..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 61,
          "block": "* Callback when an inventory item is successfully created\n   */\n  onCreateSuccess?: (item: Inventory..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 61,
          "block": "* Callback when an inventory item is successfully created\n   */\n  onCreateSuccess?: (item: Inventory..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 62,
          "block": "*/\n  onCreateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 62,
          "block": "*/\n  onCreateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 63,
          "block": "onCreateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is succ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 63,
          "block": "onCreateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is succ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 64,
          "block": "/**\n   * Callback when an inventory item is successfully updated\n   */\n  onUpdateSuccess?: (item: In..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 65,
          "block": "/**\n   * Callback when an inventory item is successfully updated\n   */\n  onUpdateSuccess?: (item: In..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 64,
          "block": "/**\n   * Callback when an inventory item is successfully updated\n   */\n  onUpdateSuccess?: (item: In..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 65,
          "block": "/**\n   * Callback when an inventory item is successfully updated\n   */\n  onUpdateSuccess?: (item: In..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 66,
          "block": "* Callback when an inventory item is successfully updated\n   */\n  onUpdateSuccess?: (item: Inventory..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 66,
          "block": "* Callback when an inventory item is successfully updated\n   */\n  onUpdateSuccess?: (item: Inventory..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 67,
          "block": "*/\n  onUpdateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 67,
          "block": "*/\n  onUpdateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 68,
          "block": "onUpdateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is succ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 68,
          "block": "onUpdateSuccess?: (item: InventoryItem) => void;\n\n  /**\n   * Callback when an inventory item is succ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 69,
          "block": "/**\n   * Callback when an inventory item is successfully deleted\n   * @param id The ID of the delete..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 69,
          "block": "/**\n   * Callback when an inventory item is successfully deleted\n   * @param id The ID of the delete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 70,
          "block": "/**\n   * Callback when an inventory item is successfully deleted\n   * @param id The ID of the delete..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 70,
          "block": "/**\n   * Callback when an inventory item is successfully deleted\n   * @param id The ID of the delete..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 71,
          "block": "* Callback when an inventory item is successfully deleted\n   * @param id The ID of the deleted item\n..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 71,
          "block": "* Callback when an inventory item is successfully deleted\n   * @param id The ID of the deleted item\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 72,
          "block": "* @param id The ID of the deleted item\n   * @param item The deleted item entity\n   */\n  onDeleteSucc..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 72,
          "block": "* @param id The ID of the deleted item\n   * @param item The deleted item entity\n   */\n  onDeleteSucc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 73,
          "block": "* @param item The deleted item entity\n   */\n  onDeleteSuccess?: (id: string | number, item?: Invento..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 73,
          "block": "* @param item The deleted item entity\n   */\n  onDeleteSuccess?: (id: string | number, item?: Invento..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 75,
          "block": "onDeleteSuccess?: (id: string | number, item?: InventoryItem) => void;\n}\n\n/**\n * Custom hook for man..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 75,
          "block": "onDeleteSuccess?: (id: string | number, item?: InventoryItem) => void;\n}\n\n/**\n * Custom hook for man..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 77,
          "block": "/**\n * Custom hook for managing inventory dialog state and operations\n *\n * This hook demonstrates h..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 77,
          "block": "/**\n * Custom hook for managing inventory dialog state and operations\n *\n * This hook demonstrates h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 78,
          "block": "/**\n * Custom hook for managing inventory dialog state and operations\n *\n * This hook demonstrates h..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 78,
          "block": "/**\n * Custom hook for managing inventory dialog state and operations\n *\n * This hook demonstrates h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 79,
          "block": "* Custom hook for managing inventory dialog state and operations\n *\n * This hook demonstrates how to..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 79,
          "block": "* Custom hook for managing inventory dialog state and operations\n *\n * This hook demonstrates how to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 80,
          "block": "*\n * This hook demonstrates how to build feature-specific functionality on top\n * of the base entity..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 80,
          "block": "*\n * This hook demonstrates how to build feature-specific functionality on top\n * of the base entity..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 81,
          "block": "* This hook demonstrates how to build feature-specific functionality on top\n * of the base entity di..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 81,
          "block": "* This hook demonstrates how to build feature-specific functionality on top\n * of the base entity di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 82,
          "block": "* of the base entity dialog hook.\n */\nexport function useInventoryDialog(options?: UseInventoryDialo..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 82,
          "block": "* of the base entity dialog hook.\n */\nexport function useInventoryDialog(options?: UseInventoryDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 83,
          "block": "*/\nexport function useInventoryDialog(options?: UseInventoryDialogOptions) {\n  // Use the shared toa..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 83,
          "block": "*/\nexport function useInventoryDialog(options?: UseInventoryDialogOptions) {\n  // Use the shared toa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 84,
          "block": "export function useInventoryDialog(options?: UseInventoryDialogOptions) {\n  // Use the shared toast ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 84,
          "block": "export function useInventoryDialog(options?: UseInventoryDialogOptions) {\n  // Use the shared toast ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 85,
          "block": "// Use the shared toast hook\n  const { success, error: showError } = useToast();\n\n  // Use the base ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 85,
          "block": "// Use the shared toast hook\n  const { success, error: showError } = useToast();\n\n  // Use the base ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 86,
          "block": "const { success, error: showError } = useToast();\n\n  // Use the base entity dialog hook for edit/cre..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 86,
          "block": "const { success, error: showError } = useToast();\n\n  // Use the base entity dialog hook for edit/cre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 87,
          "block": "// Use the base entity dialog hook for edit/create operations\n  const entityDialog = useEntityDialog..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 87,
          "block": "// Use the base entity dialog hook for edit/create operations\n  const entityDialog = useEntityDialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 88,
          "block": "// Use the base entity dialog hook for edit/create operations\n  const entityDialog = useEntityDialog..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 88,
          "block": "// Use the base entity dialog hook for edit/create operations\n  const entityDialog = useEntityDialog..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 89,
          "block": "const entityDialog = useEntityDialog<InventoryItem>({\n    entityName: \"inventory item\",\n    onCreate..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 89,
          "block": "const entityDialog = useEntityDialog<InventoryItem>({\n    entityName: \"inventory item\",\n    onCreate..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 90,
          "block": "entityName: \"inventory item\",\n    onCreateSuccess: options?.onCreateSuccess,\n    onUpdateSuccess: op..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 90,
          "block": "entityName: \"inventory item\",\n    onCreateSuccess: options?.onCreateSuccess,\n    onUpdateSuccess: op..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 91,
          "block": "onCreateSuccess: options?.onCreateSuccess,\n    onUpdateSuccess: options?.onUpdateSuccess,\n    onDele..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 91,
          "block": "onCreateSuccess: options?.onCreateSuccess,\n    onUpdateSuccess: options?.onUpdateSuccess,\n    onDele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 92,
          "block": "onUpdateSuccess: options?.onUpdateSuccess,\n    onDeleteSuccess: options?.onDeleteSuccess,\n  });\n\n  /..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 92,
          "block": "onUpdateSuccess: options?.onUpdateSuccess,\n    onDeleteSuccess: options?.onDeleteSuccess,\n  });\n\n  /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 93,
          "block": "onDeleteSuccess: options?.onDeleteSuccess,\n  });\n\n  // Use React Query for cache management\n  const ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 93,
          "block": "onDeleteSuccess: options?.onDeleteSuccess,\n  });\n\n  // Use React Query for cache management\n  const ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 96,
          "block": "// Use React Query for cache management\n  const queryClient = useQueryClient();\n\n  /**\n   * Handle f..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 96,
          "block": "// Use React Query for cache management\n  const queryClient = useQueryClient();\n\n  /**\n   * Handle f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 97,
          "block": "const queryClient = useQueryClient();\n\n  /**\n   * Handle form submission for inventory item creation..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 97,
          "block": "const queryClient = useQueryClient();\n\n  /**\n   * Handle form submission for inventory item creation..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 98,
          "block": "/**\n   * Handle form submission for inventory item creation or update\n   */\n  const handleSubmit = u..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 98,
          "block": "/**\n   * Handle form submission for inventory item creation or update\n   */\n  const handleSubmit = u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 99,
          "block": "/**\n   * Handle form submission for inventory item creation or update\n   */\n  const handleSubmit = u..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 99,
          "block": "/**\n   * Handle form submission for inventory item creation or update\n   */\n  const handleSubmit = u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 100,
          "block": "* Handle form submission for inventory item creation or update\n   */\n  const handleSubmit = useCallb..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 100,
          "block": "* Handle form submission for inventory item creation or update\n   */\n  const handleSubmit = useCallb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 101,
          "block": "*/\n  const handleSubmit = useCallback(\n    async (formData: InventoryItemFormData) => {\n      try {\n..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 101,
          "block": "*/\n  const handleSubmit = useCallback(\n    async (formData: InventoryItemFormData) => {\n      try {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 102,
          "block": "const handleSubmit = useCallback(\n    async (formData: InventoryItemFormData) => {\n      try {\n     ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 102,
          "block": "const handleSubmit = useCallback(\n    async (formData: InventoryItemFormData) => {\n      try {\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 103,
          "block": "async (formData: InventoryItemFormData) => {\n      try {\n        entityDialog.setIsSubmitting(true);..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 103,
          "block": "async (formData: InventoryItemFormData) => {\n      try {\n        entityDialog.setIsSubmitting(true);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 104,
          "block": "try {\n        entityDialog.setIsSubmitting(true);\n\n        if (entityDialog.entity) {\n          // U..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 104,
          "block": "try {\n        entityDialog.setIsSubmitting(true);\n\n        if (entityDialog.entity) {\n          // U..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 105,
          "block": "entityDialog.setIsSubmitting(true);\n\n        if (entityDialog.entity) {\n          // Update existing..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 105,
          "block": "entityDialog.setIsSubmitting(true);\n\n        if (entityDialog.entity) {\n          // Update existing..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 106,
          "block": "if (entityDialog.entity) {\n          // Update existing inventory item\n          const updatedItem =..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 106,
          "block": "if (entityDialog.entity) {\n          // Update existing inventory item\n          const updatedItem =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 107,
          "block": "if (entityDialog.entity) {\n          // Update existing inventory item\n          const updatedItem =..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 107,
          "block": "if (entityDialog.entity) {\n          // Update existing inventory item\n          const updatedItem =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 108,
          "block": "// Update existing inventory item\n          const updatedItem = await updateInventoryItem(\n         ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 108,
          "block": "// Update existing inventory item\n          const updatedItem = await updateInventoryItem(\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 109,
          "block": "const updatedItem = await updateInventoryItem(\n            entityDialog.entity.id,\n            formD..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 109,
          "block": "const updatedItem = await updateInventoryItem(\n            entityDialog.entity.id,\n            formD..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 112,
          "block": ");\n\n          success({\n            title: \"Inventory Updated\",\n            description: `Successful..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 112,
          "block": ");\n\n          success({\n            title: \"Inventory Updated\",\n            description: `Successful..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 113,
          "block": "success({\n            title: \"Inventory Updated\",\n            description: `Successfully updated ${u..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 114,
          "block": "success({\n            title: \"Inventory Updated\",\n            description: `Successfully updated ${u..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 113,
          "block": "success({\n            title: \"Inventory Updated\",\n            description: `Successfully updated ${u..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 114,
          "block": "success({\n            title: \"Inventory Updated\",\n            description: `Successfully updated ${u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 115,
          "block": "title: \"Inventory Updated\",\n            description: `Successfully updated ${updatedItem.name}.`,\n  ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 115,
          "block": "title: \"Inventory Updated\",\n            description: `Successfully updated ${updatedItem.name}.`,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 116,
          "block": "description: `Successfully updated ${updatedItem.name}.`,\n          });\n\n          // Invalidate rel..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 116,
          "block": "description: `Successfully updated ${updatedItem.name}.`,\n          });\n\n          // Invalidate rel..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 117,
          "block": "});\n\n          // Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 131,
          "block": "});\n\n          // Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 117,
          "block": "});\n\n          // Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 131,
          "block": "});\n\n          // Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 118,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 118,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 119,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 119,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 120,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n          // Notify parent components o..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 120,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n          // Notify parent components o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 121,
          "block": "// Notify parent components of the update\n          entityDialog.handleUpdateSuccess(updatedItem);\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 121,
          "block": "// Notify parent components of the update\n          entityDialog.handleUpdateSuccess(updatedItem);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 122,
          "block": "// Notify parent components of the update\n          entityDialog.handleUpdateSuccess(updatedItem);\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 122,
          "block": "// Notify parent components of the update\n          entityDialog.handleUpdateSuccess(updatedItem);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 123,
          "block": "entityDialog.handleUpdateSuccess(updatedItem);\n        } else {\n          // Create new inventory it..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 123,
          "block": "entityDialog.handleUpdateSuccess(updatedItem);\n        } else {\n          // Create new inventory it..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 124,
          "block": "} else {\n          // Create new inventory item\n          const newItem = await createInventoryItem(..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 124,
          "block": "} else {\n          // Create new inventory item\n          const newItem = await createInventoryItem(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 125,
          "block": "// Create new inventory item\n          const newItem = await createInventoryItem(formData);\n\n       ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 125,
          "block": "// Create new inventory item\n          const newItem = await createInventoryItem(formData);\n\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 126,
          "block": "const newItem = await createInventoryItem(formData);\n\n          success({\n            title: \"Invent..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 126,
          "block": "const newItem = await createInventoryItem(formData);\n\n          success({\n            title: \"Invent..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 127,
          "block": "success({\n            title: \"Inventory Item Added\",\n            description: `Successfully added ${..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 128,
          "block": "success({\n            title: \"Inventory Item Added\",\n            description: `Successfully added ${..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 127,
          "block": "success({\n            title: \"Inventory Item Added\",\n            description: `Successfully added ${..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 128,
          "block": "success({\n            title: \"Inventory Item Added\",\n            description: `Successfully added ${..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 129,
          "block": "title: \"Inventory Item Added\",\n            description: `Successfully added ${newItem.name} to inven..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 129,
          "block": "title: \"Inventory Item Added\",\n            description: `Successfully added ${newItem.name} to inven..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 130,
          "block": "description: `Successfully added ${newItem.name} to inventory.`,\n          });\n\n          // Invalid..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 130,
          "block": "description: `Successfully added ${newItem.name} to inventory.`,\n          });\n\n          // Invalid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 132,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 132,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 133,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 133,
          "block": "// Invalidate relevant queries\n          queryClient.invalidateQueries({ queryKey: [\"inventory\"] });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 134,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n          // Notify parent components o..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 134,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n          // Notify parent components o..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 135,
          "block": "// Notify parent components of the creation\n          entityDialog.handleCreateSuccess(newItem);\n   ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 135,
          "block": "// Notify parent components of the creation\n          entityDialog.handleCreateSuccess(newItem);\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 136,
          "block": "// Notify parent components of the creation\n          entityDialog.handleCreateSuccess(newItem);\n   ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 136,
          "block": "// Notify parent components of the creation\n          entityDialog.handleCreateSuccess(newItem);\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 137,
          "block": "entityDialog.handleCreateSuccess(newItem);\n        }\n      } catch (error) {\n        console.error(\"..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 137,
          "block": "entityDialog.handleCreateSuccess(newItem);\n        }\n      } catch (error) {\n        console.error(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 138,
          "block": "}\n      } catch (error) {\n        console.error(\"Error submitting inventory data:\", error);\n        ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 138,
          "block": "}\n      } catch (error) {\n        console.error(\"Error submitting inventory data:\", error);\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 139,
          "block": "} catch (error) {\n        console.error(\"Error submitting inventory data:\", error);\n        showErro..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 139,
          "block": "} catch (error) {\n        console.error(\"Error submitting inventory data:\", error);\n        showErro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 140,
          "block": "console.error(\"Error submitting inventory data:\", error);\n        showError({\n          title: \"Erro..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 140,
          "block": "console.error(\"Error submitting inventory data:\", error);\n        showError({\n          title: \"Erro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 141,
          "block": "showError({\n          title: \"Error\",\n          description: \"Failed to save inventory item. Please ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 141,
          "block": "showError({\n          title: \"Error\",\n          description: \"Failed to save inventory item. Please ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 142,
          "block": "title: \"Error\",\n          description: \"Failed to save inventory item. Please try again.\",\n        }..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 142,
          "block": "title: \"Error\",\n          description: \"Failed to save inventory item. Please try again.\",\n        }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 143,
          "block": "description: \"Failed to save inventory item. Please try again.\",\n        });\n\n        // Handle the ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 143,
          "block": "description: \"Failed to save inventory item. Please try again.\",\n        });\n\n        // Handle the ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 144,
          "block": "});\n\n        // Handle the error with the base hook\n        entityDialog.handleError(error as Error)..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 220,
          "block": "});\n\n        // Handle the error with the base hook\n        entityDialog.handleError(error as Error)..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 144,
          "block": "});\n\n        // Handle the error with the base hook\n        entityDialog.handleError(error as Error)..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 220,
          "block": "});\n\n        // Handle the error with the base hook\n        entityDialog.handleError(error as Error)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 145,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 221,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 145,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 221,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 146,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 222,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 146,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 222,
          "block": "// Handle the error with the base hook\n        entityDialog.handleError(error as Error);\n      } fin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 147,
          "block": "entityDialog.handleError(error as Error);\n      } finally {\n        entityDialog.setIsSubmitting(fal..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 223,
          "block": "entityDialog.handleError(error as Error);\n      } finally {\n        entityDialog.setIsSubmitting(fal..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 147,
          "block": "entityDialog.handleError(error as Error);\n      } finally {\n        entityDialog.setIsSubmitting(fal..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 223,
          "block": "entityDialog.handleError(error as Error);\n      } finally {\n        entityDialog.setIsSubmitting(fal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 148,
          "block": "} finally {\n        entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 224,
          "block": "} finally {\n        entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 148,
          "block": "} finally {\n        entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 224,
          "block": "} finally {\n        entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 149,
          "block": "entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, showError, queryClie..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 225,
          "block": "entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, showError, queryClie..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 149,
          "block": "entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, showError, queryClie..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 225,
          "block": "entityDialog.setIsSubmitting(false);\n      }\n    },\n    [entityDialog, success, showError, queryClie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 155,
          "block": "/**\n   * Handle inventory item deletion\n   */\n  const handleDelete = useCallback(async () => {\n    i..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 155,
          "block": "/**\n   * Handle inventory item deletion\n   */\n  const handleDelete = useCallback(async () => {\n    i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 156,
          "block": "* Handle inventory item deletion\n   */\n  const handleDelete = useCallback(async () => {\n    if (!ent..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 156,
          "block": "* Handle inventory item deletion\n   */\n  const handleDelete = useCallback(async () => {\n    if (!ent..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 158,
          "block": "const handleDelete = useCallback(async () => {\n    if (!entityDialog.entity) return;\n\n    try {\n    ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 158,
          "block": "const handleDelete = useCallback(async () => {\n    if (!entityDialog.entity) return;\n\n    try {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 160,
          "block": "try {\n      entityDialog.setIsSubmitting(true);\n\n      await deleteInventoryItem(entityDialog.entity..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 161,
          "block": "try {\n      entityDialog.setIsSubmitting(true);\n\n      await deleteInventoryItem(entityDialog.entity..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 160,
          "block": "try {\n      entityDialog.setIsSubmitting(true);\n\n      await deleteInventoryItem(entityDialog.entity..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 161,
          "block": "try {\n      entityDialog.setIsSubmitting(true);\n\n      await deleteInventoryItem(entityDialog.entity..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 162,
          "block": "entityDialog.setIsSubmitting(true);\n\n      await deleteInventoryItem(entityDialog.entity.id);\n\n     ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 162,
          "block": "entityDialog.setIsSubmitting(true);\n\n      await deleteInventoryItem(entityDialog.entity.id);\n\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 164,
          "block": "await deleteInventoryItem(entityDialog.entity.id);\n\n      success({\n        title: \"Item Removed\",\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 164,
          "block": "await deleteInventoryItem(entityDialog.entity.id);\n\n      success({\n        title: \"Item Removed\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 165,
          "block": "success({\n        title: \"Item Removed\",\n        description: `Successfully removed ${entityDialog.e..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 166,
          "block": "success({\n        title: \"Item Removed\",\n        description: `Successfully removed ${entityDialog.e..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 165,
          "block": "success({\n        title: \"Item Removed\",\n        description: `Successfully removed ${entityDialog.e..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 166,
          "block": "success({\n        title: \"Item Removed\",\n        description: `Successfully removed ${entityDialog.e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 167,
          "block": "title: \"Item Removed\",\n        description: `Successfully removed ${entityDialog.entity.name} from i..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 167,
          "block": "title: \"Item Removed\",\n        description: `Successfully removed ${entityDialog.entity.name} from i..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 168,
          "block": "description: `Successfully removed ${entityDialog.entity.name} from inventory.`,\n      });\n\n      //..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 168,
          "block": "description: `Successfully removed ${entityDialog.entity.name} from inventory.`,\n      });\n\n      //..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 169,
          "block": "});\n\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [\"inventor..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 169,
          "block": "});\n\n      // Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [\"inventor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 170,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n  ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 170,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 171,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n  ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 171,
          "block": "// Invalidate relevant queries\n      queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 172,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n      // Use the base hook's handleDele..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 172,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n      // Use the base hook's handleDele..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 173,
          "block": "// Use the base hook's handleDeleteSuccess method\n      entityDialog.handleDeleteSuccess(entityDialo..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 173,
          "block": "// Use the base hook's handleDeleteSuccess method\n      entityDialog.handleDeleteSuccess(entityDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 174,
          "block": "// Use the base hook's handleDeleteSuccess method\n      entityDialog.handleDeleteSuccess(entityDialo..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 174,
          "block": "// Use the base hook's handleDeleteSuccess method\n      entityDialog.handleDeleteSuccess(entityDialo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 175,
          "block": "entityDialog.handleDeleteSuccess(entityDialog.entity.id);\n    } catch (error) {\n      console.error(..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 175,
          "block": "entityDialog.handleDeleteSuccess(entityDialog.entity.id);\n    } catch (error) {\n      console.error(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 176,
          "block": "} catch (error) {\n      console.error(\"Error deleting inventory item:\", error);\n      showError({\n  ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 176,
          "block": "} catch (error) {\n      console.error(\"Error deleting inventory item:\", error);\n      showError({\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 177,
          "block": "console.error(\"Error deleting inventory item:\", error);\n      showError({\n        title: \"Error\",\n  ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 177,
          "block": "console.error(\"Error deleting inventory item:\", error);\n      showError({\n        title: \"Error\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 178,
          "block": "showError({\n        title: \"Error\",\n        description: \"Failed to delete inventory item. Please tr..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 178,
          "block": "showError({\n        title: \"Error\",\n        description: \"Failed to delete inventory item. Please tr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 179,
          "block": "title: \"Error\",\n        description: \"Failed to delete inventory item. Please try again.\",\n      });..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 179,
          "block": "title: \"Error\",\n        description: \"Failed to delete inventory item. Please try again.\",\n      });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 180,
          "block": "description: \"Failed to delete inventory item. Please try again.\",\n      });\n\n      // Handle the er..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 180,
          "block": "description: \"Failed to delete inventory item. Please try again.\",\n      });\n\n      // Handle the er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 181,
          "block": "});\n\n      // Handle the error with the base hook\n      entityDialog.handleError(error as Error);\n  ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 181,
          "block": "});\n\n      // Handle the error with the base hook\n      entityDialog.handleError(error as Error);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 182,
          "block": "// Handle the error with the base hook\n      entityDialog.handleError(error as Error);\n    } finally..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 182,
          "block": "// Handle the error with the base hook\n      entityDialog.handleError(error as Error);\n    } finally..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 183,
          "block": "// Handle the error with the base hook\n      entityDialog.handleError(error as Error);\n    } finally..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 183,
          "block": "// Handle the error with the base hook\n      entityDialog.handleError(error as Error);\n    } finally..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 184,
          "block": "entityDialog.handleError(error as Error);\n    } finally {\n      entityDialog.setIsSubmitting(false);..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 184,
          "block": "entityDialog.handleError(error as Error);\n    } finally {\n      entityDialog.setIsSubmitting(false);..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 185,
          "block": "} finally {\n      entityDialog.setIsSubmitting(false);\n    }\n  }, [entityDialog, success, showError,..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 185,
          "block": "} finally {\n      entityDialog.setIsSubmitting(false);\n    }\n  }, [entityDialog, success, showError,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 186,
          "block": "entityDialog.setIsSubmitting(false);\n    }\n  }, [entityDialog, success, showError, queryClient]);\n\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 186,
          "block": "entityDialog.setIsSubmitting(false);\n    }\n  }, [entityDialog, success, showError, queryClient]);\n\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 187,
          "block": "}\n  }, [entityDialog, success, showError, queryClient]);\n\n  /**\n   * Special function to restock an ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 187,
          "block": "}\n  }, [entityDialog, success, showError, queryClient]);\n\n  /**\n   * Special function to restock an ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 188,
          "block": "}, [entityDialog, success, showError, queryClient]);\n\n  /**\n   * Special function to restock an inve..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 188,
          "block": "}, [entityDialog, success, showError, queryClient]);\n\n  /**\n   * Special function to restock an inve..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 190,
          "block": "/**\n   * Special function to restock an inventory item\n   */\n  const handleRestock = useCallback(\n  ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 190,
          "block": "/**\n   * Special function to restock an inventory item\n   */\n  const handleRestock = useCallback(\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 191,
          "block": "* Special function to restock an inventory item\n   */\n  const handleRestock = useCallback(\n    async..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 191,
          "block": "* Special function to restock an inventory item\n   */\n  const handleRestock = useCallback(\n    async..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 192,
          "block": "*/\n  const handleRestock = useCallback(\n    async (additionalQuantity: number) => {\n      if (!entit..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 192,
          "block": "*/\n  const handleRestock = useCallback(\n    async (additionalQuantity: number) => {\n      if (!entit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 193,
          "block": "const handleRestock = useCallback(\n    async (additionalQuantity: number) => {\n      if (!entityDial..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 193,
          "block": "const handleRestock = useCallback(\n    async (additionalQuantity: number) => {\n      if (!entityDial..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 194,
          "block": "async (additionalQuantity: number) => {\n      if (!entityDialog.entity) return;\n\n      try {\n       ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 194,
          "block": "async (additionalQuantity: number) => {\n      if (!entityDialog.entity) return;\n\n      try {\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 196,
          "block": "try {\n        entityDialog.setIsSubmitting(true);\n\n        const updatedItem = await updateInventory..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 196,
          "block": "try {\n        entityDialog.setIsSubmitting(true);\n\n        const updatedItem = await updateInventory..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 197,
          "block": "try {\n        entityDialog.setIsSubmitting(true);\n\n        const updatedItem = await updateInventory..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 197,
          "block": "try {\n        entityDialog.setIsSubmitting(true);\n\n        const updatedItem = await updateInventory..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 198,
          "block": "entityDialog.setIsSubmitting(true);\n\n        const updatedItem = await updateInventoryItem(entityDia..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 198,
          "block": "entityDialog.setIsSubmitting(true);\n\n        const updatedItem = await updateInventoryItem(entityDia..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 199,
          "block": "const updatedItem = await updateInventoryItem(entityDialog.entity.id, {\n          ...entityDialog.en..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 200,
          "block": "const updatedItem = await updateInventoryItem(entityDialog.entity.id, {\n          ...entityDialog.en..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 199,
          "block": "const updatedItem = await updateInventoryItem(entityDialog.entity.id, {\n          ...entityDialog.en..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 200,
          "block": "const updatedItem = await updateInventoryItem(entityDialog.entity.id, {\n          ...entityDialog.en..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 201,
          "block": "...entityDialog.entity,\n          quantity: entityDialog.entity.quantity + additionalQuantity,\n     ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 201,
          "block": "...entityDialog.entity,\n          quantity: entityDialog.entity.quantity + additionalQuantity,\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 202,
          "block": "quantity: entityDialog.entity.quantity + additionalQuantity,\n        });\n\n        success({\n        ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 202,
          "block": "quantity: entityDialog.entity.quantity + additionalQuantity,\n        });\n\n        success({\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 203,
          "block": "});\n\n        success({\n          title: \"Inventory Restocked\",\n          description: `Successfully ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 203,
          "block": "});\n\n        success({\n          title: \"Inventory Restocked\",\n          description: `Successfully ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 204,
          "block": "success({\n          title: \"Inventory Restocked\",\n          description: `Successfully added ${addit..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 205,
          "block": "success({\n          title: \"Inventory Restocked\",\n          description: `Successfully added ${addit..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 204,
          "block": "success({\n          title: \"Inventory Restocked\",\n          description: `Successfully added ${addit..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 205,
          "block": "success({\n          title: \"Inventory Restocked\",\n          description: `Successfully added ${addit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 206,
          "block": "title: \"Inventory Restocked\",\n          description: `Successfully added ${additionalQuantity} units..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 206,
          "block": "title: \"Inventory Restocked\",\n          description: `Successfully added ${additionalQuantity} units..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 207,
          "block": "description: `Successfully added ${additionalQuantity} units to ${updatedItem.name}.`,\n        });\n\n..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 207,
          "block": "description: `Successfully added ${additionalQuantity} units to ${updatedItem.name}.`,\n        });\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 208,
          "block": "});\n\n        // Invalidate relevant queries\n        queryClient.invalidateQueries({ queryKey: [\"inve..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 208,
          "block": "});\n\n        // Invalidate relevant queries\n        queryClient.invalidateQueries({ queryKey: [\"inve..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 209,
          "block": "// Invalidate relevant queries\n        queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 209,
          "block": "// Invalidate relevant queries\n        queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 210,
          "block": "// Invalidate relevant queries\n        queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 210,
          "block": "// Invalidate relevant queries\n        queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 211,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n        // Notify parent components of ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 211,
          "block": "queryClient.invalidateQueries({ queryKey: [\"inventory\"] });\n\n        // Notify parent components of ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 212,
          "block": "// Notify parent components of the update\n        entityDialog.handleUpdateSuccess(updatedItem);\n   ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 212,
          "block": "// Notify parent components of the update\n        entityDialog.handleUpdateSuccess(updatedItem);\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 213,
          "block": "// Notify parent components of the update\n        entityDialog.handleUpdateSuccess(updatedItem);\n   ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 213,
          "block": "// Notify parent components of the update\n        entityDialog.handleUpdateSuccess(updatedItem);\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 214,
          "block": "entityDialog.handleUpdateSuccess(updatedItem);\n      } catch (error) {\n        console.error(\"Error ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 214,
          "block": "entityDialog.handleUpdateSuccess(updatedItem);\n      } catch (error) {\n        console.error(\"Error ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 215,
          "block": "} catch (error) {\n        console.error(\"Error restocking inventory:\", error);\n        showError({\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 215,
          "block": "} catch (error) {\n        console.error(\"Error restocking inventory:\", error);\n        showError({\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 216,
          "block": "console.error(\"Error restocking inventory:\", error);\n        showError({\n          title: \"Error\",\n ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 216,
          "block": "console.error(\"Error restocking inventory:\", error);\n        showError({\n          title: \"Error\",\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 217,
          "block": "showError({\n          title: \"Error\",\n          description: \"Failed to restock inventory. Please tr..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 217,
          "block": "showError({\n          title: \"Error\",\n          description: \"Failed to restock inventory. Please tr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 218,
          "block": "title: \"Error\",\n          description: \"Failed to restock inventory. Please try again.\",\n        });..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 218,
          "block": "title: \"Error\",\n          description: \"Failed to restock inventory. Please try again.\",\n        });..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 219,
          "block": "description: \"Failed to restock inventory. Please try again.\",\n        });\n\n        // Handle the er..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 219,
          "block": "description: \"Failed to restock inventory. Please try again.\",\n        });\n\n        // Handle the er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 228,
          "block": "[entityDialog, success, showError, queryClient]\n  );\n\n  return {\n    // Re-export everything from th..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 228,
          "block": "[entityDialog, success, showError, queryClient]\n  );\n\n  return {\n    // Re-export everything from th..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 231,
          "block": "return {\n    // Re-export everything from the entity dialog\n    ...entityDialog,\n\n    // Additional ..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 231,
          "block": "return {\n    // Re-export everything from the entity dialog\n    ...entityDialog,\n\n    // Additional ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useInventoryDialog.ts",
          "startLine": 232,
          "block": "// Re-export everything from the entity dialog\n    ...entityDialog,\n\n    // Additional methods\n    h..."
        },
        {
          "file": "src\\features\\inventory\\hooks\\useInventoryDialog.ts",
          "startLine": 232,
          "block": "// Re-export everything from the entity dialog\n    ...entityDialog,\n\n    // Additional methods\n    h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\usePetrolProviders.ts",
          "startLine": 25,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"petrol-providers\"] });\n    },\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\usePetrolProviders.ts",
          "startLine": 37,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"petrol-providers\"] });\n    },\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\usePetrolProviders.ts",
          "startLine": 48,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"petrol-providers\"] });\n    },\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\useTankDialog.ts",
          "startLine": 93,
          "block": "toast({\n        title: \"Tank added successfully\",\n        description: \"The new fuel tank has been a..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\useTankDialog.ts",
          "startLine": 94,
          "block": "toast({\n        title: \"Tank added successfully\",\n        description: \"The new fuel tank has been a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 49,
          "block": "const mockTanks = [\n        {\n          id: \"1\",\n          name: \"Tank 1\",\n          fuel_type_id: \"..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 344,
          "block": "const mockTanks = [\n        {\n          id: \"1\",\n          name: \"Tank 1\",\n          fuel_type_id: \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 50,
          "block": "{\n          id: \"1\",\n          name: \"Tank 1\",\n          fuel_type_id: \"ft1\",\n          capacity: 10..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 345,
          "block": "{\n          id: \"1\",\n          name: \"Tank 1\",\n          fuel_type_id: \"ft1\",\n          capacity: 10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 51,
          "block": "id: \"1\",\n          name: \"Tank 1\",\n          fuel_type_id: \"ft1\",\n          capacity: 1000,\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 346,
          "block": "id: \"1\",\n          name: \"Tank 1\",\n          fuel_type_id: \"ft1\",\n          capacity: 1000,\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 52,
          "block": "name: \"Tank 1\",\n          fuel_type_id: \"ft1\",\n          capacity: 1000,\n          current_level: 70..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 347,
          "block": "name: \"Tank 1\",\n          fuel_type_id: \"ft1\",\n          capacity: 1000,\n          current_level: 70..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 53,
          "block": "fuel_type_id: \"ft1\",\n          capacity: 1000,\n          current_level: 700,\n          is_active: tr..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 348,
          "block": "fuel_type_id: \"ft1\",\n          capacity: 1000,\n          current_level: 700,\n          is_active: tr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 54,
          "block": "capacity: 1000,\n          current_level: 700,\n          is_active: true,\n          created_at: \"2023..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 349,
          "block": "capacity: 1000,\n          current_level: 700,\n          is_active: true,\n          created_at: \"2023..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 55,
          "block": "current_level: 700,\n          is_active: true,\n          created_at: \"2023-01-01\",\n          updated..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 350,
          "block": "current_level: 700,\n          is_active: true,\n          created_at: \"2023-01-01\",\n          updated..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 56,
          "block": "is_active: true,\n          created_at: \"2023-01-01\",\n          updated_at: \"2023-01-01\",\n        },\n..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 351,
          "block": "is_active: true,\n          created_at: \"2023-01-01\",\n          updated_at: \"2023-01-01\",\n        },\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 60,
          "block": "{\n          id: \"2\",\n          name: \"Tank 2\",\n          fuel_type_id: \"ft2\",\n          capacity: 20..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 355,
          "block": "{\n          id: \"2\",\n          name: \"Tank 2\",\n          fuel_type_id: \"ft2\",\n          capacity: 20..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 61,
          "block": "id: \"2\",\n          name: \"Tank 2\",\n          fuel_type_id: \"ft2\",\n          capacity: 2000,\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 356,
          "block": "id: \"2\",\n          name: \"Tank 2\",\n          fuel_type_id: \"ft2\",\n          capacity: 2000,\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 62,
          "block": "name: \"Tank 2\",\n          fuel_type_id: \"ft2\",\n          capacity: 2000,\n          current_level: 15..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 357,
          "block": "name: \"Tank 2\",\n          fuel_type_id: \"ft2\",\n          capacity: 2000,\n          current_level: 15..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 63,
          "block": "fuel_type_id: \"ft2\",\n          capacity: 2000,\n          current_level: 1500,\n          is_active: t..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 358,
          "block": "fuel_type_id: \"ft2\",\n          capacity: 2000,\n          current_level: 1500,\n          is_active: t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 64,
          "block": "capacity: 2000,\n          current_level: 1500,\n          is_active: true,\n          created_at: \"202..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 359,
          "block": "capacity: 2000,\n          current_level: 1500,\n          is_active: true,\n          created_at: \"202..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 65,
          "block": "current_level: 1500,\n          is_active: true,\n          created_at: \"2023-01-02\",\n          update..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 360,
          "block": "current_level: 1500,\n          is_active: true,\n          created_at: \"2023-01-02\",\n          update..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 66,
          "block": "is_active: true,\n          created_at: \"2023-01-02\",\n          updated_at: \"2023-01-02\",\n        },\n..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 361,
          "block": "is_active: true,\n          created_at: \"2023-01-02\",\n          updated_at: \"2023-01-02\",\n        },\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 87,
          "block": "it(\"should handle tank fetch error\", async () => {\n      // Use shared error test setup\n      const ..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 88,
          "block": "it(\"should handle tank fetch error\", async () => {\n      // Use shared error test setup\n      const ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 169,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n      mockFetch.mockResolvedValue(mockLevelCh..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 170,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n      mockFetch.mockResolvedValue(mockLevelCh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 180,
          "block": "expect(result.current.data).toEqual(mockLevelChanges);\n      expect(getTankLevelChanges).toHaveBeenC..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 181,
          "block": "expect(result.current.data).toEqual(mockLevelChanges);\n      expect(getTankLevelChanges).toHaveBeenC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 193,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n      mockFetch.mockResolvedValue(mockFuelTyp..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 194,
          "block": "const { renderTestHook, mockFetch } = setupHookTest();\n      mockFetch.mockResolvedValue(mockFuelTyp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 204,
          "block": "expect(result.current.data).toEqual(mockFuelTypes);\n      expect(getFuelTypes).toHaveBeenCalledTimes..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 205,
          "block": "expect(result.current.data).toEqual(mockFuelTypes);\n      expect(getFuelTypes).toHaveBeenCalledTimes..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 236,
          "block": "await waitFor(() => {\n        expect(result.current.createTank.isSuccess).toBe(true);\n        expect..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 237,
          "block": "await waitFor(() => {\n        expect(result.current.createTank.isSuccess).toBe(true);\n        expect..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 262,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n      mockMutate.mockResolvedValue(updat..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 263,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n      mockMutate.mockResolvedValue(updat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 271,
          "block": "await waitFor(() => {\n        expect(result.current.updateTank.isSuccess).toBe(true);\n        expect..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 272,
          "block": "await waitFor(() => {\n        expect(result.current.updateTank.isSuccess).toBe(true);\n        expect..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 282,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n      mockMutate.mockResolvedValue(true)..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 283,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n      mockMutate.mockResolvedValue(true)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 291,
          "block": "await waitFor(() => {\n        expect(result.current.deleteTank.isSuccess).toBe(true);\n        expect..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 292,
          "block": "await waitFor(() => {\n        expect(result.current.deleteTank.isSuccess).toBe(true);\n        expect..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 319,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n      mockMutate.mockResolvedValue(level..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 320,
          "block": "const { renderTestHook, mockMutate } = setupMutationTest();\n      mockMutate.mockResolvedValue(level..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 328,
          "block": "await waitFor(() => {\n        expect(result.current.adjustTankLevel.isSuccess).toBe(true);\n        e..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 329,
          "block": "await waitFor(() => {\n        expect(result.current.adjustTankLevel.isSuccess).toBe(true);\n        e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 366,
          "block": "const mockFuelTypes = [\n        { id: \"ft1\", name: \"Diesel\" },\n        { id: \"ft2\", name: \"Petrol\" }..."
        },
        {
          "file": "src\\features\\fuel-management\\hooks\\__tests__\\useTanks.test.ts",
          "startLine": 367,
          "block": "const mockFuelTypes = [\n        { id: \"ft1\", name: \"Diesel\" },\n        { id: \"ft2\", name: \"Petrol\" }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 18,
          "block": "title: string;\n  description: string;\n  path: string;\n  color: string;\n  icon: React.ComponentType<a..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 18,
          "block": "title: string;\n  description: string;\n  path: string;\n  color: string;\n  icon: React.ComponentType<a..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 18,
          "block": "title: string;\n  description: string;\n  path: string;\n  color: string;\n  icon: React.ComponentType<a..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 18,
          "block": "title: string;\n  description: string;\n  path: string;\n  color: string;\n  icon: React.ComponentType<a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 98,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 98,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 98,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 98,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 189,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 10,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 10,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 99,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 99,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 99,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 99,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 190,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 11,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 11,
          "block": "return (\n    <div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 100,
          "block": "<div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {/* Header wit..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 100,
          "block": "<div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {/* Header wit..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 100,
          "block": "<div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {/* Header wit..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 100,
          "block": "<div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {/* Header wit..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 191,
          "block": "<div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {/* Header wit..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 12,
          "block": "<div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {/* Header wit..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 12,
          "block": "<div className=\"subnav-container\">\n      <div className=\"subnav-card-window\">\n        {/* Header wit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 101,
          "block": "<div className=\"subnav-card-window\">\n        {/* Header with Breadcrumb */}\n        <div className=\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 101,
          "block": "<div className=\"subnav-card-window\">\n        {/* Header with Breadcrumb */}\n        <div className=\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 101,
          "block": "<div className=\"subnav-card-window\">\n        {/* Header with Breadcrumb */}\n        <div className=\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 101,
          "block": "<div className=\"subnav-card-window\">\n        {/* Header with Breadcrumb */}\n        <div className=\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 192,
          "block": "<div className=\"subnav-card-window\">\n        {/* Header with Breadcrumb */}\n        <div className=\"..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 13,
          "block": "<div className=\"subnav-card-window\">\n        {/* Header with Breadcrumb */}\n        <div className=\"..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 13,
          "block": "<div className=\"subnav-card-window\">\n        {/* Header with Breadcrumb */}\n        <div className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 102,
          "block": "{/* Header with Breadcrumb */}\n        <div className=\"subnav-header\">\n          <div className=\"sub..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 102,
          "block": "{/* Header with Breadcrumb */}\n        <div className=\"subnav-header\">\n          <div className=\"sub..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 102,
          "block": "{/* Header with Breadcrumb */}\n        <div className=\"subnav-header\">\n          <div className=\"sub..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 102,
          "block": "{/* Header with Breadcrumb */}\n        <div className=\"subnav-header\">\n          <div className=\"sub..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 193,
          "block": "{/* Header with Breadcrumb */}\n        <div className=\"subnav-header\">\n          <div className=\"sub..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 14,
          "block": "{/* Header with Breadcrumb */}\n        <div className=\"subnav-header\">\n          <div className=\"sub..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 14,
          "block": "{/* Header with Breadcrumb */}\n        <div className=\"subnav-header\">\n          <div className=\"sub..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 103,
          "block": "<div className=\"subnav-header\">\n          <div className=\"subnav-header-content\">\n            <div c..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 103,
          "block": "<div className=\"subnav-header\">\n          <div className=\"subnav-header-content\">\n            <div c..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 103,
          "block": "<div className=\"subnav-header\">\n          <div className=\"subnav-header-content\">\n            <div c..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 103,
          "block": "<div className=\"subnav-header\">\n          <div className=\"subnav-header-content\">\n            <div c..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 194,
          "block": "<div className=\"subnav-header\">\n          <div className=\"subnav-header-content\">\n            <div c..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 15,
          "block": "<div className=\"subnav-header\">\n          <div className=\"subnav-header-content\">\n            <div c..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 15,
          "block": "<div className=\"subnav-header\">\n          <div className=\"subnav-header-content\">\n            <div c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 104,
          "block": "<div className=\"subnav-header-content\">\n            <div className=\"subnav-breadcrumb\">\n            ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 104,
          "block": "<div className=\"subnav-header-content\">\n            <div className=\"subnav-breadcrumb\">\n            ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 104,
          "block": "<div className=\"subnav-header-content\">\n            <div className=\"subnav-breadcrumb\">\n            ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 104,
          "block": "<div className=\"subnav-header-content\">\n            <div className=\"subnav-breadcrumb\">\n            ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 195,
          "block": "<div className=\"subnav-header-content\">\n            <div className=\"subnav-breadcrumb\">\n            ..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 16,
          "block": "<div className=\"subnav-header-content\">\n            <div className=\"subnav-breadcrumb\">\n            ..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 16,
          "block": "<div className=\"subnav-header-content\">\n            <div className=\"subnav-breadcrumb\">\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 105,
          "block": "<div className=\"subnav-breadcrumb\">\n              <Breadcrumb items={breadcrumbItems} />\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 105,
          "block": "<div className=\"subnav-breadcrumb\">\n              <Breadcrumb items={breadcrumbItems} />\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 105,
          "block": "<div className=\"subnav-breadcrumb\">\n              <Breadcrumb items={breadcrumbItems} />\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 105,
          "block": "<div className=\"subnav-breadcrumb\">\n              <Breadcrumb items={breadcrumbItems} />\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 196,
          "block": "<div className=\"subnav-breadcrumb\">\n              <Breadcrumb items={breadcrumbItems} />\n           ..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 17,
          "block": "<div className=\"subnav-breadcrumb\">\n              <Breadcrumb items={breadcrumbItems} />\n           ..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 17,
          "block": "<div className=\"subnav-breadcrumb\">\n              <Breadcrumb items={breadcrumbItems} />\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 109,
          "block": "</div>\n\n        {/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 109,
          "block": "</div>\n\n        {/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 109,
          "block": "</div>\n\n        {/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 109,
          "block": "</div>\n\n        {/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 200,
          "block": "</div>\n\n        {/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 21,
          "block": "</div>\n\n        {/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 21,
          "block": "</div>\n\n        {/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 110,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 110,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 110,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 110,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 201,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 22,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 22,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 111,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 111,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 111,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 111,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 202,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 23,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 23,
          "block": "{/* Main Content */}\n        <div className=\"subnav-body\">\n          <div className=\"subnav-content\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 112,
          "block": "<div className=\"subnav-body\">\n          <div className=\"subnav-content\">\n            {/* Page Title ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 112,
          "block": "<div className=\"subnav-body\">\n          <div className=\"subnav-content\">\n            {/* Page Title ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 112,
          "block": "<div className=\"subnav-body\">\n          <div className=\"subnav-content\">\n            {/* Page Title ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 112,
          "block": "<div className=\"subnav-body\">\n          <div className=\"subnav-content\">\n            {/* Page Title ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 203,
          "block": "<div className=\"subnav-body\">\n          <div className=\"subnav-content\">\n            {/* Page Title ..."
        },
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 24,
          "block": "<div className=\"subnav-body\">\n          <div className=\"subnav-content\">\n            {/* Page Title ..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 24,
          "block": "<div className=\"subnav-body\">\n          <div className=\"subnav-content\">\n            {/* Page Title ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 121,
          "block": "</p>\n            </div>\n\n            {/* Module Cards */}\n            <div className=\"management-car..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 121,
          "block": "</p>\n            </div>\n\n            {/* Module Cards */}\n            <div className=\"management-car..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 121,
          "block": "</p>\n            </div>\n\n            {/* Module Cards */}\n            <div className=\"management-car..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 121,
          "block": "</p>\n            </div>\n\n            {/* Module Cards */}\n            <div className=\"management-car..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 212,
          "block": "</p>\n            </div>\n\n            {/* Module Cards */}\n            <div className=\"management-car..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 127,
          "block": "<NavigationCard\n                  key={module.id}\n                  title={module.title}\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 127,
          "block": "<NavigationCard\n                  key={module.id}\n                  title={module.title}\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 127,
          "block": "<NavigationCard\n                  key={module.id}\n                  title={module.title}\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 127,
          "block": "<NavigationCard\n                  key={module.id}\n                  title={module.title}\n           ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 218,
          "block": "<NavigationCard\n                  key={module.id}\n                  title={module.title}\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 128,
          "block": "key={module.id}\n                  title={module.title}\n                  description={module.descrip..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 128,
          "block": "key={module.id}\n                  title={module.title}\n                  description={module.descrip..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 128,
          "block": "key={module.id}\n                  title={module.title}\n                  description={module.descrip..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 128,
          "block": "key={module.id}\n                  title={module.title}\n                  description={module.descrip..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 219,
          "block": "key={module.id}\n                  title={module.title}\n                  description={module.descrip..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 129,
          "block": "title={module.title}\n                  description={module.description}\n                  href={modu..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 129,
          "block": "title={module.title}\n                  description={module.description}\n                  href={modu..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 129,
          "block": "title={module.title}\n                  description={module.description}\n                  href={modu..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 129,
          "block": "title={module.title}\n                  description={module.description}\n                  href={modu..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 220,
          "block": "title={module.title}\n                  description={module.description}\n                  href={modu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 130,
          "block": "description={module.description}\n                  href={module.path}\n                  color={modul..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 130,
          "block": "description={module.description}\n                  href={module.path}\n                  color={modul..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 130,
          "block": "description={module.description}\n                  href={module.path}\n                  color={modul..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 130,
          "block": "description={module.description}\n                  href={module.path}\n                  color={modul..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 221,
          "block": "description={module.description}\n                  href={module.path}\n                  color={modul..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 131,
          "block": "href={module.path}\n                  color={module.color}\n                  icon={module.icon}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 131,
          "block": "href={module.path}\n                  color={module.color}\n                  icon={module.icon}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 131,
          "block": "href={module.path}\n                  color={module.color}\n                  icon={module.icon}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 131,
          "block": "href={module.path}\n                  color={module.color}\n                  icon={module.icon}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 222,
          "block": "href={module.path}\n                  color={module.color}\n                  icon={module.icon}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 132,
          "block": "color={module.color}\n                  icon={module.icon}\n                  variant=\"management\"\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 132,
          "block": "color={module.color}\n                  icon={module.icon}\n                  variant=\"management\"\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 132,
          "block": "color={module.color}\n                  icon={module.icon}\n                  variant=\"management\"\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 132,
          "block": "color={module.color}\n                  icon={module.icon}\n                  variant=\"management\"\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 223,
          "block": "color={module.color}\n                  icon={module.icon}\n                  variant=\"management\"\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
          "startLine": 133,
          "block": "icon={module.icon}\n                  variant=\"management\"\n                />\n              ))}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
          "startLine": 133,
          "block": "icon={module.icon}\n                  variant=\"management\"\n                />\n              ))}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
          "startLine": 133,
          "block": "icon={module.icon}\n                  variant=\"management\"\n                />\n              ))}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
          "startLine": 133,
          "block": "icon={module.icon}\n                  variant=\"management\"\n                />\n              ))}\n     ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 224,
          "block": "icon={module.icon}\n                  variant=\"management\"\n                />\n              ))}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 97,
          "block": "return (\r\n    <div className=\"subnav-container\">\r\n      <div className=\"subnav-card-window\">\r\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 45,
          "block": "return (\r\n    <div className=\"subnav-container\">\r\n      <div className=\"subnav-card-window\">\r\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 98,
          "block": "return (\r\n    <div className=\"subnav-container\">\r\n      <div className=\"subnav-card-window\">\r\n      ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 46,
          "block": "return (\r\n    <div className=\"subnav-container\">\r\n      <div className=\"subnav-card-window\">\r\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 99,
          "block": "<div className=\"subnav-container\">\r\n      <div className=\"subnav-card-window\">\r\n        {/* Header w..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 47,
          "block": "<div className=\"subnav-container\">\r\n      <div className=\"subnav-card-window\">\r\n        {/* Header w..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 100,
          "block": "<div className=\"subnav-card-window\">\r\n        {/* Header with Breadcrumb */}\r\n        <div className..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 48,
          "block": "<div className=\"subnav-card-window\">\r\n        {/* Header with Breadcrumb */}\r\n        <div className..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 101,
          "block": "{/* Header with Breadcrumb */}\r\n        <div className=\"subnav-header\">\r\n          <div className=\"s..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 49,
          "block": "{/* Header with Breadcrumb */}\r\n        <div className=\"subnav-header\">\r\n          <div className=\"s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 102,
          "block": "<div className=\"subnav-header\">\r\n          <div className=\"subnav-header-content\">\r\n            <div..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 50,
          "block": "<div className=\"subnav-header\">\r\n          <div className=\"subnav-header-content\">\r\n            <div..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 103,
          "block": "<div className=\"subnav-header-content\">\r\n            <div className=\"subnav-breadcrumb\">\r\n          ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 51,
          "block": "<div className=\"subnav-header-content\">\r\n            <div className=\"subnav-breadcrumb\">\r\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 104,
          "block": "<div className=\"subnav-breadcrumb\">\r\n              <Breadcrumb items={breadcrumbItems} />\r\n         ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 52,
          "block": "<div className=\"subnav-breadcrumb\">\r\n              <Breadcrumb items={breadcrumbItems} />\r\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 108,
          "block": "</div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"subnav-body\">\r\n          <div classN..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 56,
          "block": "</div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"subnav-body\">\r\n          <div classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 109,
          "block": "{/* Main Content */}\r\n        <div className=\"subnav-body\">\r\n          <div className=\"subnav-conten..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 57,
          "block": "{/* Main Content */}\r\n        <div className=\"subnav-body\">\r\n          <div className=\"subnav-conten..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 110,
          "block": "{/* Main Content */}\r\n        <div className=\"subnav-body\">\r\n          <div className=\"subnav-conten..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 58,
          "block": "{/* Main Content */}\r\n        <div className=\"subnav-body\">\r\n          <div className=\"subnav-conten..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 111,
          "block": "<div className=\"subnav-body\">\r\n          <div className=\"subnav-content\">\r\n            {/* Page Titl..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 59,
          "block": "<div className=\"subnav-body\">\r\n          <div className=\"subnav-content\">\r\n            {/* Page Titl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 120,
          "block": "</p>\r\n            </div>\r\n\r\n            {/* Module Cards */}\r\n            <div className=\"management..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 68,
          "block": "</p>\r\n            </div>\r\n\r\n            {/* Module Cards */}\r\n            <div className=\"management..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 126,
          "block": "<NavigationCard\r\n                  key={module.id}\r\n                  title={module.title}\r\n        ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 74,
          "block": "<NavigationCard\r\n                  key={module.id}\r\n                  title={module.title}\r\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 127,
          "block": "key={module.id}\r\n                  title={module.title}\r\n                  description={module.descr..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 75,
          "block": "key={module.id}\r\n                  title={module.title}\r\n                  description={module.descr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 128,
          "block": "title={module.title}\r\n                  description={module.description}\r\n                  href={mo..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 76,
          "block": "title={module.title}\r\n                  description={module.description}\r\n                  href={mo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 129,
          "block": "description={module.description}\r\n                  href={module.path}\r\n                  color={mod..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 77,
          "block": "description={module.description}\r\n                  href={module.path}\r\n                  color={mod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 130,
          "block": "href={module.path}\r\n                  color={module.color}\r\n                  icon={module.icon}\r\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 78,
          "block": "href={module.path}\r\n                  color={module.color}\r\n                  icon={module.icon}\r\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 131,
          "block": "color={module.color}\r\n                  icon={module.icon}\r\n                  variant=\"management\"\r\n..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 79,
          "block": "color={module.color}\r\n                  icon={module.icon}\r\n                  variant=\"management\"\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
          "startLine": 132,
          "block": "icon={module.icon}\r\n                  variant=\"management\"\r\n                />\r\n              ))}\r\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
          "startLine": 80,
          "block": "icon={module.icon}\r\n                  variant=\"management\"\r\n                />\r\n              ))}\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 203,
          "block": "{\r\n      title: 'Daily Sales',\r\n      value: '₺18.7K',\r\n      icon: TrendingUp,\r\n      color: 'from-..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 363,
          "block": "{\r\n      title: 'Daily Sales',\r\n      value: '₺18.7K',\r\n      icon: TrendingUp,\r\n      color: 'from-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 204,
          "block": "title: 'Daily Sales',\r\n      value: '₺18.7K',\r\n      icon: TrendingUp,\r\n      color: 'from-green-500..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 364,
          "block": "title: 'Daily Sales',\r\n      value: '₺18.7K',\r\n      icon: TrendingUp,\r\n      color: 'from-green-500..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 205,
          "block": "value: '₺18.7K',\r\n      icon: TrendingUp,\r\n      color: 'from-green-500/80 to-green-500',\r\n      des..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 365,
          "block": "value: '₺18.7K',\r\n      icon: TrendingUp,\r\n      color: 'from-green-500/80 to-green-500',\r\n      des..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 206,
          "block": "icon: TrendingUp,\r\n      color: 'from-green-500/80 to-green-500',\r\n      description: '↗ +12.3% vs y..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 366,
          "block": "icon: TrendingUp,\r\n      color: 'from-green-500/80 to-green-500',\r\n      description: '↗ +12.3% vs y..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 207,
          "block": "color: 'from-green-500/80 to-green-500',\r\n      description: '↗ +12.3% vs yesterday'\r\n    },\r\n    {\r..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 367,
          "block": "color: 'from-green-500/80 to-green-500',\r\n      description: '↗ +12.3% vs yesterday'\r\n    },\r\n    {\r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 208,
          "block": "description: '↗ +12.3% vs yesterday'\r\n    },\r\n    {\r\n      title: 'Active Pumps',\r\n      value: '8/8..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 368,
          "block": "description: '↗ +12.3% vs yesterday'\r\n    },\r\n    {\r\n      title: 'Active Pumps',\r\n      value: '8/8..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 210,
          "block": "{\r\n      title: 'Active Pumps',\r\n      value: '8/8',\r\n      icon: Zap,\r\n      color: 'from-purple-50..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 370,
          "block": "{\r\n      title: 'Active Pumps',\r\n      value: '8/8',\r\n      icon: Zap,\r\n      color: 'from-purple-50..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 211,
          "block": "title: 'Active Pumps',\r\n      value: '8/8',\r\n      icon: Zap,\r\n      color: 'from-purple-500/80 to-p..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 371,
          "block": "title: 'Active Pumps',\r\n      value: '8/8',\r\n      icon: Zap,\r\n      color: 'from-purple-500/80 to-p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 212,
          "block": "value: '8/8',\r\n      icon: Zap,\r\n      color: 'from-purple-500/80 to-purple-500',\r\n      description..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 372,
          "block": "value: '8/8',\r\n      icon: Zap,\r\n      color: 'from-purple-500/80 to-purple-500',\r\n      description..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 213,
          "block": "icon: Zap,\r\n      color: 'from-purple-500/80 to-purple-500',\r\n      description: '✓ All operational'..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 373,
          "block": "icon: Zap,\r\n      color: 'from-purple-500/80 to-purple-500',\r\n      description: '✓ All operational'..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 270,
          "block": "<StatsCard\r\n              key={index}\r\n              title={stat.title}\r\n              value={stat.v..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 396,
          "block": "<StatsCard\r\n              key={index}\r\n              title={stat.title}\r\n              value={stat.v..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 225,
          "block": "<StatsCard\r\n              key={index}\r\n              title={stat.title}\r\n              value={stat.v..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 630,
          "block": "<StatsCard\r\n              key={index}\r\n              title={stat.title}\r\n              value={stat.v..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 345,
          "block": "<StatsCard\r\n              key={index}\r\n              title={stat.title}\r\n              value={stat.v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 271,
          "block": "key={index}\r\n              title={stat.title}\r\n              value={stat.value}\r\n              icon=..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 397,
          "block": "key={index}\r\n              title={stat.title}\r\n              value={stat.value}\r\n              icon=..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 226,
          "block": "key={index}\r\n              title={stat.title}\r\n              value={stat.value}\r\n              icon=..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 631,
          "block": "key={index}\r\n              title={stat.title}\r\n              value={stat.value}\r\n              icon=..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 346,
          "block": "key={index}\r\n              title={stat.title}\r\n              value={stat.value}\r\n              icon=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 272,
          "block": "title={stat.title}\r\n              value={stat.value}\r\n              icon={stat.icon}\r\n              ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 398,
          "block": "title={stat.title}\r\n              value={stat.value}\r\n              icon={stat.icon}\r\n              ..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 227,
          "block": "title={stat.title}\r\n              value={stat.value}\r\n              icon={stat.icon}\r\n              ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 632,
          "block": "title={stat.title}\r\n              value={stat.value}\r\n              icon={stat.icon}\r\n              ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 347,
          "block": "title={stat.title}\r\n              value={stat.value}\r\n              icon={stat.icon}\r\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 273,
          "block": "value={stat.value}\r\n              icon={stat.icon}\r\n              color={stat.color}\r\n              ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 399,
          "block": "value={stat.value}\r\n              icon={stat.icon}\r\n              color={stat.color}\r\n              ..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 228,
          "block": "value={stat.value}\r\n              icon={stat.icon}\r\n              color={stat.color}\r\n              ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 633,
          "block": "value={stat.value}\r\n              icon={stat.icon}\r\n              color={stat.color}\r\n              ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 348,
          "block": "value={stat.value}\r\n              icon={stat.icon}\r\n              color={stat.color}\r\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 274,
          "block": "icon={stat.icon}\r\n              color={stat.color}\r\n              description={stat.description}\r\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 400,
          "block": "icon={stat.icon}\r\n              color={stat.color}\r\n              description={stat.description}\r\n  ..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 229,
          "block": "icon={stat.icon}\r\n              color={stat.color}\r\n              description={stat.description}\r\n  ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 634,
          "block": "icon={stat.icon}\r\n              color={stat.color}\r\n              description={stat.description}\r\n  ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 349,
          "block": "icon={stat.icon}\r\n              color={stat.color}\r\n              description={stat.description}\r\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 275,
          "block": "color={stat.color}\r\n              description={stat.description}\r\n            />\r\n          ))}\r\n   ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 401,
          "block": "color={stat.color}\r\n              description={stat.description}\r\n            />\r\n          ))}\r\n   ..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 230,
          "block": "color={stat.color}\r\n              description={stat.description}\r\n            />\r\n          ))}\r\n   ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 635,
          "block": "color={stat.color}\r\n              description={stat.description}\r\n            />\r\n          ))}\r\n   ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 350,
          "block": "color={stat.color}\r\n              description={stat.description}\r\n            />\r\n          ))}\r\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 421,
          "block": "</div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-lg ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 640,
          "block": "</div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-lg ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 436,
          "block": "</div>\r\n          </button>\r\n          \r\n          <button className=\"flex items-center gap-3 p-4 bg..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 655,
          "block": "</div>\r\n          </button>\r\n          \r\n          <button className=\"flex items-center gap-3 p-4 bg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 446,
          "block": "</div>\r\n          </button>\r\n          \r\n          <button className=\"flex items-center gap-3 p-4 bg..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 665,
          "block": "</div>\r\n          </button>\r\n          \r\n          <button className=\"flex items-center gap-3 p-4 bg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
          "startLine": 456,
          "block": "</div>\r\n          </button>\r\n          \r\n          <button className=\"flex items-center gap-3 p-4 bg..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 675,
          "block": "</div>\r\n          </button>\r\n          \r\n          <button className=\"flex items-center gap-3 p-4 bg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 22,
          "block": "} from 'lucide-react';\nimport { Badge } from '../../../core/components/ui/primitives/badge';\nimport ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 29,
          "block": "} from 'lucide-react';\nimport { Badge } from '../../../core/components/ui/primitives/badge';\nimport ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 29,
          "block": "} from 'lucide-react';\nimport { Badge } from '../../../core/components/ui/primitives/badge';\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 23,
          "block": "import { Badge } from '../../../core/components/ui/primitives/badge';\nimport { Card } from '../../....."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 30,
          "block": "import { Badge } from '../../../core/components/ui/primitives/badge';\nimport { Card } from '../../....."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 30,
          "block": "import { Badge } from '../../../core/components/ui/primitives/badge';\nimport { Card } from '../../....."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 24,
          "block": "import { Card } from '../../../core/components/ui/card';\nimport { Button } from '../../../core/compo..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 31,
          "block": "import { Card } from '../../../core/components/ui/card';\nimport { Button } from '../../../core/compo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 31,
          "block": "import { Card } from '../../../core/components/ui/card';\nimport { Button } from '../../../core/compo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 25,
          "block": "import { Button } from '../../../core/components/ui/button';\nimport { Input } from '../../../core/co..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 32,
          "block": "import { Button } from '../../../core/components/ui/button';\nimport { Input } from '../../../core/co..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 32,
          "block": "import { Button } from '../../../core/components/ui/button';\nimport { Input } from '../../../core/co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 26,
          "block": "import { Input } from '../../../core/components/ui/input';\nimport { useToast } from '../../../core/h..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 33,
          "block": "import { Input } from '../../../core/components/ui/input';\nimport { useToast } from '../../../core/h..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 33,
          "block": "import { Input } from '../../../core/components/ui/input';\nimport { useToast } from '../../../core/h..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 109,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Queries\n  const { data: ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 166,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Queries\n  const { data: ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 140,
          "block": "const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Queries\n  const { data: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 221,
          "block": "if (metricsError) {\n    return (\n      <div className=\"p-6\">\n        <Card className=\"p-8 text-cente..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 320,
          "block": "if (metricsError) {\n    return (\n      <div className=\"p-6\">\n        <Card className=\"p-8 text-cente..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 303,
          "block": "if (metricsError) {\n    return (\n      <div className=\"p-6\">\n        <Card className=\"p-8 text-cente..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 232,
          "block": "</p>\n          <Button onClick={handleRefresh} className=\"mx-auto\">\n            <RefreshCw className..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 331,
          "block": "</p>\n          <Button onClick={handleRefresh} className=\"mx-auto\">\n            <RefreshCw className..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 314,
          "block": "</p>\n          <Button onClick={handleRefresh} className=\"mx-auto\">\n            <RefreshCw className..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 233,
          "block": "<Button onClick={handleRefresh} className=\"mx-auto\">\n            <RefreshCw className=\"h-4 w-4 mr-2\"..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 332,
          "block": "<Button onClick={handleRefresh} className=\"mx-auto\">\n            <RefreshCw className=\"h-4 w-4 mr-2\"..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 315,
          "block": "<Button onClick={handleRefresh} className=\"mx-auto\">\n            <RefreshCw className=\"h-4 w-4 mr-2\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 234,
          "block": "<RefreshCw className=\"h-4 w-4 mr-2\" />\n            Retry\n          </Button>\n        </Card>\n      <..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 333,
          "block": "<RefreshCw className=\"h-4 w-4 mr-2\" />\n            Retry\n          </Button>\n        </Card>\n      <..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 316,
          "block": "<RefreshCw className=\"h-4 w-4 mr-2\" />\n            Retry\n          </Button>\n        </Card>\n      <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 241,
          "block": "return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 340,
          "block": "return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 323,
          "block": "return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 242,
          "block": "return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 341,
          "block": "return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 324,
          "block": "return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 243,
          "block": "<div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row jus..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 342,
          "block": "<div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row jus..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 325,
          "block": "<div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row jus..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 252,
          "block": "</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button \n           ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 351,
          "block": "</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button \n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 334,
          "block": "</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button \n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 253,
          "block": "</div>\n        <div className=\"flex items-center gap-2\">\n          <Button \n            variant=\"out..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 352,
          "block": "</div>\n        <div className=\"flex items-center gap-2\">\n          <Button \n            variant=\"out..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 335,
          "block": "</div>\n        <div className=\"flex items-center gap-2\">\n          <Button \n            variant=\"out..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 254,
          "block": "<div className=\"flex items-center gap-2\">\n          <Button \n            variant=\"outline\" \n        ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 353,
          "block": "<div className=\"flex items-center gap-2\">\n          <Button \n            variant=\"outline\" \n        ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 336,
          "block": "<div className=\"flex items-center gap-2\">\n          <Button \n            variant=\"outline\" \n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 255,
          "block": "<Button \n            variant=\"outline\" \n            size=\"sm\"\n            onClick={handleRefresh}\n  ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 354,
          "block": "<Button \n            variant=\"outline\" \n            size=\"sm\"\n            onClick={handleRefresh}\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 337,
          "block": "<Button \n            variant=\"outline\" \n            size=\"sm\"\n            onClick={handleRefresh}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 256,
          "block": "variant=\"outline\" \n            size=\"sm\"\n            onClick={handleRefresh}\n            disabled={m..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 355,
          "block": "variant=\"outline\" \n            size=\"sm\"\n            onClick={handleRefresh}\n            disabled={m..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 338,
          "block": "variant=\"outline\" \n            size=\"sm\"\n            onClick={handleRefresh}\n            disabled={m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 257,
          "block": "size=\"sm\"\n            onClick={handleRefresh}\n            disabled={metricsLoading}\n          >\n    ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 356,
          "block": "size=\"sm\"\n            onClick={handleRefresh}\n            disabled={metricsLoading}\n          >\n    ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 339,
          "block": "size=\"sm\"\n            onClick={handleRefresh}\n            disabled={metricsLoading}\n          >\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 258,
          "block": "onClick={handleRefresh}\n            disabled={metricsLoading}\n          >\n            <RefreshCw cla..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 357,
          "block": "onClick={handleRefresh}\n            disabled={metricsLoading}\n          >\n            <RefreshCw cla..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 340,
          "block": "onClick={handleRefresh}\n            disabled={metricsLoading}\n          >\n            <RefreshCw cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 259,
          "block": "disabled={metricsLoading}\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${metricsLoadi..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 358,
          "block": "disabled={metricsLoading}\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${metricsLoadi..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 341,
          "block": "disabled={metricsLoading}\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${metricsLoadi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 260,
          "block": ">\n            <RefreshCw className={`h-4 w-4 mr-2 ${metricsLoading ? 'animate-spin' : ''}`} />\n     ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 359,
          "block": ">\n            <RefreshCw className={`h-4 w-4 mr-2 ${metricsLoading ? 'animate-spin' : ''}`} />\n     ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 342,
          "block": ">\n            <RefreshCw className={`h-4 w-4 mr-2 ${metricsLoading ? 'animate-spin' : ''}`} />\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 261,
          "block": "<RefreshCw className={`h-4 w-4 mr-2 ${metricsLoading ? 'animate-spin' : ''}`} />\n            Refresh..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 360,
          "block": "<RefreshCw className={`h-4 w-4 mr-2 ${metricsLoading ? 'animate-spin' : ''}`} />\n            Refresh..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 343,
          "block": "<RefreshCw className={`h-4 w-4 mr-2 ${metricsLoading ? 'animate-spin' : ''}`} />\n            Refresh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 268,
          "block": "</div>\n      </div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 367,
          "block": "</div>\n      </div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 350,
          "block": "</div>\n      </div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 324,
          "block": "</div>\n      </div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 269,
          "block": "</div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-co..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 368,
          "block": "</div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-co..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 351,
          "block": "</div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-co..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 325,
          "block": "</div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 270,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 369,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 352,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 326,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 271,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 370,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 353,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 327,
          "block": "{/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 272,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n        {metricCards.map((met..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 371,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n        {metricCards.map((met..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 354,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n        {metricCards.map((met..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 328,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\">\n        {metricCards.map((met..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 273,
          "block": "{metricCards.map((metric, index) => (\n          <motion.div\n            key={metric.title}\n         ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 372,
          "block": "{metricCards.map((metric, index) => (\n          <motion.div\n            key={metric.title}\n         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 355,
          "block": "{metricCards.map((metric, index) => (\n          <motion.div\n            key={metric.title}\n         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 329,
          "block": "{metricCards.map((metric, index) => (\n          <motion.div\n            key={metric.title}\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 274,
          "block": "<motion.div\n            key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            a..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 373,
          "block": "<motion.div\n            key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            a..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 356,
          "block": "<motion.div\n            key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            a..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 330,
          "block": "<motion.div\n            key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            a..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 275,
          "block": "key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y:..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 374,
          "block": "key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y:..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 357,
          "block": "key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y:..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 331,
          "block": "key={metric.title}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 276,
          "block": "initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 375,
          "block": "initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 358,
          "block": "initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 277,
          "block": "animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n         ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 376,
          "block": "animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 359,
          "block": "animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 278,
          "block": "transition={{ delay: index * 0.1 }}\n          >\n            <Card className=\"p-6\">\n              <di..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 377,
          "block": "transition={{ delay: index * 0.1 }}\n          >\n            <Card className=\"p-6\">\n              <di..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 360,
          "block": "transition={{ delay: index * 0.1 }}\n          >\n            <Card className=\"p-6\">\n              <di..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 279,
          "block": ">\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 378,
          "block": ">\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 361,
          "block": ">\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 280,
          "block": "<Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n           ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 379,
          "block": "<Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 362,
          "block": "<Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 281,
          "block": "<div className=\"flex items-center justify-between\">\n                <div className=\"flex items-cente..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 380,
          "block": "<div className=\"flex items-center justify-between\">\n                <div className=\"flex items-cente..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 363,
          "block": "<div className=\"flex items-center justify-between\">\n                <div className=\"flex items-cente..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 282,
          "block": "<div className=\"flex items-center space-x-3\">\n                  <div className={`p-2 rounded-lg bg-$..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 381,
          "block": "<div className=\"flex items-center space-x-3\">\n                  <div className={`p-2 rounded-lg bg-$..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 364,
          "block": "<div className=\"flex items-center space-x-3\">\n                  <div className={`p-2 rounded-lg bg-$..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 283,
          "block": "<div className={`p-2 rounded-lg bg-${metric.color}-100 dark:bg-${metric.color}-900/20`}>\n           ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 382,
          "block": "<div className={`p-2 rounded-lg bg-${metric.color}-100 dark:bg-${metric.color}-900/20`}>\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 365,
          "block": "<div className={`p-2 rounded-lg bg-${metric.color}-100 dark:bg-${metric.color}-900/20`}>\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 284,
          "block": "<metric.icon className={`h-5 w-5 text-${metric.color}-600 dark:text-${metric.color}-400`} />\n       ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 383,
          "block": "<metric.icon className={`h-5 w-5 text-${metric.color}-600 dark:text-${metric.color}-400`} />\n       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 366,
          "block": "<metric.icon className={`h-5 w-5 text-${metric.color}-600 dark:text-${metric.color}-400`} />\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 285,
          "block": "</div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 d..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 384,
          "block": "</div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 d..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 367,
          "block": "</div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 d..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 286,
          "block": "<div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n     ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 385,
          "block": "<div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n     ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 368,
          "block": "<div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 287,
          "block": "<p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      {metric.t..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 386,
          "block": "<p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      {metric.t..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 369,
          "block": "<p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      {metric.t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 288,
          "block": "{metric.title}\n                    </p>\n                    <p className=\"text-2xl font-bold text-gr..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 387,
          "block": "{metric.title}\n                    </p>\n                    <p className=\"text-2xl font-bold text-gr..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 370,
          "block": "{metric.title}\n                    </p>\n                    <p className=\"text-2xl font-bold text-gr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 289,
          "block": "</p>\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n       ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 388,
          "block": "</p>\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 371,
          "block": "</p>\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 290,
          "block": "<p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n                      {metricsLo..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 389,
          "block": "<p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n                      {metricsLo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 372,
          "block": "<p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n                      {metricsLo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 295,
          "block": "</div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 406,
          "block": "</div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 389,
          "block": "</div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 296,
          "block": "<p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {metric.description}\n ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 407,
          "block": "<p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {metric.description}\n ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 390,
          "block": "<p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {metric.description}\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 448,
          "block": "<Button \n                    variant=\"outline\" \n                    size=\"sm\" \n                    c..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
          "startLine": 456,
          "block": "<Button \n                    variant=\"outline\" \n                    size=\"sm\" \n                    c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 30,
          "block": "id: string;\r\n  title: string;\r\n  description: string;\r\n  path: string;\r\n  icon: React.ComponentType<..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 28,
          "block": "id: string;\r\n  title: string;\r\n  description: string;\r\n  path: string;\r\n  icon: React.ComponentType<..."
        },
        {
          "file": "src\\shared\\components\\cards\\ModuleCard.tsx",
          "startLine": 7,
          "block": "id: string;\r\n  title: string;\r\n  description: string;\r\n  path: string;\r\n  icon: React.ComponentType<..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 31,
          "block": "title: string;\r\n  description: string;\r\n  path: string;\r\n  icon: React.ComponentType<any>;\r\n  catego..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 29,
          "block": "title: string;\r\n  description: string;\r\n  path: string;\r\n  icon: React.ComponentType<any>;\r\n  catego..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 32,
          "block": "description: string;\r\n  path: string;\r\n  icon: React.ComponentType<any>;\r\n  category?: string;\r\n  ba..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 30,
          "block": "description: string;\r\n  path: string;\r\n  icon: React.ComponentType<any>;\r\n  category?: string;\r\n  ba..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 33,
          "block": "path: string;\r\n  icon: React.ComponentType<any>;\r\n  category?: string;\r\n  badge?: string;\r\n  stats?:..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 31,
          "block": "path: string;\r\n  icon: React.ComponentType<any>;\r\n  category?: string;\r\n  badge?: string;\r\n  stats?:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 34,
          "block": "icon: React.ComponentType<any>;\r\n  category?: string;\r\n  badge?: string;\r\n  stats?: {\r\n    count: st..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 32,
          "block": "icon: React.ComponentType<any>;\r\n  category?: string;\r\n  badge?: string;\r\n  stats?: {\r\n    count: st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 58,
          "block": "color: 'border-blue-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-blue-500/5 to-blue-500/10',\r\n ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 70,
          "block": "color: 'border-blue-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-blue-500/5 to-blue-500/10',\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 59,
          "block": "bgGradient: 'bg-gradient-to-br from-blue-500/5 to-blue-500/10',\r\n    iconGradient: 'from-blue-500/80..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 71,
          "block": "bgGradient: 'bg-gradient-to-br from-blue-500/5 to-blue-500/10',\r\n    iconGradient: 'from-blue-500/80..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 72,
          "block": "color: 'border-cyan-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-cyan-500/5 to-cyan-500/10',\r\n ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 97,
          "block": "color: 'border-cyan-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-cyan-500/5 to-cyan-500/10',\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 86,
          "block": "color: 'border-emerald-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-50..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 56,
          "block": "color: 'border-emerald-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-50..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 241,
          "block": "color: 'border-emerald-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-50..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 87,
          "block": "bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500/10',\r\n    iconGradient: 'from-emera..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 57,
          "block": "bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500/10',\r\n    iconGradient: 'from-emera..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 242,
          "block": "bgGradient: 'bg-gradient-to-br from-emerald-500/5 to-emerald-500/10',\r\n    iconGradient: 'from-emera..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 116,
          "block": "color: 'border-purple-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/1..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 84,
          "block": "color: 'border-purple-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 117,
          "block": "bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/10',\r\n    iconGradient: 'from-purple-..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 85,
          "block": "bgGradient: 'bg-gradient-to-br from-purple-500/5 to-purple-500/10',\r\n    iconGradient: 'from-purple-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 130,
          "block": "color: 'border-orange-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/1..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 141,
          "block": "color: 'border-orange-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 131,
          "block": "bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/10',\r\n    iconGradient: 'from-orange-..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 142,
          "block": "bgGradient: 'bg-gradient-to-br from-orange-500/5 to-orange-500/10',\r\n    iconGradient: 'from-orange-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 144,
          "block": "color: 'border-indigo-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-indigo-500/5 to-indigo-500/1..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 127,
          "block": "color: 'border-indigo-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-indigo-500/5 to-indigo-500/1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 145,
          "block": "bgGradient: 'bg-gradient-to-br from-indigo-500/5 to-indigo-500/10',\r\n    iconGradient: 'from-indigo-..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 128,
          "block": "bgGradient: 'bg-gradient-to-br from-indigo-500/5 to-indigo-500/10',\r\n    iconGradient: 'from-indigo-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 158,
          "block": "color: 'border-yellow-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-yellow-500/5 to-yellow-500/1..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 168,
          "block": "color: 'border-yellow-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-yellow-500/5 to-yellow-500/1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 159,
          "block": "bgGradient: 'bg-gradient-to-br from-yellow-500/5 to-yellow-500/10',\r\n    iconGradient: 'from-yellow-..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 169,
          "block": "bgGradient: 'bg-gradient-to-br from-yellow-500/5 to-yellow-500/10',\r\n    iconGradient: 'from-yellow-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 174,
          "block": "color: 'border-teal-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-teal-500/5 to-teal-500/10',\r\n ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 154,
          "block": "color: 'border-teal-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-teal-500/5 to-teal-500/10',\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 175,
          "block": "bgGradient: 'bg-gradient-to-br from-teal-500/5 to-teal-500/10',\r\n    iconGradient: 'from-teal-500/80..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 155,
          "block": "bgGradient: 'bg-gradient-to-br from-teal-500/5 to-teal-500/10',\r\n    iconGradient: 'from-teal-500/80..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 188,
          "block": "color: 'border-green-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 113,
          "block": "color: 'border-green-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 189,
          "block": "bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',\r\n    iconGradient: 'from-green-500..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 114,
          "block": "bgGradient: 'bg-gradient-to-br from-green-500/5 to-green-500/10',\r\n    iconGradient: 'from-green-500..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 202,
          "block": "color: 'border-amber-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 268,
          "block": "color: 'border-amber-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 203,
          "block": "bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',\r\n    iconGradient: 'from-amber-500..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 269,
          "block": "bgGradient: 'bg-gradient-to-br from-amber-500/5 to-amber-500/10',\r\n    iconGradient: 'from-amber-500..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 216,
          "block": "color: 'border-pink-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-pink-500/5 to-pink-500/10',\r\n ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 211,
          "block": "color: 'border-pink-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-pink-500/5 to-pink-500/10',\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 232,
          "block": "color: 'border-violet-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-violet-500/5 to-violet-500/1..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 197,
          "block": "color: 'border-violet-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-violet-500/5 to-violet-500/1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 233,
          "block": "bgGradient: 'bg-gradient-to-br from-violet-500/5 to-violet-500/10',\r\n    iconGradient: 'from-violet-..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 198,
          "block": "bgGradient: 'bg-gradient-to-br from-violet-500/5 to-violet-500/10',\r\n    iconGradient: 'from-violet-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 246,
          "block": "color: 'border-slate-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-slate-500/5 to-slate-500/10',..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 225,
          "block": "color: 'border-slate-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-slate-500/5 to-slate-500/10',..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 274,
          "block": "color: 'border-rose-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-rose-500/5 to-rose-500/10',\r\n ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 184,
          "block": "color: 'border-rose-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-rose-500/5 to-rose-500/10',\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 290,
          "block": "color: 'border-gray-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\r\n ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 254,
          "block": "color: 'border-gray-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 291,
          "block": "bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\r\n    iconGradient: 'from-gray-500/80..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 255,
          "block": "bgGradient: 'bg-gradient-to-br from-gray-500/5 to-gray-500/10',\r\n    iconGradient: 'from-gray-500/80..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 332,
          "block": "color: 'border-zinc-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-zinc-500/5 to-zinc-500/10',\r\n ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 281,
          "block": "color: 'border-zinc-500/30',\r\n    bgGradient: 'bg-gradient-to-br from-zinc-500/5 to-zinc-500/10',\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 333,
          "block": "bgGradient: 'bg-gradient-to-br from-zinc-500/5 to-zinc-500/10',\r\n    iconGradient: 'from-zinc-500/80..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 282,
          "block": "bgGradient: 'bg-gradient-to-br from-zinc-500/5 to-zinc-500/10',\r\n    iconGradient: 'from-zinc-500/80..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 347,
          "block": "const category = module.category || 'Other';\r\n    if (!acc[category]) {\r\n      acc[category] = [];\r\n..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 296,
          "block": "const category = module.category || 'Other';\r\n    if (!acc[category]) {\r\n      acc[category] = [];\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 348,
          "block": "if (!acc[category]) {\r\n      acc[category] = [];\r\n    }\r\n    acc[category].push(module);\r\n    return..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 297,
          "block": "if (!acc[category]) {\r\n      acc[category] = [];\r\n    }\r\n    acc[category].push(module);\r\n    return..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 390,
          "block": "breadcrumbItems={breadcrumbItems}\r\n    >\r\n      {/* Quick Stats Overview */}\r\n      <div className=\"..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 339,
          "block": "breadcrumbItems={breadcrumbItems}\r\n    >\r\n      {/* Quick Stats Overview */}\r\n      <div className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 391,
          "block": ">\r\n      {/* Quick Stats Overview */}\r\n      <div className=\"mb-8\">\r\n        <div className=\"grid gr..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 340,
          "block": ">\r\n      {/* Quick Stats Overview */}\r\n      <div className=\"mb-8\">\r\n        <div className=\"grid gr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 392,
          "block": "{/* Quick Stats Overview */}\r\n      <div className=\"mb-8\">\r\n        <div className=\"grid grid-cols-1..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 341,
          "block": "{/* Quick Stats Overview */}\r\n      <div className=\"mb-8\">\r\n        <div className=\"grid grid-cols-1..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 393,
          "block": "<div className=\"mb-8\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 342,
          "block": "<div className=\"mb-8\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 394,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          {quickStats.map((s..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 223,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          {quickStats.map((s..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 343,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          {quickStats.map((s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 395,
          "block": "{quickStats.map((stat, index) => (\r\n            <StatsCard\r\n              key={index}\r\n             ..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 224,
          "block": "{quickStats.map((stat, index) => (\r\n            <StatsCard\r\n              key={index}\r\n             ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 344,
          "block": "{quickStats.map((stat, index) => (\r\n            <StatsCard\r\n              key={index}\r\n             ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 409,
          "block": "<div className=\"space-y-8\">\r\n        {Object.entries(groupedModules).map(([category, modules]) => (\r..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 358,
          "block": "<div className=\"space-y-8\">\r\n        {Object.entries(groupedModules).map(([category, modules]) => (\r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 410,
          "block": "{Object.entries(groupedModules).map(([category, modules]) => (\r\n          <div key={category}>\r\n    ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 359,
          "block": "{Object.entries(groupedModules).map(([category, modules]) => (\r\n          <div key={category}>\r\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 411,
          "block": "<div key={category}>\r\n            <div className=\"mb-6\">\r\n              <h2 className=\"text-xl font-..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 360,
          "block": "<div key={category}>\r\n            <div className=\"mb-6\">\r\n              <h2 className=\"text-xl font-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 412,
          "block": "<div className=\"mb-6\">\r\n              <h2 className=\"text-xl font-semibold text-black dark:text-[#EE..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 361,
          "block": "<div className=\"mb-6\">\r\n              <h2 className=\"text-xl font-semibold text-black dark:text-[#EE..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 413,
          "block": "<h2 className=\"text-xl font-semibold text-black dark:text-[#EEEFE7] mb-2\">\r\n                {categor..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 362,
          "block": "<h2 className=\"text-xl font-semibold text-black dark:text-[#EEEFE7] mb-2\">\r\n                {categor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 414,
          "block": "{category}\r\n              </h2>\r\n              <div className=\"h-px bg-gradient-to-r from-blue-500 v..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 363,
          "block": "{category}\r\n              </h2>\r\n              <div className=\"h-px bg-gradient-to-r from-blue-500 v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 415,
          "block": "</h2>\r\n              <div className=\"h-px bg-gradient-to-r from-blue-500 via-purple-500 to-transpare..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 364,
          "block": "</h2>\r\n              <div className=\"h-px bg-gradient-to-r from-blue-500 via-purple-500 to-transpare..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 416,
          "block": "<div className=\"h-px bg-gradient-to-r from-blue-500 via-purple-500 to-transparent dark:from-blue-400..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 365,
          "block": "<div className=\"h-px bg-gradient-to-r from-blue-500 via-purple-500 to-transparent dark:from-blue-400..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 417,
          "block": "</div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 366,
          "block": "</div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 418,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {modules.map((..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 367,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {modules.map((..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 419,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {modules.map((..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 368,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {modules.map((..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 420,
          "block": "{modules.map((module) => (\r\n                <ModuleCard\r\n                  key={module.id}\r\n        ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 369,
          "block": "{modules.map((module) => (\r\n                <ModuleCard\r\n                  key={module.id}\r\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 421,
          "block": "<ModuleCard\r\n                  key={module.id}\r\n                  id={module.id}\r\n                  ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 370,
          "block": "<ModuleCard\r\n                  key={module.id}\r\n                  id={module.id}\r\n                  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 422,
          "block": "key={module.id}\r\n                  id={module.id}\r\n                  title={module.title}\r\n         ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 371,
          "block": "key={module.id}\r\n                  id={module.id}\r\n                  title={module.title}\r\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 423,
          "block": "id={module.id}\r\n                  title={module.title}\r\n                  description={module.descri..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 372,
          "block": "id={module.id}\r\n                  title={module.title}\r\n                  description={module.descri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 424,
          "block": "title={module.title}\r\n                  description={module.description}\r\n                  path={mo..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 373,
          "block": "title={module.title}\r\n                  description={module.description}\r\n                  path={mo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 425,
          "block": "description={module.description}\r\n                  path={module.path}\r\n                  icon={modu..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 374,
          "block": "description={module.description}\r\n                  path={module.path}\r\n                  icon={modu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 426,
          "block": "path={module.path}\r\n                  icon={module.icon}\r\n                  badge={module.badge}\r\n  ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 375,
          "block": "path={module.path}\r\n                  icon={module.icon}\r\n                  badge={module.badge}\r\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 427,
          "block": "icon={module.icon}\r\n                  badge={module.badge}\r\n                  stats={module.stats}\r\n..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 376,
          "block": "icon={module.icon}\r\n                  badge={module.badge}\r\n                  stats={module.stats}\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 428,
          "block": "badge={module.badge}\r\n                  stats={module.stats}\r\n                  color={module.color}..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 377,
          "block": "badge={module.badge}\r\n                  stats={module.stats}\r\n                  color={module.color}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 429,
          "block": "stats={module.stats}\r\n                  color={module.color}\r\n                  bgGradient={module.b..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 378,
          "block": "stats={module.stats}\r\n                  color={module.color}\r\n                  bgGradient={module.b..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 430,
          "block": "color={module.color}\r\n                  bgGradient={module.bgGradient}\r\n                  iconGradie..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 379,
          "block": "color={module.color}\r\n                  bgGradient={module.bgGradient}\r\n                  iconGradie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 431,
          "block": "bgGradient={module.bgGradient}\r\n                  iconGradient={module.iconGradient}\r\n              ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 380,
          "block": "bgGradient={module.bgGradient}\r\n                  iconGradient={module.iconGradient}\r\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 432,
          "block": "iconGradient={module.iconGradient}\r\n                  textColor={module.textColor}\r\n                ..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 381,
          "block": "iconGradient={module.iconGradient}\r\n                  textColor={module.textColor}\r\n                ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
          "startLine": 433,
          "block": "textColor={module.textColor}\r\n                />\r\n              ))}\r\n            </div>\r\n          <..."
        },
        {
          "file": "src\\features\\reports\\pages\\ReportsPage.tsx",
          "startLine": 382,
          "block": "textColor={module.textColor}\r\n                />\r\n              ))}\r\n            </div>\r\n          <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 38,
          "block": "const [editingId, setEditingId] = useState<string | null>(null);\n  const [editPrice, setEditPrice] =..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 39,
          "block": "const [editingId, setEditingId] = useState<string | null>(null);\n  const [editPrice, setEditPrice] =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 70,
          "block": "const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 75,
          "block": "const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 71,
          "block": "const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 76,
          "block": "const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 72,
          "block": "return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 77,
          "block": "return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 73,
          "block": "year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 78,
          "block": "year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 87,
          "block": "const handleEditStart = (price: FuelPrice) => {\n    setEditingId(price.id);\n    setEditPrice(price.p..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 88,
          "block": "const handleEditStart = (price: FuelPrice) => {\n    setEditingId(price.id);\n    setEditPrice(price.p..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 101,
          "block": "const showPriceHistory = (fuelType: string) => {\n    setSelectedFuelType(fuelType);\n    setShowHisto..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 102,
          "block": "const showPriceHistory = (fuelType: string) => {\n    setSelectedFuelType(fuelType);\n    setShowHisto..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 104,
          "block": "setShowHistory(true);\n  };\n\n  const getChangeIcon = (change: number) => {\n    if (change > 0) return..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 133,
          "block": "setShowHistory(true);\n  };\n\n  const getChangeIcon = (change: number) => {\n    if (change > 0) return..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 132,
          "block": "<h1 className=\"management-title\">Fuel Pricing Management</h1>\n      <p className=\"management-desc\">\n..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
          "startLine": 133,
          "block": "<h1 className=\"management-title\">Fuel Pricing Management</h1>\n      <p className=\"management-desc\">\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\PetrolProviders.tsx",
          "startLine": 41,
          "block": "const { data: providersResponse } = useQuery({\n    queryKey: [\"petrol-providers\"],\n    queryFn: petr..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\PetrolProviders.tsx",
          "startLine": 42,
          "block": "const { data: providersResponse } = useQuery({\n    queryKey: [\"petrol-providers\"],\n    queryFn: petr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 48,
          "block": "export default function TanksPage() {\n  // Use tanks features hooks\n  const { data: tanks = [], isLo..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 49,
          "block": "export default function TanksPage() {\n  // Use tanks features hooks\n  const { data: tanks = [], isLo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 53,
          "block": "const [editingId, setEditingId] = useState<string | null>(null);\n  const [editLevel, setEditLevel] =..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 54,
          "block": "const [editingId, setEditingId] = useState<string | null>(null);\n  const [editLevel, setEditLevel] =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 58,
          "block": "// Fetch tank level changes when the modal is open\n  const { data: levelChanges = [], isLoading: isH..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 59,
          "block": "// Fetch tank level changes when the modal is open\n  const { data: levelChanges = [], isLoading: isH..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 107,
          "block": "const handleEditStart = (tank: FuelTank) => {\n    setEditingId(tank.id);\n    setEditLevel(tank.curre..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 108,
          "block": "const handleEditStart = (tank: FuelTank) => {\n    setEditingId(tank.id);\n    setEditLevel(tank.curre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 130,
          "block": "const showTankHistory = (tank: FuelTank) => {\n    setSelectedTank(tank);\n    setShowHistory(true);\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 131,
          "block": "const showTankHistory = (tank: FuelTank) => {\n    setSelectedTank(tank);\n    setShowHistory(true);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 141,
          "block": "const breadcrumbItems = [\n    { label: 'Fuel Operations', href: '/fuel' },\n    { label: 'Tank Manage..."
        },
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 142,
          "block": "const breadcrumbItems = [\n    { label: 'Fuel Operations', href: '/fuel' },\n    { label: 'Tank Manage..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 204,
          "block": "<div className=\"subnav-content\">\n            {/* Page Title Section */}\n            <div className=\"..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 25,
          "block": "<div className=\"subnav-content\">\n            {/* Page Title Section */}\n            <div className=\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 205,
          "block": "{/* Page Title Section */}\n            <div className=\"page-title-section\">\n              <h1 classN..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 26,
          "block": "{/* Page Title Section */}\n            <div className=\"page-title-section\">\n              <h1 classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\pages\\TanksPage.tsx",
          "startLine": 206,
          "block": "<div className=\"page-title-section\">\n              <h1 className=\"page-title\">\n                Tank ..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 27,
          "block": "<div className=\"page-title-section\">\n              <h1 className=\"page-title\">\n                Tank ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 86,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n\n    if (!response.data) ..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 112,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n\n    if (!response.data) ..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 156,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n\n    if (!response.data) ..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 198,
          "block": "if (response.error) {\n      throw new Error(response.error.message);\n    }\n\n    if (!response.data) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 90,
          "block": "if (!response.data) {\n      return null;\n    }\n\n    return adaptApiResponseToFeatureType(response.da..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 202,
          "block": "if (!response.data) {\n      return null;\n    }\n\n    return adaptApiResponseToFeatureType(response.da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 113,
          "block": "throw new Error(response.error.message);\n    }\n\n    if (!response.data) {\n      throw new Error(\"No ..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 157,
          "block": "throw new Error(response.error.message);\n    }\n\n    if (!response.data) {\n      throw new Error(\"No ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 116,
          "block": "if (!response.data) {\n      throw new Error(\"No data returned from API\");\n    }\n\n    return adaptApi..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 160,
          "block": "if (!response.data) {\n      throw new Error(\"No data returned from API\");\n    }\n\n    return adaptApi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 117,
          "block": "throw new Error(\"No data returned from API\");\n    }\n\n    return adaptApiResponseToFeatureType(respon..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuel-sales.service.ts",
          "startLine": 161,
          "block": "throw new Error(\"No data returned from API\");\n    }\n\n    return adaptApiResponseToFeatureType(respon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\services\\fuelSalesService.ts",
          "startLine": 26,
          "block": "const { data, error } = await supabase.functions.invoke(EDGE_FUNCTION_URL, {\n      method: \"GET\",\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\fuelSalesService.ts",
          "startLine": 27,
          "block": "const { data, error } = await supabase.functions.invoke(EDGE_FUNCTION_URL, {\n      method: \"GET\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\services\\index.ts",
          "startLine": 22,
          "block": "// Calculate summary statistics\n    const totalSales = sales.reduce((sum, sale) => sum + sale.total_..."
        },
        {
          "file": "src\\features\\fuel-management\\services\\index.ts",
          "startLine": 23,
          "block": "// Calculate summary statistics\n    const totalSales = sales.reduce((sum, sale) => sum + sale.total_..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 1,
          "block": "export interface FuelSupply {\n  id: string;\n  tank_id: string;\n  provider_id: string;\n  shift_id: st..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 14,
          "block": "export interface FuelSupply {\n  id: string;\n  tank_id: string;\n  provider_id: string;\n  shift_id: st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 3,
          "block": "tank_id: string;\n  provider_id: string;\n  shift_id: string;\n  quantity_liters: number;\n  price_per_l..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 18,
          "block": "tank_id: string;\n  provider_id: string;\n  shift_id: string;\n  quantity_liters: number;\n  price_per_l..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 16,
          "block": "tank_id: string;\n  provider_id: string;\n  shift_id: string;\n  quantity_liters: number;\n  price_per_l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 4,
          "block": "provider_id: string;\n  shift_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  tot..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 17,
          "block": "provider_id: string;\n  shift_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  tot..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 5,
          "block": "shift_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  deli..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 18,
          "block": "shift_id: string;\n  quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  deli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 6,
          "block": "quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  delivery_date: string;\n ..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 19,
          "block": "quantity_liters: number;\n  price_per_liter: number;\n  total_cost: number;\n  delivery_date: string;\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 7,
          "block": "price_per_liter: number;\n  total_cost: number;\n  delivery_date: string;\n  payment_method: string;\n  ..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 20,
          "block": "price_per_liter: number;\n  total_cost: number;\n  delivery_date: string;\n  payment_method: string;\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 8,
          "block": "total_cost: number;\n  delivery_date: string;\n  payment_method: string;\n  payment_status: string;\n  c..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 21,
          "block": "total_cost: number;\n  delivery_date: string;\n  payment_method: string;\n  payment_status: string;\n  c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 9,
          "block": "delivery_date: string;\n  payment_method: string;\n  payment_status: string;\n  comments: string;\n  cre..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 22,
          "block": "delivery_date: string;\n  payment_method: string;\n  payment_status: string;\n  comments: string;\n  cre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\types\\fuel-supplies.types.ts",
          "startLine": 10,
          "block": "payment_method: string;\n  payment_status: string;\n  comments: string;\n  created_at: string;\n  update..."
        },
        {
          "file": "src\\features\\fuel-management\\types\\fuel.types.ts",
          "startLine": 23,
          "block": "payment_method: string;\n  payment_status: string;\n  comments: string;\n  created_at: string;\n  update..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\utils\\export.ts",
          "startLine": 20,
          "block": "format(new Date(supply.delivery_date), \"yyyy-MM-dd\"),\n    supply.provider?.name || \"\",\n    supply.ta..."
        },
        {
          "file": "src\\features\\fuel-management\\utils\\export.ts",
          "startLine": 65,
          "block": "format(new Date(supply.delivery_date), \"yyyy-MM-dd\"),\n    supply.provider?.name || \"\",\n    supply.ta..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\fuel-management\\utils\\export.ts",
          "startLine": 90,
          "block": "interface AutoTableDoc extends jsPDF {\n    autoTable: (options: AutoTableOptions) => void;\n    lastA..."
        },
        {
          "file": "src\\features\\fuel-management\\utils\\export.ts",
          "startLine": 91,
          "block": "interface AutoTableDoc extends jsPDF {\n    autoTable: (options: AutoTableOptions) => void;\n    lastA..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 141,
          "block": "// Get page title and description from translations or use API translation helpers\n  const pageTitle..."
        },
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 142,
          "block": "// Get page title and description from translations or use API translation helpers\n  const pageTitle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 153,
          "block": "<div className=\"grid gap-6 md:grid-cols-2\">\n        <div>\n          <SupabaseConnectionStatus />\n   ..."
        },
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 154,
          "block": "<div className=\"grid gap-6 md:grid-cols-2\">\n        <div>\n          <SupabaseConnectionStatus />\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 220,
          "block": "{syncResult.timestamp.toLocaleTimeString()}\n                        </div>\n                      )}\n..."
        },
        {
          "file": "src\\features\\layout\\pages\\SyncUpPage.tsx",
          "startLine": 233,
          "block": "{syncResult.timestamp.toLocaleTimeString()}\n                        </div>\n                      )}\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 291,
          "block": "value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n               ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 434,
          "block": "value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n               ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 292,
          "block": "onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 bg-card ..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 435,
          "block": "onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 bg-card ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 293,
          "block": "className=\"pl-10 pr-4 py-2 bg-card border border-border rounded-lg text-card-foreground placeholder:..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 436,
          "block": "className=\"pl-10 pr-4 py-2 bg-card border border-border rounded-lg text-card-foreground placeholder:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 466,
          "block": "/>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 479,
          "block": "/>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 492,
          "block": "/>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 505,
          "block": "/>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 549,
          "block": "/>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 563,
          "block": "/>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 521,
          "block": "</select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"bloc..."
        },
        {
          "file": "src\\features\\management\\EmployeesPage.tsx",
          "startLine": 537,
          "block": "</select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"bloc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\FuelSystemsPage.tsx",
          "startLine": 33,
          "block": "</p>\n            </div>\n\n            {/* Content Area */}\n            <div className=\"management-car..."
        },
        {
          "file": "src\\features\\management\\TanksPage.tsx",
          "startLine": 33,
          "block": "</p>\n            </div>\n\n            {/* Content Area */}\n            <div className=\"management-car..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 52,
          "block": "color: 'border-black/30',\n    bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGrad..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 96,
          "block": "color: 'border-black/30',\n    bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGrad..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 139,
          "block": "color: 'border-black/30',\n    bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGrad..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 182,
          "block": "color: 'border-black/30',\n    bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGrad..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 53,
          "block": "bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGradient: 'from-black/80 to-black'..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 97,
          "block": "bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGradient: 'from-black/80 to-black'..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 140,
          "block": "bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGradient: 'from-black/80 to-black'..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 183,
          "block": "bgGradient: 'bg-gradient-to-br from-black/5 to-black/10',\n    iconGradient: 'from-black/80 to-black'..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 66,
          "block": "color: 'border-[#E3E263]/30',\n    bgGradient: 'bg-gradient-to-br from-[#E3E263]/5 to-[#E3E263]/10',\n..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 110,
          "block": "color: 'border-[#E3E263]/30',\n    bgGradient: 'bg-gradient-to-br from-[#E3E263]/5 to-[#E3E263]/10',\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 67,
          "block": "bgGradient: 'bg-gradient-to-br from-[#E3E263]/5 to-[#E3E263]/10',\n    iconGradient: 'from-[#E3E263]/..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 111,
          "block": "bgGradient: 'bg-gradient-to-br from-[#E3E263]/5 to-[#E3E263]/10',\n    iconGradient: 'from-[#E3E263]/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 80,
          "block": "color: 'border-[#A6A698]/30',\n    bgGradient: 'bg-gradient-to-br from-[#A6A698]/5 to-[#A6A698]/10',\n..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 166,
          "block": "color: 'border-[#A6A698]/30',\n    bgGradient: 'bg-gradient-to-br from-[#A6A698]/5 to-[#A6A698]/10',\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 81,
          "block": "bgGradient: 'bg-gradient-to-br from-[#A6A698]/5 to-[#A6A698]/10',\n    iconGradient: 'from-[#A6A698]/..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 167,
          "block": "bgGradient: 'bg-gradient-to-br from-[#A6A698]/5 to-[#A6A698]/10',\n    iconGradient: 'from-[#A6A698]/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 123,
          "block": "color: 'border-[#717181]/30',\n    bgGradient: 'bg-gradient-to-br from-[#717181]/5 to-[#717181]/10',\n..."
        },
        {
          "file": "src\\features\\management\\ManagementPage.tsx",
          "startLine": 196,
          "block": "color: 'border-[#717181]/30',\n    bgGradient: 'bg-gradient-to-br from-[#717181]/5 to-[#717181]/10',\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 181,
          "block": "onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['employees'] });\r\n      queryCl..."
        },
        {
          "file": "src\\features\\management\\pages\\ShiftsDashboard.tsx",
          "startLine": 201,
          "block": "onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['employees'] });\r\n      queryCl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 54,
          "block": "icon: LucideIcon;\r\n  color: string;\r\n  bgGradient: string;\r\n  iconGradient: string;\r\n  textColor: st..."
        },
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 69,
          "block": "icon: LucideIcon;\r\n  color: string;\r\n  bgGradient: string;\r\n  iconGradient: string;\r\n  textColor: st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 55,
          "block": "color: string;\r\n  bgGradient: string;\r\n  iconGradient: string;\r\n  textColor: string;\r\n  hoverBg: str..."
        },
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 70,
          "block": "color: string;\r\n  bgGradient: string;\r\n  iconGradient: string;\r\n  textColor: string;\r\n  hoverBg: str..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 218,
          "block": "export function NavigationPage() {\r\n  const { t } = useTranslation();\r\n  const [isLoading, setIsLoad..."
        },
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 219,
          "block": "export function NavigationPage() {\r\n  const { t } = useTranslation();\r\n  const [isLoading, setIsLoad..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 357,
          "block": "{/* Stats Shimmer */}\r\n          <div className=\"mb-12\">\r\n            <ShimmerStats count={4} varian..."
        },
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 358,
          "block": "{/* Stats Shimmer */}\r\n          <div className=\"mb-12\">\r\n            <ShimmerStats count={4} varian..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 362,
          "block": "{/* Navigation Cards Shimmer */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-..."
        },
        {
          "file": "src\\features\\navigations\\pages\\NavigationPage.tsx",
          "startLine": 363,
          "block": "{/* Navigation Cards Shimmer */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\reports\\hooks\\useReportGenerator.ts",
          "startLine": 118,
          "block": "// Function to get default end date (today)\n  function getDefaultEndDate(): string {\n    return new ..."
        },
        {
          "file": "src\\features\\reports\\hooks\\useReportGenerator.ts",
          "startLine": 119,
          "block": "// Function to get default end date (today)\n  function getDefaultEndDate(): string {\n    return new ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 133,
          "block": "await act(async () => {\n      await result.current.generateReport();\n    });\n\n    // Should have a r..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 160,
          "block": "await act(async () => {\n      await result.current.generateReport();\n    });\n\n    // Should have a r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 134,
          "block": "await result.current.generateReport();\n    });\n\n    // Should have a report result\n    expect(result..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 161,
          "block": "await result.current.generateReport();\n    });\n\n    // Should have a report result\n    expect(result..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 153,
          "block": "it(\"should clear report result\", async () => {\n    const { result } = renderHook(() =>\n      useRepo..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 154,
          "block": "it(\"should clear report result\", async () => {\n    const { result } = renderHook(() =>\n      useRepo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 175,
          "block": "it(\"should provide a download report function\", async () => {\n    const { result } = renderHook(() =..."
        },
        {
          "file": "src\\features\\reports\\hooks\\__tests__\\useReportGenerator.test.tsx",
          "startLine": 176,
          "block": "it(\"should provide a download report function\", async () => {\n    const { result } = renderHook(() =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\form\\PriceAndEmployeeInputs.tsx",
          "startLine": 6,
          "block": "interface PriceAndEmployeeInputsProps {\r\n  form: UseFormReturn<SalesFormData>;\r\n  control: Control<S..."
        },
        {
          "file": "src\\features\\sales\\components\\form\\PriceAndEmployeeInputs.tsx",
          "startLine": 7,
          "block": "interface PriceAndEmployeeInputsProps {\r\n  form: UseFormReturn<SalesFormData>;\r\n  control: Control<S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 31,
          "block": "customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: str..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 58,
          "block": "customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: str..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 55,
          "block": "customerName?: string;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: str..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 32,
          "block": "paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: string;\n  employeeId?: strin..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 56,
          "block": "paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  notes?: string;\n  employeeId?: strin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 221,
          "block": "const { t } = useTranslation();\n\n  // Watch for changes to calculate derived values\n  const unitPric..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 154,
          "block": "const { t } = useTranslation();\n\n  // Watch for changes to calculate derived values\n  const unitPric..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 222,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 155,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 223,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 156,
          "block": "// Watch for changes to calculate derived values\n  const unitPrice = useWatch({ control, name: \"unit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 224,
          "block": "const unitPrice = useWatch({ control, name: \"unitPrice\" });\n  const quantityLiters = useWatch({ cont..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 157,
          "block": "const unitPrice = useWatch({ control, name: \"unitPrice\" });\n  const quantityLiters = useWatch({ cont..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 225,
          "block": "const quantityLiters = useWatch({ control, name: \"quantityLiters\" });\n\n  // Calculate total sales wh..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 158,
          "block": "const quantityLiters = useWatch({ control, name: \"quantityLiters\" });\n\n  // Calculate total sales wh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 226,
          "block": "// Calculate total sales when quantity or unit price changes\n  useEffect(() => {\n    // Calculate to..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 159,
          "block": "// Calculate total sales when quantity or unit price changes\n  useEffect(() => {\n    // Calculate to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 227,
          "block": "// Calculate total sales when quantity or unit price changes\n  useEffect(() => {\n    // Calculate to..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 160,
          "block": "// Calculate total sales when quantity or unit price changes\n  useEffect(() => {\n    // Calculate to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 228,
          "block": "useEffect(() => {\n    // Calculate total sales\n    const calculatedTotal = quantityLiters * unitPric..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 161,
          "block": "useEffect(() => {\n    // Calculate total sales\n    const calculatedTotal = quantityLiters * unitPric..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 229,
          "block": "// Calculate total sales\n    const calculatedTotal = quantityLiters * unitPrice;\n    setTotalSales(c..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 162,
          "block": "// Calculate total sales\n    const calculatedTotal = quantityLiters * unitPrice;\n    setTotalSales(c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 230,
          "block": "const calculatedTotal = quantityLiters * unitPrice;\n    setTotalSales(calculatedTotal || 0);\n  }, [q..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 163,
          "block": "const calculatedTotal = quantityLiters * unitPrice;\n    setTotalSales(calculatedTotal || 0);\n  }, [q..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 231,
          "block": "setTotalSales(calculatedTotal || 0);\n  }, [quantityLiters, unitPrice, setTotalSales]);\n\n  return (\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 164,
          "block": "setTotalSales(calculatedTotal || 0);\n  }, [quantityLiters, unitPrice, setTotalSales]);\n\n  return (\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 232,
          "block": "}, [quantityLiters, unitPrice, setTotalSales]);\n\n  return (\n    <>\n      <div className=\"grid grid-c..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 165,
          "block": "}, [quantityLiters, unitPrice, setTotalSales]);\n\n  return (\n    <>\n      <div className=\"grid grid-c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 236,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 216,
          "block": "<div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormField\n          control={contro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 237,
          "block": "<FormField\n          control={control}\n          name=\"quantityLiters\"\n          render={({ field })..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 217,
          "block": "<FormField\n          control={control}\n          name=\"quantityLiters\"\n          render={({ field })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 269,
          "block": "<FormField\n          control={control}\n          name=\"unitPrice\"\n          render={({ field }) => (..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 236,
          "block": "<FormField\n          control={control}\n          name=\"unitPrice\"\n          render={({ field }) => (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesDialogsStandardized.tsx",
          "startLine": 307,
          "block": "<FormField\n        control={control}\n        name=\"notes\"\n        render={({ field }) => (\n         ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 319,
          "block": "<FormField\n        control={control}\n        name=\"notes\"\n        render={({ field }) => (\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 204,
          "block": "]}\n                  {...field}\n                />\n              </FormControl>\n              <FormM..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 309,
          "block": "]}\n                  {...field}\n                />\n              </FormControl>\n              <FormM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 205,
          "block": "{...field}\n                />\n              </FormControl>\n              <FormMessage />\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 310,
          "block": "{...field}\n                />\n              </FormControl>\n              <FormMessage />\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 223,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 242,
          "block": "<FormControl>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 224,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  {...field}\n  ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 243,
          "block": "<Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  {...field}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 225,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  {...field}\n                  onChange=..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 244,
          "block": "type=\"number\"\n                  step=\"0.01\"\n                  {...field}\n                  onChange=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 226,
          "block": "step=\"0.01\"\n                  {...field}\n                  onChange={(e) => field.onChange(parseFloa..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 245,
          "block": "step=\"0.01\"\n                  {...field}\n                  onChange={(e) => field.onChange(parseFloa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 227,
          "block": "{...field}\n                  onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n     ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 246,
          "block": "{...field}\n                  onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 228,
          "block": "onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n                />\n              <..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesFormStandardized.tsx",
          "startLine": 247,
          "block": "onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n                />\n              <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 14,
          "block": "litersRange: [number, number];\n  onLitersRangeChange: (range: [number, number]) => void;\n  priceRang..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 4,
          "block": "litersRange: [number, number];\n  onLitersRangeChange: (range: [number, number]) => void;\n  priceRang..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 15,
          "block": "onLitersRangeChange: (range: [number, number]) => void;\n  priceRange: [number, number];\n  onPriceRan..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 5,
          "block": "onLitersRangeChange: (range: [number, number]) => void;\n  priceRange: [number, number];\n  onPriceRan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 16,
          "block": "priceRange: [number, number];\n  onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesR..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 6,
          "block": "priceRange: [number, number];\n  onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesR..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesHeader.tsx",
          "startLine": 17,
          "block": "onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesRange: [number, number];\n  onTota..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 7,
          "block": "onPriceRangeChange: (range: [number, number]) => void;\n  totalSalesRange: [number, number];\n  onTota..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 149,
          "block": "e.target.value,\n                totalSalesRange,\n                onTotalSalesRangeChange\n           ..."
        },
        {
          "file": "src\\features\\sales\\components\\SalesRangesFilters.tsx",
          "startLine": 168,
          "block": "e.target.value,\n                totalSalesRange,\n                onTotalSalesRangeChange\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 69,
          "block": "amount: processedData.amount,\n            quantityLiters: processedData.quantityLiters,\n            ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 94,
          "block": "amount: processedData.amount,\n            quantityLiters: processedData.quantityLiters,\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 70,
          "block": "quantityLiters: processedData.quantityLiters,\n            unitPrice: processedData.unitPrice,\n      ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 95,
          "block": "quantityLiters: processedData.quantityLiters,\n            unitPrice: processedData.unitPrice,\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 71,
          "block": "unitPrice: processedData.unitPrice,\n            saleDate: processedData.saleDate,\n            fuelTy..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 96,
          "block": "unitPrice: processedData.unitPrice,\n            saleDate: processedData.saleDate,\n            fuelTy..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 72,
          "block": "saleDate: processedData.saleDate,\n            fuelType: processedData.fuelType,\n            customer..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 97,
          "block": "saleDate: processedData.saleDate,\n            fuelType: processedData.fuelType,\n            customer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 73,
          "block": "fuelType: processedData.fuelType,\n            customerName: processedData.customerName,\n            ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 98,
          "block": "fuelType: processedData.fuelType,\n            customerName: processedData.customerName,\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 74,
          "block": "customerName: processedData.customerName,\n            paymentMethod: processedData.paymentMethod,\n  ..."
        },
        {
          "file": "src\\features\\sales\\hooks\\useSalesDialog.ts",
          "startLine": 99,
          "block": "customerName: processedData.customerName,\n            paymentMethod: processedData.paymentMethod,\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 310,
          "block": "};\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateStrin..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 295,
          "block": "};\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateStrin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 321,
          "block": "if (metricsError) {\n    return (\n      <div className=\"p-6\">\n        <Card className=\"p-8 text-cente..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 304,
          "block": "if (metricsError) {\n    return (\n      <div className=\"p-6\">\n        <Card className=\"p-8 text-cente..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 322,
          "block": "return (\n      <div className=\"p-6\">\n        <Card className=\"p-8 text-center\">\n          <AlertCirc..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 305,
          "block": "return (\n      <div className=\"p-6\">\n        <Card className=\"p-8 text-center\">\n          <AlertCirc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 390,
          "block": "{metricsLoading ? '...' : metric.value}\n                    </p>\n                  </div>\n          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 373,
          "block": "{metricsLoading ? '...' : metric.value}\n                    </p>\n                  </div>\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 391,
          "block": "</p>\n                  </div>\n                </div>\n                {metric.trend && (\n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 374,
          "block": "</p>\n                  </div>\n                </div>\n                {metric.trend && (\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 392,
          "block": "</div>\n                </div>\n                {metric.trend && (\n                  <div className={`..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 375,
          "block": "</div>\n                </div>\n                {metric.trend && (\n                  <div className={`..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 393,
          "block": "</div>\n                {metric.trend && (\n                  <div className={`flex items-center space..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 376,
          "block": "</div>\n                {metric.trend && (\n                  <div className={`flex items-center space..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 394,
          "block": "{metric.trend && (\n                  <div className={`flex items-center space-x-1 ${metric.trend > 0..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 377,
          "block": "{metric.trend && (\n                  <div className={`flex items-center space-x-1 ${metric.trend > 0..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 395,
          "block": "<div className={`flex items-center space-x-1 ${metric.trend > 0 ? 'text-green-600' : 'text-red-600'}..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 378,
          "block": "<div className={`flex items-center space-x-1 ${metric.trend > 0 ? 'text-green-600' : 'text-red-600'}..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 396,
          "block": "{metric.trend > 0 ? (\n                      <TrendingUp className=\"h-4 w-4\" />\n                    )..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 379,
          "block": "{metric.trend > 0 ? (\n                      <TrendingUp className=\"h-4 w-4\" />\n                    )..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 397,
          "block": "<TrendingUp className=\"h-4 w-4\" />\n                    ) : (\n                      <TrendingDown cla..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 380,
          "block": "<TrendingUp className=\"h-4 w-4\" />\n                    ) : (\n                      <TrendingDown cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 403,
          "block": "</span>\n                  </div>\n                )}\n              </div>\n              <p className=..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 386,
          "block": "</span>\n                  </div>\n                )}\n              </div>\n              <p className=..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 404,
          "block": "</div>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-500 dar..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 387,
          "block": "</div>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-500 dar..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 405,
          "block": ")}\n              </div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 388,
          "block": ")}\n              </div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 412,
          "block": "))}\n      </div>\n\n      {/* View Mode Toggle */}\n      <div className=\"flex items-center justify-bet..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 395,
          "block": "))}\n      </div>\n\n      {/* View Mode Toggle */}\n      <div className=\"flex items-center justify-bet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 413,
          "block": "</div>\n\n      {/* View Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 396,
          "block": "</div>\n\n      {/* View Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 414,
          "block": "{/* View Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n        <div clas..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 397,
          "block": "{/* View Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n        <div clas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 415,
          "block": "{/* View Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n        <div clas..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 398,
          "block": "{/* View Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n        <div clas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 434,
          "block": "? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm'\n                  : 'text-g..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 406,
          "block": "? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm'\n                  : 'text-g..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 452,
          "block": "</div>\n        </div>\n\n        {/* Search and Filter */}\n        <div className=\"flex items-center s..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 424,
          "block": "</div>\n        </div>\n\n        {/* Search and Filter */}\n        <div className=\"flex items-center s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 453,
          "block": "</div>\n\n        {/* Search and Filter */}\n        <div className=\"flex items-center space-x-3\">\n    ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 425,
          "block": "</div>\n\n        {/* Search and Filter */}\n        <div className=\"flex items-center space-x-3\">\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 454,
          "block": "{/* Search and Filter */}\n        <div className=\"flex items-center space-x-3\">\n          <div class..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 426,
          "block": "{/* Search and Filter */}\n        <div className=\"flex items-center space-x-3\">\n          <div class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 455,
          "block": "{/* Search and Filter */}\n        <div className=\"flex items-center space-x-3\">\n          <div class..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 427,
          "block": "{/* Search and Filter */}\n        <div className=\"flex items-center space-x-3\">\n          <div class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 456,
          "block": "<div className=\"flex items-center space-x-3\">\n          <div className=\"relative\">\n            <Sear..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 428,
          "block": "<div className=\"flex items-center space-x-3\">\n          <div className=\"relative\">\n            <Sear..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 457,
          "block": "<div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -transla..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 429,
          "block": "<div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -transla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 458,
          "block": "<Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n    ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 430,
          "block": "<Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 459,
          "block": "<Input\n              placeholder={`Search ${viewMode}...`}\n              value={searchTerm}\n        ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 431,
          "block": "<Input\n              placeholder={`Search ${viewMode}...`}\n              value={searchTerm}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 460,
          "block": "placeholder={`Search ${viewMode}...`}\n              value={searchTerm}\n              onChange={(e) =..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 432,
          "block": "placeholder={`Search ${viewMode}...`}\n              value={searchTerm}\n              onChange={(e) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 461,
          "block": "value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              class..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 433,
          "block": "value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 494,
          "block": "initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  e..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 580,
          "block": "initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 495,
          "block": "animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  tra..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 581,
          "block": "animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  tra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 511,
          "block": "</p>\n                        </div>\n                      </div>\n                      \n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 599,
          "block": "</p>\n                        </div>\n                      </div>\n                      \n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 512,
          "block": "</div>\n                      </div>\n                      \n                      <div className=\"fle..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 600,
          "block": "</div>\n                      </div>\n                      \n                      <div className=\"fle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 543,
          "block": "<Badge variant={getStatusColor(sale.status) as any} className=\"capitalize\">\n                        ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 544,
          "block": "<Badge variant={getStatusColor(sale.status) as any} className=\"capitalize\">\n                        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 547,
          "block": "</Badge>\n                        \n                        <Button variant=\"ghost\" size=\"sm\">\n       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 646,
          "block": "</Badge>\n                        \n                        <Button variant=\"ghost\" size=\"sm\">\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 548,
          "block": "<Button variant=\"ghost\" size=\"sm\">\n                          <MoreVertical className=\"h-4 w-4\" />\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 647,
          "block": "<Button variant=\"ghost\" size=\"sm\">\n                          <MoreVertical className=\"h-4 w-4\" />\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 549,
          "block": "<Button variant=\"ghost\" size=\"sm\">\n                          <MoreVertical className=\"h-4 w-4\" />\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 501,
          "block": "<Button variant=\"ghost\" size=\"sm\">\n                          <MoreVertical className=\"h-4 w-4\" />\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 648,
          "block": "<Button variant=\"ghost\" size=\"sm\">\n                          <MoreVertical className=\"h-4 w-4\" />\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 550,
          "block": "<MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 502,
          "block": "<MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 649,
          "block": "<MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 576,
          "block": "</p>\n                      </div>\n                    )}\n                  </Card>\n                <..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 658,
          "block": "</p>\n                      </div>\n                    )}\n                  </Card>\n                <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 577,
          "block": "</div>\n                    )}\n                  </Card>\n                </motion.div>\n              ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 659,
          "block": "</div>\n                    )}\n                  </Card>\n                </motion.div>\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 592,
          "block": "initial={{ opacity: 0, scale: 0.95 }}\n                animate={{ opacity: 1, scale: 1 }}\n           ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 657,
          "block": "initial={{ opacity: 0, scale: 0.95 }}\n                animate={{ opacity: 1, scale: 1 }}\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 593,
          "block": "animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.95 }}\n              ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 658,
          "block": "animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.95 }}\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 594,
          "block": "exit={{ opacity: 0, scale: 0.95 }}\n                transition={{ delay: index * 0.05 }}\n            ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 659,
          "block": "exit={{ opacity: 0, scale: 0.95 }}\n                transition={{ delay: index * 0.05 }}\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 613,
          "block": "</div>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <MoreVertical cl..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 671,
          "block": "</div>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <MoreVertical cl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 614,
          "block": "<Button variant=\"ghost\" size=\"sm\">\n                      <MoreVertical className=\"h-4 w-4\" />\n      ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 672,
          "block": "<Button variant=\"ghost\" size=\"sm\">\n                      <MoreVertical className=\"h-4 w-4\" />\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 644,
          "block": "</div>\n                </Card>\n              </motion.div>\n            ))}\n          </AnimatePresen..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 709,
          "block": "</div>\n                </Card>\n              </motion.div>\n            ))}\n          </AnimatePresen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 732,
          "block": "<h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">\n            No {viewMod..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 683,
          "block": "<h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">\n            No {viewMod..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesDashboard.tsx",
          "startLine": 733,
          "block": "No {viewMode} Found\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 684,
          "block": "No {viewMode} Found\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 388,
          "block": "</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 372,
          "block": "</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 389,
          "block": "</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n           ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 430,
          "block": "</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n           ..."
        },
        {
          "file": "src\\features\\sales\\pages\\SalesMainPage.tsx",
          "startLine": 469,
          "block": "</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 334,
          "block": "</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
          "startLine": 373,
          "block": "</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\services\\index.ts",
          "startLine": 125,
          "block": "if (!response.data) {\n      throw new Error('No sale data returned from API');\n    }\n    \n    return..."
        },
        {
          "file": "src\\features\\sales\\services\\index.ts",
          "startLine": 143,
          "block": "if (!response.data) {\n      throw new Error('No sale data returned from API');\n    }\n    \n    return..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\services\\index.ts",
          "startLine": 126,
          "block": "throw new Error('No sale data returned from API');\n    }\n    \n    return adaptAPIToDomainSale(respon..."
        },
        {
          "file": "src\\features\\sales\\services\\index.ts",
          "startLine": 144,
          "block": "throw new Error('No sale data returned from API');\n    }\n    \n    return adaptAPIToDomainSale(respon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 17,
          "block": "notes?: string;\n  employeeId?: string;\n  fillingSystemId?: string;\n  meterStart?: number;\n  meterEnd..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 58,
          "block": "notes?: string;\n  employeeId?: string;\n  fillingSystemId?: string;\n  meterStart?: number;\n  meterEnd..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 18,
          "block": "employeeId?: string;\n  fillingSystemId?: string;\n  meterStart?: number;\n  meterEnd?: number;\n  shift..."
        },
        {
          "file": "src\\features\\sales\\types\\index.ts",
          "startLine": 59,
          "block": "employeeId?: string;\n  fillingSystemId?: string;\n  meterStart?: number;\n  meterEnd?: number;\n  shift..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\NotificationSettings.tsx",
          "startLine": 44,
          "block": "setIsLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => set..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 66,
          "block": "setIsLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => set..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\NotificationSettings.tsx",
          "startLine": 45,
          "block": "try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 67,
          "block": "try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 66,
          "block": "try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 96,
          "block": "try {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 1,
          "block": "import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 1,
          "block": "import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 3,
          "block": "import { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\n..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 3,
          "block": "import { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 178,
          "block": "<FormControl>\r\n                        <Input {...field} />\r\n                      </FormControl>\r\n ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 192,
          "block": "<FormControl>\r\n                        <Input {...field} />\r\n                      </FormControl>\r\n ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 228,
          "block": "<FormControl>\r\n                        <Input {...field} />\r\n                      </FormControl>\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 179,
          "block": "<Input {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 193,
          "block": "<Input {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 229,
          "block": "<Input {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 180,
          "block": "</FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n            ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 194,
          "block": "</FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n            ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 213,
          "block": "</FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n            ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 230,
          "block": "</FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n            ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 246,
          "block": "</FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n            ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 293,
          "block": "</FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 195,
          "block": "<FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n        ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 231,
          "block": "<FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n        ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 275,
          "block": "<FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n        ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 319,
          "block": "<FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 197,
          "block": ")}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:gr..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 233,
          "block": ")}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:gr..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 277,
          "block": ")}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:gr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 198,
          "block": "/>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 234,
          "block": "/>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 278,
          "block": "/>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 199,
          "block": "</div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <Fo..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 235,
          "block": "</div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <Fo..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 279,
          "block": "</div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 271,
          "block": "</SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n            ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 315,
          "block": "</SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 272,
          "block": "))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 316,
          "block": "))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 273,
          "block": "</SelectContent>\r\n                      </Select>\r\n                      <FormMessage />\r\n          ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 317,
          "block": "</SelectContent>\r\n                      </Select>\r\n                      <FormMessage />\r\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 274,
          "block": "</Select>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                 ..."
        },
        {
          "file": "src\\features\\settings\\components\\ProfileSettings.tsx",
          "startLine": 318,
          "block": "</Select>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 69,
          "block": "toast({\r\n        title: t(\"settings.passwordUpdated\", \"Password updated\"),\r\n        description: t(\"..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 70,
          "block": "toast({\r\n        title: t(\"settings.passwordUpdated\", \"Password updated\"),\r\n        description: t(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 160,
          "block": "/>\r\n                        <Button\r\n                          type=\"button\"\r\n                      ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 192,
          "block": "/>\r\n                        <Button\r\n                          type=\"button\"\r\n                      ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 224,
          "block": "/>\r\n                        <Button\r\n                          type=\"button\"\r\n                      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 161,
          "block": "<Button\r\n                          type=\"button\"\r\n                          variant=\"ghost\"\r\n       ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 193,
          "block": "<Button\r\n                          type=\"button\"\r\n                          variant=\"ghost\"\r\n       ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 225,
          "block": "<Button\r\n                          type=\"button\"\r\n                          variant=\"ghost\"\r\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 169,
          "block": "<EyeOff className=\"h-4 w-4\" />\r\n                          ) : (\r\n                            <Eye cl..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 201,
          "block": "<EyeOff className=\"h-4 w-4\" />\r\n                          ) : (\r\n                            <Eye cl..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 233,
          "block": "<EyeOff className=\"h-4 w-4\" />\r\n                          ) : (\r\n                            <Eye cl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 170,
          "block": ") : (\r\n                            <Eye className=\"h-4 w-4\" />\r\n                          )}\r\n      ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 202,
          "block": ") : (\r\n                            <Eye className=\"h-4 w-4\" />\r\n                          )}\r\n      ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 234,
          "block": ") : (\r\n                            <Eye className=\"h-4 w-4\" />\r\n                          )}\r\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 171,
          "block": "<Eye className=\"h-4 w-4\" />\r\n                          )}\r\n                        </Button>\r\n      ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 203,
          "block": "<Eye className=\"h-4 w-4\" />\r\n                          )}\r\n                        </Button>\r\n      ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 235,
          "block": "<Eye className=\"h-4 w-4\" />\r\n                          )}\r\n                        </Button>\r\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 172,
          "block": ")}\r\n                        </Button>\r\n                      </div>\r\n                    </FormContr..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 204,
          "block": ")}\r\n                        </Button>\r\n                      </div>\r\n                    </FormContr..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 236,
          "block": ")}\r\n                        </Button>\r\n                      </div>\r\n                    </FormContr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 173,
          "block": "</Button>\r\n                      </div>\r\n                    </FormControl>\r\n                    <Fo..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 205,
          "block": "</Button>\r\n                      </div>\r\n                    </FormControl>\r\n                    <Fo..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 237,
          "block": "</Button>\r\n                      </div>\r\n                    </FormControl>\r\n                    <Fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 174,
          "block": "</div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  <..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 206,
          "block": "</div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  <..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 238,
          "block": "</div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 175,
          "block": "</FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 207,
          "block": "</FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                ..."
        },
        {
          "file": "src\\features\\settings\\components\\SecuritySettings.tsx",
          "startLine": 239,
          "block": "</FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
          "startLine": 176,
          "block": ">\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>..."
        },
        {
          "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
          "startLine": 226,
          "block": ">\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>..."
        },
        {
          "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
          "startLine": 248,
          "block": ">\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
          "startLine": 184,
          "block": "</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n       ..."
        },
        {
          "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
          "startLine": 234,
          "block": "</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n       ..."
        },
        {
          "file": "src\\features\\settings\\components\\ThemeSettings.tsx",
          "startLine": 256,
          "block": "</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 1,
          "block": "import React, { memo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimpor..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 1,
          "block": "import React, { memo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimpor..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 1,
          "block": "import React, { memo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimpor..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 1,
          "block": "import React, { memo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimpor..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 1,
          "block": "import React, { memo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimpor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { useToast } from \"@/hooks\";\nimport { useRend..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { useToast } from \"@/hooks\";\nimport { useRend..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { useToast } from \"@/hooks\";\nimport { useRend..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { useToast } from \"@/hooks\";\nimport { useRend..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 2,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { useToast } from \"@/hooks\";\nimport { useRend..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 3,
          "block": "import { useToast } from \"@/hooks\";\nimport { useRenderCount } from \"@/utils/performance\";\n\n// UI com..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 3,
          "block": "import { useToast } from \"@/hooks\";\nimport { useRenderCount } from \"@/utils/performance\";\n\n// UI com..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 3,
          "block": "import { useToast } from \"@/hooks\";\nimport { useRenderCount } from \"@/utils/performance\";\n\n// UI com..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 3,
          "block": "import { useToast } from \"@/hooks\";\nimport { useRenderCount } from \"@/utils/performance\";\n\n// UI com..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 3,
          "block": "import { useToast } from \"@/hooks\";\nimport { useRenderCount } from \"@/utils/performance\";\n\n// UI com..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 49,
          "block": "};\n\n  // Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault(..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 66,
          "block": "};\n\n  // Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault(..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 93,
          "block": "};\n\n  // Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 50,
          "block": "// Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault();\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 67,
          "block": "// Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault();\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 94,
          "block": "// Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault();\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 51,
          "block": "// Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault();\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 68,
          "block": "// Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault();\n   ..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 95,
          "block": "// Handle form submission\n  const handleSave = (e: React.FormEvent) => {\n    e.preventDefault();\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 220,
          "block": "</div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveCh..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 240,
          "block": "</div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveCh..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 352,
          "block": "</div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveCh..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 486,
          "block": "</div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveCh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 221,
          "block": "</CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Butto..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 241,
          "block": "</CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Butto..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 353,
          "block": "</CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Butto..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 487,
          "block": "</CardContent>\n        <CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Butto..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 222,
          "block": "<CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 242,
          "block": "<CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 354,
          "block": "<CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 488,
          "block": "<CardFooter>\n          <Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AccountSettings.tsx",
          "startLine": 223,
          "block": "<Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter>\n      </Card>\n    </f..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 243,
          "block": "<Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter>\n      </Card>\n    </f..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 355,
          "block": "<Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter>\n      </Card>\n    </f..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 489,
          "block": "<Button type=\"submit\">{t(\"common.saveChanges\")}</Button>\n        </CardFooter>\n      </Card>\n    </f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 12,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/componen..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 11,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/componen..."
        },
        {
          "file": "src\\shared\\components\\dev\\DevToolsMenu.tsx",
          "startLine": 8,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/componen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 20,
          "block": "import { Label } from \"@/core/components/ui/label\";\nimport { Separator } from \"@/core/components/ui/..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 17,
          "block": "import { Label } from \"@/core/components/ui/label\";\nimport { Separator } from \"@/core/components/ui/..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 27,
          "block": "import { Label } from \"@/core/components/ui/label\";\nimport { Separator } from \"@/core/components/ui/..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 21,
          "block": "import { Separator } from \"@/core/components/ui/separator\";\nimport {\n  Select,\n  SelectContent,\n  Se..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 18,
          "block": "import { Separator } from \"@/core/components/ui/separator\";\nimport {\n  Select,\n  SelectContent,\n  Se..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 28,
          "block": "import { Separator } from \"@/core/components/ui/separator\";\nimport {\n  Select,\n  SelectContent,\n  Se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 155,
          "block": "</SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n ..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 176,
          "block": "</SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n ..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 205,
          "block": "</SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 157,
          "block": "</SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space..."
        },
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 178,
          "block": "</SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\AppearanceSettings.tsx",
          "startLine": 239,
          "block": "</div>\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 351,
          "block": "</div>\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 485,
          "block": "</div>\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\">..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 12,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/componen..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 12,
          "block": "CardHeader,\n  CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/componen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 13,
          "block": "CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/components/ui/button\";..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 13,
          "block": "CardTitle,\n} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/components/ui/button\";..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 14,
          "block": "} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { S..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 14,
          "block": "} from \"@/core/components/ui/card\";\nimport { Button } from \"@/core/components/ui/button\";\nimport { S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 95,
          "block": "</h3>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 177,
          "block": "</h3>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 295,
          "block": "</h3>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 274,
          "block": "</h3>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 339,
          "block": "</h3>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 421,
          "block": "</h3>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 96,
          "block": "</div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center just..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 296,
          "block": "</div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center just..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 275,
          "block": "</div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center just..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 340,
          "block": "</div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center just..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 422,
          "block": "</div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center just..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 113,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 130,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 147,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 195,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 217,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 239,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 261,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 313,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\NotificationSettings.tsx",
          "startLine": 331,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 244,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 292,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 309,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 357,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 374,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 391,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 441,
          "block": "/>\n              </div>\n\n              <div className=\"flex items-center justify-between space-x-2\">..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 16,
          "block": "import { Switch } from \"@/core/components/ui/switch\";\nimport { Label } from \"@/core/components/ui/la..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 26,
          "block": "import { Switch } from \"@/core/components/ui/switch\";\nimport { Label } from \"@/core/components/ui/la..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 50,
          "block": "// Privacy states\n  const [privacy, setPrivacy] = useState({\n    // Profile visibility\n    profileVi..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 51,
          "block": "// Privacy states\n  const [privacy, setPrivacy] = useState({\n    // Profile visibility\n    profileVi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 55,
          "block": "// Activity settings\n    activityVisibility: \"followers\",\n    showOnlineStatus: true,\n    shareActiv..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 56,
          "block": "// Activity settings\n    activityVisibility: \"followers\",\n    showOnlineStatus: true,\n    shareActiv..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 60,
          "block": "// Data collection\n    allowUsageData: true,\n    allowErrorReporting: true,\n    allowPersonalization..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 61,
          "block": "// Data collection\n    allowUsageData: true,\n    allowErrorReporting: true,\n    allowPersonalization..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 147,
          "block": "</span>\n                </Label>\n              </div>\n\n              <div className=\"flex items-star..."
        },
        {
          "file": "src\\features\\settings\\pages\\PrivacySettings.tsx",
          "startLine": 160,
          "block": "</span>\n                </Label>\n              </div>\n\n              <div className=\"flex items-star..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\ProfileSettings.tsx",
          "startLine": 12,
          "block": "function ProfileSettings() {\n  const { user, profile } = useAuth();\n  const [avatarUrl, setAvatarUrl..."
        },
        {
          "file": "src\\features\\settings\\pages\\ProfileSettings.tsx",
          "startLine": 13,
          "block": "function ProfileSettings() {\n  const { user, profile } = useAuth();\n  const [avatarUrl, setAvatarUrl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 70,
          "block": "// Hooks and utilities\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } fro..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 71,
          "block": "// Hooks and utilities\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } fro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 249,
          "block": "toast({\n        title: t(\"settings.security.logoutSuccess\"),\n        message: t(\"settings.security.l..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 250,
          "block": "toast({\n        title: t(\"settings.security.logoutSuccess\"),\n        message: t(\"settings.security.l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 267,
          "block": "const openLogoutDialog = (session: SessionDevice) => {\n    setLogoutSession(session);\n    setIsLogou..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 268,
          "block": "const openLogoutDialog = (session: SessionDevice) => {\n    setLogoutSession(session);\n    setIsLogou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 327,
          "block": "</FormLabel>\n                    <FormControl>\n                      <Input\n                        ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 368,
          "block": "</FormLabel>\n                    <FormControl>\n                      <Input\n                        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 328,
          "block": "<FormControl>\n                      <Input\n                        type=\"password\"\n                 ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 346,
          "block": "<FormControl>\n                      <Input\n                        type=\"password\"\n                 ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 369,
          "block": "<FormControl>\n                      <Input\n                        type=\"password\"\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 329,
          "block": "<Input\n                        type=\"password\"\n                        placeholder=\"••••••••\"\n      ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 347,
          "block": "<Input\n                        type=\"password\"\n                        placeholder=\"••••••••\"\n      ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 370,
          "block": "<Input\n                        type=\"password\"\n                        placeholder=\"••••••••\"\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 330,
          "block": "type=\"password\"\n                        placeholder=\"••••••••\"\n                        {...field}\n  ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 348,
          "block": "type=\"password\"\n                        placeholder=\"••••••••\"\n                        {...field}\n  ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 371,
          "block": "type=\"password\"\n                        placeholder=\"••••••••\"\n                        {...field}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 331,
          "block": "placeholder=\"••••••••\"\n                        {...field}\n                      />\n                 ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 372,
          "block": "placeholder=\"••••••••\"\n                        {...field}\n                      />\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 332,
          "block": "{...field}\n                      />\n                    </FormControl>\n                    <FormMess..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 373,
          "block": "{...field}\n                      />\n                    </FormControl>\n                    <FormMess..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 402,
          "block": "</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 586,
          "block": "</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div ..."
        },
        {
          "file": "src\\features\\settings\\pages\\SecuritySettings.tsx",
          "startLine": 693,
          "block": "</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\components\\ShiftMetricCard.tsx",
          "startLine": 128,
          "block": "{subtitle}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </..."
        },
        {
          "file": "src\\shared\\components\\layout\\WindowContainer.tsx",
          "startLine": 47,
          "block": "{subtitle}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 114,
          "block": "// Implement retry logic with backoff\n        let retryCount = 0;\n        const maxRetries = 3;\n    ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 115,
          "block": "// Implement retry logic with backoff\n        let retryCount = 0;\n        const maxRetries = 3;\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 186,
          "block": "// Fetch payment methods when shift changes\n  useEffect(() => {\n    if (activeShift) {\n      fetchSh..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 187,
          "block": "// Fetch payment methods when shift changes\n  useEffect(() => {\n    if (activeShift) {\n      fetchSh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 191,
          "block": "// Set up periodic refresh of sales total if there's an active shift\n      const intervalId = setInt..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 192,
          "block": "// Set up periodic refresh of sales total if there's an active shift\n      const intervalId = setInt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 193,
          "block": "const intervalId = setInterval(() => {\n        updateShiftSalesTotal(activeShift.id);\n      }, 30000..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 258,
          "block": "const intervalId = setInterval(() => {\n        updateShiftSalesTotal(activeShift.id);\n      }, 30000..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 254,
          "block": "const newShift = response.data;\n      if (newShift) {\n        setActiveShift(newShift as unknown as ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 255,
          "block": "const newShift = response.data;\n      if (newShift) {\n        setActiveShift(newShift as unknown as ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 285,
          "block": "description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoad..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 355,
          "block": "description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoad..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 315,
          "block": "id: \"\",\n          shift_id: activeShift.id,\n          payment_method: pm.payment_method as \"cash\" | ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 399,
          "block": "id: \"\",\n          shift_id: activeShift.id,\n          payment_method: pm.payment_method as \"cash\" | ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 316,
          "block": "shift_id: activeShift.id,\n          payment_method: pm.payment_method as \"cash\" | \"card\" | \"bank_tra..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 400,
          "block": "shift_id: activeShift.id,\n          payment_method: pm.payment_method as \"cash\" | \"card\" | \"bank_tra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 317,
          "block": "payment_method: pm.payment_method as \"cash\" | \"card\" | \"bank_transfer\" | \"mobile_payment\",\n         ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 401,
          "block": "payment_method: pm.payment_method as \"cash\" | \"card\" | \"bank_transfer\" | \"mobile_payment\",\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 318,
          "block": "amount: pm.amount,\n          notes: pm.reference || \"\",\n          created_at: \"\",\n          updated_..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 402,
          "block": "amount: pm.amount,\n          notes: pm.reference || \"\",\n          created_at: \"\",\n          updated_..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 386,
          "block": "if (!activeShift) {\n      toast({\n        title: \"Error\",\n        description: \"No active shift\",\n  ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 437,
          "block": "if (!activeShift) {\n      toast({\n        title: \"Error\",\n        description: \"No active shift\",\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 387,
          "block": "toast({\n        title: \"Error\",\n        description: \"No active shift\",\n        variant: \"destructiv..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 438,
          "block": "toast({\n        title: \"Error\",\n        description: \"No active shift\",\n        variant: \"destructiv..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 388,
          "block": "title: \"Error\",\n        description: \"No active shift\",\n        variant: \"destructive\",\n      });\n  ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 439,
          "block": "title: \"Error\",\n        description: \"No active shift\",\n        variant: \"destructive\",\n      });\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 409,
          "block": "if (response.error) {\n        throw new Error(response.error.message);\n      }\n\n      // Refresh pay..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 449,
          "block": "if (response.error) {\n        throw new Error(response.error.message);\n      }\n\n      // Refresh pay..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 410,
          "block": "throw new Error(response.error.message);\n      }\n\n      // Refresh payment methods\n      await fetch..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 450,
          "block": "throw new Error(response.error.message);\n      }\n\n      // Refresh payment methods\n      await fetch..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 413,
          "block": "// Refresh payment methods\n      await fetchShiftPaymentMethods(activeShift.id);\n\n      toast({\n    ..."
        },
        {
          "file": "src\\features\\shifts\\hooks\\useShift.ts",
          "startLine": 453,
          "block": "// Refresh payment methods\n      await fetchShiftPaymentMethods(activeShift.id);\n\n      toast({\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 5,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { PageLayout } from \"@/layouts/PageLayout\";\ni..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 4,
          "block": "import { useTranslation } from \"react-i18next\";\nimport { PageLayout } from \"@/layouts/PageLayout\";\ni..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 6,
          "block": "import { PageLayout } from \"@/layouts/PageLayout\";\nimport {\n  Card,\n  CardContent,\n  CardDescription..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 5,
          "block": "import { PageLayout } from \"@/layouts/PageLayout\";\nimport {\n  Card,\n  CardContent,\n  CardDescription..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 40,
          "block": "// Add a safe formatting function\nconst safeFormatDateTime = (dateString?: string | null): string =>..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 80,
          "block": "// Add a safe formatting function\nconst safeFormatDateTime = (dateString?: string | null): string =>..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 108,
          "block": "// Add a safe formatting function\nconst safeFormatDateTime = (dateString?: string | null): string =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 45,
          "block": "const date = new Date(dateString);\n    if (isNaN(date.getTime())) {\n      return \"-\";\n    }\n    retu..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 86,
          "block": "const date = new Date(dateString);\n    if (isNaN(date.getTime())) {\n      return \"-\";\n    }\n    retu..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 114,
          "block": "const date = new Date(dateString);\n    if (isNaN(date.getTime())) {\n      return \"-\";\n    }\n    retu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 46,
          "block": "if (isNaN(date.getTime())) {\n      return \"-\";\n    }\n    return formatDateTime(dateString);\n  } catc..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 87,
          "block": "if (isNaN(date.getTime())) {\n      return \"-\";\n    }\n    return formatDateTime(dateString);\n  } catc..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 115,
          "block": "if (isNaN(date.getTime())) {\n      return \"-\";\n    }\n    return formatDateTime(dateString);\n  } catc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 47,
          "block": "return \"-\";\n    }\n    return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Erro..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 88,
          "block": "return \"-\";\n    }\n    return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Erro..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 116,
          "block": "return \"-\";\n    }\n    return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Erro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 48,
          "block": "}\n    return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Error formatting dat..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 89,
          "block": "}\n    return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Error formatting dat..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 117,
          "block": "}\n    return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Error formatting dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 49,
          "block": "return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Error formatting date:\", e..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 90,
          "block": "return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Error formatting date:\", e..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 118,
          "block": "return formatDateTime(dateString);\n  } catch (error) {\n    console.error(\"Error formatting date:\", e..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 142,
          "block": "// Wait longer (3 seconds) before deciding to redirect\n          // This gives more time for the act..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 143,
          "block": "// Wait longer (3 seconds) before deciding to redirect\n          // This gives more time for the act..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 193,
          "block": "// Periodic check for active shift - runs after initial check is done\n  // eslint-disable-next-line ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 194,
          "block": "// Periodic check for active shift - runs after initial check is done\n  // eslint-disable-next-line ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 298,
          "block": "// Wait for the endShift operation to complete\n      try {\n        const result = await endShift(cas..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 299,
          "block": "// Wait for the endShift operation to complete\n      try {\n        const result = await endShift(cas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 354,
          "block": "</AlertTitle>\n            <AlertDescription>\n              {t(\"shifts.redirectingToShifts\")}\n       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 258,
          "block": "</AlertTitle>\n            <AlertDescription>\n              {t(\"shifts.redirectingToShifts\")}\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 357,
          "block": "</AlertDescription>\n          </Alert>\n          <div className=\"mt-4 text-center\">\n            <But..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 424,
          "block": "</AlertDescription>\n          </Alert>\n          <div className=\"mt-4 text-center\">\n            <But..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 358,
          "block": "</Alert>\n          <div className=\"mt-4 text-center\">\n            <Button\n              variant=\"out..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 425,
          "block": "</Alert>\n          <div className=\"mt-4 text-center\">\n            <Button\n              variant=\"out..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 359,
          "block": "<div className=\"mt-4 text-center\">\n            <Button\n              variant=\"outline\"\n             ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 426,
          "block": "<div className=\"mt-4 text-center\">\n            <Button\n              variant=\"outline\"\n             ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 360,
          "block": "<Button\n              variant=\"outline\"\n              className=\"mt-4\"\n              onClick={naviga..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 427,
          "block": "<Button\n              variant=\"outline\"\n              className=\"mt-4\"\n              onClick={naviga..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 361,
          "block": "variant=\"outline\"\n              className=\"mt-4\"\n              onClick={navigateToShifts}\n          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 428,
          "block": "variant=\"outline\"\n              className=\"mt-4\"\n              onClick={navigateToShifts}\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 362,
          "block": "className=\"mt-4\"\n              onClick={navigateToShifts}\n            >\n              {t(\"common.bac..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 429,
          "block": "className=\"mt-4\"\n              onClick={navigateToShifts}\n            >\n              {t(\"common.bac..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 363,
          "block": "onClick={navigateToShifts}\n            >\n              {t(\"common.backToShifts\")}\n            </Butt..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 430,
          "block": "onClick={navigateToShifts}\n            >\n              {t(\"common.backToShifts\")}\n            </Butt..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 439,
          "block": "// Special check to see if the active shift belongs to another user\n  // In this case, we still allo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 440,
          "block": "// Special check to see if the active shift belongs to another user\n  // In this case, we still allo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 457,
          "block": "{error && (\n          <Alert variant=\"destructive\" className=\"mb-4\">\n            <AlertCircle classN..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 283,
          "block": "{error && (\n          <Alert variant=\"destructive\" className=\"mb-4\">\n            <AlertCircle classN..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 458,
          "block": "<Alert variant=\"destructive\" className=\"mb-4\">\n            <AlertCircle className=\"h-4 w-4\" />\n     ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 284,
          "block": "<Alert variant=\"destructive\" className=\"mb-4\">\n            <AlertCircle className=\"h-4 w-4\" />\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 459,
          "block": "<AlertCircle className=\"h-4 w-4\" />\n            <AlertTitle>{t(\"common.error\")}</AlertTitle>\n       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 285,
          "block": "<AlertCircle className=\"h-4 w-4\" />\n            <AlertTitle>{t(\"common.error\")}</AlertTitle>\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 460,
          "block": "<AlertTitle>{t(\"common.error\")}</AlertTitle>\n            <AlertDescription>{error}</AlertDescription..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 286,
          "block": "<AlertTitle>{t(\"common.error\")}</AlertTitle>\n            <AlertDescription>{error}</AlertDescription..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 504,
          "block": "</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start s..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 516,
          "block": "</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start s..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 528,
          "block": "</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start s..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 318,
          "block": "</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start s..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 333,
          "block": "</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start s..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 348,
          "block": "</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-start s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 517,
          "block": "</div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 319,
          "block": "</div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 518,
          "block": "</div>\n\n              <div className=\"flex items-start space-x-3\">\n                <DollarSign class..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 320,
          "block": "</div>\n\n              <div className=\"flex items-start space-x-3\">\n                <DollarSign class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 519,
          "block": "<div className=\"flex items-start space-x-3\">\n                <DollarSign className=\"h-5 w-5 text-mut..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 321,
          "block": "<div className=\"flex items-start space-x-3\">\n                <DollarSign className=\"h-5 w-5 text-mut..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 529,
          "block": "</div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 334,
          "block": "</div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 530,
          "block": "</div>\n\n              <div className=\"flex items-start space-x-3\">\n                <Receipt classNam..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 335,
          "block": "</div>\n\n              <div className=\"flex items-start space-x-3\">\n                <Receipt classNam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftClose.tsx",
          "startLine": 531,
          "block": "<div className=\"flex items-start space-x-3\">\n                <Receipt className=\"h-5 w-5 text-muted-..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 336,
          "block": "<div className=\"flex items-start space-x-3\">\n                <Receipt className=\"h-5 w-5 text-muted-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 15,
          "block": "// Services\nimport { shiftsApi, salesApi, employeesApi } from \"@/core/api\";\nimport type { Shift, Sal..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 16,
          "block": "// Services\nimport { shiftsApi, salesApi, employeesApi } from \"@/core/api\";\nimport type { Shift, Sal..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 25,
          "block": "opening_cash: number;\n  closing_cash?: number;\n  sales_total?: number;\n  start_time: string;\n  end_t..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 39,
          "block": "opening_cash: number;\n  closing_cash?: number;\n  sales_total?: number;\n  start_time: string;\n  end_t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 67,
          "block": "const hours = Math.floor(diffMs / (1000 * 60 * 60));\n  const minutes = Math.floor((diffMs % (1000 * ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 76,
          "block": "const hours = Math.floor(diffMs / (1000 * 60 * 60));\n  const minutes = Math.floor((diffMs % (1000 * ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 79,
          "block": "};\n\n// Add a safe formatting function\nconst safeFormatDateTime = (dateString?: string | null): strin..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 107,
          "block": "};\n\n// Add a safe formatting function\nconst safeFormatDateTime = (dateString?: string | null): strin..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 81,
          "block": "// Add a safe formatting function\nconst safeFormatDateTime = (dateString?: string | null): string =>..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 109,
          "block": "// Add a safe formatting function\nconst safeFormatDateTime = (dateString?: string | null): string =>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 82,
          "block": "const safeFormatDateTime = (dateString?: string | null): string => {\n  if (!dateString) return \"-\";\n..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 110,
          "block": "const safeFormatDateTime = (dateString?: string | null): string => {\n  if (!dateString) return \"-\";\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 83,
          "block": "if (!dateString) return \"-\";\n  try {\n    // Validate the date is parseable\n    const date = new Date..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 111,
          "block": "if (!dateString) return \"-\";\n  try {\n    // Validate the date is parseable\n    const date = new Date..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 84,
          "block": "try {\n    // Validate the date is parseable\n    const date = new Date(dateString);\n    if (isNaN(dat..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 112,
          "block": "try {\n    // Validate the date is parseable\n    const date = new Date(dateString);\n    if (isNaN(dat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 85,
          "block": "// Validate the date is parseable\n    const date = new Date(dateString);\n    if (isNaN(date.getTime(..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 113,
          "block": "// Validate the date is parseable\n    const date = new Date(dateString);\n    if (isNaN(date.getTime(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 193,
          "block": "return (\n      <PageLayout\n        titleKey=\"shifts.shiftDetails\"\n        action={\n          <Button..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 235,
          "block": "return (\n      <PageLayout\n        titleKey=\"shifts.shiftDetails\"\n        action={\n          <Button..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 261,
          "block": "return (\n      <PageLayout\n        titleKey=\"shifts.shiftDetails\"\n        action={\n          <Button..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 194,
          "block": "<PageLayout\n        titleKey=\"shifts.shiftDetails\"\n        action={\n          <ButtonLink\n          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 236,
          "block": "<PageLayout\n        titleKey=\"shifts.shiftDetails\"\n        action={\n          <ButtonLink\n          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 262,
          "block": "<PageLayout\n        titleKey=\"shifts.shiftDetails\"\n        action={\n          <ButtonLink\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 195,
          "block": "titleKey=\"shifts.shiftDetails\"\n        action={\n          <ButtonLink\n            to=\"/finance/shift..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 237,
          "block": "titleKey=\"shifts.shiftDetails\"\n        action={\n          <ButtonLink\n            to=\"/finance/shift..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 263,
          "block": "titleKey=\"shifts.shiftDetails\"\n        action={\n          <ButtonLink\n            to=\"/finance/shift..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 196,
          "block": "action={\n          <ButtonLink\n            to=\"/finance/shifts\"\n            variant=\"outline\"\n      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 238,
          "block": "action={\n          <ButtonLink\n            to=\"/finance/shifts\"\n            variant=\"outline\"\n      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 264,
          "block": "action={\n          <ButtonLink\n            to=\"/finance/shifts\"\n            variant=\"outline\"\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 197,
          "block": "<ButtonLink\n            to=\"/finance/shifts\"\n            variant=\"outline\"\n          >\n            <..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 239,
          "block": "<ButtonLink\n            to=\"/finance/shifts\"\n            variant=\"outline\"\n          >\n            <..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 265,
          "block": "<ButtonLink\n            to=\"/finance/shifts\"\n            variant=\"outline\"\n          >\n            <..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 198,
          "block": "to=\"/finance/shifts\"\n            variant=\"outline\"\n          >\n            <ArrowLeft className=\"h-4..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 240,
          "block": "to=\"/finance/shifts\"\n            variant=\"outline\"\n          >\n            <ArrowLeft className=\"h-4..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 266,
          "block": "to=\"/finance/shifts\"\n            variant=\"outline\"\n          >\n            <ArrowLeft className=\"h-4..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 199,
          "block": "variant=\"outline\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"com..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 241,
          "block": "variant=\"outline\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"com..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 267,
          "block": "variant=\"outline\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"com..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 200,
          "block": ">\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"common.backToShifts\")}\n        ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 242,
          "block": ">\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"common.backToShifts\")}\n        ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 268,
          "block": ">\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"common.backToShifts\")}\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 201,
          "block": "<ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"common.backToShifts\")}\n          </ButtonLink..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 243,
          "block": "<ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"common.backToShifts\")}\n          </ButtonLink..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 269,
          "block": "<ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t(\"common.backToShifts\")}\n          </ButtonLink..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 202,
          "block": "{t(\"common.backToShifts\")}\n          </ButtonLink>\n        }\n      >\n        <div className=\"max-w-3..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 244,
          "block": "{t(\"common.backToShifts\")}\n          </ButtonLink>\n        }\n      >\n        <div className=\"max-w-3..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 270,
          "block": "{t(\"common.backToShifts\")}\n          </ButtonLink>\n        }\n      >\n        <div className=\"max-w-3..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 294,
          "block": "{t(\"common.backToShifts\")}\n        </ButtonLink>\n      }\n    >\n      <div className=\"max-w-3xl mx-au..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 278,
          "block": "{t(\"common.backToShifts\")}\n        </ButtonLink>\n      }\n    >\n      <div className=\"max-w-3xl mx-au..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 350,
          "block": "</h3>\n                    </div>\n                    <div className=\"space-y-3\">\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 396,
          "block": "</h3>\n                    </div>\n                    <div className=\"space-y-3\">\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 447,
          "block": "</h3>\n                    </div>\n                    <div className=\"space-y-3\">\n                   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 388,
          "block": "</div>\n                  </div>\n\n                  <div className=\"p-4 bg-muted/20 rounded-lg border..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 439,
          "block": "</div>\n                  </div>\n\n                  <div className=\"p-4 bg-muted/20 rounded-lg border..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 407,
          "block": "{shift.status === \"CLOSED\" &&\n                        shift.closing_cash !== undefined && (\n        ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 419,
          "block": "{shift.status === \"CLOSED\" &&\n                        shift.closing_cash !== undefined && (\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 519,
          "block": "</div>\n                      </div>\n                    </div>\n                  )}\n              </..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftDetails.tsx",
          "startLine": 593,
          "block": "</div>\n                      </div>\n                    </div>\n                  )}\n              </..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 201,
          "block": "// Handle form submission\n  const onSubmit = async (data: OpenShiftFormValues) => {\n    try {\n      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 202,
          "block": "// Handle form submission\n  const onSubmit = async (data: OpenShiftFormValues) => {\n    try {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 206,
          "block": "// If updating fuel prices is checked, update them before starting shift\n      if (data.updateFuelPr..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 207,
          "block": "// If updating fuel prices is checked, update them before starting shift\n      if (data.updateFuelPr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 432,
          "block": "</div>\n                            <FormMessage />\n                          </FormItem>\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 468,
          "block": "</div>\n                            <FormMessage />\n                          </FormItem>\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 523,
          "block": "</FormLabel>\n                                        <FormControl>\n                                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 557,
          "block": "</FormLabel>\n                                        <FormControl>\n                                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 655,
          "block": "</FormLabel>\n                                        <FormControl>\n                                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 524,
          "block": "<FormControl>\n                                          <div className=\"relative\">\n                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 558,
          "block": "<FormControl>\n                                          <div className=\"relative\">\n                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 590,
          "block": "<FormControl>\n                                          <div className=\"relative\">\n                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 622,
          "block": "<FormControl>\n                                          <div className=\"relative\">\n                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 656,
          "block": "<FormControl>\n                                          <div className=\"relative\">\n                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 525,
          "block": "<div className=\"relative\">\n                                            <span className=\"absolute lef..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 559,
          "block": "<div className=\"relative\">\n                                            <span className=\"absolute lef..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 591,
          "block": "<div className=\"relative\">\n                                            <span className=\"absolute lef..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 623,
          "block": "<div className=\"relative\">\n                                            <span className=\"absolute lef..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 657,
          "block": "<div className=\"relative\">\n                                            <span className=\"absolute lef..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 526,
          "block": "<span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground\">\n                  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 560,
          "block": "<span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground\">\n                  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 592,
          "block": "<span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground\">\n                  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 624,
          "block": "<span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground\">\n                  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 658,
          "block": "<span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground\">\n                  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 527,
          "block": "֏\n                                            </span>\n                                            <I..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 561,
          "block": "֏\n                                            </span>\n                                            <I..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 593,
          "block": "֏\n                                            </span>\n                                            <I..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 625,
          "block": "֏\n                                            </span>\n                                            <I..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 659,
          "block": "֏\n                                            </span>\n                                            <I..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 528,
          "block": "</span>\n                                            <Input\n                                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 562,
          "block": "</span>\n                                            <Input\n                                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 594,
          "block": "</span>\n                                            <Input\n                                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 626,
          "block": "</span>\n                                            <Input\n                                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 660,
          "block": "</span>\n                                            <Input\n                                         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 529,
          "block": "<Input\n                                              type=\"number\"\n                                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 563,
          "block": "<Input\n                                              type=\"number\"\n                                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 595,
          "block": "<Input\n                                              type=\"number\"\n                                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 627,
          "block": "<Input\n                                              type=\"number\"\n                                 ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 661,
          "block": "<Input\n                                              type=\"number\"\n                                 ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 530,
          "block": "type=\"number\"\n                                              className=\"pl-8\"\n                       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 564,
          "block": "type=\"number\"\n                                              className=\"pl-8\"\n                       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 596,
          "block": "type=\"number\"\n                                              className=\"pl-8\"\n                       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 628,
          "block": "type=\"number\"\n                                              className=\"pl-8\"\n                       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 662,
          "block": "type=\"number\"\n                                              className=\"pl-8\"\n                       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 531,
          "block": "className=\"pl-8\"\n                                              {...field}\n                          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 565,
          "block": "className=\"pl-8\"\n                                              {...field}\n                          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 597,
          "block": "className=\"pl-8\"\n                                              {...field}\n                          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 629,
          "block": "className=\"pl-8\"\n                                              {...field}\n                          ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 663,
          "block": "className=\"pl-8\"\n                                              {...field}\n                          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 532,
          "block": "{...field}\n                                              min={0}\n                                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 566,
          "block": "{...field}\n                                              min={0}\n                                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 598,
          "block": "{...field}\n                                              min={0}\n                                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 630,
          "block": "{...field}\n                                              min={0}\n                                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 664,
          "block": "{...field}\n                                              min={0}\n                                   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 533,
          "block": "min={0}\n                                              step={1}\n                                     ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 567,
          "block": "min={0}\n                                              step={1}\n                                     ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 599,
          "block": "min={0}\n                                              step={1}\n                                     ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 631,
          "block": "min={0}\n                                              step={1}\n                                     ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 665,
          "block": "min={0}\n                                              step={1}\n                                     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 534,
          "block": "step={1}\n                                              onChange={(e) =>\n                            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 568,
          "block": "step={1}\n                                              onChange={(e) =>\n                            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 600,
          "block": "step={1}\n                                              onChange={(e) =>\n                            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 632,
          "block": "step={1}\n                                              onChange={(e) =>\n                            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 666,
          "block": "step={1}\n                                              onChange={(e) =>\n                            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 535,
          "block": "onChange={(e) =>\n                                                field.onChange(\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 569,
          "block": "onChange={(e) =>\n                                                field.onChange(\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 601,
          "block": "onChange={(e) =>\n                                                field.onChange(\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 633,
          "block": "onChange={(e) =>\n                                                field.onChange(\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 667,
          "block": "onChange={(e) =>\n                                                field.onChange(\n                   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 536,
          "block": "field.onChange(\n                                                  e.target.value === \"\"\n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 570,
          "block": "field.onChange(\n                                                  e.target.value === \"\"\n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 602,
          "block": "field.onChange(\n                                                  e.target.value === \"\"\n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 634,
          "block": "field.onChange(\n                                                  e.target.value === \"\"\n            ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 668,
          "block": "field.onChange(\n                                                  e.target.value === \"\"\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 537,
          "block": "e.target.value === \"\"\n                                                    ? 0\n                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 571,
          "block": "e.target.value === \"\"\n                                                    ? 0\n                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 603,
          "block": "e.target.value === \"\"\n                                                    ? 0\n                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 635,
          "block": "e.target.value === \"\"\n                                                    ? 0\n                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 669,
          "block": "e.target.value === \"\"\n                                                    ? 0\n                      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 538,
          "block": "? 0\n                                                    : Number(e.target.value)\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 572,
          "block": "? 0\n                                                    : Number(e.target.value)\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 604,
          "block": "? 0\n                                                    : Number(e.target.value)\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 636,
          "block": "? 0\n                                                    : Number(e.target.value)\n                   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 670,
          "block": "? 0\n                                                    : Number(e.target.value)\n                   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 539,
          "block": ": Number(e.target.value)\n                                                )\n                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 573,
          "block": ": Number(e.target.value)\n                                                )\n                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 605,
          "block": ": Number(e.target.value)\n                                                )\n                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 637,
          "block": ": Number(e.target.value)\n                                                )\n                         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 671,
          "block": ": Number(e.target.value)\n                                                )\n                         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 540,
          "block": ")\n                                              }\n                                            />\n   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 574,
          "block": ")\n                                              }\n                                            />\n   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 606,
          "block": ")\n                                              }\n                                            />\n   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 638,
          "block": ")\n                                              }\n                                            />\n   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 672,
          "block": ")\n                                              }\n                                            />\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 541,
          "block": "}\n                                            />\n                                          </div>\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 575,
          "block": "}\n                                            />\n                                          </div>\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 607,
          "block": "}\n                                            />\n                                          </div>\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 639,
          "block": "}\n                                            />\n                                          </div>\n  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 673,
          "block": "}\n                                            />\n                                          </div>\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 542,
          "block": "/>\n                                          </div>\n                                        </FormCo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 576,
          "block": "/>\n                                          </div>\n                                        </FormCo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 608,
          "block": "/>\n                                          </div>\n                                        </FormCo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 640,
          "block": "/>\n                                          </div>\n                                        </FormCo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 674,
          "block": "/>\n                                          </div>\n                                        </FormCo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 543,
          "block": "</div>\n                                        </FormControl>\n                                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 577,
          "block": "</div>\n                                        </FormControl>\n                                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 609,
          "block": "</div>\n                                        </FormControl>\n                                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 641,
          "block": "</div>\n                                        </FormControl>\n                                      ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 675,
          "block": "</div>\n                                        </FormControl>\n                                      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 544,
          "block": "</FormControl>\n                                        <FormMessage />\n                             ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 578,
          "block": "</FormControl>\n                                        <FormMessage />\n                             ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 610,
          "block": "</FormControl>\n                                        <FormMessage />\n                             ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 642,
          "block": "</FormControl>\n                                        <FormMessage />\n                             ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 676,
          "block": "</FormControl>\n                                        <FormMessage />\n                             ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 545,
          "block": "<FormMessage />\n                                      </FormItem>\n                                  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 579,
          "block": "<FormMessage />\n                                      </FormItem>\n                                  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 611,
          "block": "<FormMessage />\n                                      </FormItem>\n                                  ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 643,
          "block": "<FormMessage />\n                                      </FormItem>\n                                  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 546,
          "block": "</FormItem>\n                                    )}\n                                  />\n\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 580,
          "block": "</FormItem>\n                                    )}\n                                  />\n\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 612,
          "block": "</FormItem>\n                                    )}\n                                  />\n\n           ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 644,
          "block": "</FormItem>\n                                    )}\n                                  />\n\n           ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 547,
          "block": ")}\n                                  />\n\n                                  <FormField\n              ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 581,
          "block": ")}\n                                  />\n\n                                  <FormField\n              ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 613,
          "block": ")}\n                                  />\n\n                                  <FormField\n              ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftOpen.tsx",
          "startLine": 645,
          "block": ")}\n                                  />\n\n                                  <FormField\n              ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 134,
          "block": "// Add console log to debug activeShift state\n  useEffect(() => {\n    console.log(\"Shifts page - act..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 135,
          "block": "// Add console log to debug activeShift state\n  useEffect(() => {\n    console.log(\"Shifts page - act..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 207,
          "block": "// Apply status filter\n    if (statusFilter !== \"all\") {\n      result = result.filter((shift) => shi..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 208,
          "block": "// Apply status filter\n    if (statusFilter !== \"all\") {\n      result = result.filter((shift) => shi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 281,
          "block": "// Check if the active shift is already in the history (to avoid double counting)\n    const activeSh..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 282,
          "block": "// Check if the active shift is already in the history (to avoid double counting)\n    const activeSh..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 290,
          "block": "return { activeShifts, totalShifts, closedShifts, totalSales };\n  };\n\n  const metrics = calculateMet..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 291,
          "block": "return { activeShifts, totalShifts, closedShifts, totalSales };\n  };\n\n  const metrics = calculateMet..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 295,
          "block": "// Navigate to shift details\n  const viewShiftDetails = (shift: ShiftHistoryItem) => {\n    navigate(..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 296,
          "block": "// Navigate to shift details\n  const viewShiftDetails = (shift: ShiftHistoryItem) => {\n    navigate(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 345,
          "block": ": \"-\"}\n                  </div>\n                </div>\n                <div className=\"space-y-1\">\n ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 355,
          "block": ": \"-\"}\n                  </div>\n                </div>\n                <div className=\"space-y-1\">\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 402,
          "block": "</CardContent>\n          </Card>\n          <Card>\n            <CardHeader className=\"p-4\">\n         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 412,
          "block": "</CardContent>\n          </Card>\n          <Card>\n            <CardHeader className=\"p-4\">\n         ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\Shifts.tsx",
          "startLine": 422,
          "block": "</CardContent>\n          </Card>\n          <Card>\n            <CardHeader className=\"p-4\">\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 165,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['employees'] });\n      queryClie..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 185,
          "block": "onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['employees'] });\n      queryClie..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 642,
          "block": "<Badge variant={getStatusColor(shift.status) as any} className=\"capitalize\">\n                       ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
          "startLine": 643,
          "block": "<Badge variant={getStatusColor(shift.status) as any} className=\"capitalize\">\n                       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 49,
          "block": "DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '@/core/c..."
        },
        {
          "file": "src\\shared\\components\\ui\\theme-toggle.tsx",
          "startLine": 13,
          "block": "DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '@/core/c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 108,
          "block": "const ShiftsManagementContent: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const queryC..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 109,
          "block": "const ShiftsManagementContent: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const queryC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 183,
          "block": "if (filters.employee && filters.employee !== 'all-employees') {\r\n      // Filter by employee if need..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 184,
          "block": "if (filters.employee && filters.employee !== 'all-employees') {\r\n      // Filter by employee if need..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 367,
          "block": "return (\r\n      <PageContainer\r\n        title=\"Shifts Management\"\r\n        description=\"Manage emplo..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 398,
          "block": "return (\r\n      <PageContainer\r\n        title=\"Shifts Management\"\r\n        description=\"Manage emplo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 368,
          "block": "<PageContainer\r\n        title=\"Shifts Management\"\r\n        description=\"Manage employee shifts, trac..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 399,
          "block": "<PageContainer\r\n        title=\"Shifts Management\"\r\n        description=\"Manage employee shifts, trac..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 369,
          "block": "title=\"Shifts Management\"\r\n        description=\"Manage employee shifts, track working hours, and mon..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 400,
          "block": "title=\"Shifts Management\"\r\n        description=\"Manage employee shifts, track working hours, and mon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 370,
          "block": "description=\"Manage employee shifts, track working hours, and monitor cash flow\"\r\n        breadcrumb..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 401,
          "block": "description=\"Manage employee shifts, track working hours, and monitor cash flow\"\r\n        breadcrumb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 371,
          "block": "breadcrumbItems={[\r\n          { label: 'Management', href: '/management' },\r\n          { label: 'Shi..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
          "startLine": 402,
          "block": "breadcrumbItems={[\r\n          { label: 'Management', href: '/management' },\r\n          { label: 'Shi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 107,
          "block": "const { data: metrics, isLoading: metricsLoading } = useQuery({\n    queryKey: ['shift-metrics'],\n   ..."
        },
        {
          "file": "src\\features\\shifts\\pages\\ShiftsPage.tsx",
          "startLine": 108,
          "block": "const { data: metrics, isLoading: metricsLoading } = useQuery({\n    queryKey: ['shift-metrics'],\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 4,
          "block": "// Type that matches what the edge function expects\ntype CreateShiftPaymentMethod = Omit<ShiftPaymen..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 5,
          "block": "// Type that matches what the edge function expects\ntype CreateShiftPaymentMethod = Omit<ShiftPaymen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 13,
          "block": "): Promise<ShiftPaymentMethod[]> {\n  try {\n    // Validate shiftId\n    if (!shiftId || typeof shiftI..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 75,
          "block": "): Promise<ShiftPaymentMethod[]> {\n  try {\n    // Validate shiftId\n    if (!shiftId || typeof shiftI..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 14,
          "block": "try {\n    // Validate shiftId\n    if (!shiftId || typeof shiftId !== \"string\" || shiftId.trim() === ..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 76,
          "block": "try {\n    // Validate shiftId\n    if (!shiftId || typeof shiftId !== \"string\" || shiftId.trim() === ..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 99,
          "block": "try {\n    // Validate shiftId\n    if (!shiftId || typeof shiftId !== \"string\" || shiftId.trim() === ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 15,
          "block": "// Validate shiftId\n    if (!shiftId || typeof shiftId !== \"string\" || shiftId.trim() === \"\") {\n    ..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 77,
          "block": "// Validate shiftId\n    if (!shiftId || typeof shiftId !== \"string\" || shiftId.trim() === \"\") {\n    ..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 100,
          "block": "// Validate shiftId\n    if (!shiftId || typeof shiftId !== \"string\" || shiftId.trim() === \"\") {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 19,
          "block": "// Validate payment methods array\n    if (!Array.isArray(paymentMethods) || paymentMethods.length ==..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 20,
          "block": "// Validate payment methods array\n    if (!Array.isArray(paymentMethods) || paymentMethods.length ==..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 55,
          "block": "const response = await shiftsApi.addShiftPaymentMethods(\n      shiftId,\n      validatedPayments as S..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 56,
          "block": "const response = await shiftsApi.addShiftPaymentMethods(\n      shiftId,\n      validatedPayments as S..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 60,
          "block": "if (response.error) {\n      console.error(\"Error adding shift payment methods:\", response.error);\n  ..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 61,
          "block": "if (response.error) {\n      console.error(\"Error adding shift payment methods:\", response.error);\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 63,
          "block": "throw new Error(response.error.message);\n    }\n\n    return response.data || [];\n  } catch (err: unkn..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 86,
          "block": "throw new Error(response.error.message);\n    }\n\n    return response.data || [];\n  } catch (err: unkn..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 83,
          "block": "if (response.error) {\n      console.error(\"Error fetching shift payment methods:\", response.error);\n..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 84,
          "block": "if (response.error) {\n      console.error(\"Error fetching shift payment methods:\", response.error);\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 106,
          "block": "if (response.error) {\n      console.error(\"Error deleting shift payment methods:\", response.error);\n..."
        },
        {
          "file": "src\\features\\shifts\\services\\shift-payment-methods.ts",
          "startLine": 107,
          "block": "if (response.error) {\n      console.error(\"Error deleting shift payment methods:\", response.error);\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 3,
          "block": "getShifts,\n  getShiftById,\n  getShiftPaymentMethods,\n  addShiftPaymentMethods,\n  deleteShiftPaymentM..."
        },
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 22,
          "block": "getShifts,\n  getShiftById,\n  getShiftPaymentMethods,\n  addShiftPaymentMethods,\n  deleteShiftPaymentM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 35,
          "block": "const response = await apiStartShift(openingCash, employeeIds);\n    if (response.error) {\n      thro..."
        },
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 36,
          "block": "const response = await apiStartShift(openingCash, employeeIds);\n    if (response.error) {\n      thro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 74,
          "block": "const response = await apiCloseShift(shiftId, closingCash, shiftPaymentMethods);\n    if (response.er..."
        },
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 75,
          "block": "const response = await apiCloseShift(shiftId, closingCash, shiftPaymentMethods);\n    if (response.er..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 164,
          "block": "if (!activeShift) {\n      console.log(`No active shift found for user ${userId}`);\n      return null..."
        },
        {
          "file": "src\\features\\shifts\\services\\shifts.ts",
          "startLine": 165,
          "block": "if (!activeShift) {\n      console.log(`No active shift found for user ${userId}`);\n      return null..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useCentralizedEntity.ts",
          "startLine": 134,
          "block": "setData(prev => prev.map(item => item.id === id ? updated : item));\r\n      return updated;\r\n    });\r..."
        },
        {
          "file": "src\\hooks\\useCentralizedEntity.ts",
          "startLine": 155,
          "block": "setData(prev => prev.map(item => item.id === id ? updated : item));\r\n      return updated;\r\n    });\r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useCentralizedEntity.ts",
          "startLine": 307,
          "block": "/**\r\n * Migration helpers for existing code\r\n * These provide backward compatibility while transitio..."
        },
        {
          "file": "src\\hooks\\useCentralizedEntity.ts",
          "startLine": 308,
          "block": "/**\r\n * Migration helpers for existing code\r\n * These provide backward compatibility while transitio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useResponsive.ts",
          "startLine": 152,
          "block": "// Media query listeners for accessibility preferences\r\n    const reducedMotionQuery = window.matchM..."
        },
        {
          "file": "src\\hooks\\useResponsive.ts",
          "startLine": 153,
          "block": "// Media query listeners for accessibility preferences\r\n    const reducedMotionQuery = window.matchM..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useResponsive.ts",
          "startLine": 179,
          "block": "// Memoized responsive state calculation\r\n  const responsiveState = useMemo((): ResponsiveState => {..."
        },
        {
          "file": "src\\hooks\\useResponsive.ts",
          "startLine": 180,
          "block": "// Memoized responsive state calculation\r\n  const responsiveState = useMemo((): ResponsiveState => {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 53,
          "block": "// Employees Hook - Now using centralized hook\r\nexport function useEmployees() {\r\n  return useCentra..."
        },
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 54,
          "block": "// Employees Hook - Now using centralized hook\r\nexport function useEmployees() {\r\n  return useCentra..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 58,
          "block": "// Filling Systems Hook - Now using centralized hook\r\nexport function useFillingSystems() {\r\n  retur..."
        },
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 59,
          "block": "// Filling Systems Hook - Now using centralized hook\r\nexport function useFillingSystems() {\r\n  retur..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 224,
          "block": "// Financial Hook\r\nexport function useFinancials() {\r\n  const [loading, setLoading] = useState(false..."
        },
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 225,
          "block": "// Financial Hook\r\nexport function useFinancials() {\r\n  const [loading, setLoading] = useState(false..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 309,
          "block": "if (result.user?.id) {\r\n        const userProfile = await AuthService.getProfile(result.user.id);\r\n ..."
        },
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 310,
          "block": "if (result.user?.id) {\r\n        const userProfile = await AuthService.getProfile(result.user.id);\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 341,
          "block": "if (currentUser?.id) {\r\n        const userProfile = await AuthService.getProfile(currentUser.id);\r\n ..."
        },
        {
          "file": "src\\hooks\\useSupabase.ts",
          "startLine": 342,
          "block": "if (currentUser?.id) {\r\n        const userProfile = await AuthService.getProfile(currentUser.id);\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\i18n\\api-translations.ts",
          "startLine": 38,
          "block": "entityName?: string\n): string => {\n  // Entity name defaults to module name if not provided\n  const ..."
        },
        {
          "file": "src\\i18n\\api-translations.ts",
          "startLine": 79,
          "block": "entityName?: string\n): string => {\n  // Entity name defaults to module name if not provided\n  const ..."
        },
        {
          "file": "src\\i18n\\api-translations.ts",
          "startLine": 116,
          "block": "entityName?: string\n): string => {\n  // Entity name defaults to module name if not provided\n  const ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\i18n\\i18n.ts",
          "startLine": 45,
          "block": "// Ensure default language is set to Armenian\nif (!localStorage.getItem(\"i18nextLng\")) {\n  localStor..."
        },
        {
          "file": "src\\i18n\\i18n.ts",
          "startLine": 46,
          "block": "// Ensure default language is set to Armenian\nif (!localStorage.getItem(\"i18nextLng\")) {\n  localStor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 160,
          "block": "period: string;\n          profit: number;\n          total_expenses: number;\n          total_sales: n..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 168,
          "block": "period: string;\n          profit: number;\n          total_expenses: number;\n          total_sales: n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 276,
          "block": "end_time?: string | null;\n          id?: string;\n          opening_cash?: number;\n          sales_to..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 288,
          "block": "end_time?: string | null;\n          id?: string;\n          opening_cash?: number;\n          sales_to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 277,
          "block": "id?: string;\n          opening_cash?: number;\n          sales_total?: number;\n          start_time?:..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 289,
          "block": "id?: string;\n          opening_cash?: number;\n          sales_total?: number;\n          start_time?:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 278,
          "block": "opening_cash?: number;\n          sales_total?: number;\n          start_time?: string;\n          stat..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 290,
          "block": "opening_cash?: number;\n          sales_total?: number;\n          start_time?: string;\n          stat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 279,
          "block": "sales_total?: number;\n          start_time?: string;\n          status?: string;\n          updated_at..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 291,
          "block": "sales_total?: number;\n          start_time?: string;\n          status?: string;\n          updated_at..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 352,
          "block": "DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof Da..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 375,
          "block": "DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof Da..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 353,
          "block": "| keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof Database },\n  TableName extends DefaultSchemaT..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 376,
          "block": "| keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof Database },\n  TableName extends DefaultSchemaT..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 354,
          "block": "| { schema: keyof Database },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    sche..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 377,
          "block": "| { schema: keyof Database },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    sche..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 355,
          "block": "TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? ke..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 378,
          "block": "TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? ke..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 356,
          "block": "schema: keyof Database;\n  }\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 379,
          "block": "schema: keyof Database;\n  }\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 357,
          "block": "}\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> =..."
        },
        {
          "file": "src\\integrations\\supabase\\types.ts",
          "startLine": 380,
          "block": "}\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\layouts\\MainLayout.tsx",
          "startLine": 14,
          "block": "export function MainLayout({ children }: MainLayoutProps) {\n  const { pathname } = useLocation();\n  ..."
        },
        {
          "file": "src\\layouts\\MainLayout.tsx",
          "startLine": 15,
          "block": "export function MainLayout({ children }: MainLayoutProps) {\n  const { pathname } = useLocation();\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 2,
          "block": "/**\n * Consolidated formatting utility functions for consistent data display\n * Supports multiple lo..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 3,
          "block": "/**\n * Consolidated formatting utility functions for consistent data display\n * Supports multiple lo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 23,
          "block": "try {\n    const dateObj = date instanceof Date ? date : \n                   typeof date === \"string\"..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 24,
          "block": "try {\n    const dateObj = date instanceof Date ? date : \n                   typeof date === \"string\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 30,
          "block": "// If it's a date-fns format string, use date-fns\n    if (typeof formatString === \"string\") {\n      ..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 31,
          "block": "// If it's a date-fns format string, use date-fns\n    if (typeof formatString === \"string\") {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 81,
          "block": "const value = typeof amount === \"string\" ? parseFloat(amount) : amount;\n  if (isNaN(value)) return \"..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 82,
          "block": "const value = typeof amount === \"string\" ? parseFloat(amount) : amount;\n  if (isNaN(value)) return \"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 139,
          "block": "): string {\n  if (value === null || value === undefined) return \"\";\n\n  const numValue = typeof value..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 175,
          "block": "): string {\n  if (value === null || value === undefined) return \"\";\n\n  const numValue = typeof value..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 140,
          "block": "if (value === null || value === undefined) return \"\";\n\n  const numValue = typeof value === \"string\" ..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 176,
          "block": "if (value === null || value === undefined) return \"\";\n\n  const numValue = typeof value === \"string\" ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 141,
          "block": "const numValue = typeof value === \"string\" ? parseFloat(value) : value;\n  if (isNaN(numValue)) retur..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 177,
          "block": "const numValue = typeof value === \"string\" ? parseFloat(value) : value;\n  if (isNaN(numValue)) retur..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 142,
          "block": "const numValue = typeof value === \"string\" ? parseFloat(value) : value;\n  if (isNaN(numValue)) retur..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 178,
          "block": "const numValue = typeof value === \"string\" ? parseFloat(value) : value;\n  if (isNaN(numValue)) retur..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 258,
          "block": "// Convert to hours and minutes\n  const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n  const m..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 282,
          "block": "// Convert to hours and minutes\n  const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n  const m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 259,
          "block": "// Convert to hours and minutes\n  const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n  const m..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 283,
          "block": "// Convert to hours and minutes\n  const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n  const m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 260,
          "block": "const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n  const minutes = Math.floor((diffMillis % ..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 284,
          "block": "const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n  const minutes = Math.floor((diffMillis % ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 261,
          "block": "const minutes = Math.floor((diffMillis % (1000 * 60 * 60)) / (1000 * 60));\n\n  if (hours > 0) {\n    r..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 285,
          "block": "const minutes = Math.floor((diffMillis % (1000 * 60 * 60)) / (1000 * 60));\n\n  if (hours > 0) {\n    r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 293,
          "block": "// Legacy aliases for backward compatibility (no need for separate imports)\nexport const formatDateL..."
        },
        {
          "file": "src\\lib\\formatters.ts",
          "startLine": 294,
          "block": "// Legacy aliases for backward compatibility (no need for separate imports)\nexport const formatDateL..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\main.tsx",
          "startLine": 62,
          "block": "// Error fallback rendering\nfunction renderErrorFallback(error: Error | unknown) {\n  const rootEleme..."
        },
        {
          "file": "src\\main.tsx",
          "startLine": 63,
          "block": "// Error fallback rendering\nfunction renderErrorFallback(error: Error | unknown) {\n  const rootEleme..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\api.ts",
          "startLine": 92,
          "block": "// Check for error response\n    if (!response.ok) {\n      throw new Error(result.error || `HTTP erro..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 93,
          "block": "// Check for error response\n    if (!response.ok) {\n      throw new Error(result.error || `HTTP erro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\api.ts",
          "startLine": 212,
          "block": "// Re-export from centralized API for compatibility (will be removed in v2.0.0)\nexport { employeesAp..."
        },
        {
          "file": "src\\services\\api.ts",
          "startLine": 213,
          "block": "// Re-export from centralized API for compatibility (will be removed in v2.0.0)\nexport { employeesAp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\centralized-api.ts",
          "startLine": 64,
          "block": "if (value !== undefined && value !== null) {\r\n          params.append(key, String(value));\r\n        ..."
        },
        {
          "file": "src\\services\\centralized-api.ts",
          "startLine": 73,
          "block": "if (value !== undefined && value !== null) {\r\n          params.append(key, String(value));\r\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\dashboard.ts",
          "startLine": 27,
          "block": "if (response.error) {\r\n      console.warn('⚠️ Dashboard Edge Function returned error:', response.err..."
        },
        {
          "file": "src\\services\\dashboard.ts",
          "startLine": 28,
          "block": "if (response.error) {\r\n      console.warn('⚠️ Dashboard Edge Function returned error:', response.err..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\dashboard.ts",
          "startLine": 32,
          "block": "if (!response.data) {\r\n      console.warn('⚠️ Dashboard Edge Function returned no data');\r\n      ret..."
        },
        {
          "file": "src\\services\\dashboard.ts",
          "startLine": 33,
          "block": "if (!response.data) {\r\n      console.warn('⚠️ Dashboard Edge Function returned no data');\r\n      ret..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\financials.ts",
          "startLine": 12,
          "block": "if (response.error) {\n      console.warn(\"Failed to fetch profit/loss data:\", response.error);\n     ..."
        },
        {
          "file": "src\\services\\financials.ts",
          "startLine": 13,
          "block": "if (response.error) {\n      console.warn(\"Failed to fetch profit/loss data:\", response.error);\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\financials.ts",
          "startLine": 29,
          "block": "if (response.error) {\n      console.warn(\"Failed to fetch revenue data:\", response.error);\n      ret..."
        },
        {
          "file": "src\\services\\financials.ts",
          "startLine": 30,
          "block": "if (response.error) {\n      console.warn(\"Failed to fetch revenue data:\", response.error);\n      ret..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\financials.ts",
          "startLine": 32,
          "block": "return { total: 0, breakdown: {} };\n    }\n\n    return response.data || { total: 0, breakdown: {} };\n..."
        },
        {
          "file": "src\\services\\financials.ts",
          "startLine": 48,
          "block": "return { total: 0, breakdown: {} };\n    }\n\n    return response.data || { total: 0, breakdown: {} };\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\financials.ts",
          "startLine": 45,
          "block": "if (response.error) {\n      console.warn(\"Failed to fetch expenses data:\", response.error);\n      re..."
        },
        {
          "file": "src\\services\\financials.ts",
          "startLine": 46,
          "block": "if (response.error) {\n      console.warn(\"Failed to fetch expenses data:\", response.error);\n      re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\logger.ts",
          "startLine": 70,
          "block": "// Error logging\n  error: (error: Error | string, extraData?: Record<string, unknown>) => {\n    cons..."
        },
        {
          "file": "src\\services\\logger.ts",
          "startLine": 71,
          "block": "// Error logging\n  error: (error: Error | string, extraData?: Record<string, unknown>) => {\n    cons..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 78,
          "block": "if (response.error) {\n      console.error(\"Error calculating profit and loss:\", response.error);\n   ..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 79,
          "block": "if (response.error) {\n      console.error(\"Error calculating profit and loss:\", response.error);\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 117,
          "block": "if (response.error || !response.data) {\n      console.warn(\"Failed to fetch profit-loss summary:\", r..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 118,
          "block": "if (response.error || !response.data) {\n      console.warn(\"Failed to fetch profit-loss summary:\", r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 122,
          "block": "// Convert single item to array if needed\n    const dataArray = Array.isArray(response.data)\n       ..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 123,
          "block": "// Convert single item to array if needed\n    const dataArray = Array.isArray(response.data)\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 130,
          "block": "id: item.id,\n      period: item.period,\n      total_sales: item.revenue || 0, // Map revenue to tota..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 162,
          "block": "id: item.id,\n      period: item.period,\n      total_sales: item.revenue || 0, // Map revenue to tota..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 198,
          "block": "id: item.id,\n      period: item.period,\n      total_sales: item.revenue || 0, // Map revenue to tota..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 131,
          "block": "period: item.period,\n      total_sales: item.revenue || 0, // Map revenue to total_sales\n      total..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 163,
          "block": "period: item.period,\n      total_sales: item.revenue || 0, // Map revenue to total_sales\n      total..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 199,
          "block": "period: item.period,\n      total_sales: item.revenue || 0, // Map revenue to total_sales\n      total..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 132,
          "block": "total_sales: item.revenue || 0, // Map revenue to total_sales\n      total_expenses: item.expenses ||..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 164,
          "block": "total_sales: item.revenue || 0, // Map revenue to total_sales\n      total_expenses: item.expenses ||..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 200,
          "block": "total_sales: item.revenue || 0, // Map revenue to total_sales\n      total_expenses: item.expenses ||..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 153,
          "block": "if (response.error || !response.data) {\n      console.warn(`Failed to fetch profit-loss record with ..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 154,
          "block": "if (response.error || !response.data) {\n      console.warn(`Failed to fetch profit-loss record with ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 158,
          "block": "// Return the data with correct property mapping\n    const item = response.data;\n    return {\n      ..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 194,
          "block": "// Return the data with correct property mapping\n    const item = response.data;\n    return {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 159,
          "block": "// Return the data with correct property mapping\n    const item = response.data;\n    return {\n      ..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 195,
          "block": "// Return the data with correct property mapping\n    const item = response.data;\n    return {\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 160,
          "block": "const item = response.data;\n    return {\n      id: item.id,\n      period: item.period,\n      total_s..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 196,
          "block": "const item = response.data;\n    return {\n      id: item.id,\n      period: item.period,\n      total_s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 161,
          "block": "return {\n      id: item.id,\n      period: item.period,\n      total_sales: item.revenue || 0, // Map ..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 197,
          "block": "return {\n      id: item.id,\n      period: item.period,\n      total_sales: item.revenue || 0, // Map ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 165,
          "block": "total_expenses: item.expenses || 0, // Map expenses to total_expenses\n      profit: item.profit,\n   ..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 201,
          "block": "total_expenses: item.expenses || 0, // Map expenses to total_expenses\n      profit: item.profit,\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 166,
          "block": "profit: item.profit,\n      created_at: item.created_at,\n      updated_at: item.updated_at\n    };\n  }..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 202,
          "block": "profit: item.profit,\n      created_at: item.created_at,\n      updated_at: item.updated_at\n    };\n  }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 189,
          "block": "if (response.error || !response.data) {\n      console.error(\"Failed to generate profit-loss record:\"..."
        },
        {
          "file": "src\\services\\profit-loss.ts",
          "startLine": 190,
          "block": "if (response.error || !response.data) {\n      console.error(\"Failed to generate profit-loss record:\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\type-adapters.ts",
          "startLine": 8,
          "block": "import type { BaseEntity } from './centralized-api';\r\nimport type { FuelTypeCode, PaymentMethod } fr..."
        },
        {
          "file": "src\\services\\type-adapters.ts",
          "startLine": 9,
          "block": "import type { BaseEntity } from './centralized-api';\r\nimport type { FuelTypeCode, PaymentMethod } fr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\services\\type-adapters.ts",
          "startLine": 169,
          "block": "for (const [key, value] of Object.entries(obj)) {\r\n    const camelKey = snakeToCamel(key);\r\n    tran..."
        },
        {
          "file": "src\\services\\type-adapters.ts",
          "startLine": 170,
          "block": "for (const [key, value] of Object.entries(obj)) {\r\n    const camelKey = snakeToCamel(key);\r\n    tran..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 30,
          "block": "trend: {\r\n      up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-f..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 40,
          "block": "trend: {\r\n      up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-f..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 50,
          "block": "trend: {\r\n      up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-f..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 60,
          "block": "trend: {\r\n      up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-f..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 70,
          "block": "trend: {\r\n      up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 31,
          "block": "up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-foreground',\r\n   ..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 41,
          "block": "up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-foreground',\r\n   ..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 51,
          "block": "up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-foreground',\r\n   ..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 61,
          "block": "up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-foreground',\r\n   ..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 71,
          "block": "up: 'text-energy-green',\r\n      down: 'text-fuel-red',\r\n      neutral: 'text-muted-foreground',\r\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 124,
          "block": "export const MetricCard: React.FC<MetricCardProps> = ({\r\n  title,\r\n  value,\r\n  subtitle,\r\n  icon: Ic..."
        },
        {
          "file": "src\\shared\\components\\unified\\MetricCard.tsx",
          "startLine": 99,
          "block": "export const MetricCard: React.FC<MetricCardProps> = ({\r\n  title,\r\n  value,\r\n  subtitle,\r\n  icon: Ic..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 256,
          "block": "// Predefined metric cards for common use cases\r\nexport const FuelMetricCard: React.FC<Omit<MetricCa..."
        },
        {
          "file": "src\\shared\\components\\cards\\MetricCard.tsx",
          "startLine": 257,
          "block": "// Predefined metric cards for common use cases\r\nexport const FuelMetricCard: React.FC<Omit<MetricCa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\common\\datepicker\\StandardDatePicker.tsx",
          "startLine": 160,
          "block": "const [open, setOpen] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement>(nul..."
        },
        {
          "file": "src\\shared\\components\\common\\datepicker\\StandardDatePicker.tsx",
          "startLine": 161,
          "block": "const [open, setOpen] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement>(nul..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\common\\dialog\\ConfirmDialog.tsx",
          "startLine": 142,
          "block": "open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      description={description}\n  ..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\DeleteConfirmDialog.tsx",
          "startLine": 127,
          "block": "open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      description={description}\n  ..."
        },
        {
          "file": "src\\shared\\components\\dialogs\\ConfirmationDialogStandardized.tsx",
          "startLine": 57,
          "block": "open={open}\n      onOpenChange={onOpenChange}\n      title={title}\n      description={description}\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\common\\dialog\\ConfirmDialog.tsx",
          "startLine": 143,
          "block": "onOpenChange={onOpenChange}\n      title={title}\n      description={description}\n      actions={actio..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\DeleteConfirmDialog.tsx",
          "startLine": 128,
          "block": "onOpenChange={onOpenChange}\n      title={title}\n      description={description}\n      actions={actio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\common\\dialog\\DeleteConfirmDialog.tsx",
          "startLine": 15,
          "block": "/**\n   * Callback fired when the dialog open state changes\n   */\n  onOpenChange: (open: boolean) => ..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\DeleteConfirmDialog.tsx",
          "startLine": 16,
          "block": "/**\n   * Callback fired when the dialog open state changes\n   */\n  onOpenChange: (open: boolean) => ..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\StandardDialog.tsx",
          "startLine": 36,
          "block": "/**\n   * Callback fired when the dialog open state changes\n   */\n  onOpenChange: (open: boolean) => ..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\StandardDialog.tsx",
          "startLine": 37,
          "block": "/**\n   * Callback fired when the dialog open state changes\n   */\n  onOpenChange: (open: boolean) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\common\\dialog\\DeleteConfirmDialog.tsx",
          "startLine": 17,
          "block": "* Callback fired when the dialog open state changes\n   */\n  onOpenChange: (open: boolean) => void;\n\n..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\StandardDialog.tsx",
          "startLine": 38,
          "block": "* Callback fired when the dialog open state changes\n   */\n  onOpenChange: (open: boolean) => void;\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\common\\dialog\\FormDialog.tsx",
          "startLine": 35,
          "block": "/**\n   * Form content render function\n   */\n  children: (props: { control: Control<TFormValues> }) =..."
        },
        {
          "file": "src\\shared\\components\\common\\dialog\\FormDialog.tsx",
          "startLine": 36,
          "block": "/**\n   * Form content render function\n   */\n  children: (props: { control: Control<TFormValues> }) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\dev\\DeprecationTracker.tsx",
          "startLine": 16,
          "block": "if (summary && summary.length > 0) {\n          console.groupCollapsed(\"📊 Deprecation Usage Report\")..."
        },
        {
          "file": "src\\shared\\components\\dev\\DeprecationTracker.tsx",
          "startLine": 17,
          "block": "if (summary && summary.length > 0) {\n          console.groupCollapsed(\"📊 Deprecation Usage Report\")..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\dialogs\\ConfirmationController.tsx",
          "startLine": 36,
          "block": "return (\n    <>\n      {/* Render children with the openConfirmation function */}\n      {children(ope..."
        },
        {
          "file": "src\\shared\\components\\dialogs\\ConfirmationController.tsx",
          "startLine": 37,
          "block": "return (\n    <>\n      {/* Render children with the openConfirmation function */}\n      {children(ope..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\enhanced\\ErrorBoundary.tsx",
          "startLine": 140,
          "block": "ComponentWithErrorBoundary.displayName = `withErrorBoundary(${displayName})`;\n\n  return ComponentWit..."
        },
        {
          "file": "src\\shared\\components\\enhanced\\ErrorBoundary.tsx",
          "startLine": 141,
          "block": "ComponentWithErrorBoundary.displayName = `withErrorBoundary(${displayName})`;\n\n  return ComponentWit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\layout\\Breadcrumb.tsx",
          "startLine": 5,
          "block": "interface BreadcrumbItem {\r\n  label: string;\r\n  href?: string;\r\n  icon?: React.ComponentType<{ class..."
        },
        {
          "file": "src\\shared\\components\\layout\\PageContainer.tsx",
          "startLine": 4,
          "block": "interface BreadcrumbItem {\r\n  label: string;\r\n  href?: string;\r\n  icon?: React.ComponentType<{ class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\layout\\Breadcrumb.tsx",
          "startLine": 6,
          "block": "interface BreadcrumbItem {\r\n  label: string;\r\n  href?: string;\r\n  icon?: React.ComponentType<{ class..."
        },
        {
          "file": "src\\shared\\components\\layout\\PageContainer.tsx",
          "startLine": 5,
          "block": "interface BreadcrumbItem {\r\n  label: string;\r\n  href?: string;\r\n  icon?: React.ComponentType<{ class..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\Breadcrumbs.tsx",
          "startLine": 31,
          "block": "let currentPath = '';\r\n    pathSegments.forEach((segment, index) => {\r\n      currentPath += `/${segm..."
        },
        {
          "file": "src\\shared\\components\\navigation\\Breadcrumbs.tsx",
          "startLine": 32,
          "block": "let currentPath = '';\r\n    pathSegments.forEach((segment, index) => {\r\n      currentPath += `/${segm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\Breadcrumbs.tsx",
          "startLine": 84,
          "block": "return segmentMap[segment] || segment;\r\n  };\r\n\r\n  const items = customItems || generateBreadcrumbs()..."
        },
        {
          "file": "src\\shared\\components\\navigation\\Breadcrumbs.tsx",
          "startLine": 85,
          "block": "return segmentMap[segment] || segment;\r\n  };\r\n\r\n  const items = customItems || generateBreadcrumbs()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\NavigationCard.tsx",
          "startLine": 82,
          "block": "const badgeStyles = {\r\n      'New': 'bg-emerald-50/90 text-emerald-700 border-emerald-200/60 dark:bg..."
        },
        {
          "file": "src\\shared\\components\\navigation\\NavigationCard.tsx",
          "startLine": 83,
          "block": "const badgeStyles = {\r\n      'New': 'bg-emerald-50/90 text-emerald-700 border-emerald-200/60 dark:bg..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 27,
          "block": "export const SettingsDropdown: React.FC<SettingsDropdownProps> = ({\r\n  className\r\n}) => {\r\n  const {..."
        },
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 28,
          "block": "export const SettingsDropdown: React.FC<SettingsDropdownProps> = ({\r\n  className\r\n}) => {\r\n  const {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 41,
          "block": "return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button\r\n          varian..."
        },
        {
          "file": "src\\shared\\components\\ui\\theme-toggle.tsx",
          "startLine": 65,
          "block": "return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button\r\n          varian..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 68,
          "block": "<DropdownMenuSeparator className=\"bg-border\" />\r\n        \r\n        <DropdownMenuItem \r\n          cla..."
        },
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 104,
          "block": "<DropdownMenuSeparator className=\"bg-border\" />\r\n        \r\n        <DropdownMenuItem \r\n          cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 69,
          "block": "<DropdownMenuSeparator className=\"bg-border\" />\r\n        \r\n        <DropdownMenuItem \r\n          cla..."
        },
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 105,
          "block": "<DropdownMenuSeparator className=\"bg-border\" />\r\n        \r\n        <DropdownMenuItem \r\n          cla..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 76,
          "block": "</DropdownMenuItem>\r\n        \r\n        <DropdownMenuItem \r\n          className=\"hover:bg-accent hove..."
        },
        {
          "file": "src\\shared\\components\\navigation\\SettingsDropdown.tsx",
          "startLine": 83,
          "block": "</DropdownMenuItem>\r\n        \r\n        <DropdownMenuItem \r\n          className=\"hover:bg-accent hove..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\InvoiceFormStandardized.tsx",
          "startLine": 63,
          "block": "toast({\n        title: \"Payment Completed\",\n        description: \"The invoice has been successfully ..."
        },
        {
          "file": "src\\shared\\components\\shared\\InvoiceFormStandardized.tsx",
          "startLine": 64,
          "block": "toast({\n        title: \"Payment Completed\",\n        description: \"The invoice has been successfully ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 24,
          "block": "payment_method: z.enum(\n    [\"cash\", \"card\", \"bank_transfer\", \"mobile_payment\"] as const,\n    {\n    ..."
        },
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 39,
          "block": "payment_method: z.enum(\n    [\"cash\", \"card\", \"bank_transfer\", \"mobile_payment\"] as const,\n    {\n    ..."
        },
        {
          "file": "src\\shared\\components\\shared\\PaymentMethodFormStandardized.tsx",
          "startLine": 19,
          "block": "payment_method: z.enum(\n    [\"cash\", \"card\", \"bank_transfer\", \"mobile_payment\"] as const,\n    {\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 25,
          "block": "[\"cash\", \"card\", \"bank_transfer\", \"mobile_payment\"] as const,\n    {\n      required_error: \"Payment m..."
        },
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 40,
          "block": "[\"cash\", \"card\", \"bank_transfer\", \"mobile_payment\"] as const,\n    {\n      required_error: \"Payment m..."
        },
        {
          "file": "src\\shared\\components\\shared\\PaymentMethodFormStandardized.tsx",
          "startLine": 20,
          "block": "[\"cash\", \"card\", \"bank_transfer\", \"mobile_payment\"] as const,\n    {\n      required_error: \"Payment m..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 58,
          "block": "// Zero-total multi-payment schema with relaxed validation\nconst zeroTotalMultiPaymentSchema = z.obj..."
        },
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 59,
          "block": "// Zero-total multi-payment schema with relaxed validation\nconst zeroTotalMultiPaymentSchema = z.obj..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 113,
          "block": "// Update form values when formPaymentMethods changes\n  useEffect(() => {\n    form.setValue(\"payment..."
        },
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 114,
          "block": "// Update form values when formPaymentMethods changes\n  useEffect(() => {\n    form.setValue(\"payment..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 136,
          "block": "setFormPaymentMethods(updatedMethods);\n    form.setValue(\"paymentMethods\", updatedMethods);\n    setF..."
        },
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 146,
          "block": "setFormPaymentMethods(updatedMethods);\n    form.setValue(\"paymentMethods\", updatedMethods);\n    setF..."
        },
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 162,
          "block": "setFormPaymentMethods(updatedMethods);\n    form.setValue(\"paymentMethods\", updatedMethods);\n    setF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 204,
          "block": "// Check if all payment methods have a valid payment_method and amount\n        const invalidMethods ..."
        },
        {
          "file": "src\\shared\\components\\shared\\MultiPaymentMethodFormStandardized.tsx",
          "startLine": 205,
          "block": "// Check if all payment methods have a valid payment_method and amount\n        const invalidMethods ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\shared\\PaymentMethodFormStandardized.tsx",
          "startLine": 137,
          "block": "<div className=\"flex justify-between items-center pt-2\">\n            <div className=\"text-lg font-se..."
        },
        {
          "file": "src\\shared\\components\\shared\\PaymentMethodFormStandardized.tsx",
          "startLine": 138,
          "block": "<div className=\"flex justify-between items-center pt-2\">\n            <div className=\"text-lg font-se..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\sidebar\\SidebarLogo.tsx",
          "startLine": 9,
          "block": "export function SidebarLogo({ collapsed = false }: SidebarLogoProps) {\n  const { t } = useTranslatio..."
        },
        {
          "file": "src\\shared\\components\\sidebar\\SidebarLogo.tsx",
          "startLine": 10,
          "block": "export function SidebarLogo({ collapsed = false }: SidebarLogoProps) {\n  const { t } = useTranslatio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\sidebar\\SidebarNavSection.tsx",
          "startLine": 34,
          "block": "// Set up keyboard navigation for the section\n  useEffect(() => {\n    const section = sectionRef.cur..."
        },
        {
          "file": "src\\shared\\components\\sidebar\\SidebarNavSection.tsx",
          "startLine": 35,
          "block": "// Set up keyboard navigation for the section\n  useEffect(() => {\n    const section = sectionRef.cur..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\LazyLoader.tsx",
          "startLine": 31,
          "block": "render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback || <DefaultErrorFallbac..."
        },
        {
          "file": "src\\shared\\components\\ui\\LazyLoader.tsx",
          "startLine": 32,
          "block": "render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback || <DefaultErrorFallbac..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\LazyLoader.tsx",
          "startLine": 111,
          "block": "WrappedComponent.displayName = options?.displayName || 'LazyLoadedComponent';\r\n  \r\n  return WrappedC..."
        },
        {
          "file": "src\\shared\\components\\ui\\LazyLoader.tsx",
          "startLine": 112,
          "block": "WrappedComponent.displayName = options?.displayName || 'LazyLoadedComponent';\r\n  \r\n  return WrappedC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 56,
          "block": "const config = sizeConfig[size];\r\n  return (\r\n    <div className=\"flex items-center gap-1\">\r\n      {..."
        },
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 78,
          "block": "const config = sizeConfig[size];\r\n  return (\r\n    <div className=\"flex items-center gap-1\">\r\n      {..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 57,
          "block": "return (\r\n    <div className=\"flex items-center gap-1\">\r\n      {[0, 1, 2].map((i) => (\r\n        <div..."
        },
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 79,
          "block": "return (\r\n    <div className=\"flex items-center gap-1\">\r\n      {[0, 1, 2].map((i) => (\r\n        <div..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 58,
          "block": "<div className=\"flex items-center gap-1\">\r\n      {[0, 1, 2].map((i) => (\r\n        <div\r\n          ke..."
        },
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 80,
          "block": "<div className=\"flex items-center gap-1\">\r\n      {[0, 1, 2].map((i) => (\r\n        <div\r\n          ke..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 296,
          "block": "// Predefined loading components for common use cases\r\nexport const FuelLoadingComponent: React.FC<O..."
        },
        {
          "file": "src\\shared\\components\\ui\\Loading.tsx",
          "startLine": 297,
          "block": "// Predefined loading components for common use cases\r\nexport const FuelLoadingComponent: React.FC<O..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\shimmer-loader.tsx",
          "startLine": 141,
          "block": "const style: React.CSSProperties = {\r\n    ...(width && { width: typeof width === 'number' ? `${width..."
        },
        {
          "file": "src\\shared\\components\\ui\\shimmer-loader.tsx",
          "startLine": 142,
          "block": "const style: React.CSSProperties = {\r\n    ...(width && { width: typeof width === 'number' ? `${width..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\shimmer-loader.tsx",
          "startLine": 174,
          "block": "// Specialized components for common use cases\r\nexport const ShimmerCard: React.FC<Omit<ShimmerLoade..."
        },
        {
          "file": "src\\shared\\components\\ui\\shimmer-loader.tsx",
          "startLine": 175,
          "block": "// Specialized components for common use cases\r\nexport const ShimmerCard: React.FC<Omit<ShimmerLoade..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\StatusIndicator.tsx",
          "startLine": 127,
          "block": "// Predefined status indicators for common use cases\r\nexport const OnlineStatus: React.FC<Omit<Statu..."
        },
        {
          "file": "src\\shared\\components\\ui\\StatusIndicator.tsx",
          "startLine": 128,
          "block": "// Predefined status indicators for common use cases\r\nexport const OnlineStatus: React.FC<Omit<Statu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\theme-provider.tsx",
          "startLine": 41,
          "block": "const [resolvedTheme, setResolvedTheme] = useState<'light' | 'dark'>('light');\r\n\r\n  useEffect(() => ..."
        },
        {
          "file": "src\\shared\\components\\ui\\theme-provider.tsx",
          "startLine": 42,
          "block": "const [resolvedTheme, setResolvedTheme] = useState<'light' | 'dark'>('light');\r\n\r\n  useEffect(() => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\theme-provider.tsx",
          "startLine": 46,
          "block": "// Remove existing theme classes\r\n    root.classList.remove('light', 'dark');\r\n\r\n    let systemTheme..."
        },
        {
          "file": "src\\shared\\components\\ui\\theme-provider.tsx",
          "startLine": 47,
          "block": "// Remove existing theme classes\r\n    root.classList.remove('light', 'dark');\r\n\r\n    let systemTheme..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\theme-provider.tsx",
          "startLine": 69,
          "block": "const handleChange = (e: MediaQueryListEvent) => {\r\n      if (theme === 'system') {\r\n        const s..."
        },
        {
          "file": "src\\shared\\components\\ui\\theme-provider.tsx",
          "startLine": 70,
          "block": "const handleChange = (e: MediaQueryListEvent) => {\r\n      if (theme === 'system') {\r\n        const s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\theme-toggle.tsx",
          "startLine": 39,
          "block": "const getIcon = () => {\r\n      if (theme === 'system') return <Monitor className=\"h-4 w-4\" />;\r\n    ..."
        },
        {
          "file": "src\\shared\\components\\ui\\theme-toggle.tsx",
          "startLine": 40,
          "block": "const getIcon = () => {\r\n      if (theme === 'system') return <Monitor className=\"h-4 w-4\" />;\r\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\ui\\theme-toggle.tsx",
          "startLine": 105,
          "block": "<div className=\"ml-auto w-2 h-2 rounded-full bg-accent animate-pulse\" />\r\n          )}\r\n        </Dr..."
        },
        {
          "file": "src\\shared\\components\\ui\\theme-toggle.tsx",
          "startLine": 120,
          "block": "<div className=\"ml-auto w-2 h-2 rounded-full bg-accent animate-pulse\" />\r\n          )}\r\n        </Dr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\DebouncedSearch.tsx",
          "startLine": 79,
          "block": "// Cancel any pending debounce\n      if (debounceTimerRef.current) {\n        clearTimeout(debounceTi..."
        },
        {
          "file": "src\\shared\\components\\unified\\DebouncedSearch.tsx",
          "startLine": 80,
          "block": "// Cancel any pending debounce\n      if (debounceTimerRef.current) {\n        clearTimeout(debounceTi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\DebouncedSearch.tsx",
          "startLine": 108,
          "block": "{/* Screen reader text */}\n      <label htmlFor=\"debounced-search-input\" className=\"sr-only\">\n      ..."
        },
        {
          "file": "src\\shared\\components\\unified\\DebouncedSearch.tsx",
          "startLine": 109,
          "block": "{/* Screen reader text */}\n      <label htmlFor=\"debounced-search-input\" className=\"sr-only\">\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\MetricCard.tsx",
          "startLine": 199,
          "block": "// Export variants for different use cases\r\nexport const SmallMetricCard: React.FC<Omit<MetricCardPr..."
        },
        {
          "file": "src\\shared\\components\\unified\\MetricCard.tsx",
          "startLine": 200,
          "block": "// Export variants for different use cases\r\nexport const SmallMetricCard: React.FC<Omit<MetricCardPr..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 76,
          "block": "// Get the \"id\" from the row data - essential for expandable rows\n  const getRowId = (row: TData): s..."
        },
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 77,
          "block": "// Get the \"id\" from the row data - essential for expandable rows\n  const getRowId = (row: TData): s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 92,
          "block": "// Determine primary and secondary columns for the card view\n  const primaryColumn = columns[0]; // ..."
        },
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 93,
          "block": "// Determine primary and secondary columns for the card view\n  const primaryColumn = columns[0]; // ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 97,
          "block": "// Find the actions column if it exists\n  const actionsColumn = columns.find(\n    (col) => col.acces..."
        },
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 98,
          "block": "// Find the actions column if it exists\n  const actionsColumn = columns.find(\n    (col) => col.acces..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 258,
          "block": "// Optimize columns for tablet view (show only the most important ones)\n  const optimizedColumns = u..."
        },
        {
          "file": "src\\shared\\components\\unified\\ResponsiveDataTable.tsx",
          "startLine": 259,
          "block": "// Optimize columns for tablet view (show only the most important ones)\n  const optimizedColumns = u..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\SearchHighlighter.tsx",
          "startLine": 22,
          "block": "// If no search term or text is empty, just return the text\n  if (!searchTerm.trim() || !content) {\n..."
        },
        {
          "file": "src\\shared\\components\\unified\\SearchHighlighter.tsx",
          "startLine": 23,
          "block": "// If no search term or text is empty, just return the text\n  if (!searchTerm.trim() || !content) {\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\SearchHighlighter.tsx",
          "startLine": 36,
          "block": "// If no matches were found (length === 1), return the original text\n    if (parts.length === 1) {\n ..."
        },
        {
          "file": "src\\shared\\components\\unified\\SearchHighlighter.tsx",
          "startLine": 37,
          "block": "// If no matches were found (length === 1), return the original text\n    if (parts.length === 1) {\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\SearchHighlighter.tsx",
          "startLine": 85,
          "block": "// If content is a number or string, wrap it with SearchHighlighter\n  if (typeof content === \"string..."
        },
        {
          "file": "src\\shared\\components\\unified\\SearchHighlighter.tsx",
          "startLine": 86,
          "block": "// If content is a number or string, wrap it with SearchHighlighter\n  if (typeof content === \"string..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 200,
          "block": "<Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={(..."
        },
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 213,
          "block": "<Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 285,
          "block": "// Handle keyboard navigation for rows\n  const handleKeyDown = useCallback(\n    (event: KeyboardEven..."
        },
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 286,
          "block": "// Handle keyboard navigation for rows\n  const handleKeyDown = useCallback(\n    (event: KeyboardEven..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 292,
          "block": "// Pass the event and row to the custom handler if provided\n      if (keyboardNavigation.onKeyDown) ..."
        },
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 293,
          "block": "// Pass the event and row to the custom handler if provided\n      if (keyboardNavigation.onKeyDown) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 432,
          "block": "<Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={(e: React.Mou..."
        },
        {
          "file": "src\\shared\\components\\unified\\StandardizedDataTable.tsx",
          "startLine": 445,
          "block": "<Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={(e: React.Mou..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 49,
          "block": "idField: string = \"id\"\n): void {\n  // Get the current data\n  const currentData = queryClient.getQuer..."
        },
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 92,
          "block": "idField: string = \"id\"\n): void {\n  // Get the current data\n  const currentData = queryClient.getQuer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 50,
          "block": "): void {\n  // Get the current data\n  const currentData = queryClient.getQueryData<T[]>(listQueryKey..."
        },
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 93,
          "block": "): void {\n  // Get the current data\n  const currentData = queryClient.getQueryData<T[]>(listQueryKey..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 51,
          "block": "// Get the current data\n  const currentData = queryClient.getQueryData<T[]>(listQueryKey);\n\n  if (!c..."
        },
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 94,
          "block": "// Get the current data\n  const currentData = queryClient.getQueryData<T[]>(listQueryKey);\n\n  if (!c..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 55,
          "block": "// Update the item in the array\n  const newData = currentData.map((item) =>\n    item[idField] === it..."
        },
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 56,
          "block": "// Update the item in the array\n  const newData = currentData.map((item) =>\n    item[idField] === it..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 96,
          "block": "if (!currentData) return;\n\n  // Remove the item from the array\n  const newData = currentData.filter(..."
        },
        {
          "file": "src\\shared\\hooks\\api\\cache-utils.ts",
          "startLine": 97,
          "block": "if (!currentData) return;\n\n  // Remove the item from the array\n  const newData = currentData.filter(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 106,
          "block": "invalidateQueries: [\n        queryKeys.lists(), // Invalidate all list queries\n        queryKeys.sum..."
        },
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 130,
          "block": "invalidateQueries: [\n        queryKeys.lists(), // Invalidate all list queries\n        queryKeys.sum..."
        },
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 148,
          "block": "invalidateQueries: [\n        queryKeys.lists(), // Invalidate all list queries\n        queryKeys.sum..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 107,
          "block": "queryKeys.lists(), // Invalidate all list queries\n        queryKeys.summary(), // Invalidate summary..."
        },
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 131,
          "block": "queryKeys.lists(), // Invalidate all list queries\n        queryKeys.summary(), // Invalidate summary..."
        },
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 149,
          "block": "queryKeys.lists(), // Invalidate all list queries\n        queryKeys.summary(), // Invalidate summary..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 129,
          "block": "},\n      invalidateQueries: [\n        queryKeys.lists(), // Invalidate all list queries\n        quer..."
        },
        {
          "file": "src\\shared\\hooks\\api\\createResourceHooks.ts",
          "startLine": 147,
          "block": "},\n      invalidateQueries: [\n        queryKeys.lists(), // Invalidate all list queries\n        quer..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\types.ts",
          "startLine": 121,
          "block": "/**\n   * Function that fetches the data for a page\n   */\n  queryFn: (pageParam: number) => Promise<T..."
        },
        {
          "file": "src\\shared\\hooks\\api\\types.ts",
          "startLine": 122,
          "block": "/**\n   * Function that fetches the data for a page\n   */\n  queryFn: (pageParam: number) => Promise<T..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\useApiInfiniteQuery.ts",
          "startLine": 80,
          "block": "// Return standardized result object with commonly used properties\n  return {\n    // Original result..."
        },
        {
          "file": "src\\shared\\hooks\\api\\useApiInfiniteQuery.ts",
          "startLine": 81,
          "block": "// Return standardized result object with commonly used properties\n  return {\n    // Original result..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 93,
          "block": "it('should execute callback functions', async () => {\r\n    const onSuccessMock = jest.fn();\r\n    con..."
        },
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 94,
          "block": "it('should execute callback functions', async () => {\r\n    const onSuccessMock = jest.fn();\r\n    con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 107,
          "block": "// Trigger mutation with callbacks\r\n    act(() => {\r\n      result.current.mutate({ name: 'Updated It..."
        },
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 108,
          "block": "// Trigger mutation with callbacks\r\n    act(() => {\r\n      result.current.mutate({ name: 'Updated It..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 111,
          "block": "});\r\n    \r\n    // Wait for mutation to complete\r\n    await waitFor(() => expect(result.current.isSuc..."
        },
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 146,
          "block": "});\r\n    \r\n    // Wait for mutation to complete\r\n    await waitFor(() => expect(result.current.isSuc..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 129,
          "block": "const wrapper = ({ children }: { children: ReactNode }) =>\r\n      React.createElement(QueryClientPro..."
        },
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 161,
          "block": "const wrapper = ({ children }: { children: ReactNode }) =>\r\n      React.createElement(QueryClientPro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 130,
          "block": "const wrapper = ({ children }: { children: ReactNode }) =>\r\n      React.createElement(QueryClientPro..."
        },
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 162,
          "block": "const wrapper = ({ children }: { children: ReactNode }) =>\r\n      React.createElement(QueryClientPro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 197,
          "block": "// Trigger mutation\r\n    act(() => {\r\n      result.current.mutate({ name: 'Optimistic Update' });\r\n ..."
        },
        {
          "file": "src\\shared\\hooks\\api\\__tests__\\useApiMutation.test.ts",
          "startLine": 198,
          "block": "// Trigger mutation\r\n    act(() => {\r\n      result.current.mutate({ name: 'Optimistic Update' });\r\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useBaseDialog.test.tsx",
          "startLine": 7,
          "block": "expect(result.current.isOpen).toBe(false);\n    expect(result.current.entity).toBe(null);\n    expect(..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useBaseDialog.test.tsx",
          "startLine": 8,
          "block": "expect(result.current.isOpen).toBe(false);\n    expect(result.current.entity).toBe(null);\n    expect(..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useBaseDialog.test.tsx",
          "startLine": 14,
          "block": "const { result } = renderHook(() => useBaseDialog());\n\n    act(() => {\n      result.current.open();\n..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useBaseDialog.test.tsx",
          "startLine": 24,
          "block": "const { result } = renderHook(() => useBaseDialog());\n\n    act(() => {\n      result.current.open();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 28,
          "block": "act(() => {\n      result.current.openCreate();\n    });\n\n    expect(result.current.isOpen).toBe(true)..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 62,
          "block": "act(() => {\n      result.current.openCreate();\n    });\n\n    expect(result.current.isOpen).toBe(true)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 41,
          "block": "act(() => {\n      result.current.openEdit(testEntity);\n    });\n\n    expect(result.current.isOpen).to..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 88,
          "block": "act(() => {\n      result.current.openEdit(testEntity);\n    });\n\n    expect(result.current.isOpen).to..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 114,
          "block": "act(() => {\n      result.current.openEdit(testEntity);\n    });\n\n    expect(result.current.isOpen).to..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 71,
          "block": "expect(mockOnCreateSuccess).toHaveBeenCalledWith(testEntity);\n    expect(mockOnSuccess).toHaveBeenCa..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 72,
          "block": "expect(mockOnCreateSuccess).toHaveBeenCalledWith(testEntity);\n    expect(mockOnSuccess).toHaveBeenCa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 99,
          "block": "expect(mockOnUpdateSuccess).toHaveBeenCalledWith(updatedEntity);\n    expect(mockOnSuccess).toHaveBee..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 100,
          "block": "expect(mockOnUpdateSuccess).toHaveBeenCalledWith(updatedEntity);\n    expect(mockOnSuccess).toHaveBee..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 123,
          "block": "expect(mockOnDeleteSuccess).toHaveBeenCalledWith(testEntity.id, testEntity);\n    expect(result.curre..."
        },
        {
          "file": "src\\shared\\hooks\\base\\__tests__\\useEntityDialog.test.tsx",
          "startLine": 124,
          "block": "expect(mockOnDeleteSuccess).toHaveBeenCalledWith(testEntity.id, testEntity);\n    expect(result.curre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 6,
          "block": "const REGEX_PATTERNS = {\n  EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 6,
          "block": "const REGEX_PATTERNS = {\n  EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  PASSWORD: /^(?=.*[A-Za-z])(?=.*\\d)..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 11,
          "block": "/**\n * Common validation patterns used across the application\n *\n * This hook provides access to fre..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 11,
          "block": "/**\n * Common validation patterns used across the application\n *\n * This hook provides access to fre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 12,
          "block": "/**\n * Common validation patterns used across the application\n *\n * This hook provides access to fre..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 12,
          "block": "/**\n * Common validation patterns used across the application\n *\n * This hook provides access to fre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 13,
          "block": "* Common validation patterns used across the application\n *\n * This hook provides access to frequent..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 13,
          "block": "* Common validation patterns used across the application\n *\n * This hook provides access to frequent..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 14,
          "block": "*\n * This hook provides access to frequently used validation schemas with proper i18n support\n * and..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 14,
          "block": "*\n * This hook provides access to frequently used validation schemas with proper i18n support\n * and..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 15,
          "block": "* This hook provides access to frequently used validation schemas with proper i18n support\n * and co..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 15,
          "block": "* This hook provides access to frequently used validation schemas with proper i18n support\n * and co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 16,
          "block": "* and consistent error messages.\n *\n * @returns An object containing commonly used validation schema..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 16,
          "block": "* and consistent error messages.\n *\n * @returns An object containing commonly used validation schema..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 17,
          "block": "*\n * @returns An object containing commonly used validation schemas and utility functions\n */\nexport..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 17,
          "block": "*\n * @returns An object containing commonly used validation schemas and utility functions\n */\nexport..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 18,
          "block": "* @returns An object containing commonly used validation schemas and utility functions\n */\nexport fu..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 18,
          "block": "* @returns An object containing commonly used validation schemas and utility functions\n */\nexport fu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 20,
          "block": "export function useCommonValidation() {\n  const { t } = useTranslation();\n\n  /**\n   * Creates a requ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 20,
          "block": "export function useCommonValidation() {\n  const { t } = useTranslation();\n\n  /**\n   * Creates a requ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 21,
          "block": "const { t } = useTranslation();\n\n  /**\n   * Creates a required string schema with an optional minimu..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 21,
          "block": "const { t } = useTranslation();\n\n  /**\n   * Creates a required string schema with an optional minimu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 22,
          "block": "/**\n   * Creates a required string schema with an optional minimum length\n   */\n  const requiredStri..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 22,
          "block": "/**\n   * Creates a required string schema with an optional minimum length\n   */\n  const requiredStri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 23,
          "block": "/**\n   * Creates a required string schema with an optional minimum length\n   */\n  const requiredStri..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 23,
          "block": "/**\n   * Creates a required string schema with an optional minimum length\n   */\n  const requiredStri..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 24,
          "block": "* Creates a required string schema with an optional minimum length\n   */\n  const requiredString = us..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 24,
          "block": "* Creates a required string schema with an optional minimum length\n   */\n  const requiredString = us..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 25,
          "block": "*/\n  const requiredString = useCallback(\n    (minLength?: number, fieldName?: string) => {\n      con..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 25,
          "block": "*/\n  const requiredString = useCallback(\n    (minLength?: number, fieldName?: string) => {\n      con..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 26,
          "block": "const requiredString = useCallback(\n    (minLength?: number, fieldName?: string) => {\n      const na..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 26,
          "block": "const requiredString = useCallback(\n    (minLength?: number, fieldName?: string) => {\n      const na..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 27,
          "block": "(minLength?: number, fieldName?: string) => {\n      const name = fieldName ? t(`fields.${fieldName}`..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 27,
          "block": "(minLength?: number, fieldName?: string) => {\n      const name = fieldName ? t(`fields.${fieldName}`..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 28,
          "block": "const name = fieldName ? t(`fields.${fieldName}`) : t(\"common.field\");\n\n      return minLength\n     ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 28,
          "block": "const name = fieldName ? t(`fields.${fieldName}`) : t(\"common.field\");\n\n      return minLength\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 29,
          "block": "return minLength\n        ? z\n            .string({\n              required_error: t(\"validation.requi..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 29,
          "block": "return minLength\n        ? z\n            .string({\n              required_error: t(\"validation.requi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 30,
          "block": "return minLength\n        ? z\n            .string({\n              required_error: t(\"validation.requi..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 30,
          "block": "return minLength\n        ? z\n            .string({\n              required_error: t(\"validation.requi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 31,
          "block": "? z\n            .string({\n              required_error: t(\"validation.required\", { field: name }),\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 31,
          "block": "? z\n            .string({\n              required_error: t(\"validation.required\", { field: name }),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 32,
          "block": ".string({\n              required_error: t(\"validation.required\", { field: name }),\n            })\n  ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 32,
          "block": ".string({\n              required_error: t(\"validation.required\", { field: name }),\n            })\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 33,
          "block": "required_error: t(\"validation.required\", { field: name }),\n            })\n            .min(\n        ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 33,
          "block": "required_error: t(\"validation.required\", { field: name }),\n            })\n            .min(\n        ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 34,
          "block": "})\n            .min(\n              minLength,\n              t(\"validation.minLength\", { field: name,..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 34,
          "block": "})\n            .min(\n              minLength,\n              t(\"validation.minLength\", { field: name,..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 35,
          "block": ".min(\n              minLength,\n              t(\"validation.minLength\", { field: name, length: minLen..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 35,
          "block": ".min(\n              minLength,\n              t(\"validation.minLength\", { field: name, length: minLen..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 36,
          "block": "minLength,\n              t(\"validation.minLength\", { field: name, length: minLength })\n            )..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 36,
          "block": "minLength,\n              t(\"validation.minLength\", { field: name, length: minLength })\n            )..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 37,
          "block": "t(\"validation.minLength\", { field: name, length: minLength })\n            )\n        : z\n            ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 37,
          "block": "t(\"validation.minLength\", { field: name, length: minLength })\n            )\n        : z\n            ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 38,
          "block": ")\n        : z\n            .string({\n              required_error: t(\"validation.required\", { field: ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 38,
          "block": ")\n        : z\n            .string({\n              required_error: t(\"validation.required\", { field: ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 39,
          "block": ": z\n            .string({\n              required_error: t(\"validation.required\", { field: name }),\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 39,
          "block": ": z\n            .string({\n              required_error: t(\"validation.required\", { field: name }),\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 40,
          "block": ".string({\n              required_error: t(\"validation.required\", { field: name }),\n            })\n  ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 40,
          "block": ".string({\n              required_error: t(\"validation.required\", { field: name }),\n            })\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 41,
          "block": "required_error: t(\"validation.required\", { field: name }),\n            })\n            .min(1, t(\"val..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 41,
          "block": "required_error: t(\"validation.required\", { field: name }),\n            })\n            .min(1, t(\"val..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 47,
          "block": "/**\n   * Creates an email validation schema with proper error messages\n   */\n  const email = useCall..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 47,
          "block": "/**\n   * Creates an email validation schema with proper error messages\n   */\n  const email = useCall..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 48,
          "block": "/**\n   * Creates an email validation schema with proper error messages\n   */\n  const email = useCall..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 48,
          "block": "/**\n   * Creates an email validation schema with proper error messages\n   */\n  const email = useCall..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 49,
          "block": "* Creates an email validation schema with proper error messages\n   */\n  const email = useCallback(()..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 49,
          "block": "* Creates an email validation schema with proper error messages\n   */\n  const email = useCallback(()..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 50,
          "block": "*/\n  const email = useCallback(() => {\n    return z\n      .string({\n        required_error: t(\"valid..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 50,
          "block": "*/\n  const email = useCallback(() => {\n    return z\n      .string({\n        required_error: t(\"valid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 51,
          "block": "const email = useCallback(() => {\n    return z\n      .string({\n        required_error: t(\"validation..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 51,
          "block": "const email = useCallback(() => {\n    return z\n      .string({\n        required_error: t(\"validation..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 52,
          "block": "return z\n      .string({\n        required_error: t(\"validation.emailRequired\"),\n      })\n      .emai..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 52,
          "block": "return z\n      .string({\n        required_error: t(\"validation.emailRequired\"),\n      })\n      .emai..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 53,
          "block": ".string({\n        required_error: t(\"validation.emailRequired\"),\n      })\n      .email(t(\"validation..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 53,
          "block": ".string({\n        required_error: t(\"validation.emailRequired\"),\n      })\n      .email(t(\"validation..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 54,
          "block": "required_error: t(\"validation.emailRequired\"),\n      })\n      .email(t(\"validation.invalidEmail\"));\n..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 54,
          "block": "required_error: t(\"validation.emailRequired\"),\n      })\n      .email(t(\"validation.invalidEmail\"));\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 56,
          "block": ".email(t(\"validation.invalidEmail\"));\n  }, [t]);\n\n  /**\n   * Creates a password validation schema wi..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 56,
          "block": ".email(t(\"validation.invalidEmail\"));\n  }, [t]);\n\n  /**\n   * Creates a password validation schema wi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 58,
          "block": "/**\n   * Creates a password validation schema with requirements\n   */\n  const password = useCallback..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 58,
          "block": "/**\n   * Creates a password validation schema with requirements\n   */\n  const password = useCallback..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 59,
          "block": "/**\n   * Creates a password validation schema with requirements\n   */\n  const password = useCallback..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 59,
          "block": "/**\n   * Creates a password validation schema with requirements\n   */\n  const password = useCallback..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 60,
          "block": "* Creates a password validation schema with requirements\n   */\n  const password = useCallback(\n    (..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 60,
          "block": "* Creates a password validation schema with requirements\n   */\n  const password = useCallback(\n    (..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 62,
          "block": "const password = useCallback(\n    (minLength: number = 8) => {\n      return z\n        .string({\n    ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 62,
          "block": "const password = useCallback(\n    (minLength: number = 8) => {\n      return z\n        .string({\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 63,
          "block": "(minLength: number = 8) => {\n      return z\n        .string({\n          required_error: t(\"validatio..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 63,
          "block": "(minLength: number = 8) => {\n      return z\n        .string({\n          required_error: t(\"validatio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 64,
          "block": "return z\n        .string({\n          required_error: t(\"validation.passwordRequired\"),\n        })\n  ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 64,
          "block": "return z\n        .string({\n          required_error: t(\"validation.passwordRequired\"),\n        })\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 65,
          "block": ".string({\n          required_error: t(\"validation.passwordRequired\"),\n        })\n        .min(\n     ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 65,
          "block": ".string({\n          required_error: t(\"validation.passwordRequired\"),\n        })\n        .min(\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 66,
          "block": "required_error: t(\"validation.passwordRequired\"),\n        })\n        .min(\n          minLength,\n    ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 66,
          "block": "required_error: t(\"validation.passwordRequired\"),\n        })\n        .min(\n          minLength,\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useCommonValidation.ts",
          "startLine": 92,
          "block": "/**\n   * Creates a number validation schema with min/max constraints\n   */\n  const number = useCallb..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 102,
          "block": "/**\n   * Creates a number validation schema with min/max constraints\n   */\n  const number = useCallb..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormSubmitHandler.ts",
          "startLine": 23,
          "block": "/**\n   * Callback to run after successful submission but before toast\n   */\n  onSuccess?: () => void..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useFormSubmitHandler.ts",
          "startLine": 24,
          "block": "/**\n   * Callback to run after successful submission but before toast\n   */\n  onSuccess?: () => void..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormSubmitHandler.ts",
          "startLine": 28,
          "block": "/**\n   * Callback to run when submission fails but before toast\n   */\n  onError?: (error: Error) => ..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useFormSubmitHandler.ts",
          "startLine": 29,
          "block": "/**\n   * Callback to run when submission fails but before toast\n   */\n  onError?: (error: Error) => ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormSubmitHandler.ts",
          "startLine": 43,
          "block": "}\n\n/**\n * A utility function to create a form submission handler with loading state and error handli..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 36,
          "block": "}\n\n/**\n * A utility function to create a form submission handler with loading state and error handli..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormSubmitHandler.ts",
          "startLine": 49,
          "block": "* @param onSubmit The function to call when the form is submitted\n * @param options Additional optio..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 41,
          "block": "* @param onSubmit The function to call when the form is submitted\n * @param options Additional optio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormSubmitHandler.ts",
          "startLine": 50,
          "block": "* @param options Additional options for form submission\n * @returns A submit handler with loading st..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 42,
          "block": "* @param options Additional options for form submission\n * @returns A submit handler with loading st..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 15,
          "block": "extends Omit<UseFormProps<z.infer<TSchema>>, \"resolver\"> {\n  /**\n   * The Zod schema to validate aga..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 9,
          "block": "extends Omit<UseFormProps<z.infer<TSchema>>, \"resolver\"> {\n  /**\n   * The Zod schema to validate aga..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 13,
          "block": "extends Omit<UseFormProps<z.infer<TSchema>>, \"resolver\"> {\n  /**\n   * The Zod schema to validate aga..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 15,
          "block": "extends Omit<UseFormProps<z.infer<TSchema>>, \"resolver\"> {\n  /**\n   * The Zod schema to validate aga..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 20,
          "block": "/**\n   * Function to handle form submission\n   */\n  onSubmit: (data: z.infer<TSchema>) => Promise<vo..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 21,
          "block": "/**\n   * Function to handle form submission\n   */\n  onSubmit: (data: z.infer<TSchema>) => Promise<vo..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 18,
          "block": "/**\n   * Function to handle form submission\n   */\n  onSubmit: (data: z.infer<TSchema>) => Promise<vo..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 19,
          "block": "/**\n   * Function to handle form submission\n   */\n  onSubmit: (data: z.infer<TSchema>) => Promise<vo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 22,
          "block": "* Function to handle form submission\n   */\n  onSubmit: (data: z.infer<TSchema>) => Promise<void> | v..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 20,
          "block": "* Function to handle form submission\n   */\n  onSubmit: (data: z.infer<TSchema>) => Promise<void> | v..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 23,
          "block": "*/\n  onSubmit: (data: z.infer<TSchema>) => Promise<void> | void;\n\n  /**\n   * Additional options for ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 21,
          "block": "*/\n  onSubmit: (data: z.infer<TSchema>) => Promise<void> | void;\n\n  /**\n   * Additional options for ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 24,
          "block": "onSubmit: (data: z.infer<TSchema>) => Promise<void> | void;\n\n  /**\n   * Additional options for the f..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 22,
          "block": "onSubmit: (data: z.infer<TSchema>) => Promise<void> | void;\n\n  /**\n   * Additional options for the f..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 27,
          "block": "* Additional options for the form submission handler\n   */\n  submitOptions?: {\n    /**\n     * Custom..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 25,
          "block": "* Additional options for the form submission handler\n   */\n  submitOptions?: {\n    /**\n     * Custom..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 29,
          "block": "submitOptions?: {\n    /**\n     * Custom success message to show after submission\n     */\n    success..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 27,
          "block": "submitOptions?: {\n    /**\n     * Custom success message to show after submission\n     */\n    success..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 39,
          "block": "/**\n     * Whether to reset the form after successful submission\n     */\n    resetOnSuccess?: boolea..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 40,
          "block": "/**\n     * Whether to reset the form after successful submission\n     */\n    resetOnSuccess?: boolea..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 37,
          "block": "/**\n     * Whether to reset the form after successful submission\n     */\n    resetOnSuccess?: boolea..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 38,
          "block": "/**\n     * Whether to reset the form after successful submission\n     */\n    resetOnSuccess?: boolea..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 41,
          "block": "* Whether to reset the form after successful submission\n     */\n    resetOnSuccess?: boolean;\n\n    /..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 39,
          "block": "* Whether to reset the form after successful submission\n     */\n    resetOnSuccess?: boolean;\n\n    /..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 42,
          "block": "*/\n    resetOnSuccess?: boolean;\n\n    /**\n     * Callback to run after successful submission but bef..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 40,
          "block": "*/\n    resetOnSuccess?: boolean;\n\n    /**\n     * Callback to run after successful submission but bef..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 43,
          "block": "resetOnSuccess?: boolean;\n\n    /**\n     * Callback to run after successful submission but before toa..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 41,
          "block": "resetOnSuccess?: boolean;\n\n    /**\n     * Callback to run after successful submission but before toa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 44,
          "block": "/**\n     * Callback to run after successful submission but before toast\n     */\n    onSuccess?: () =..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 45,
          "block": "/**\n     * Callback to run after successful submission but before toast\n     */\n    onSuccess?: () =..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 42,
          "block": "/**\n     * Callback to run after successful submission but before toast\n     */\n    onSuccess?: () =..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 43,
          "block": "/**\n     * Callback to run after successful submission but before toast\n     */\n    onSuccess?: () =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 46,
          "block": "* Callback to run after successful submission but before toast\n     */\n    onSuccess?: () => void;\n\n..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 44,
          "block": "* Callback to run after successful submission but before toast\n     */\n    onSuccess?: () => void;\n\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 47,
          "block": "*/\n    onSuccess?: () => void;\n\n    /**\n     * Callback to run when submission fails but before toas..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 45,
          "block": "*/\n    onSuccess?: () => void;\n\n    /**\n     * Callback to run when submission fails but before toas..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 48,
          "block": "onSuccess?: () => void;\n\n    /**\n     * Callback to run when submission fails but before toast\n     ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 46,
          "block": "onSuccess?: () => void;\n\n    /**\n     * Callback to run when submission fails but before toast\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 49,
          "block": "/**\n     * Callback to run when submission fails but before toast\n     */\n    onError?: (error: Erro..."
        },
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 50,
          "block": "/**\n     * Callback to run when submission fails but before toast\n     */\n    onError?: (error: Erro..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 47,
          "block": "/**\n     * Callback to run when submission fails but before toast\n     */\n    onError?: (error: Erro..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 48,
          "block": "/**\n     * Callback to run when submission fails but before toast\n     */\n    onError?: (error: Erro..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 51,
          "block": "* Callback to run when submission fails but before toast\n     */\n    onError?: (error: Error) => voi..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 49,
          "block": "* Callback to run when submission fails but before toast\n     */\n    onError?: (error: Error) => voi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 64,
          "block": "};\n}\n\n/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHan..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 62,
          "block": "};\n}\n\n/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHan..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 65,
          "block": "}\n\n/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandle..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 63,
          "block": "}\n\n/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 66,
          "block": "/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandler\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 64,
          "block": "/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandler\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 67,
          "block": "/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandler\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 65,
          "block": "/**\n * A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandler\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 68,
          "block": "* A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandler\n *\n * ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 66,
          "block": "* A consolidated hook for form validation that integrates useZodForm and useFormSubmitHandler\n *\n * ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 69,
          "block": "*\n * This hook provides a unified API for handling form validation and submission.\n *\n * @param opti..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 67,
          "block": "*\n * This hook provides a unified API for handling form validation and submission.\n *\n * @param opti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 70,
          "block": "* This hook provides a unified API for handling form validation and submission.\n *\n * @param options..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 68,
          "block": "* This hook provides a unified API for handling form validation and submission.\n *\n * @param options..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 71,
          "block": "*\n * @param options Configuration options including schema, default values, and submit handler\n * @r..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 69,
          "block": "*\n * @param options Configuration options including schema, default values, and submit handler\n * @r..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 72,
          "block": "* @param options Configuration options including schema, default values, and submit handler\n * @retu..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 70,
          "block": "* @param options Configuration options including schema, default values, and submit handler\n * @retu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 73,
          "block": "* @returns An object containing form methods, submission handler, and loading state\n */\nexport funct..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 71,
          "block": "* @returns An object containing form methods, submission handler, and loading state\n */\nexport funct..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 74,
          "block": "*/\nexport function useFormValidation<TSchema extends z.ZodSchema>({\n  schema,\n  onSubmit,\n  submitOp..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 72,
          "block": "*/\nexport function useFormValidation<TSchema extends z.ZodSchema>({\n  schema,\n  onSubmit,\n  submitOp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 75,
          "block": "export function useFormValidation<TSchema extends z.ZodSchema>({\n  schema,\n  onSubmit,\n  submitOptio..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 73,
          "block": "export function useFormValidation<TSchema extends z.ZodSchema>({\n  schema,\n  onSubmit,\n  submitOptio..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 77,
          "block": "onSubmit,\n  submitOptions,\n  ...formOptions\n}: UseFormValidationOptions<TSchema>) {\n  // Set up the ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 75,
          "block": "onSubmit,\n  submitOptions,\n  ...formOptions\n}: UseFormValidationOptions<TSchema>) {\n  // Set up the ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 78,
          "block": "submitOptions,\n  ...formOptions\n}: UseFormValidationOptions<TSchema>) {\n  // Set up the form with Zo..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 76,
          "block": "submitOptions,\n  ...formOptions\n}: UseFormValidationOptions<TSchema>) {\n  // Set up the form with Zo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 79,
          "block": "...formOptions\n}: UseFormValidationOptions<TSchema>) {\n  // Set up the form with Zod validation\n  co..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 77,
          "block": "...formOptions\n}: UseFormValidationOptions<TSchema>) {\n  // Set up the form with Zod validation\n  co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 80,
          "block": "}: UseFormValidationOptions<TSchema>) {\n  // Set up the form with Zod validation\n  const form = useZ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 78,
          "block": "}: UseFormValidationOptions<TSchema>) {\n  // Set up the form with Zod validation\n  const form = useZ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 81,
          "block": "// Set up the form with Zod validation\n  const form = useZodForm({\n    schema,\n    ...formOptions,\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 79,
          "block": "// Set up the form with Zod validation\n  const form = useZodForm({\n    schema,\n    ...formOptions,\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 83,
          "block": "schema,\n    ...formOptions,\n  });\n\n  // Set up the form submission handler and capture the typed sub..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 81,
          "block": "schema,\n    ...formOptions,\n  });\n\n  // Set up the form submission handler and capture the typed sub..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 84,
          "block": "...formOptions,\n  });\n\n  // Set up the form submission handler and capture the typed submit handler\n..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 82,
          "block": "...formOptions,\n  });\n\n  // Set up the form submission handler and capture the typed submit handler\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 85,
          "block": "});\n\n  // Set up the form submission handler and capture the typed submit handler\n  const formHandle..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 83,
          "block": "});\n\n  // Set up the form submission handler and capture the typed submit handler\n  const formHandle..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 86,
          "block": "// Set up the form submission handler and capture the typed submit handler\n  const formHandler = use..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 84,
          "block": "// Set up the form submission handler and capture the typed submit handler\n  const formHandler = use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 87,
          "block": "// Set up the form submission handler and capture the typed submit handler\n  const formHandler = use..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 85,
          "block": "// Set up the form submission handler and capture the typed submit handler\n  const formHandler = use..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 88,
          "block": "const formHandler = useFormSubmitHandler(\n    form,\n    onSubmit as (data: z.infer<TSchema>) => Prom..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 86,
          "block": "const formHandler = useFormSubmitHandler(\n    form,\n    onSubmit as (data: z.infer<TSchema>) => Prom..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 90,
          "block": "onSubmit as (data: z.infer<TSchema>) => Promise<void> | void,\n    submitOptions\n  );\n\n  // Access va..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 88,
          "block": "onSubmit as (data: z.infer<TSchema>) => Promise<void> | void,\n    submitOptions\n  );\n\n  // Access va..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 93,
          "block": "// Access validation utilities\n  const validationUtils = {\n    common: useCommonValidation(),\n    fi..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 91,
          "block": "// Access validation utilities\n  const validationUtils = {\n    common: useCommonValidation(),\n    fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 94,
          "block": "// Access validation utilities\n  const validationUtils = {\n    common: useCommonValidation(),\n    fi..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 92,
          "block": "// Access validation utilities\n  const validationUtils = {\n    common: useCommonValidation(),\n    fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 95,
          "block": "const validationUtils = {\n    common: useCommonValidation(),\n    fields: useFieldValidation(),\n    s..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 93,
          "block": "const validationUtils = {\n    common: useCommonValidation(),\n    fields: useFieldValidation(),\n    s..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 97,
          "block": "fields: useFieldValidation(),\n    schemas: useFormSchemas(),\n  };\n\n  // Return the form methods, sub..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 95,
          "block": "fields: useFieldValidation(),\n    schemas: useFormSchemas(),\n  };\n\n  // Return the form methods, sub..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 98,
          "block": "schemas: useFormSchemas(),\n  };\n\n  // Return the form methods, submission handler, and validation ut..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 96,
          "block": "schemas: useFormSchemas(),\n  };\n\n  // Return the form methods, submission handler, and validation ut..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 100,
          "block": "// Return the form methods, submission handler, and validation utils\n  return {\n    form,\n    isSubm..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 98,
          "block": "// Return the form methods, submission handler, and validation utils\n  return {\n    form,\n    isSubm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useFormValidation.ts",
          "startLine": 111,
          "block": "* Export individual hooks for users who need more granular control\n */\nexport {\n  useZodForm,\n  useF..."
        },
        {
          "file": "src\\shared\\hooks\\useFormValidation.ts",
          "startLine": 112,
          "block": "* Export individual hooks for users who need more granular control\n */\nexport {\n  useZodForm,\n  useF..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 15,
          "block": "/**\n * A hook that integrates react-hook-form with Zod validation\n *\n * @param options Configuration..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 21,
          "block": "/**\n * A hook that integrates react-hook-form with Zod validation\n *\n * @param options Configuration..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 16,
          "block": "/**\n * A hook that integrates react-hook-form with Zod validation\n *\n * @param options Configuration..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 22,
          "block": "/**\n * A hook that integrates react-hook-form with Zod validation\n *\n * @param options Configuration..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 17,
          "block": "* A hook that integrates react-hook-form with Zod validation\n *\n * @param options Configuration opti..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 23,
          "block": "* A hook that integrates react-hook-form with Zod validation\n *\n * @param options Configuration opti..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 18,
          "block": "*\n * @param options Configuration options including schema and form options\n * @returns The react-ho..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 24,
          "block": "*\n * @param options Configuration options including schema and form options\n * @returns The react-ho..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 19,
          "block": "* @param options Configuration options including schema and form options\n * @returns The react-hook-..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 25,
          "block": "* @param options Configuration options including schema and form options\n * @returns The react-hook-..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 20,
          "block": "* @returns The react-hook-form methods with Zod validation\n */\nexport function useZodForm<TSchema ex..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 26,
          "block": "* @returns The react-hook-form methods with Zod validation\n */\nexport function useZodForm<TSchema ex..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 21,
          "block": "*/\nexport function useZodForm<TSchema extends z.ZodSchema>({\n  schema,\n  ...formOptions\n}: UseZodFor..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 27,
          "block": "*/\nexport function useZodForm<TSchema extends z.ZodSchema>({\n  schema,\n  ...formOptions\n}: UseZodFor..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 22,
          "block": "export function useZodForm<TSchema extends z.ZodSchema>({\n  schema,\n  ...formOptions\n}: UseZodFormOp..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 28,
          "block": "export function useZodForm<TSchema extends z.ZodSchema>({\n  schema,\n  ...formOptions\n}: UseZodFormOp..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 23,
          "block": "schema,\n  ...formOptions\n}: UseZodFormOptions<TSchema>): UseFormReturn<z.infer<TSchema>> {\n  return ..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 29,
          "block": "schema,\n  ...formOptions\n}: UseZodFormOptions<TSchema>): UseFormReturn<z.infer<TSchema>> {\n  return ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 24,
          "block": "...formOptions\n}: UseZodFormOptions<TSchema>): UseFormReturn<z.infer<TSchema>> {\n  return useForm<z...."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 30,
          "block": "...formOptions\n}: UseZodFormOptions<TSchema>): UseFormReturn<z.infer<TSchema>> {\n  return useForm<z...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\useZodForm.ts",
          "startLine": 25,
          "block": "}: UseZodFormOptions<TSchema>): UseFormReturn<z.infer<TSchema>> {\n  return useForm<z.infer<TSchema>>..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 31,
          "block": "}: UseZodFormOptions<TSchema>): UseFormReturn<z.infer<TSchema>> {\n  return useForm<z.infer<TSchema>>..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 17,
          "block": "// Mock toast functions\n  const mockToast = jest.fn();\n  const mockSuccess = jest.fn();\n  const mock..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 18,
          "block": "// Mock toast functions\n  const mockToast = jest.fn();\n  const mockSuccess = jest.fn();\n  const mock..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 33,
          "block": "it(\"should initialize with isSubmitting set to false\", () => {\n    const { result } = renderHook(() ..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 34,
          "block": "it(\"should initialize with isSubmitting set to false\", () => {\n    const { result } = renderHook(() ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 56,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 57,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 86,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 87,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 112,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 113,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 131,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 132,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 151,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 152,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ name: \"Test..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 73,
          "block": "it(\"should handle submission failure\", async () => {\n    const testError = new Error(\"Test error\");\n..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 74,
          "block": "it(\"should handle submission failure\", async () => {\n    const testError = new Error(\"Test error\");\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 85,
          "block": ");\n\n    // Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ nam..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 111,
          "block": ");\n\n    // Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ nam..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 130,
          "block": ");\n\n    // Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ nam..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useFormSubmitHandler.test.tsx",
          "startLine": 150,
          "block": ");\n\n    // Submit the form\n    await act(async () => {\n      await result.current.handleSubmit({ nam..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 21,
          "block": "const { result } = renderHook(() =>\n      useZodForm({\n        schema: testSchema,\n        defaultVa..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 32,
          "block": "const { result } = renderHook(() =>\n      useZodForm({\n        schema: testSchema,\n        defaultVa..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 83,
          "block": "const { result } = renderHook(() =>\n      useZodForm({\n        schema: testSchema,\n        defaultVa..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 114,
          "block": "const { result } = renderHook(() =>\n      useZodForm({\n        schema: testSchema,\n        defaultVa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 38,
          "block": "// Set invalid values\n    act(() => {\n      result.current.setValue(\"name\", \"a\");\n      result.curre..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 120,
          "block": "// Set invalid values\n    act(() => {\n      result.current.setValue(\"name\", \"a\");\n      result.curre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 39,
          "block": "// Set invalid values\n    act(() => {\n      result.current.setValue(\"name\", \"a\");\n      result.curre..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 121,
          "block": "// Set invalid values\n    act(() => {\n      result.current.setValue(\"name\", \"a\");\n      result.curre..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 40,
          "block": "act(() => {\n      result.current.setValue(\"name\", \"a\");\n      result.current.setValue(\"email\", \"inva..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 122,
          "block": "act(() => {\n      result.current.setValue(\"name\", \"a\");\n      result.current.setValue(\"email\", \"inva..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 41,
          "block": "result.current.setValue(\"name\", \"a\");\n      result.current.setValue(\"email\", \"invalid-email\");\n     ..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 123,
          "block": "result.current.setValue(\"name\", \"a\");\n      result.current.setValue(\"email\", \"invalid-email\");\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 64,
          "block": "// Set valid values\n    act(() => {\n      result.current.setValue(\"name\", \"John Doe\");\n      result...."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 89,
          "block": "// Set valid values\n    act(() => {\n      result.current.setValue(\"name\", \"John Doe\");\n      result...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 65,
          "block": "// Set valid values\n    act(() => {\n      result.current.setValue(\"name\", \"John Doe\");\n      result...."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 90,
          "block": "// Set valid values\n    act(() => {\n      result.current.setValue(\"name\", \"John Doe\");\n      result...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 66,
          "block": "act(() => {\n      result.current.setValue(\"name\", \"John Doe\");\n      result.current.setValue(\"email\"..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 91,
          "block": "act(() => {\n      result.current.setValue(\"name\", \"John Doe\");\n      result.current.setValue(\"email\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 67,
          "block": "result.current.setValue(\"name\", \"John Doe\");\n      result.current.setValue(\"email\", \"john@example.co..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 92,
          "block": "result.current.setValue(\"name\", \"John Doe\");\n      result.current.setValue(\"email\", \"john@example.co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 71,
          "block": "// Trigger validation again\n    await act(async () => {\n      isValid = await result.current.trigger..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 72,
          "block": "// Trigger validation again\n    await act(async () => {\n      isValid = await result.current.trigger..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 82,
          "block": "const onSubmit = jest.fn();\n    const { result } = renderHook(() =>\n      useZodForm({\n        schem..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 113,
          "block": "const onSubmit = jest.fn();\n    const { result } = renderHook(() =>\n      useZodForm({\n        schem..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 96,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit(onSubmit)();\n..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 97,
          "block": "// Submit the form\n    await act(async () => {\n      await result.current.handleSubmit(onSubmit)();\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 127,
          "block": "// Try to submit the form\n    await act(async () => {\n      await result.current.handleSubmit(onSubm..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 128,
          "block": "// Try to submit the form\n    await act(async () => {\n      await result.current.handleSubmit(onSubm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 132,
          "block": "// onSubmit should not be called with invalid data\n    expect(onSubmit).not.toHaveBeenCalled();\n  })..."
        },
        {
          "file": "src\\shared\\hooks\\form\\__tests__\\useZodForm.test.tsx",
          "startLine": 133,
          "block": "// onSubmit should not be called with invalid data\n    expect(onSubmit).not.toHaveBeenCalled();\n  })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\use-form.ts",
          "startLine": 1,
          "block": "import { zodResolver } from \"@hookform/resolvers/zod\";\nimport {\n  useForm,\n  UseFormProps,\n  UseForm..."
        },
        {
          "file": "src\\shared\\hooks\\useZodForm.ts",
          "startLine": 1,
          "block": "import { zodResolver } from \"@hookform/resolvers/zod\";\nimport {\n  useForm,\n  UseFormProps,\n  UseForm..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\use-keyboard-navigation.tsx",
          "startLine": 74,
          "block": "const container = containerRef.current;\n    const focusableElements = container.querySelectorAll(\n  ..."
        },
        {
          "file": "src\\shared\\hooks\\use-keyboard-navigation.tsx",
          "startLine": 75,
          "block": "const container = containerRef.current;\n    const focusableElements = container.querySelectorAll(\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\use-keyboard-navigation.tsx",
          "startLine": 79,
          "block": "const firstElement = focusableElements[0] as HTMLElement;\n    const lastElement = focusableElements[..."
        },
        {
          "file": "src\\shared\\hooks\\use-keyboard-navigation.tsx",
          "startLine": 80,
          "block": "const firstElement = focusableElements[0] as HTMLElement;\n    const lastElement = focusableElements[..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\use-keyboard-navigation.tsx",
          "startLine": 120,
          "block": "const skipLinkRef = React.useRef<HTMLAnchorElement>(null);\n\n  const showSkipLink = () => setIsVisibl..."
        },
        {
          "file": "src\\shared\\hooks\\use-keyboard-navigation.tsx",
          "startLine": 121,
          "block": "const skipLinkRef = React.useRef<HTMLAnchorElement>(null);\n\n  const showSkipLink = () => setIsVisibl..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useBreadcrumbs.tsx",
          "startLine": 138,
          "block": "// If we have a direct match for the full path, add it\n    const fullPathMatch = findNavItem(path);\n..."
        },
        {
          "file": "src\\shared\\hooks\\useBreadcrumbs.tsx",
          "startLine": 139,
          "block": "// If we have a direct match for the full path, add it\n    const fullPathMatch = findNavItem(path);\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useBreadcrumbs.tsx",
          "startLine": 235,
          "block": "// Update breadcrumbs whenever the location changes\n  useEffect(() => {\n    updateBreadcrumbs();\n  }..."
        },
        {
          "file": "src\\shared\\hooks\\useBreadcrumbs.tsx",
          "startLine": 236,
          "block": "// Update breadcrumbs whenever the location changes\n  useEffect(() => {\n    updateBreadcrumbs();\n  }..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 115,
          "block": "let schema = z.number({\n        required_error: t(\"validation.numberRequired\", { field: name }),\n   ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 116,
          "block": "let schema = z.number({\n        required_error: t(\"validation.numberRequired\", { field: name }),\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 152,
          "block": "let schema = z.date({\n        required_error: t(\"validation.dateRequired\", { field: name }),\n       ..."
        },
        {
          "file": "src\\shared\\hooks\\useCommonValidation.ts",
          "startLine": 153,
          "block": "let schema = z.date({\n        required_error: t(\"validation.dateRequired\", { field: name }),\n       ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useEffectOnce.ts",
          "startLine": 54,
          "block": "useEffect(() => {\n    // Flag to track if component is still mounted\n    let isMounted = true;\n    l..."
        },
        {
          "file": "src\\shared\\hooks\\useEffectOnce.ts",
          "startLine": 55,
          "block": "useEffect(() => {\n    // Flag to track if component is still mounted\n    let isMounted = true;\n    l..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useEffectOnce.ts",
          "startLine": 62,
          "block": "const executeEffect = async () => {\n        try {\n          // Execute the async effect\n          co..."
        },
        {
          "file": "src\\shared\\hooks\\useEffectOnce.ts",
          "startLine": 63,
          "block": "const executeEffect = async () => {\n        try {\n          // Execute the async effect\n          co..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useEffectOnce.ts",
          "startLine": 121,
          "block": "if (typeof cleanup === \"function\") {\n        cleanup();\n      }\n    };\n    // eslint-disable-next-li..."
        },
        {
          "file": "src\\shared\\hooks\\useMemorySafe.ts",
          "startLine": 62,
          "block": "if (typeof cleanup === \"function\") {\n        cleanup();\n      }\n    };\n    // eslint-disable-next-li..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useEmployees.ts",
          "startLine": 182,
          "block": "return {\r\n    // Data properties\r\n    employees: employeesQuery.data || [],\r\n    summary: summaryQue..."
        },
        {
          "file": "src\\shared\\hooks\\useEmployees.ts",
          "startLine": 183,
          "block": "return {\r\n    // Data properties\r\n    employees: employeesQuery.data || [],\r\n    summary: summaryQue..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 21,
          "block": "const schema = z\n        .string()\n        .min(13, t(\"validation.creditCard.invalidLength\"))\n      ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 38,
          "block": "const schema = z\n        .string()\n        .min(13, t(\"validation.creditCard.invalidLength\"))\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 22,
          "block": ".string()\n        .min(13, t(\"validation.creditCard.invalidLength\"))\n        .max(19, t(\"validation...."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 39,
          "block": ".string()\n        .min(13, t(\"validation.creditCard.invalidLength\"))\n        .max(19, t(\"validation...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 23,
          "block": ".min(13, t(\"validation.creditCard.invalidLength\"))\n        .max(19, t(\"validation.creditCard.invalid..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 40,
          "block": ".min(13, t(\"validation.creditCard.invalidLength\"))\n        .max(19, t(\"validation.creditCard.invalid..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 24,
          "block": ".max(19, t(\"validation.creditCard.invalidLength\"))\n        .regex(/^[0-9]+$/, t(\"validation.creditCa..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 41,
          "block": ".max(19, t(\"validation.creditCard.invalidLength\"))\n        .regex(/^[0-9]+$/, t(\"validation.creditCa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 25,
          "block": ".regex(/^[0-9]+$/, t(\"validation.creditCard.numbersOnly\"))\n        .refine(\n          (cardNumber) =..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 42,
          "block": ".regex(/^[0-9]+$/, t(\"validation.creditCard.numbersOnly\"))\n        .refine(\n          (cardNumber) =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 26,
          "block": ".refine(\n          (cardNumber) => {\n            // Luhn algorithm for credit card validation\n      ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 43,
          "block": ".refine(\n          (cardNumber) => {\n            // Luhn algorithm for credit card validation\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 27,
          "block": "(cardNumber) => {\n            // Luhn algorithm for credit card validation\n            let sum = 0;\n..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 44,
          "block": "(cardNumber) => {\n            // Luhn algorithm for credit card validation\n            let sum = 0;\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 28,
          "block": "// Luhn algorithm for credit card validation\n            let sum = 0;\n            let shouldDouble =..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 45,
          "block": "// Luhn algorithm for credit card validation\n            let sum = 0;\n            let shouldDouble =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 29,
          "block": "let sum = 0;\n            let shouldDouble = false;\n\n            // Loop through values starting from..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 46,
          "block": "let sum = 0;\n            let shouldDouble = false;\n\n            // Loop through values starting from..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 30,
          "block": "let shouldDouble = false;\n\n            // Loop through values starting from the rightmost digit\n    ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 47,
          "block": "let shouldDouble = false;\n\n            // Loop through values starting from the rightmost digit\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 31,
          "block": "// Loop through values starting from the rightmost digit\n            for (let i = cardNumber.length ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 48,
          "block": "// Loop through values starting from the rightmost digit\n            for (let i = cardNumber.length ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 32,
          "block": "// Loop through values starting from the rightmost digit\n            for (let i = cardNumber.length ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 49,
          "block": "// Loop through values starting from the rightmost digit\n            for (let i = cardNumber.length ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 33,
          "block": "for (let i = cardNumber.length - 1; i >= 0; i--) {\n              let digit = parseInt(cardNumber.cha..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 50,
          "block": "for (let i = cardNumber.length - 1; i >= 0; i--) {\n              let digit = parseInt(cardNumber.cha..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 34,
          "block": "let digit = parseInt(cardNumber.charAt(i));\n\n              if (shouldDouble) {\n                digit..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 51,
          "block": "let digit = parseInt(cardNumber.charAt(i));\n\n              if (shouldDouble) {\n                digit..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 35,
          "block": "if (shouldDouble) {\n                digit *= 2;\n                if (digit > 9) digit -= 9;\n         ..."
        },
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 36,
          "block": "if (shouldDouble) {\n                digit *= 2;\n                if (digit > 9) digit -= 9;\n         ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 52,
          "block": "if (shouldDouble) {\n                digit *= 2;\n                if (digit > 9) digit -= 9;\n         ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 53,
          "block": "if (shouldDouble) {\n                digit *= 2;\n                if (digit > 9) digit -= 9;\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 38,
          "block": "if (digit > 9) digit -= 9;\n              }\n\n              sum += digit;\n              shouldDouble =..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 55,
          "block": "if (digit > 9) digit -= 9;\n              }\n\n              sum += digit;\n              shouldDouble =..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 41,
          "block": "sum += digit;\n              shouldDouble = !shouldDouble;\n            }\n\n            return sum % 10..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 58,
          "block": "sum += digit;\n              shouldDouble = !shouldDouble;\n            }\n\n            return sum % 10..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 43,
          "block": "}\n\n            return sum % 10 === 0;\n          },\n          { message: t(\"validation.creditCard.inv..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 60,
          "block": "}\n\n            return sum % 10 === 0;\n          },\n          { message: t(\"validation.creditCard.inv..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 44,
          "block": "return sum % 10 === 0;\n          },\n          { message: t(\"validation.creditCard.invalid\") }\n      ..."
        },
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 45,
          "block": "return sum % 10 === 0;\n          },\n          { message: t(\"validation.creditCard.invalid\") }\n      ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 61,
          "block": "return sum % 10 === 0;\n          },\n          { message: t(\"validation.creditCard.invalid\") }\n      ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 62,
          "block": "return sum % 10 === 0;\n          },\n          { message: t(\"validation.creditCard.invalid\") }\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 46,
          "block": "},\n          { message: t(\"validation.creditCard.invalid\") }\n        );\n\n      return required ? sch..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 63,
          "block": "},\n          { message: t(\"validation.creditCard.invalid\") }\n        );\n\n      return required ? sch..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 60,
          "block": "const schema = z\n        .string()\n        .regex(\n          /^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n      ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 72,
          "block": "const schema = z\n        .string()\n        .regex(\n          /^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 61,
          "block": ".string()\n        .regex(\n          /^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n          t(\"validation.expirat..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 73,
          "block": ".string()\n        .regex(\n          /^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n          t(\"validation.expirat..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 62,
          "block": ".regex(\n          /^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n          t(\"validation.expirationDate.format\")\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 74,
          "block": ".regex(\n          /^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n          t(\"validation.expirationDate.format\")\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 63,
          "block": "/^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n          t(\"validation.expirationDate.format\")\n        )\n        ...."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 75,
          "block": "/^(0[1-9]|1[0-2])\\/([0-9]{2})$/,\n          t(\"validation.expirationDate.format\")\n        )\n        ...."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 64,
          "block": "t(\"validation.expirationDate.format\")\n        )\n        .refine(\n          (expDate) => {\n          ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 76,
          "block": "t(\"validation.expirationDate.format\")\n        )\n        .refine(\n          (expDate) => {\n          ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 65,
          "block": ")\n        .refine(\n          (expDate) => {\n            const [month, yearStr] = expDate.split(\"/\");..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 77,
          "block": ")\n        .refine(\n          (expDate) => {\n            const [month, yearStr] = expDate.split(\"/\");..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 66,
          "block": ".refine(\n          (expDate) => {\n            const [month, yearStr] = expDate.split(\"/\");\n         ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 78,
          "block": ".refine(\n          (expDate) => {\n            const [month, yearStr] = expDate.split(\"/\");\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 67,
          "block": "(expDate) => {\n            const [month, yearStr] = expDate.split(\"/\");\n            const year = par..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 79,
          "block": "(expDate) => {\n            const [month, yearStr] = expDate.split(\"/\");\n            const year = par..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 68,
          "block": "const [month, yearStr] = expDate.split(\"/\");\n            const year = parseInt(`20${yearStr}`);\n    ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 80,
          "block": "const [month, yearStr] = expDate.split(\"/\");\n            const year = parseInt(`20${yearStr}`);\n    ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 69,
          "block": "const year = parseInt(`20${yearStr}`);\n            const currentDate = new Date();\n            const..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 81,
          "block": "const year = parseInt(`20${yearStr}`);\n            const currentDate = new Date();\n            const..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 70,
          "block": "const currentDate = new Date();\n            const currentYear = currentDate.getFullYear();\n         ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 82,
          "block": "const currentDate = new Date();\n            const currentYear = currentDate.getFullYear();\n         ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 71,
          "block": "const currentYear = currentDate.getFullYear();\n            const currentMonth = currentDate.getMonth..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 83,
          "block": "const currentYear = currentDate.getFullYear();\n            const currentMonth = currentDate.getMonth..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 72,
          "block": "const currentMonth = currentDate.getMonth() + 1;\n\n            // Check if the expiration date is in ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 84,
          "block": "const currentMonth = currentDate.getMonth() + 1;\n\n            // Check if the expiration date is in ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 73,
          "block": "// Check if the expiration date is in the future\n            return (\n              year > currentYe..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 85,
          "block": "// Check if the expiration date is in the future\n            return (\n              year > currentYe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 74,
          "block": "// Check if the expiration date is in the future\n            return (\n              year > currentYe..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 86,
          "block": "// Check if the expiration date is in the future\n            return (\n              year > currentYe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 75,
          "block": "return (\n              year > currentYear ||\n              (year === currentYear && parseInt(month) ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 87,
          "block": "return (\n              year > currentYear ||\n              (year === currentYear && parseInt(month) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 76,
          "block": "year > currentYear ||\n              (year === currentYear && parseInt(month) >= currentMonth)\n      ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 88,
          "block": "year > currentYear ||\n              (year === currentYear && parseInt(month) >= currentMonth)\n      ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 77,
          "block": "(year === currentYear && parseInt(month) >= currentMonth)\n            );\n          },\n          { me..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 89,
          "block": "(year === currentYear && parseInt(month) >= currentMonth)\n            );\n          },\n          { me..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 79,
          "block": "},\n          { message: t(\"validation.expirationDate.expired\") }\n        );\n\n      return required ?..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 91,
          "block": "},\n          { message: t(\"validation.expirationDate.expired\") }\n        );\n\n      return required ?..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 93,
          "block": "const schema = z\n        .string()\n        .min(3, t(\"validation.cvv.tooShort\"))\n        .max(4, t(\"..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 100,
          "block": "const schema = z\n        .string()\n        .min(3, t(\"validation.cvv.tooShort\"))\n        .max(4, t(\"..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 94,
          "block": ".string()\n        .min(3, t(\"validation.cvv.tooShort\"))\n        .max(4, t(\"validation.cvv.tooLong\"))..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 101,
          "block": ".string()\n        .min(3, t(\"validation.cvv.tooShort\"))\n        .max(4, t(\"validation.cvv.tooLong\"))..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFieldValidation.ts",
          "startLine": 95,
          "block": ".min(3, t(\"validation.cvv.tooShort\"))\n        .max(4, t(\"validation.cvv.tooLong\"))\n        .regex(/^..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSchemas.ts",
          "startLine": 102,
          "block": ".min(3, t(\"validation.cvv.tooShort\"))\n        .max(4, t(\"validation.cvv.tooLong\"))\n        .regex(/^..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFormSubmitHandler.ts",
          "startLine": 29,
          "block": "/**\n   * Optional callback to run on error but before toast\n   */\n  onError?: (error: Error) => void..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSubmitHandler.ts",
          "startLine": 30,
          "block": "/**\n   * Optional callback to run on error but before toast\n   */\n  onError?: (error: Error) => void..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useFormSubmitHandler.ts",
          "startLine": 77,
          "block": "const submitHandler = useCallback(\n    async (data: TFormValues) => {\n      setIsSubmitting(true);\n ..."
        },
        {
          "file": "src\\shared\\hooks\\useFormSubmitHandler.ts",
          "startLine": 78,
          "block": "const submitHandler = useCallback(\n    async (data: TFormValues) => {\n      setIsSubmitting(true);\n ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useMemorySafe.ts",
          "startLine": 115,
          "block": "const clearAllTimeouts = useCallback(() => {\n    timeoutIds.current.forEach((id) => window.clearTime..."
        },
        {
          "file": "src\\shared\\hooks\\useMemorySafe.ts",
          "startLine": 116,
          "block": "const clearAllTimeouts = useCallback(() => {\n    timeoutIds.current.forEach((id) => window.clearTime..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useMemorySafe.ts",
          "startLine": 148,
          "block": "const clearAllIntervals = useCallback(() => {\n    intervalIds.current.forEach((id) => window.clearIn..."
        },
        {
          "file": "src\\shared\\hooks\\useMemorySafe.ts",
          "startLine": 149,
          "block": "const clearAllIntervals = useCallback(() => {\n    intervalIds.current.forEach((id) => window.clearIn..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useMultiStepDialog.ts",
          "startLine": 81,
          "block": "/**\n   * Progress percentage (0-100)\n   */\n  const progress = Math.round((currentStep / totalSteps) ..."
        },
        {
          "file": "src\\shared\\hooks\\useMultiStepDialog.ts",
          "startLine": 82,
          "block": "/**\n   * Progress percentage (0-100)\n   */\n  const progress = Math.round((currentStep / totalSteps) ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useOptimizedEventListeners.ts",
          "startLine": 42,
          "block": "useEffect(() => {\n    // Define the listening target\n    const targetElement = element ?? window;\n  ..."
        },
        {
          "file": "src\\shared\\hooks\\useOptimizedEventListeners.ts",
          "startLine": 43,
          "block": "useEffect(() => {\n    // Define the listening target\n    const targetElement = element ?? window;\n  ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useOptimizedEventListeners.ts",
          "startLine": 162,
          "block": "const handleResize = useCallback(() => {\n    if (timeoutRef.current) {\n      window.clearTimeout(tim..."
        },
        {
          "file": "src\\shared\\hooks\\useOptimizedEventListeners.ts",
          "startLine": 163,
          "block": "const handleResize = useCallback(() => {\n    if (timeoutRef.current) {\n      window.clearTimeout(tim..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useOptimizedEventListeners.ts",
          "startLine": 227,
          "block": "handler({ scrollX, scrollY });\n    } else if (!requestRef.current) {\n      requestRef.current = wind..."
        },
        {
          "file": "src\\shared\\hooks\\useOptimizedEventListeners.ts",
          "startLine": 228,
          "block": "handler({ scrollX, scrollY });\n    } else if (!requestRef.current) {\n      requestRef.current = wind..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useResponsive.ts",
          "startLine": 14,
          "block": "/**\n * Available breakpoint names\n */\nexport type Breakpoint = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"x..."
        },
        {
          "file": "src\\shared\\hooks\\useResponsive.ts",
          "startLine": 15,
          "block": "/**\n * Available breakpoint names\n */\nexport type Breakpoint = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"x..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useRoutePrefetch.ts",
          "startLine": 59,
          "block": "return () => {\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [prefetchRoute, strategy, t..."
        },
        {
          "file": "src\\shared\\hooks\\useRoutePrefetch.ts",
          "startLine": 60,
          "block": "return () => {\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [prefetchRoute, strategy, t..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 119,
          "block": "return response.data;\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKe..."
        },
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 168,
          "block": "return response.data;\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKe..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 120,
          "block": "},\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: TANK_QUERY_KEYS.tanks })..."
        },
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 169,
          "block": "},\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: TANK_QUERY_KEYS.tanks })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 121,
          "block": "onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: TANK_QUERY_KEYS.tanks });\r\n     ..."
        },
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 170,
          "block": "onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: TANK_QUERY_KEYS.tanks });\r\n     ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 268,
          "block": "// Refetch functions\r\n    refetchTanks: tanksQuery.refetch,\r\n    refetchFuelTypes: fuelTypesQuery.re..."
        },
        {
          "file": "src\\shared\\hooks\\useTanks.ts",
          "startLine": 269,
          "block": "// Refetch functions\r\n    refetchTanks: tanksQuery.refetch,\r\n    refetchFuelTypes: fuelTypesQuery.re..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\types\\tank.types.ts",
          "startLine": 105,
          "block": "/**\r\n * Tank status helper type\r\n */\r\nexport type TankStatus = 'active' | 'maintenance' | 'inactive'..."
        },
        {
          "file": "src\\shared\\types\\tank.types.ts",
          "startLine": 106,
          "block": "/**\r\n * Tank status helper type\r\n */\r\nexport type TankStatus = 'active' | 'maintenance' | 'inactive'..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\types\\tank.types.ts",
          "startLine": 110,
          "block": "/**\r\n * Tank level status based on capacity percentage\r\n */\r\nexport type TankLevelStatus = 'critical..."
        },
        {
          "file": "src\\shared\\types\\tank.types.ts",
          "startLine": 111,
          "block": "/**\r\n * Tank level status based on capacity percentage\r\n */\r\nexport type TankLevelStatus = 'critical..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\utils\\dom.ts",
          "startLine": 104,
          "block": "const l1 = getLuminance(rgb1.r, rgb1.g, rgb1.b);\n  const l2 = getLuminance(rgb2.r, rgb2.g, rgb2.b);\n..."
        },
        {
          "file": "src\\shared\\utils\\dom.ts",
          "startLine": 105,
          "block": "const l1 = getLuminance(rgb1.r, rgb1.g, rgb1.b);\n  const l2 = getLuminance(rgb2.r, rgb2.g, rgb2.b);\n..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\utils\\dom.ts",
          "startLine": 107,
          "block": "const ratio = (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n\n  // WCAG AA requires 4.5:1 fo..."
        },
        {
          "file": "src\\shared\\utils\\dom.ts",
          "startLine": 108,
          "block": "const ratio = (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n\n  // WCAG AA requires 4.5:1 fo..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\utils\\object.ts",
          "startLine": 66,
          "block": "if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach((key) => {\n   ..."
        },
        {
          "file": "src\\shared\\utils\\object.ts",
          "startLine": 67,
          "block": "if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach((key) => {\n   ..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\utils\\optimization.ts",
          "startLine": 65,
          "block": "return React.lazy(() => \r\n    dynamicImport(importFn, { retries: retryAttempts, delay: retryDelay })..."
        },
        {
          "file": "src\\shared\\utils\\optimization.ts",
          "startLine": 66,
          "block": "return React.lazy(() => \r\n    dynamicImport(importFn, { retries: retryAttempts, delay: retryDelay })..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\utils\\optimization.ts",
          "startLine": 235,
          "block": "private static extractChunkName(url: string): string {\r\n    const match = url.match(/\\/([^\\/]+\\.chun..."
        },
        {
          "file": "src\\shared\\utils\\optimization.ts",
          "startLine": 236,
          "block": "private static extractChunkName(url: string): string {\r\n    const match = url.match(/\\/([^\\/]+\\.chun..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\utils\\optimization.ts",
          "startLine": 403,
          "block": "// Initialize performance monitoring in production\r\nif (typeof window !== 'undefined' && process.env..."
        },
        {
          "file": "src\\shared\\utils\\optimization.ts",
          "startLine": 404,
          "block": "// Initialize performance monitoring in production\r\nif (typeof window !== 'undefined' && process.env..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\shared\\utils\\performance.tsx",
          "startLine": 137,
          "block": "// Add event listeners for route changes if using React Router\n  window.addEventListener(\"popstate\",..."
        },
        {
          "file": "src\\shared\\utils\\performance.tsx",
          "startLine": 138,
          "block": "// Add event listeners for route changes if using React Router\n  window.addEventListener(\"popstate\",..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 106,
          "block": "// Bundle chunk registry for tracking loaded modules\r\nclass BundleChunkRegistry {\r\n  private loadedC..."
        },
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 107,
          "block": "// Bundle chunk registry for tracking loaded modules\r\nclass BundleChunkRegistry {\r\n  private loadedC..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 158,
          "block": "// Performance monitoring for bundle loading\r\nexport class BundlePerformanceMonitor {\r\n  private loa..."
        },
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 159,
          "block": "// Performance monitoring for bundle loading\r\nexport class BundlePerformanceMonitor {\r\n  private loa..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 197,
          "block": "const times = Object.values(metrics.loadTimes);\r\n    if (times.length > 0) {\r\n      metrics.averageL..."
        },
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 198,
          "block": "const times = Object.values(metrics.loadTimes);\r\n    if (times.length > 0) {\r\n      metrics.averageL..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 213,
          "block": "// Highlight problematic chunks\r\n    const slowChunks = Object.entries(metrics.loadTimes)\r\n      .fi..."
        },
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 214,
          "block": "// Highlight problematic chunks\r\n    const slowChunks = Object.entries(metrics.loadTimes)\r\n      .fi..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 252,
          "block": "return React.createElement(WrappedComponent, props);\r\n  };\r\n  \r\n  MonitoredComponent.displayName = `..."
        },
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 253,
          "block": "return React.createElement(WrappedComponent, props);\r\n  };\r\n  \r\n  MonitoredComponent.displayName = `..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 255,
          "block": "MonitoredComponent.displayName = `withLoadingMonitor(${WrappedComponent.displayName || WrappedCompon..."
        },
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 256,
          "block": "MonitoredComponent.displayName = `withLoadingMonitor(${WrappedComponent.displayName || WrappedCompon..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 260,
          "block": "// Utility to measure bundle impact\r\nexport const measureBundleImpact = async (name: string, action:..."
        },
        {
          "file": "src\\utils\\bundle-optimization.ts",
          "startLine": 261,
          "block": "// Utility to measure bundle impact\r\nexport const measureBundleImpact = async (name: string, action:..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\deprecation\\tracking.ts",
          "startLine": 35,
          "block": "export function getDeprecationUsageSummary(): DeprecationUsage[] {\r\n  return Array.from(deprecationS..."
        },
        {
          "file": "src\\utils\\deprecation\\tracking.ts",
          "startLine": 36,
          "block": "export function getDeprecationUsageSummary(): DeprecationUsage[] {\r\n  return Array.from(deprecationS..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\supabase-helpers.ts",
          "startLine": 21,
          "block": "export const syncDataWithSupabase = async () => {\r\n  // Placeholder for data synchronization\r\n  retu..."
        },
        {
          "file": "src\\utils\\supabase-helpers.ts",
          "startLine": 22,
          "block": "export const syncDataWithSupabase = async () => {\r\n  // Placeholder for data synchronization\r\n  retu..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\supabase-helpers.ts",
          "startLine": 26,
          "block": "export const syncWithSupabase = async (queryClient?: any) => {\r\n  // Placeholder for data synchroniz..."
        },
        {
          "file": "src\\utils\\supabase-helpers.ts",
          "startLine": 27,
          "block": "export const syncWithSupabase = async (queryClient?: any) => {\r\n  // Placeholder for data synchroniz..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    },
    {
      "locations": [
        {
          "file": "src\\utils\\supabase-helpers.ts",
          "startLine": 31,
          "block": "export const getSupabaseHealth = async () => {\r\n  // Placeholder for health check\r\n  return { health..."
        },
        {
          "file": "src\\utils\\supabase-helpers.ts",
          "startLine": 32,
          "block": "export const getSupabaseHealth = async () => {\r\n  // Placeholder for health check\r\n  return { health..."
        }
      ],
      "suggestion": "Consider extracting this into a reusable function or component"
    }
  ],
  "largeDependencies": [
    {
      "name": "react-router-dom",
      "version": "^6.26.2",
      "suggestion": "Use code splitting with route-based lazy loading"
    }
  ],
  "optimizationOpportunities": [
    {
      "type": "icon-optimization",
      "impact": "high",
      "description": "1304 icon imports found across 199 unique icons",
      "suggestion": "Consider using a centralized icon system to improve tree-shaking",
      "details": {
        "totalImports": 1304,
        "uniqueIcons": 199,
        "usedIcons": 180
      }
    },
    {
      "type": "code-splitting",
      "impact": "high",
      "description": "Large codebase detected",
      "suggestion": "Implement route-based code splitting with React.lazy()",
      "details": "732 source files found"
    },
    {
      "type": "unused-icons",
      "impact": "medium",
      "description": "19 unused Lucide icons found",
      "suggestion": "Remove unused icon imports to reduce bundle size",
      "details": [
        "// Dashboard & Navigation\r\n  LayoutDashboard",
        "// User & Management\r\n  Users",
        "// Finance & Business\r\n  DollarSign",
        "// Fuel & Operations\r\n  Fuel",
        "// Time & Calendar\r\n  Calendar",
        "// Actions & Controls\r\n  Plus",
        "// Status & Alerts\r\n  CheckCircle",
        "// Communication\r\n  Mail",
        "// Settings & Security\r\n  Settings",
        "// Theme & UI\r\n  Sun",
        "// Loading & Progress\r\n  Loader2",
        "// Location & Navigation\r\n  MapPin",
        "// File & Document\r\n  FileText",
        "// Technology & Devices\r\n  Smartphone",
        "// Data & Analytics\r\n  FileCheck",
        "// Specialized\r\n  ShoppingCart",
        "// Form Controls\r\n  Check",
        "// Additional UI Icons\r\n  ArrowUpRight",
        "// Type exports\r\n  type LucideIcon"
      ]
    },
    {
      "type": "lazy-loading",
      "impact": "medium",
      "description": "36 page components found",
      "suggestion": "Implement lazy loading for page components",
      "details": [
        "src\\features\\auth\\pages\\AuthPage.tsx",
        "src\\features\\dashboard\\pages\\DashboardPage.tsx",
        "src\\features\\employees\\pages\\EmployeesMainPage.tsx",
        "src\\features\\employees\\pages\\EmployeesPage.tsx",
        "src\\features\\expenses\\pages\\ExpensesPage.tsx",
        "src\\features\\finance\\pages\\ExpensesPage.tsx",
        "src\\features\\finance\\pages\\FinanceDashboardPage.tsx",
        "src\\features\\finance\\pages\\FinancePage.tsx",
        "src\\features\\finance\\pages\\PaymentMethodsPage.tsx",
        "src\\features\\finance\\pages\\RevenuePage.tsx",
        "src\\features\\finance\\pages\\TransactionsPage.tsx",
        "src\\features\\fuel-management\\pages\\FillingSystemsPage.tsx",
        "src\\features\\fuel-management\\pages\\FuelAnalyticsPage.tsx",
        "src\\features\\fuel-management\\pages\\FuelDashboardPage.tsx",
        "src\\features\\fuel-management\\pages\\FuelManagementPage.tsx",
        "src\\features\\fuel-management\\pages\\FuelPricesPage.tsx",
        "src\\features\\fuel-management\\pages\\FuelSalesPage.tsx",
        "src\\features\\fuel-management\\pages\\FuelSuppliesPage.tsx",
        "src\\features\\fuel-management\\pages\\FuelTypesPage.tsx",
        "src\\features\\fuel-management\\pages\\ProvidersPage.tsx",
        "src\\features\\fuel-management\\pages\\TanksPage.tsx",
        "src\\features\\layout\\pages\\SyncUpPage.tsx",
        "src\\features\\management\\EmployeesPage.tsx",
        "src\\features\\management\\FinancePage.tsx",
        "src\\features\\management\\FuelSystemsPage.tsx",
        "src\\features\\management\\ManagementPage.tsx",
        "src\\features\\management\\SettingsPage.tsx",
        "src\\features\\management\\TanksPage.tsx",
        "src\\features\\navigations\\pages\\NavigationPage.tsx",
        "src\\features\\reports\\pages\\ReportsPage.tsx",
        "src\\features\\sales\\pages\\SalesMainPage.tsx",
        "src\\features\\sales\\pages\\SalesPage.tsx",
        "src\\features\\settings\\pages\\SettingsPage.tsx",
        "src\\features\\shifts\\pages\\ShiftsMainPage.tsx",
        "src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
        "src\\features\\shifts\\pages\\ShiftsPage.tsx"
      ]
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\core\\components\\ui\\composed\\form-fields.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "788 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\core\\components\\ui\\enhanced\\dashboard-widgets.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "590 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\core\\components\\ui\\enhanced\\form-builder.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "668 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\core\\components\\ui\\primitives\\data-table.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "703 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\core\\config\\navigation.ts",
      "suggestion": "Consider breaking down into smaller components",
      "details": "574 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\dashboard\\components\\FuelManagementDashboardPro.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "639 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\dashboard\\components\\IncomeExpenseOverview.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "740 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\finance\\pages\\ExpensesPage.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "823 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\finance\\pages\\SalesDashboard.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "749 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\fuel-management\\components\\summary\\FuelSuppliesSummary.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "827 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\fuel-management\\pages\\FuelManagementDashboard.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "549 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\management\\EmployeesPage.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "617 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\management\\pages\\ShiftsDashboard.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "691 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\navigations\\pages\\NavigationPage.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "568 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\sales\\pages\\SalesDashboard.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "749 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\sales\\pages\\SalesMainPage.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "544 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\settings\\pages\\SecuritySettings.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "858 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\shifts\\pages\\ShiftClose.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "583 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\shifts\\pages\\ShiftDetails.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "606 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\shifts\\pages\\ShiftOpen.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "709 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\shifts\\pages\\Shifts.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "589 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\shifts\\pages\\ShiftsDashboard.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "700 lines"
    },
    {
      "type": "large-file",
      "impact": "medium",
      "description": "Large file detected: src\\features\\shifts\\pages\\ShiftsManagementPage.tsx",
      "suggestion": "Consider breaking down into smaller components",
      "details": "564 lines"
    }
  ],
  "summary": {
    "totalDependencies": 115,
    "totalFiles": 732
  }
}